module.exports = "31382\n{\"version\":0,\"id\":\"91ed4485cfba386f0fba1c9162633548a90c0ea26f2bb3eebe27e8dd331a2bde\",\"main\":\"/src/worklet/wdk-secret-manager-worklet.js\",\"imports\":{},\"resolutions\":{\"/node_modules/@tetherto/wdk-secret-manager/index.js\":{\"#package\":\"/node_modules/@tetherto/wdk-secret-manager/package.json\",\"./src/wdk-secret-manager\":\"/node_modules/@tetherto/wdk-secret-manager/src/wdk-secret-manager.js\"},\"/node_modules/@tetherto/wdk-secret-manager/package.json\":{},\"/node_modules/@tetherto/wdk-secret-manager/src/wdk-secret-manager.js\":{\"#package\":\"/node_modules/@tetherto/wdk-secret-manager/package.json\",\"b4a\":\"/node_modules/b4a/index.js\",\"bare-crypto\":\"/node_modules/bare-crypto/index.js\",\"bip39-mnemonic\":\"/node_modules/bip39-mnemonic/index.js\",\"sodium-native\":\"/node_modules/sodium-native/index.js\"},\"/node_modules/b4a/index.js\":{\"#package\":\"/node_modules/b4a/package.json\"},\"/node_modules/b4a/package.json\":{},\"/node_modules/bare-addon-resolve/index.js\":{\"#package\":\"/node_modules/bare-addon-resolve/package.json\",\"./lib/errors\":\"/node_modules/bare-addon-resolve/lib/errors.js\",\"bare-module-resolve\":\"/node_modules/bare-module-resolve/index.js\",\"bare-semver\":\"/node_modules/bare-semver/index.js\"},\"/node_modules/bare-addon-resolve/lib/errors.js\":{\"#package\":\"/node_modules/bare-addon-resolve/package.json\"},\"/node_modules/bare-addon-resolve/package.json\":{},\"/node_modules/bare-crypto/binding.js\":{\"#package\":\"/node_modules/bare-crypto/package.json\",\".\":{\"ios\":\"linked:bare-crypto.1.11.2.framework/bare-crypto.1.11.2\",\"android\":\"linked:libbare-crypto.1.11.2.so\"}},\"/node_modules/bare-crypto/index.js\":{\"#package\":\"/node_modules/bare-crypto/package.json\",\"./lib/cipher\":\"/node_modules/bare-crypto/lib/cipher.js\",\"./lib/constants\":\"/node_modules/bare-crypto/lib/constants.js\",\"./lib/hash\":\"/node_modules/bare-crypto/lib/hash.js\",\"./lib/hmac\":\"/node_modules/bare-crypto/lib/hmac.js\",\"./lib/key\":\"/node_modules/bare-crypto/lib/key.js\",\"./lib/pbkdf2\":\"/node_modules/bare-crypto/lib/pbkdf2.js\",\"./lib/random\":\"/node_modules/bare-crypto/lib/random.js\",\"./lib/signature\":\"/node_modules/bare-crypto/lib/signature.js\",\"./web\":\"/node_modules/bare-crypto/web.js\"},\"/node_modules/bare-crypto/lib/cipher.js\":{\"#package\":\"/node_modules/bare-crypto/package.json\",\"../binding\":\"/node_modules/bare-crypto/binding.js\",\"./constants\":\"/node_modules/bare-crypto/lib/constants.js\",\"bare-stream\":\"/node_modules/bare-stream/index.js\"},\"/node_modules/bare-crypto/lib/constants.js\":{\"#package\":\"/node_modules/bare-crypto/package.json\",\"../binding\":\"/node_modules/bare-crypto/binding.js\",\"./errors\":\"/node_modules/bare-crypto/lib/errors.js\"},\"/node_modules/bare-crypto/lib/errors.js\":{\"#package\":\"/node_modules/bare-crypto/package.json\"},\"/node_modules/bare-crypto/lib/hash.js\":{\"#package\":\"/node_modules/bare-crypto/package.json\",\"../binding\":\"/node_modules/bare-crypto/binding.js\",\"./constants\":\"/node_modules/bare-crypto/lib/constants.js\",\"bare-stream\":\"/node_modules/bare-stream/index.js\"},\"/node_modules/bare-crypto/lib/hmac.js\":{\"#package\":\"/node_modules/bare-crypto/package.json\",\"../binding\":\"/node_modules/bare-crypto/binding.js\",\"./constants\":\"/node_modules/bare-crypto/lib/constants.js\",\"bare-stream\":\"/node_modules/bare-stream/index.js\"},\"/node_modules/bare-crypto/lib/key.js\":{\"#package\":\"/node_modules/bare-crypto/package.json\",\"../binding\":\"/node_modules/bare-crypto/binding.js\",\"./constants\":\"/node_modules/bare-crypto/lib/constants.js\"},\"/node_modules/bare-crypto/lib/pbkdf2.js\":{\"#package\":\"/node_modules/bare-crypto/package.json\",\"../binding\":\"/node_modules/bare-crypto/binding.js\",\"./constants\":\"/node_modules/bare-crypto/lib/constants.js\"},\"/node_modules/bare-crypto/lib/random.js\":{\"#package\":\"/node_modules/bare-crypto/package.json\",\"../binding\":\"/node_modules/bare-crypto/binding.js\"},\"/node_modules/bare-crypto/lib/signature.js\":{\"#package\":\"/node_modules/bare-crypto/package.json\",\"../binding\":\"/node_modules/bare-crypto/binding.js\",\"./constants\":\"/node_modules/bare-crypto/lib/constants.js\"},\"/node_modules/bare-crypto/lib/web/algorithm/ed25519.js\":{\"#package\":\"/node_modules/bare-crypto/package.json\",\"../../..\":\"/node_modules/bare-crypto/index.js\",\"../../../binding\":\"/node_modules/bare-crypto/binding.js\",\"../../errors\":\"/node_modules/bare-crypto/lib/errors.js\",\"../../key\":\"/node_modules/bare-crypto/lib/key.js\",\"../crypto-key\":\"/node_modules/bare-crypto/lib/web/crypto-key.js\"},\"/node_modules/bare-crypto/lib/web/algorithm/hmac.js\":{\"#package\":\"/node_modules/bare-crypto/package.json\",\"../../..\":\"/node_modules/bare-crypto/index.js\",\"../../errors\":\"/node_modules/bare-crypto/lib/errors.js\",\"../crypto-key\":\"/node_modules/bare-crypto/lib/web/crypto-key.js\"},\"/node_modules/bare-crypto/lib/web/algorithm/pbkdf2.js\":{\"#package\":\"/node_modules/bare-crypto/package.json\",\"../../..\":\"/node_modules/bare-crypto/index.js\",\"../../errors\":\"/node_modules/bare-crypto/lib/errors.js\",\"../crypto-key\":\"/node_modules/bare-crypto/lib/web/crypto-key.js\"},\"/node_modules/bare-crypto/lib/web/crypto-key.js\":{\"#package\":\"/node_modules/bare-crypto/package.json\"},\"/node_modules/bare-crypto/package.json\":{},\"/node_modules/bare-crypto/web.js\":{\"#package\":\"/node_modules/bare-crypto/package.json\",\".\":\"/node_modules/bare-crypto/index.js\",\"./lib/errors\":\"/node_modules/bare-crypto/lib/errors.js\",\"./lib/web/algorithm/ed25519\":\"/node_modules/bare-crypto/lib/web/algorithm/ed25519.js\",\"./lib/web/algorithm/hmac\":\"/node_modules/bare-crypto/lib/web/algorithm/hmac.js\",\"./lib/web/algorithm/pbkdf2\":\"/node_modules/bare-crypto/lib/web/algorithm/pbkdf2.js\",\"./lib/web/crypto-key\":\"/node_modules/bare-crypto/lib/web/crypto-key.js\"},\"/node_modules/bare-events/index.js\":{\"#package\":\"/node_modules/bare-events/package.json\",\"./lib/errors\":\"/node_modules/bare-events/lib/errors.js\"},\"/node_modules/bare-events/lib/errors.js\":{\"#package\":\"/node_modules/bare-events/package.json\"},\"/node_modules/bare-events/package.json\":{},\"/node_modules/bare-module-resolve/index.js\":{\"#package\":\"/node_modules/bare-module-resolve/package.json\",\"./lib/errors\":\"/node_modules/bare-module-resolve/lib/errors.js\",\"bare-semver\":\"/node_modules/bare-semver/index.js\"},\"/node_modules/bare-module-resolve/lib/errors.js\":{\"#package\":\"/node_modules/bare-module-resolve/package.json\"},\"/node_modules/bare-module-resolve/package.json\":{},\"/node_modules/bare-os/binding.js\":{\"#package\":\"/node_modules/bare-os/package.json\",\".\":{\"ios\":\"linked:bare-os.3.6.2.framework/bare-os.3.6.2\",\"android\":\"linked:libbare-os.3.6.2.so\"}},\"/node_modules/bare-os/index.js\":{\"#package\":\"/node_modules/bare-os/package.json\",\"./binding\":\"/node_modules/bare-os/binding.js\",\"./lib/constants\":\"/node_modules/bare-os/lib/constants.js\",\"./lib/errors\":\"/node_modules/bare-os/lib/errors.js\"},\"/node_modules/bare-os/lib/constants.js\":{\"#package\":\"/node_modules/bare-os/package.json\",\"../binding\":\"/node_modules/bare-os/binding.js\"},\"/node_modules/bare-os/lib/errors.js\":{\"#package\":\"/node_modules/bare-os/package.json\"},\"/node_modules/bare-os/package.json\":{},\"/node_modules/bare-path/index.js\":{\"#package\":\"/node_modules/bare-path/package.json\",\"./lib/posix\":\"/node_modules/bare-path/lib/posix.js\",\"./lib/win32\":\"/node_modules/bare-path/lib/win32.js\"},\"/node_modules/bare-path/lib/constants.js\":{\"#package\":\"/node_modules/bare-path/package.json\"},\"/node_modules/bare-path/lib/posix.js\":{\"#package\":\"/node_modules/bare-path/package.json\",\"./constants\":\"/node_modules/bare-path/lib/constants.js\",\"./shared\":\"/node_modules/bare-path/lib/shared.js\",\"./win32\":\"/node_modules/bare-path/lib/win32.js\",\"bare-os\":\"/node_modules/bare-os/index.js\"},\"/node_modules/bare-path/lib/shared.js\":{\"#package\":\"/node_modules/bare-path/package.json\",\"./constants\":\"/node_modules/bare-path/lib/constants.js\"},\"/node_modules/bare-path/lib/win32.js\":{\"#package\":\"/node_modules/bare-path/package.json\",\"./constants\":\"/node_modules/bare-path/lib/constants.js\",\"./posix\":\"/node_modules/bare-path/lib/posix.js\",\"./shared\":\"/node_modules/bare-path/lib/shared.js\",\"bare-os\":\"/node_modules/bare-os/index.js\"},\"/node_modules/bare-path/package.json\":{},\"/node_modules/bare-rpc/index.js\":{\"#package\":\"/node_modules/bare-rpc/package.json\",\"./lib/command-router\":\"/node_modules/bare-rpc/lib/command-router.js\",\"./lib/constants\":\"/node_modules/bare-rpc/lib/constants.js\",\"./lib/incoming-request\":\"/node_modules/bare-rpc/lib/incoming-request.js\",\"./lib/incoming-stream\":\"/node_modules/bare-rpc/lib/incoming-stream.js\",\"./lib/messages\":\"/node_modules/bare-rpc/lib/messages.js\",\"./lib/outgoing-request\":\"/node_modules/bare-rpc/lib/outgoing-request.js\",\"./lib/outgoing-stream\":\"/node_modules/bare-rpc/lib/outgoing-stream.js\",\"b4a\":\"/node_modules/b4a/index.js\",\"compact-encoding\":\"/node_modules/compact-encoding/index.js\",\"safety-catch\":\"/node_modules/safety-catch/index.js\"},\"/node_modules/bare-rpc/lib/command-router.js\":{\"#package\":\"/node_modules/bare-rpc/package.json\",\"compact-encoding\":\"/node_modules/compact-encoding/index.js\"},\"/node_modules/bare-rpc/lib/constants.js\":{\"#package\":\"/node_modules/bare-rpc/package.json\"},\"/node_modules/bare-rpc/lib/errors.js\":{\"#package\":\"/node_modules/bare-rpc/package.json\"},\"/node_modules/bare-rpc/lib/incoming-request.js\":{\"#package\":\"/node_modules/bare-rpc/package.json\",\"./errors\":\"/node_modules/bare-rpc/lib/errors.js\",\"compact-encoding\":\"/node_modules/compact-encoding/index.js\"},\"/node_modules/bare-rpc/lib/incoming-stream.js\":{\"#package\":\"/node_modules/bare-rpc/package.json\",\"./constants\":\"/node_modules/bare-rpc/lib/constants.js\",\"bare-stream\":\"/node_modules/bare-stream/index.js\"},\"/node_modules/bare-rpc/lib/messages.js\":{\"#package\":\"/node_modules/bare-rpc/package.json\",\"./constants\":\"/node_modules/bare-rpc/lib/constants.js\",\"./errors\":\"/node_modules/bare-rpc/lib/errors.js\",\"compact-encoding\":\"/node_modules/compact-encoding/index.js\"},\"/node_modules/bare-rpc/lib/outgoing-request.js\":{\"#package\":\"/node_modules/bare-rpc/package.json\",\"./errors\":\"/node_modules/bare-rpc/lib/errors.js\",\"compact-encoding\":\"/node_modules/compact-encoding/index.js\"},\"/node_modules/bare-rpc/lib/outgoing-stream.js\":{\"#package\":\"/node_modules/bare-rpc/package.json\",\"./constants\":\"/node_modules/bare-rpc/lib/constants.js\",\"bare-stream\":\"/node_modules/bare-stream/index.js\"},\"/node_modules/bare-rpc/package.json\":{},\"/node_modules/bare-semver/index.js\":{\"#package\":\"/node_modules/bare-semver/package.json\",\"./lib/comparator\":\"/node_modules/bare-semver/lib/comparator.js\",\"./lib/constants\":\"/node_modules/bare-semver/lib/constants.js\",\"./lib/errors\":\"/node_modules/bare-semver/lib/errors.js\",\"./lib/range\":\"/node_modules/bare-semver/lib/range.js\",\"./lib/version\":\"/node_modules/bare-semver/lib/version.js\"},\"/node_modules/bare-semver/lib/comparator.js\":{\"#package\":\"/node_modules/bare-semver/package.json\",\"./constants\":\"/node_modules/bare-semver/lib/constants.js\"},\"/node_modules/bare-semver/lib/constants.js\":{\"#package\":\"/node_modules/bare-semver/package.json\"},\"/node_modules/bare-semver/lib/errors.js\":{\"#package\":\"/node_modules/bare-semver/package.json\"},\"/node_modules/bare-semver/lib/range.js\":{\"#package\":\"/node_modules/bare-semver/package.json\",\"./comparator\":\"/node_modules/bare-semver/lib/comparator.js\",\"./constants\":\"/node_modules/bare-semver/lib/constants.js\",\"./errors\":\"/node_modules/bare-semver/lib/errors.js\",\"./version\":\"/node_modules/bare-semver/lib/version.js\"},\"/node_modules/bare-semver/lib/version.js\":{\"#package\":\"/node_modules/bare-semver/package.json\",\"./errors\":\"/node_modules/bare-semver/lib/errors.js\"},\"/node_modules/bare-semver/package.json\":{},\"/node_modules/bare-stream/index.js\":{\"#package\":\"/node_modules/bare-stream/package.json\",\"streamx\":\"/node_modules/streamx/index.js\"},\"/node_modules/bare-stream/package.json\":{},\"/node_modules/bare-url/binding.js\":{\"#package\":\"/node_modules/bare-url/package.json\",\".\":{\"ios\":\"linked:bare-url.2.2.2.framework/bare-url.2.2.2\",\"android\":\"linked:libbare-url.2.2.2.so\"}},\"/node_modules/bare-url/index.js\":{\"#package\":\"/node_modules/bare-url/package.json\",\"./binding\":\"/node_modules/bare-url/binding.js\",\"./lib/errors\":\"/node_modules/bare-url/lib/errors.js\",\"./lib/url-search-params\":\"/node_modules/bare-url/lib/url-search-params.js\",\"bare-path\":\"/node_modules/bare-path/index.js\"},\"/node_modules/bare-url/lib/errors.js\":{\"#package\":\"/node_modules/bare-url/package.json\"},\"/node_modules/bare-url/lib/url-search-params.js\":{\"#package\":\"/node_modules/bare-url/package.json\"},\"/node_modules/bare-url/package.json\":{},\"/node_modules/bip39-mnemonic/index.js\":{\"#package\":\"/node_modules/bip39-mnemonic/package.json\",\"./wordlist\":\"/node_modules/bip39-mnemonic/wordlist/index.js\",\"b4a\":\"/node_modules/b4a/index.js\",\"nanoassert\":\"/node_modules/nanoassert/index.js\",\"sodium-universal\":\"/node_modules/sodium-universal/index.js\"},\"/node_modules/bip39-mnemonic/package.json\":{},\"/node_modules/bip39-mnemonic/wordlist/chinese_simplified.json\":{\"#package\":\"/node_modules/bip39-mnemonic/package.json\"},\"/node_modules/bip39-mnemonic/wordlist/chinese_traditional.json\":{\"#package\":\"/node_modules/bip39-mnemonic/package.json\"},\"/node_modules/bip39-mnemonic/wordlist/czech.json\":{\"#package\":\"/node_modules/bip39-mnemonic/package.json\"},\"/node_modules/bip39-mnemonic/wordlist/english.json\":{\"#package\":\"/node_modules/bip39-mnemonic/package.json\"},\"/node_modules/bip39-mnemonic/wordlist/french.json\":{\"#package\":\"/node_modules/bip39-mnemonic/package.json\"},\"/node_modules/bip39-mnemonic/wordlist/index.js\":{\"#package\":\"/node_modules/bip39-mnemonic/package.json\",\"./chinese_simplified.json\":\"/node_modules/bip39-mnemonic/wordlist/chinese_simplified.json\",\"./chinese_traditional.json\":\"/node_modules/bip39-mnemonic/wordlist/chinese_traditional.json\",\"./czech.json\":\"/node_modules/bip39-mnemonic/wordlist/czech.json\",\"./english.json\":\"/node_modules/bip39-mnemonic/wordlist/english.json\",\"./french.json\":\"/node_modules/bip39-mnemonic/wordlist/french.json\",\"./italian.json\":\"/node_modules/bip39-mnemonic/wordlist/italian.json\",\"./japanese.json\":\"/node_modules/bip39-mnemonic/wordlist/japanese.json\",\"./korean.json\":\"/node_modules/bip39-mnemonic/wordlist/korean.json\",\"./lookup.json\":\"/node_modules/bip39-mnemonic/wordlist/lookup.json\",\"./portuguese.json\":\"/node_modules/bip39-mnemonic/wordlist/portuguese.json\",\"./russian.json\":\"/node_modules/bip39-mnemonic/wordlist/russian.json\",\"./spanish.json\":\"/node_modules/bip39-mnemonic/wordlist/spanish.json\",\"./turkish.json\":\"/node_modules/bip39-mnemonic/wordlist/turkish.json\"},\"/node_modules/bip39-mnemonic/wordlist/italian.json\":{\"#package\":\"/node_modules/bip39-mnemonic/package.json\"},\"/node_modules/bip39-mnemonic/wordlist/japanese.json\":{\"#package\":\"/node_modules/bip39-mnemonic/package.json\"},\"/node_modules/bip39-mnemonic/wordlist/korean.json\":{\"#package\":\"/node_modules/bip39-mnemonic/package.json\"},\"/node_modules/bip39-mnemonic/wordlist/lookup.json\":{\"#package\":\"/node_modules/bip39-mnemonic/package.json\"},\"/node_modules/bip39-mnemonic/wordlist/portuguese.json\":{\"#package\":\"/node_modules/bip39-mnemonic/package.json\"},\"/node_modules/bip39-mnemonic/wordlist/russian.json\":{\"#package\":\"/node_modules/bip39-mnemonic/package.json\"},\"/node_modules/bip39-mnemonic/wordlist/spanish.json\":{\"#package\":\"/node_modules/bip39-mnemonic/package.json\"},\"/node_modules/bip39-mnemonic/wordlist/turkish.json\":{\"#package\":\"/node_modules/bip39-mnemonic/package.json\"},\"/node_modules/compact-encoding/endian.js\":{\"#package\":\"/node_modules/compact-encoding/package.json\"},\"/node_modules/compact-encoding/index.js\":{\"#package\":\"/node_modules/compact-encoding/package.json\",\"./endian\":\"/node_modules/compact-encoding/endian.js\",\"./lexint\":\"/node_modules/compact-encoding/lexint.js\",\"./raw\":\"/node_modules/compact-encoding/raw.js\",\"b4a\":\"/node_modules/b4a/index.js\"},\"/node_modules/compact-encoding/lexint.js\":{\"#package\":\"/node_modules/compact-encoding/package.json\"},\"/node_modules/compact-encoding/package.json\":{},\"/node_modules/compact-encoding/raw.js\":{\"#package\":\"/node_modules/compact-encoding/package.json\",\"./endian\":\"/node_modules/compact-encoding/endian.js\",\"b4a\":\"/node_modules/b4a/index.js\"},\"/node_modules/fast-fifo/fixed-size.js\":{\"#package\":\"/node_modules/fast-fifo/package.json\"},\"/node_modules/fast-fifo/index.js\":{\"#package\":\"/node_modules/fast-fifo/package.json\",\"./fixed-size\":\"/node_modules/fast-fifo/fixed-size.js\"},\"/node_modules/fast-fifo/package.json\":{},\"/node_modules/hrpc/lib/stream.js\":{\"#package\":\"/node_modules/hrpc/package.json\",\"b4a\":\"/node_modules/b4a/index.js\",\"streamx\":\"/node_modules/streamx/index.js\"},\"/node_modules/hrpc/package.json\":{},\"/node_modules/hrpc/runtime.cjs\":{\"#package\":\"/node_modules/hrpc/package.json\",\"./lib/stream\":\"/node_modules/hrpc/lib/stream.js\",\"bare-rpc\":\"/node_modules/bare-rpc/index.js\",\"compact-encoding\":\"/node_modules/compact-encoding/index.js\"},\"/node_modules/hyperschema/package.json\":{},\"/node_modules/hyperschema/runtime.cjs\":{\"#package\":\"/node_modules/hyperschema/package.json\",\"compact-encoding\":\"/node_modules/compact-encoding/index.js\"},\"/node_modules/nanoassert/index.js\":{\"#package\":\"/node_modules/nanoassert/package.json\"},\"/node_modules/nanoassert/package.json\":{},\"/node_modules/require-addon/index.js\":{\"#package\":\"/node_modules/require-addon/package.json\",\"./lib/runtime\":\"/node_modules/require-addon/lib/runtime.js\",\"./lib/runtime/bare\":\"/node_modules/require-addon/lib/runtime/bare.js\",\"./lib/runtime/default\":\"/node_modules/require-addon/lib/runtime/default.js\",\"./lib/runtime/node\":\"/node_modules/require-addon/lib/runtime/node.js\"},\"/node_modules/require-addon/lib/runtime.js\":{\"#package\":\"/node_modules/require-addon/package.json\"},\"/node_modules/require-addon/lib/runtime/bare.js\":{\"#package\":\"/node_modules/require-addon/package.json\"},\"/node_modules/require-addon/lib/runtime/default.js\":{\"#package\":\"/node_modules/require-addon/package.json\"},\"/node_modules/require-addon/lib/runtime/node.js\":{\"#package\":\"/node_modules/require-addon/package.json\",\"bare-addon-resolve\":\"/node_modules/bare-addon-resolve/index.js\",\"url\":\"/node_modules/bare-url/index.js\"},\"/node_modules/require-addon/package.json\":{},\"/node_modules/safety-catch/index.js\":{\"#package\":\"/node_modules/safety-catch/package.json\"},\"/node_modules/safety-catch/package.json\":{},\"/node_modules/sodium-native/binding.js\":{\"#package\":\"/node_modules/sodium-native/package.json\",\".\":{\"ios\":\"linked:sodium-native.5.0.8.framework/sodium-native.5.0.8\",\"android\":\"linked:libsodium-native.5.0.8.so\"},\"require-addon\":\"/node_modules/require-addon/index.js\"},\"/node_modules/sodium-native/index.js\":{\"#package\":\"/node_modules/sodium-native/package.json\",\"./binding\":\"/node_modules/sodium-native/binding.js\",\"which-runtime\":\"/node_modules/which-runtime/index.js\"},\"/node_modules/sodium-native/package.json\":{},\"/node_modules/sodium-universal/index.js\":{\"#package\":\"/node_modules/sodium-universal/package.json\",\"sodium-native\":\"/node_modules/sodium-native/index.js\"},\"/node_modules/sodium-universal/package.json\":{},\"/node_modules/streamx/index.js\":{\"#package\":\"/node_modules/streamx/package.json\",\"events\":\"/node_modules/bare-events/index.js\",\"fast-fifo\":\"/node_modules/fast-fifo/index.js\",\"text-decoder\":\"/node_modules/text-decoder/index.js\"},\"/node_modules/streamx/package.json\":{},\"/node_modules/text-decoder/index.js\":{\"#package\":\"/node_modules/text-decoder/package.json\",\"./lib/pass-through-decoder\":\"/node_modules/text-decoder/lib/pass-through-decoder.js\",\"./lib/utf8-decoder\":\"/node_modules/text-decoder/lib/utf8-decoder.js\"},\"/node_modules/text-decoder/lib/pass-through-decoder.js\":{\"#package\":\"/node_modules/text-decoder/package.json\",\"b4a\":\"/node_modules/b4a/index.js\"},\"/node_modules/text-decoder/lib/utf8-decoder.js\":{\"#package\":\"/node_modules/text-decoder/package.json\",\"b4a\":\"/node_modules/b4a/index.js\"},\"/node_modules/text-decoder/package.json\":{},\"/node_modules/which-runtime/index.js\":{\"#package\":\"/node_modules/which-runtime/package.json\"},\"/node_modules/which-runtime/package.json\":{},\"/package.json\":{},\"/src/spec/hrpc/index.js\":{\"#package\":\"/package.json\",\"./messages.js\":\"/src/spec/hrpc/messages.js\",\"hrpc/runtime\":\"/node_modules/hrpc/runtime.cjs\"},\"/src/spec/hrpc/messages.js\":{\"#package\":\"/package.json\",\"hyperschema/runtime\":\"/node_modules/hyperschema/runtime.cjs\"},\"/src/spec/schema/index.js\":{\"#package\":\"/package.json\",\"hyperschema/runtime\":\"/node_modules/hyperschema/runtime.cjs\"},\"/src/worklet/wdk-secret-manager-worklet.js\":{\"#package\":\"/package.json\",\"../spec/hrpc\":\"/src/spec/hrpc/index.js\",\"../spec/schema\":\"/src/spec/schema/index.js\",\"@tetherto/wdk-secret-manager\":\"/node_modules/@tetherto/wdk-secret-manager/index.js\",\"b4a\":\"/node_modules/b4a/index.js\"}},\"addons\":[\"linked:bare-crypto.1.11.2.framework/bare-crypto.1.11.2\",\"linked:bare-os.3.6.2.framework/bare-os.3.6.2\",\"linked:bare-url.2.2.2.framework/bare-url.2.2.2\",\"linked:libbare-crypto.1.11.2.so\",\"linked:libbare-os.3.6.2.so\",\"linked:libbare-url.2.2.2.so\",\"linked:libsodium-native.5.0.8.so\",\"linked:sodium-native.5.0.8.framework/sodium-native.5.0.8\"],\"assets\":[],\"files\":{\"/node_modules/@tetherto/wdk-secret-manager/index.js\":{\"offset\":0,\"length\":54,\"mode\":420},\"/node_modules/@tetherto/wdk-secret-manager/package.json\":{\"offset\":54,\"length\":850,\"mode\":420},\"/node_modules/@tetherto/wdk-secret-manager/src/wdk-secret-manager.js\":{\"offset\":904,\"length\":7570,\"mode\":420},\"/node_modules/b4a/index.js\":{\"offset\":8474,\"length\":4054,\"mode\":420},\"/node_modules/b4a/package.json\":{\"offset\":12528,\"length\":1140,\"mode\":420},\"/node_modules/bare-addon-resolve/index.js\":{\"offset\":13668,\"length\":10801,\"mode\":420},\"/node_modules/bare-addon-resolve/lib/errors.js\":{\"offset\":24469,\"length\":642,\"mode\":420},\"/node_modules/bare-addon-resolve/package.json\":{\"offset\":25111,\"length\":1175,\"mode\":420},\"/node_modules/bare-crypto/binding.js\":{\"offset\":26286,\"length\":33,\"mode\":420},\"/node_modules/bare-crypto/index.js\":{\"offset\":26319,\"length\":1623,\"mode\":420},\"/node_modules/bare-crypto/lib/cipher.js\":{\"offset\":27942,\"length\":7384,\"mode\":420},\"/node_modules/bare-crypto/lib/constants.js\":{\"offset\":35326,\"length\":2337,\"mode\":420},\"/node_modules/bare-crypto/lib/errors.js\":{\"offset\":37663,\"length\":957,\"mode\":420},\"/node_modules/bare-crypto/lib/hash.js\":{\"offset\":38620,\"length\":871,\"mode\":420},\"/node_modules/bare-crypto/lib/hmac.js\":{\"offset\":39491,\"length\":1057,\"mode\":420},\"/node_modules/bare-crypto/lib/key.js\":{\"offset\":40548,\"length\":1067,\"mode\":420},\"/node_modules/bare-crypto/lib/pbkdf2.js\":{\"offset\":41615,\"length\":727,\"mode\":420},\"/node_modules/bare-crypto/lib/random.js\":{\"offset\":42342,\"length\":1707,\"mode\":420},\"/node_modules/bare-crypto/lib/signature.js\":{\"offset\":44049,\"length\":1060,\"mode\":420},\"/node_modules/bare-crypto/lib/web/algorithm/ed25519.js\":{\"offset\":45109,\"length\":6466,\"mode\":420},\"/node_modules/bare-crypto/lib/web/algorithm/hmac.js\":{\"offset\":51575,\"length\":5101,\"mode\":420},\"/node_modules/bare-crypto/lib/web/algorithm/pbkdf2.js\":{\"offset\":56676,\"length\":1479,\"mode\":420},\"/node_modules/bare-crypto/lib/web/crypto-key.js\":{\"offset\":58155,\"length\":970,\"mode\":420},\"/node_modules/bare-crypto/package.json\":{\"offset\":59125,\"length\":1474,\"mode\":420},\"/node_modules/bare-crypto/web.js\":{\"offset\":60599,\"length\":6659,\"mode\":420},\"/node_modules/bare-events/index.js\":{\"offset\":67258,\"length\":7497,\"mode\":420},\"/node_modules/bare-events/lib/errors.js\":{\"offset\":74755,\"length\":711,\"mode\":420},\"/node_modules/bare-events/package.json\":{\"offset\":75466,\"length\":1177,\"mode\":420},\"/node_modules/bare-module-resolve/index.js\":{\"offset\":76643,\"length\":21131,\"mode\":420},\"/node_modules/bare-module-resolve/lib/errors.js\":{\"offset\":97774,\"length\":1195,\"mode\":420},\"/node_modules/bare-module-resolve/package.json\":{\"offset\":98969,\"length\":1143,\"mode\":420},\"/node_modules/bare-os/binding.js\":{\"offset\":100112,\"length\":33,\"mode\":420},\"/node_modules/bare-os/index.js\":{\"offset\":100145,\"length\":2433,\"mode\":420},\"/node_modules/bare-os/lib/constants.js\":{\"offset\":102578,\"length\":113,\"mode\":420},\"/node_modules/bare-os/lib/errors.js\":{\"offset\":102691,\"length\":479,\"mode\":420},\"/node_modules/bare-os/package.json\":{\"offset\":103170,\"length\":1023,\"mode\":420},\"/node_modules/bare-path/index.js\":{\"offset\":104193,\"length\":306,\"mode\":420},\"/node_modules/bare-path/lib/constants.js\":{\"offset\":104499,\"length\":247,\"mode\":420},\"/node_modules/bare-path/lib/posix.js\":{\"offset\":104746,\"length\":5991,\"mode\":420},\"/node_modules/bare-path/lib/shared.js\":{\"offset\":110737,\"length\":1888,\"mode\":420},\"/node_modules/bare-path/lib/win32.js\":{\"offset\":112625,\"length\":13427,\"mode\":420},\"/node_modules/bare-path/package.json\":{\"offset\":126052,\"length\":796,\"mode\":420},\"/node_modules/bare-rpc/index.js\":{\"offset\":126848,\"length\":10199,\"mode\":420},\"/node_modules/bare-rpc/lib/command-router.js\":{\"offset\":137047,\"length\":1073,\"mode\":420},\"/node_modules/bare-rpc/lib/constants.js\":{\"offset\":138120,\"length\":270,\"mode\":420},\"/node_modules/bare-rpc/lib/errors.js\":{\"offset\":138390,\"length\":597,\"mode\":420},\"/node_modules/bare-rpc/lib/incoming-request.js\":{\"offset\":138987,\"length\":1241,\"mode\":420},\"/node_modules/bare-rpc/lib/incoming-stream.js\":{\"offset\":140228,\"length\":1263,\"mode\":420},\"/node_modules/bare-rpc/lib/messages.js\":{\"offset\":141491,\"length\":3902,\"mode\":420},\"/node_modules/bare-rpc/lib/outgoing-request.js\":{\"offset\":145393,\"length\":1670,\"mode\":420},\"/node_modules/bare-rpc/lib/outgoing-stream.js\":{\"offset\":147063,\"length\":2374,\"mode\":420},\"/node_modules/bare-rpc/package.json\":{\"offset\":149437,\"length\":1208,\"mode\":420},\"/node_modules/bare-semver/index.js\":{\"offset\":150645,\"length\":469,\"mode\":420},\"/node_modules/bare-semver/lib/comparator.js\":{\"offset\":151114,\"length\":705,\"mode\":420},\"/node_modules/bare-semver/lib/constants.js\":{\"offset\":151819,\"length\":67,\"mode\":420},\"/node_modules/bare-semver/lib/errors.js\":{\"offset\":151886,\"length\":529,\"mode\":420},\"/node_modules/bare-semver/lib/range.js\":{\"offset\":152415,\"length\":2429,\"mode\":420},\"/node_modules/bare-semver/lib/version.js\":{\"offset\":154844,\"length\":3824,\"mode\":420},\"/node_modules/bare-semver/package.json\":{\"offset\":158668,\"length\":868,\"mode\":420},\"/node_modules/bare-stream/index.js\":{\"offset\":159536,\"length\":7658,\"mode\":420},\"/node_modules/bare-stream/package.json\":{\"offset\":167194,\"length\":1307,\"mode\":420},\"/node_modules/bare-url/binding.js\":{\"offset\":168501,\"length\":33,\"mode\":420},\"/node_modules/bare-url/index.js\":{\"offset\":168534,\"length\":8404,\"mode\":420},\"/node_modules/bare-url/lib/errors.js\":{\"offset\":176938,\"length\":881,\"mode\":420},\"/node_modules/bare-url/lib/url-search-params.js\":{\"offset\":177819,\"length\":3883,\"mode\":420},\"/node_modules/bare-url/package.json\":{\"offset\":181702,\"length\":1104,\"mode\":420},\"/node_modules/bip39-mnemonic/index.js\":{\"offset\":182806,\"length\":4554,\"mode\":420},\"/node_modules/bip39-mnemonic/package.json\":{\"offset\":187360,\"length\":789,\"mode\":420},\"/node_modules/bip39-mnemonic/wordlist/chinese_simplified.json\":{\"offset\":188149,\"length\":12289,\"mode\":420},\"/node_modules/bip39-mnemonic/wordlist/chinese_traditional.json\":{\"offset\":200438,\"length\":12289,\"mode\":420},\"/node_modules/bip39-mnemonic/wordlist/czech.json\":{\"offset\":212727,\"length\":19042,\"mode\":420},\"/node_modules/bip39-mnemonic/wordlist/english.json\":{\"offset\":231769,\"length\":17213,\"mode\":420},\"/node_modules/bip39-mnemonic/wordlist/french.json\":{\"offset\":248982,\"length\":20874,\"mode\":420},\"/node_modules/bip39-mnemonic/wordlist/index.js\":{\"offset\":269856,\"length\":1406,\"mode\":420},\"/node_modules/bip39-mnemonic/wordlist/italian.json\":{\"offset\":271262,\"length\":20130,\"mode\":420},\"/node_modules/bip39-mnemonic/wordlist/japanese.json\":{\"offset\":291392,\"length\":30520,\"mode\":420},\"/node_modules/bip39-mnemonic/wordlist/korean.json\":{\"offset\":321912,\"length\":41929,\"mode\":420},\"/node_modules/bip39-mnemonic/wordlist/lookup.json\":{\"offset\":363841,\"length\":592224,\"mode\":420},\"/node_modules/bip39-mnemonic/wordlist/portuguese.json\":{\"offset\":956065,\"length\":19768,\"mode\":420},\"/node_modules/bip39-mnemonic/wordlist/russian.json\":{\"offset\":975833,\"length\":30635,\"mode\":420},\"/node_modules/bip39-mnemonic/wordlist/spanish.json\":{\"offset\":1006468,\"length\":18093,\"mode\":420},\"/node_modules/bip39-mnemonic/wordlist/turkish.json\":{\"offset\":1024561,\"length\":19421,\"mode\":420},\"/node_modules/compact-encoding/endian.js\":{\"offset\":1043982,\"length\":103,\"mode\":420},\"/node_modules/compact-encoding/index.js\":{\"offset\":1044085,\"length\":19082,\"mode\":420},\"/node_modules/compact-encoding/lexint.js\":{\"offset\":1063167,\"length\":2824,\"mode\":420},\"/node_modules/compact-encoding/package.json\":{\"offset\":1065991,\"length\":713,\"mode\":420},\"/node_modules/compact-encoding/raw.js\":{\"offset\":1066704,\"length\":4118,\"mode\":420},\"/node_modules/fast-fifo/fixed-size.js\":{\"offset\":1070822,\"length\":875,\"mode\":420},\"/node_modules/fast-fifo/index.js\":{\"offset\":1071697,\"length\":972,\"mode\":420},\"/node_modules/fast-fifo/package.json\":{\"offset\":1072669,\"length\":682,\"mode\":420},\"/node_modules/hrpc/lib/stream.js\":{\"offset\":1073351,\"length\":2647,\"mode\":420},\"/node_modules/hrpc/package.json\":{\"offset\":1075998,\"length\":1003,\"mode\":420},\"/node_modules/hrpc/runtime.cjs\":{\"offset\":1077001,\"length\":180,\"mode\":420},\"/node_modules/hyperschema/package.json\":{\"offset\":1077181,\"length\":1313,\"mode\":420},\"/node_modules/hyperschema/runtime.cjs\":{\"offset\":1078494,\"length\":54,\"mode\":420},\"/node_modules/nanoassert/index.js\":{\"offset\":1078548,\"length\":438,\"mode\":420},\"/node_modules/nanoassert/package.json\":{\"offset\":1078986,\"length\":647,\"mode\":420},\"/node_modules/require-addon/index.js\":{\"offset\":1079633,\"length\":262,\"mode\":420},\"/node_modules/require-addon/lib/runtime.js\":{\"offset\":1079895,\"length\":130,\"mode\":420},\"/node_modules/require-addon/lib/runtime/bare.js\":{\"offset\":1080025,\"length\":45,\"mode\":420},\"/node_modules/require-addon/lib/runtime/default.js\":{\"offset\":1080070,\"length\":260,\"mode\":420},\"/node_modules/require-addon/lib/runtime/node.js\":{\"offset\":1080330,\"length\":1073,\"mode\":420},\"/node_modules/require-addon/package.json\":{\"offset\":1081403,\"length\":1335,\"mode\":420},\"/node_modules/safety-catch/index.js\":{\"offset\":1082738,\"length\":506,\"mode\":420},\"/node_modules/safety-catch/package.json\":{\"offset\":1083244,\"length\":547,\"mode\":420},\"/node_modules/sodium-native/binding.js\":{\"offset\":1083791,\"length\":89,\"mode\":420},\"/node_modules/sodium-native/index.js\":{\"offset\":1083880,\"length\":65423,\"mode\":420},\"/node_modules/sodium-native/package.json\":{\"offset\":1149303,\"length\":1303,\"mode\":420},\"/node_modules/sodium-universal/index.js\":{\"offset\":1150606,\"length\":42,\"mode\":420},\"/node_modules/sodium-universal/package.json\":{\"offset\":1150648,\"length\":1217,\"mode\":420},\"/node_modules/streamx/index.js\":{\"offset\":1151865,\"length\":33340,\"mode\":420},\"/node_modules/streamx/package.json\":{\"offset\":1185205,\"length\":912,\"mode\":420},\"/node_modules/text-decoder/index.js\":{\"offset\":1186117,\"length\":1378,\"mode\":420},\"/node_modules/text-decoder/lib/pass-through-decoder.js\":{\"offset\":1187495,\"length\":273,\"mode\":420},\"/node_modules/text-decoder/lib/utf8-decoder.js\":{\"offset\":1187768,\"length\":2529,\"mode\":420},\"/node_modules/text-decoder/package.json\":{\"offset\":1190297,\"length\":987,\"mode\":420},\"/node_modules/which-runtime/index.js\":{\"offset\":1191284,\"length\":1231,\"mode\":420},\"/node_modules/which-runtime/package.json\":{\"offset\":1192515,\"length\":602,\"mode\":420},\"/package.json\":{\"offset\":1193117,\"length\":3376,\"mode\":420},\"/src/spec/hrpc/index.js\":{\"offset\":1196493,\"length\":6908,\"mode\":420},\"/src/spec/hrpc/messages.js\":{\"offset\":1203401,\"length\":8402,\"mode\":420},\"/src/spec/schema/index.js\":{\"offset\":1211803,\"length\":8402,\"mode\":420},\"/src/worklet/wdk-secret-manager-worklet.js\":{\"offset\":1220205,\"length\":3015,\"mode\":420}}}\nmodule.exports = require('./src/wdk-secret-manager');\n{\n  \"name\": \"@tetherto/wdk-secret-manager\",\n  \"version\": \"0.1.0\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"build:types\": \"rimraf *.d.ts **/*.d.ts; tsc\",\n    \"test\": \"node --experimental-vm-modules node_modules/jest/bin/jest.js\"\n  },\n  \"homepage\": \"https://github.com/noxtton/wdk-secret-manager-internal.git\",\n  \"author\": \"Tether\",\n  \"license\": \"ISC\",\n  \"description\": \"Works with mnemonic and seed buffer\",\n  \"dependencies\": {\n    \"b4a\": \"^1.6.7\",\n    \"bare-crypto\": \"^1.7.0\",\n    \"bare-stream\": \"^2.6.5\",\n    \"bip39\": \"^3.1.0\",\n    \"bip39-mnemonic\": \"^2.5.0\",\n    \"buffer\": \"^6.0.3\",\n    \"events\": \"^3.3.0\",\n    \"rimraf\": \"^5.0.10\",\n    \"sodium-javascript\": \"^0.8.0\",\n    \"sodium-native\": \"^5.0.6\",\n    \"sodium-universal\": \"^5.0.1\",\n    \"typescript\": \"^5.8.3\"\n  },\n  \"devDependencies\": {\n    \"jest\": \"^29.7.0\"\n  },\n  \"jest\": {\n    \"transform\": {}\n  }\n}\nconst b4a = require('b4a');\nconst bip39 = require('bip39-mnemonic');\nconst sodium = require('sodium-native');\nconst bareCrypto = require('bare-crypto');\n\n/**\n *\n * @type {{generate: (function(): Buffer)}}\n */\nconst wdkSaltGenerator = {\n  generate: () => {\n    const resultBuffer = b4a.alloc(16);\n    sodium.randombytes_buf(resultBuffer);\n    return resultBuffer;\n  },\n};\n\nclass WdkSecretManager {\n  /**\n   *\n   * @param {Buffer | ArrayBuffer | string} passKey - The user's password (e.g., \"password123\").\n   */\n  #passkey = null;\n  /**\n   * @param {Buffer} salt - A unique, random 16-byte salt. This should be\n   * generated once per user and stored alongside the\n   * encrypted data. It is not a secret.\n   */\n  #salt = null;\n\n  /**\n   *\n   * @param {Buffer | ArrayBuffer | Uint8Array | string} passKey - The user's password (e.g., \"password123\").\n   * @param {Buffer} salt - A unique, random 16-byte salt. This should be\n   * generated once per user and stored alongside the\n   * encrypted data. It is not a secret.\n   */\n  constructor(passKey, salt = null) {\n    this.#passKeyValidator(passKey);\n    this.#saltValidator(salt);\n    this.#passkey = passKey;\n    this.#salt = salt;\n  }\n\n  /**\n   * Derives a strong, 32-byte (256-bit) cryptographic key from a user's password\n   * Salt for preventing rainbow table attacks.\n   * using the PBKDF2 algorithm.\n   * @return {Buffer}\n   */\n  #deriveKeyFromPassKey() {\n    this.#passKeyValidator(this.#passkey);\n    this.#saltValidator(this.#salt); // Ensure this.#salt is a 16-byte Buffer\n\n    // Key size in bytes (256-bit = 32 bytes)\n    const keySizeInBytes = 32;\n\n    // The number of iterations\n    const iterations = 100000;\n\n    // The digest algorithm\n    const digest = 'sha256';\n\n    const key = bareCrypto.pbkdf2Sync(\n      this.#passkey,\n      this.#salt,\n      iterations,\n      keySizeInBytes,\n      digest\n    );\n\n    return key;\n  }\n\n  /**\n   * Generate randomBytes(16) Entropy\n   * Convert Entropy to BIP39 mnemonic phrase\n   * Convert BIP39 mnemonic phrase to seed buffer\n   * Encrypt a seed buffer\n   * Encrypt a randomBytes(16) Entropy\n   * @param {Buffer} [payload=null] - Optional randomBytes(16) entropy. If not provided, it will be generated.\n   * @param {Buffer} [derivedKey=null] - Optional ArrayBuffer(32) bytes cryptographic key.\n   * @returns {{encryptedSeed: Buffer, encryptedEntropy: Buffer}} A Object containing the encrypted seed and entropy.\n   */\n  async generateAndEncrypt(payload = null, derivedKey = null) {\n    if (payload) if (!b4a.isBuffer(payload)) throw new Error('Payload is not a buffer!');\n    const entropy = payload ? payload : this.generateRandomBuffer();\n    const seedBuffer = await bip39.mnemonicToSeed(bip39.entropyToMnemonic(entropy));\n\n    const encryptedSeed = this.#encrypt(seedBuffer, seedBuffer.byteLength, derivedKey);\n    const encryptedEntropy = this.#encrypt(entropy, entropy.byteLength, derivedKey);\n\n    return { encryptedSeed, encryptedEntropy };\n  }\n\n  /**\n   * Encrypt entropy or seed buffer\n   * @param {Buffer} buffer.\n   * @param {number} buffLength.\n   * @param {Buffer} [derivedKey=null] - Optional ArrayBuffer(32) bytes cryptographic key.\n   * @return {Buffer} A Buffer containing the encrypted payload.\n   */\n  #encrypt(buffer, buffLength, derivedKey = null) {\n    if (!b4a.isBuffer(buffer)) throw new Error('Payload is not a buffer!');\n    if (!buffLength) throw new Error('Incorrect buffer length');\n    if (derivedKey) if (!b4a.isBuffer(derivedKey)) throw new Error('derivedKey is not a buffer!');\n    const key = derivedKey ? derivedKey : this.#deriveKeyFromPassKey();\n    if (buffer.byteLength > 64 || buffer.byteLength < 16)\n      throw new Error('Buffer size must be between 16 and 64');\n\n    const nonce = b4a.alloc(sodium.crypto_secretbox_NONCEBYTES);\n    sodium.randombytes_buf(nonce);\n\n    const payload = b4a.alloc(\n      1 + sodium.crypto_secretbox_NONCEBYTES + 1 + buffLength + sodium.crypto_secretbox_MACBYTES,\n    );\n    payload[0] = 0; // version\n    payload.set(nonce, 1);\n\n    const cipher = payload.subarray(1 + nonce.byteLength);\n    const plain = cipher.subarray(0, cipher.byteLength - sodium.crypto_secretbox_MACBYTES);\n    plain[0] = buffer.byteLength;\n    plain.set(buffer, 1);\n\n    sodium.sodium_memzero(buffer);\n    // encrypt in-place\n    sodium.crypto_secretbox_easy(cipher, plain, nonce, key);\n\n    return payload;\n  }\n\n  /**\n   * Decrypts a payload to retrieve a BIP39 mnemonic phrase.\n   * @param {Buffer} payload - The encrypted payload.\n   * @param {Buffer} [derivedKey=null] - Optional ArrayBuffer(32) bytes cryptographic key.\n   * @return {Buffer} The decrypted mnemonic phrase.\n   */\n  decrypt(payload, derivedKey = null) {\n    if (!b4a.isBuffer(payload)) {\n      throw new Error('Payload is not a buffer!');\n    }\n    if (derivedKey) if (!b4a.isBuffer(derivedKey)) throw new Error('derivedKey is not a buffer!');\n    const minLength = 1 + sodium.crypto_secretbox_NONCEBYTES + 1 + sodium.crypto_secretbox_MACBYTES;\n    if (payload.byteLength < minLength) {\n      throw new Error('Invalid payload: too short');\n    }\n\n    if (payload[0] !== 0) {\n      throw new Error('Invalid version');\n    }\n    const key = derivedKey ? derivedKey : this.#deriveKeyFromPassKey();\n    const nonce = payload.subarray(1, 1 + sodium.crypto_secretbox_NONCEBYTES);\n    const cipher = payload.subarray(1 + nonce.byteLength);\n\n    const plain = b4a.alloc(cipher.byteLength - sodium.crypto_secretbox_MACBYTES);\n    if (!sodium.crypto_secretbox_open_easy(plain, cipher, nonce, key)) {\n      throw new Error('Decryption failed');\n    }\n    const bytes = plain[0];\n    if (bytes > 64) {\n      throw new Error('Invalid decrypted payload');\n    }\n\n    if (plain.byteLength < 1 + bytes) {\n      throw new Error('Invalid decrypted payload: inconsistent length');\n    }\n    const resultBuffer = b4a.alloc(bytes);\n    resultBuffer.set(plain.subarray(1, 1 + bytes));\n    sodium.sodium_memzero(plain);\n    return resultBuffer;\n  }\n\n  /**\n   * Generates a random 128 bits buffer\n   * @return {Buffer} Which can be converted BIP39 mnemonic phrase (12 words).\n   */\n  generateRandomBuffer() {\n    const resultBuffer = b4a.alloc(16);\n    sodium.randombytes_buf(resultBuffer);\n    return resultBuffer;\n  }\n\n  /**\n   *\n   * @param {Buffer} entropy - 128 bits entropy buffer.\n   * @return {string} - BIP39 mnemonic phrase (12 words by default for 128 bits).\n   */\n  entropyToMnemonic(entropy) {\n    if (!b4a.isBuffer(entropy)) throw new Error('Payload is not a buffer!');\n    return bip39.entropyToMnemonic(entropy);\n  }\n\n  /**\n   *\n   * @param {string} seedPhrase\n   * @return {Buffer}\n   */\n  mnemonicToEntropy(seedPhrase) {\n    const entropy = bip39.mnemonicToEntropy(seedPhrase);\n    return b4a.from(entropy, 'hex');\n  }\n\n  #passKeyValidator(passKey) {\n    if (!passKey) {\n      throw new Error('Pass key must not be empty!');\n    }\n    if (typeof passKey !== 'string' && !b4a.isBuffer(passKey)) {\n      throw new Error('Pass key must be a string or Buffer!');\n    }\n  }\n\n  #saltValidator(salt) {\n    if (!salt) {\n      throw new Error('Salt must not be empty!');\n    }\n    if (!b4a.isBuffer(salt)) {\n      throw new Error('Salt must be a buffer!');\n    }\n    if (salt.byteLength < 16) {\n      throw new Error('Salt must be at least 16 bytes!');\n    }\n  }\n\n  /**\n   * Erase the salt and passkey from memory.\n   */\n  dispose() {\n    sodium.sodium_memzero(this.#salt);\n    if (b4a.isBuffer(this.#passkey)) sodium.sodium_memzero(this.#passkey);\n    this.#passkey = null;\n    this.#salt = null;\n  }\n}\n\nmodule.exports = {wdkSaltGenerator, WdkSecretManager}\nfunction isBuffer(value) {\n  return Buffer.isBuffer(value) || value instanceof Uint8Array\n}\n\nfunction isEncoding(encoding) {\n  return Buffer.isEncoding(encoding)\n}\n\nfunction alloc(size, fill, encoding) {\n  return Buffer.alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe(size) {\n  return Buffer.allocUnsafe(size)\n}\n\nfunction allocUnsafeSlow(size) {\n  return Buffer.allocUnsafeSlow(size)\n}\n\nfunction byteLength(string, encoding) {\n  return Buffer.byteLength(string, encoding)\n}\n\nfunction compare(a, b) {\n  return Buffer.compare(a, b)\n}\n\nfunction concat(buffers, totalLength) {\n  return Buffer.concat(buffers, totalLength)\n}\n\nfunction copy(source, target, targetStart, start, end) {\n  return toBuffer(source).copy(target, targetStart, start, end)\n}\n\nfunction equals(a, b) {\n  return toBuffer(a).equals(b)\n}\n\nfunction fill(buffer, value, offset, end, encoding) {\n  return toBuffer(buffer).fill(value, offset, end, encoding)\n}\n\nfunction from(value, encodingOrOffset, length) {\n  return Buffer.from(value, encodingOrOffset, length)\n}\n\nfunction includes(buffer, value, byteOffset, encoding) {\n  return toBuffer(buffer).includes(value, byteOffset, encoding)\n}\n\nfunction indexOf(buffer, value, byfeOffset, encoding) {\n  return toBuffer(buffer).indexOf(value, byfeOffset, encoding)\n}\n\nfunction lastIndexOf(buffer, value, byteOffset, encoding) {\n  return toBuffer(buffer).lastIndexOf(value, byteOffset, encoding)\n}\n\nfunction swap16(buffer) {\n  return toBuffer(buffer).swap16()\n}\n\nfunction swap32(buffer) {\n  return toBuffer(buffer).swap32()\n}\n\nfunction swap64(buffer) {\n  return toBuffer(buffer).swap64()\n}\n\nfunction toBuffer(buffer) {\n  if (Buffer.isBuffer(buffer)) return buffer\n  return Buffer.from(buffer.buffer, buffer.byteOffset, buffer.byteLength)\n}\n\nfunction toString(buffer, encoding, start, end) {\n  return toBuffer(buffer).toString(encoding, start, end)\n}\n\nfunction write(buffer, string, offset, length, encoding) {\n  return toBuffer(buffer).write(string, offset, length, encoding)\n}\n\nfunction readDoubleBE(buffer, offset) {\n  return toBuffer(buffer).readDoubleBE(offset)\n}\n\nfunction readDoubleLE(buffer, offset) {\n  return toBuffer(buffer).readDoubleLE(offset)\n}\n\nfunction readFloatBE(buffer, offset) {\n  return toBuffer(buffer).readFloatBE(offset)\n}\n\nfunction readFloatLE(buffer, offset) {\n  return toBuffer(buffer).readFloatLE(offset)\n}\n\nfunction readInt32BE(buffer, offset) {\n  return toBuffer(buffer).readInt32BE(offset)\n}\n\nfunction readInt32LE(buffer, offset) {\n  return toBuffer(buffer).readInt32LE(offset)\n}\n\nfunction readUInt32BE(buffer, offset) {\n  return toBuffer(buffer).readUInt32BE(offset)\n}\n\nfunction readUInt32LE(buffer, offset) {\n  return toBuffer(buffer).readUInt32LE(offset)\n}\n\nfunction writeDoubleBE(buffer, value, offset) {\n  return toBuffer(buffer).writeDoubleBE(value, offset)\n}\n\nfunction writeDoubleLE(buffer, value, offset) {\n  return toBuffer(buffer).writeDoubleLE(value, offset)\n}\n\nfunction writeFloatBE(buffer, value, offset) {\n  return toBuffer(buffer).writeFloatBE(value, offset)\n}\n\nfunction writeFloatLE(buffer, value, offset) {\n  return toBuffer(buffer).writeFloatLE(value, offset)\n}\n\nfunction writeInt32BE(buffer, value, offset) {\n  return toBuffer(buffer).writeInt32BE(value, offset)\n}\n\nfunction writeInt32LE(buffer, value, offset) {\n  return toBuffer(buffer).writeInt32LE(value, offset)\n}\n\nfunction writeUInt32BE(buffer, value, offset) {\n  return toBuffer(buffer).writeUInt32BE(value, offset)\n}\n\nfunction writeUInt32LE(buffer, value, offset) {\n  return toBuffer(buffer).writeUInt32LE(value, offset)\n}\n\nmodule.exports = {\n  isBuffer,\n  isEncoding,\n  alloc,\n  allocUnsafe,\n  allocUnsafeSlow,\n  byteLength,\n  compare,\n  concat,\n  copy,\n  equals,\n  fill,\n  from,\n  includes,\n  indexOf,\n  lastIndexOf,\n  swap16,\n  swap32,\n  swap64,\n  toBuffer,\n  toString,\n  write,\n  readDoubleBE,\n  readDoubleLE,\n  readFloatBE,\n  readFloatLE,\n  readInt32BE,\n  readInt32LE,\n  readUInt32BE,\n  readUInt32LE,\n  writeDoubleBE,\n  writeDoubleLE,\n  writeFloatBE,\n  writeFloatLE,\n  writeInt32BE,\n  writeInt32LE,\n  writeUInt32BE,\n  writeUInt32LE\n}\n{\n  \"name\": \"b4a\",\n  \"version\": \"1.7.2\",\n  \"description\": \"Bridging the gap between buffers and typed arrays\",\n  \"exports\": {\n    \"./package\": \"./package.json\",\n    \".\": {\n      \"react-native\": \"./react-native.js\",\n      \"browser\": \"./browser.js\",\n      \"default\": \"./index.js\"\n    }\n  },\n  \"files\": [\n    \"browser.js\",\n    \"index.js\",\n    \"react-native.js\",\n    \"lib\"\n  ],\n  \"scripts\": {\n    \"test\": \"npm run lint && npm run test:bare && npm run test:node\",\n    \"test:bare\": \"bare test.mjs\",\n    \"test:node\": \"node test.mjs\",\n    \"lint\": \"prettier . --check\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/holepunchto/b4a.git\"\n  },\n  \"author\": \"Holepunch\",\n  \"license\": \"Apache-2.0\",\n  \"bugs\": {\n    \"url\": \"https://github.com/holepunchto/b4a/issues\"\n  },\n  \"homepage\": \"https://github.com/holepunchto/b4a#readme\",\n  \"devDependencies\": {\n    \"brittle\": \"^3.5.2\",\n    \"nanobench\": \"^3.0.0\",\n    \"prettier\": \"^3.6.2\",\n    \"prettier-config-holepunch\": \"^1.0.0\"\n  },\n  \"peerDependencies\": {\n    \"react-native-b4a\": \"*\"\n  },\n  \"peerDependenciesMeta\": {\n    \"react-native-b4a\": {\n      \"optional\": true\n    }\n  }\n}\nconst resolve = require('bare-module-resolve')\nconst { Version } = require('bare-semver')\nconst errors = require('./lib/errors')\n\nmodule.exports = exports = function resolve(\n  specifier,\n  parentURL,\n  opts,\n  readPackage\n) {\n  if (typeof opts === 'function') {\n    readPackage = opts\n    opts = {}\n  } else if (typeof readPackage !== 'function') {\n    readPackage = defaultReadPackage\n  }\n\n  return {\n    *[Symbol.iterator]() {\n      const generator = exports.addon(specifier, parentURL, opts)\n\n      let next = generator.next()\n\n      while (next.done !== true) {\n        const value = next.value\n\n        if (value.package) {\n          next = generator.next(readPackage(value.package))\n        } else {\n          next = generator.next(yield value.resolution)\n        }\n      }\n\n      return next.value\n    },\n\n    async *[Symbol.asyncIterator]() {\n      const generator = exports.addon(specifier, parentURL, opts)\n\n      let next = generator.next()\n\n      while (next.done !== true) {\n        const value = next.value\n\n        if (value.package) {\n          next = generator.next(await readPackage(value.package))\n        } else {\n          next = generator.next(yield value.resolution)\n        }\n      }\n\n      return next.value\n    }\n  }\n}\n\nfunction defaultReadPackage() {\n  return null\n}\n\nconst { UNRESOLVED, YIELDED, RESOLVED } = resolve.constants\n\nexports.constants = {\n  UNRESOLVED,\n  YIELDED,\n  RESOLVED\n}\n\nexports.addon = function* (specifier, parentURL, opts = {}) {\n  const { resolutions = null } = opts\n\n  if (exports.startsWithWindowsDriveLetter(specifier)) {\n    specifier = '/' + specifier\n  }\n\n  let status\n\n  if (resolutions) {\n    status = yield* resolve.preresolved(specifier, resolutions, parentURL, opts)\n\n    if (status) return status\n  }\n\n  status = yield* exports.url(specifier, parentURL, opts)\n\n  if (status) return status\n\n  let version = null\n\n  const i = specifier.lastIndexOf('@')\n\n  if (i > 0) {\n    version = specifier.substring(i + 1)\n\n    try {\n      Version.parse(version)\n\n      specifier = specifier.substring(0, i)\n    } catch {\n      version = null\n    }\n  }\n\n  if (\n    specifier === '.' ||\n    specifier === '..' ||\n    specifier[0] === '/' ||\n    specifier[0] === '\\\\' ||\n    specifier.startsWith('./') ||\n    specifier.startsWith('.\\\\') ||\n    specifier.startsWith('../') ||\n    specifier.startsWith('..\\\\')\n  ) {\n    return yield* exports.directory(specifier, version, parentURL, opts)\n  }\n\n  return yield* exports.package(specifier, version, parentURL, opts)\n}\n\nexports.url = function* (url, parentURL, opts = {}) {\n  let resolution\n  try {\n    resolution = new URL(url)\n  } catch {\n    return UNRESOLVED\n  }\n\n  const resolved = yield { resolution }\n\n  return resolved ? RESOLVED : YIELDED\n}\n\nexports.package = function* (\n  packageSpecifier,\n  packageVersion,\n  parentURL,\n  opts = {}\n) {\n  if (packageSpecifier === '') {\n    throw errors.INVALID_ADDON_SPECIFIER(\n      `Addon specifier '${packageSpecifier}' is not a valid package name`\n    )\n  }\n\n  let packageName\n\n  if (packageSpecifier[0] !== '@') {\n    packageName = packageSpecifier.split('/', 1).join()\n  } else {\n    if (!packageSpecifier.includes('/')) {\n      throw errors.INVALID_ADDON_SPECIFIER(\n        `Addon specifier '${packageSpecifier}' is not a valid package name`\n      )\n    }\n\n    packageName = packageSpecifier.split('/', 2).join('/')\n  }\n\n  if (\n    packageName[0] === '.' ||\n    packageName.includes('\\\\') ||\n    packageName.includes('%')\n  ) {\n    throw errors.INVALID_ADDON_SPECIFIER(\n      `Addon specifier '${packageSpecifier}' is not a valid package name`\n    )\n  }\n\n  const packageSubpath = '.' + packageSpecifier.substring(packageName.length)\n\n  const status = yield* exports.packageSelf(\n    packageName,\n    packageSubpath,\n    packageVersion,\n    parentURL,\n    opts\n  )\n\n  if (status) return status\n\n  parentURL = new URL(parentURL.href)\n\n  do {\n    const packageURL = new URL('node_modules/' + packageName + '/', parentURL)\n\n    parentURL.pathname = parentURL.pathname.substring(\n      0,\n      parentURL.pathname.lastIndexOf('/')\n    )\n\n    const info = yield { package: new URL('package.json', packageURL) }\n\n    if (info) {\n      return yield* exports.directory(\n        packageSubpath,\n        packageVersion,\n        packageURL,\n        opts\n      )\n    }\n  } while (parentURL.pathname !== '' && parentURL.pathname !== '/')\n\n  return UNRESOLVED\n}\n\nexports.packageSelf = function* (\n  packageName,\n  packageSubpath,\n  packageVersion,\n  parentURL,\n  opts = {}\n) {\n  for (const packageURL of resolve.lookupPackageScope(parentURL, opts)) {\n    const info = yield { package: packageURL }\n\n    if (info) {\n      if (info.name === packageName) {\n        return yield* exports.directory(\n          packageSubpath,\n          packageVersion,\n          packageURL,\n          opts\n        )\n      }\n\n      break\n    }\n  }\n\n  return UNRESOLVED\n}\n\nexports.lookupPrebuildsScope = function* lookupPrebuildsScope(url, opts = {}) {\n  const { resolutions = null } = opts\n\n  if (resolutions) {\n    for (const { resolution } of resolve.preresolved(\n      '#prebuilds',\n      resolutions,\n      url,\n      opts\n    )) {\n      if (resolution) return yield resolution\n    }\n  }\n\n  const scopeURL = new URL(url.href)\n\n  do {\n    yield new URL('prebuilds/', scopeURL)\n\n    scopeURL.pathname = scopeURL.pathname.substring(\n      0,\n      scopeURL.pathname.lastIndexOf('/')\n    )\n\n    if (\n      scopeURL.pathname.length === 3 &&\n      exports.isWindowsDriveLetter(scopeURL.pathname.substring(1))\n    ) {\n      break\n    }\n  } while (scopeURL.pathname !== '' && scopeURL.pathname !== '/')\n}\n\nexports.file = function* (filename, parentURL, opts = {}) {\n  if (parentURL.protocol === 'file:' && /%2f|%5c/i.test(filename)) {\n    throw errors.INVALID_ADDON_SPECIFIER(\n      `Addon specifier '${filename}' is invalid`\n    )\n  }\n\n  const { extensions = [] } = opts\n\n  let status = UNRESOLVED\n\n  for (const ext of extensions) {\n    if (yield { resolution: new URL(filename + ext, parentURL) }) {\n      return RESOLVED\n    }\n\n    status = YIELDED\n  }\n\n  return status\n}\n\nexports.directory = function* (dirname, version, parentURL, opts = {}) {\n  const {\n    resolutions = null,\n    host = null, // Shorthand for single host resolution\n    hosts = host !== null ? [host] : [],\n    builtins = [],\n    matchedConditions = []\n  } = opts\n\n  let directoryURL\n\n  if (\n    dirname[dirname.length - 1] === '/' ||\n    dirname[dirname.length - 1] === '\\\\'\n  ) {\n    directoryURL = new URL(dirname, parentURL)\n  } else {\n    directoryURL = new URL(dirname + '/', parentURL)\n  }\n\n  // Internal preresolution path, do not depend on this! It will be removed without\n  // warning.\n  if (resolutions) {\n    const status = yield* resolve.preresolved(\n      'bare:addon',\n      resolutions,\n      directoryURL,\n      opts\n    )\n\n    if (status) return status\n  }\n\n  const unversioned = version === null\n\n  let name = null\n\n  const info = yield { package: new URL('package.json', directoryURL) }\n\n  if (info) {\n    if (typeof info.name === 'string' && info.name !== '') {\n      if (info.name.includes('__')) {\n        throw errors.INVALID_PACKAGE_NAME(\n          `Package name '${info.name}' is invalid`\n        )\n      }\n\n      name = info.name.replace(/\\//g, '__').replace(/^@/, '')\n    } else {\n      return UNRESOLVED\n    }\n\n    if (typeof info.version === 'string' && info.version !== '') {\n      if (version !== null && info.version !== version) return UNRESOLVED\n\n      version = info.version\n    }\n  } else {\n    return UNRESOLVED\n  }\n\n  let status\n\n  status = yield* resolve.builtinTarget(name, version, builtins, opts)\n\n  if (status) return status\n\n  for (const prebuildsURL of exports.lookupPrebuildsScope(directoryURL, opts)) {\n    status = UNRESOLVED\n\n    for (const host of hosts) {\n      const conditions = host.split('-')\n\n      matchedConditions.push(...conditions)\n\n      if (version !== null) {\n        status |= yield* exports.file(\n          host + '/' + name + '@' + version,\n          prebuildsURL,\n          opts\n        )\n      }\n\n      if (unversioned) {\n        status |= yield* exports.file(host + '/' + name, prebuildsURL, opts)\n      }\n\n      for (const _ of conditions) matchedConditions.pop()\n    }\n\n    if (status === RESOLVED) return status\n  }\n\n  return yield* exports.linked(name, version, opts)\n}\n\nexports.linked = function* (name, version = null, opts = {}) {\n  const {\n    linked = true,\n    host = null, // Shorthand for single host resolution\n    hosts = host !== null ? [host] : [],\n    matchedConditions = []\n  } = opts\n\n  if (linked === false || hosts.length === 0) return UNRESOLVED\n\n  let status = UNRESOLVED\n\n  for (const host of hosts) {\n    const [platform = null] = host.split('-', 1)\n\n    if (platform === null) continue\n\n    matchedConditions.push(platform)\n\n    status |= yield* platformArtefact(name, version, platform, opts)\n\n    matchedConditions.pop()\n  }\n\n  return status\n}\n\nfunction* platformArtefact(name, version = null, platform, opts = {}) {\n  const { linkedProtocol = 'linked:' } = opts\n\n  if (platform === 'darwin' || platform === 'ios') {\n    if (version !== null) {\n      if (\n        yield {\n          resolution: new URL(\n            `${linkedProtocol}${name}.${version}.framework/${name}.${version}`\n          )\n        }\n      ) {\n        return RESOLVED\n      }\n\n      if (platform === 'darwin') {\n        if (\n          yield {\n            resolution: new URL(`${linkedProtocol}lib${name}.${version}.dylib`)\n          }\n        ) {\n          return RESOLVED\n        }\n      }\n    }\n\n    if (\n      yield {\n        resolution: new URL(`${linkedProtocol}${name}.framework/${name}`)\n      }\n    ) {\n      return RESOLVED\n    }\n\n    if (platform === 'darwin') {\n      if (\n        yield {\n          resolution: new URL(`${linkedProtocol}lib${name}.dylib`)\n        }\n      ) {\n        return RESOLVED\n      }\n    }\n\n    return YIELDED\n  }\n\n  if (platform === 'linux' || platform === 'android') {\n    if (version !== null) {\n      if (\n        yield {\n          resolution: new URL(`${linkedProtocol}lib${name}.${version}.so`)\n        }\n      ) {\n        return RESOLVED\n      }\n    }\n\n    if (\n      yield {\n        resolution: new URL(`${linkedProtocol}lib${name}.so`)\n      }\n    ) {\n      return RESOLVED\n    }\n\n    return YIELDED\n  }\n\n  if (platform === 'win32') {\n    if (version !== null) {\n      if (\n        yield {\n          resolution: new URL(`${linkedProtocol}${name}-${version}.dll`)\n        }\n      ) {\n        return RESOLVED\n      }\n    }\n\n    if (\n      yield {\n        resolution: new URL(`${linkedProtocol}${name}.dll`)\n      }\n    ) {\n      return RESOLVED\n    }\n  }\n\n  return UNRESOLVED\n}\n\nexports.isWindowsDriveLetter = resolve.isWindowsDriveLetter\n\nexports.startsWithWindowsDriveLetter = resolve.startsWithWindowsDriveLetter\nmodule.exports = class AddonResolveError extends Error {\n  constructor(msg, code, fn = AddonResolveError) {\n    super(`${code}: ${msg}`)\n    this.code = code\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, fn)\n    }\n  }\n\n  get name() {\n    return 'AddonResolveError'\n  }\n\n  static INVALID_ADDON_SPECIFIER(msg) {\n    return new AddonResolveError(\n      msg,\n      'INVALID_ADDON_SPECIFIER',\n      AddonResolveError.INVALID_ADDON_SPECIFIER\n    )\n  }\n\n  static INVALID_PACKAGE_NAME(msg) {\n    return new AddonResolveError(\n      msg,\n      'INVALID_PACKAGE_NAME',\n      AddonResolveError.INVALID_PACKAGE_NAME\n    )\n  }\n}\n{\n  \"name\": \"bare-addon-resolve\",\n  \"version\": \"1.9.4\",\n  \"description\": \"Low-level addon resolution algorithm for Bare\",\n  \"exports\": {\n    \"./package\": \"./package.json\",\n    \".\": {\n      \"types\": \"./index.d.ts\",\n      \"default\": \"./index.js\"\n    },\n    \"./errors\": {\n      \"types\": \"./lib/errors.d.ts\",\n      \"default\": \"./lib/errors.js\"\n    }\n  },\n  \"files\": [\n    \"index.js\",\n    \"index.d.ts\",\n    \"lib\"\n  ],\n  \"scripts\": {\n    \"test\": \"prettier . --check && bare test.js\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/holepunchto/bare-addon-resolve.git\"\n  },\n  \"author\": \"Holepunch\",\n  \"license\": \"Apache-2.0\",\n  \"bugs\": {\n    \"url\": \"https://github.com/holepunchto/bare-addon-resolve/issues\"\n  },\n  \"homepage\": \"https://github.com/holepunchto/bare-addon-resolve#readme\",\n  \"dependencies\": {\n    \"bare-module-resolve\": \"^1.10.0\",\n    \"bare-semver\": \"^1.0.0\"\n  },\n  \"devDependencies\": {\n    \"bare-url\": \"^2.1.3\",\n    \"brittle\": \"^3.2.1\",\n    \"prettier\": \"^3.3.3\",\n    \"prettier-config-standard\": \"^7.0.0\"\n  },\n  \"peerDependencies\": {\n    \"bare-url\": \"*\"\n  },\n  \"peerDependenciesMeta\": {\n    \"bare-url\": {\n      \"optional\": true\n    }\n  }\n}\nmodule.exports = require.addon()\nconst constants = require('./lib/constants')\nconst Hash = require('./lib/hash')\nconst Hmac = require('./lib/hmac')\nconst { Cipheriv, Decipheriv } = require('./lib/cipher')\nconst { randomBytes, randomFill, randomUUID } = require('./lib/random')\nconst pbkdf2 = require('./lib/pbkdf2')\nconst { generateKeyPair } = require('./lib/key')\nconst { sign, verify } = require('./lib/signature')\n\nexports.constants = constants\n\nexports.Hash = Hash\n\nexports.createHash = function createHash(algorithm, opts) {\n  return new Hash(algorithm, opts)\n}\n\nexports.Hmac = Hmac\n\nexports.createHmac = function createHmac(algorithm, key, opts) {\n  return new Hmac(algorithm, key, opts)\n}\n\nexports.Cipheriv = Cipheriv\n\nexports.createCipheriv = function createCipheriv(algorithm, key, iv, opts) {\n  return new Cipheriv(algorithm, key, iv, opts)\n}\n\nexports.Decipheriv = Decipheriv\n\nexports.createDecipheriv = function createDecipheriv(algorithm, key, iv, opts) {\n  return new Decipheriv(algorithm, key, iv, opts)\n}\n\nexports.randomBytes = randomBytes\n\nexports.randomFill = randomFill\n\n// For Node.js compatibility\nexports.randomFillSync = function randomFillSync(buffer, offset, size) {\n  return exports.randomFill(buffer, offset, size)\n}\n\nexports.randomUUID = randomUUID\n\nexports.pbkdf2 = pbkdf2\n\n// For Node.js compatibility\nexports.pbkdf2Sync = function pbkdf2Sync(\n  password,\n  salt,\n  iterations,\n  keylen,\n  digest\n) {\n  return exports.pbkdf2(password, salt, iterations, keylen, digest)\n}\n\nexports.generateKeyPair = generateKeyPair\n\nexports.sign = sign\n\nexports.verify = verify\n\n// For Node.js compatibility\nexports.webcrypto = require('./web')\nconst { Transform } = require('bare-stream')\nconst binding = require('../binding')\nconst constants = require('./constants')\n\nconst {\n  cipher: {\n    AES128ECB,\n    AES128CBC,\n    AES128CTR,\n    AES128OFB,\n    AES256ECB,\n    AES256CBC,\n    AES256CTR,\n    AES256OFB,\n    AES128GCM,\n    AES256GCM,\n    CHACHA20POLY1305,\n    XCHACHA20POLY1305\n  }\n} = constants\n\nclass CryptoCipher {\n  constructor(algorithm, key, iv, encrypt, opts = {}) {\n    const { encoding = 'utf8' } = opts\n\n    if (typeof key === 'string') key = Buffer.from(key, encoding)\n    if (typeof iv === 'string') iv = Buffer.from(iv, encoding)\n\n    if (key.byteLength !== binding.cipherKeyLength(algorithm)) {\n      throw new RangeError('Invalid key length')\n    }\n\n    if (iv.byteLength < binding.cipherIVLength(algorithm)) {\n      throw new RangeError('Invalid iv length')\n    }\n\n    this._handle = binding.cipherInit(\n      algorithm,\n      key.buffer,\n      key.byteOffset,\n      key.byteLength,\n      iv.buffer,\n      iv.byteOffset,\n      iv.byteLength,\n      encrypt\n    )\n  }\n\n  update(data, inputEncoding = 'utf8', outputEncoding) {\n    if (typeof data === 'string') data = Buffer.from(data, inputEncoding)\n\n    const out = new ArrayBuffer(binding.cipherBlockSize(this._handle))\n\n    const written = binding.cipherUpdate(\n      this._handle,\n      data.buffer,\n      data.byteOffset,\n      data.byteLength,\n      out\n    )\n\n    const result = Buffer.from(out, 0, written)\n\n    return outputEncoding ? result.toString(outputEncoding) : result\n  }\n\n  final(outputEncoding) {\n    const out = new ArrayBuffer(binding.cipherBlockSize(this._handle))\n\n    const written = binding.cipherFinal(this._handle, out)\n\n    const result = Buffer.from(out, 0, written)\n\n    return outputEncoding ? result.toString(outputEncoding) : result\n  }\n\n  setAutoPadding(pad) {\n    binding.cipherSetPadding(pad)\n  }\n}\n\nclass CryptoAuthenticatedCipher {\n  constructor(algorithm, key, nonce, opts = {}) {\n    const { encoding = 'utf8', authTagLength = 16 } = opts\n\n    if (typeof key === 'string') key = Buffer.from(key, encoding)\n    if (typeof nonce === 'string') nonce = Buffer.from(nonce, encoding)\n\n    if (key.byteLength !== binding.aeadKeyLength(algorithm)) {\n      throw new RangeError('Invalid key length')\n    }\n\n    if (nonce.byteLength < binding.aeadNonceLength(algorithm)) {\n      throw new RangeError('Invalid nonce length')\n    }\n\n    this._buffer = []\n    this._nonce = nonce\n    this._authTag = null\n    this._authTagLength = authTagLength\n    this._additionalData = null\n\n    this._handle = binding.aeadInit(\n      algorithm,\n      key.buffer,\n      key.byteOffset,\n      key.byteLength,\n      authTagLength\n    )\n  }\n\n  update(data, inputEncoding = 'utf8', outputEncoding) {\n    if (typeof data === 'string') data = Buffer.from(data, inputEncoding)\n\n    this._buffer.push(data)\n\n    return outputEncoding ? '' : Buffer.alloc(0)\n  }\n\n  setAAD(buffer, opts = {}) {\n    const { encoding = 'utf8' } = opts\n\n    if (typeof buffer === 'string') buffer = Buffer.from(buffer, encoding)\n\n    this._additionalData = buffer\n  }\n\n  getAuthTag() {\n    return this._authTag\n  }\n\n  setAuthTag(authTag, encoding) {\n    if (typeof authTag === 'string') authTag = Buffer.from(authTag, encoding)\n\n    this._authTag = authTag\n  }\n}\n\nclass CryptoAuthenticatedSeal extends CryptoAuthenticatedCipher {\n  final(outputEncoding) {\n    const data =\n      this._buffer.length === 1 ? this._buffer[0] : Buffer.concat(this._buffer)\n\n    const nonce = this._nonce\n    const ad = this._additionalData || Buffer.alloc(0)\n\n    const out = new ArrayBuffer(\n      data.byteLength + binding.aeadMaxOverhead(this._handle)\n    )\n\n    binding.aeadSeal(\n      this._handle,\n      data.buffer,\n      data.byteOffset,\n      data.byteLength,\n      nonce.buffer,\n      nonce.byteOffset,\n      nonce.byteLength,\n      ad.buffer,\n      ad.byteOffset,\n      ad.byteLength,\n      out\n    )\n\n    const written = out.byteLength - this._authTagLength\n\n    this._authTag = Buffer.from(out, written)\n\n    const result = Buffer.from(out, 0, written)\n\n    return outputEncoding ? result.toString(outputEncoding) : result\n  }\n}\n\nclass CryptoAuthenticatedOpen extends CryptoAuthenticatedCipher {\n  final(outputEncoding) {\n    this._buffer.push(this._authTag)\n\n    const data = Buffer.concat(this._buffer)\n\n    const nonce = this._nonce\n    const ad = this._additionalData || Buffer.alloc(0)\n\n    const out = new ArrayBuffer(data.byteLength)\n\n    binding.aeadOpen(\n      this._handle,\n      data.buffer,\n      data.byteOffset,\n      data.byteLength,\n      nonce.buffer,\n      nonce.byteOffset,\n      nonce.byteLength,\n      ad.buffer,\n      ad.byteOffset,\n      ad.byteLength,\n      out\n    )\n\n    const written = out.byteLength - this._authTagLength\n\n    const result = Buffer.from(out, 0, written)\n\n    return outputEncoding ? result.toString(outputEncoding) : result\n  }\n}\n\nexports.Cipheriv = class CryptoCipheriv extends Transform {\n  constructor(algorithm, key, iv, opts = {}) {\n    super(opts)\n\n    algorithm = constants.toCipher(algorithm)\n\n    switch (algorithm) {\n      case AES128ECB:\n      case AES128CBC:\n      case AES128CTR:\n      case AES128OFB:\n      case AES256ECB:\n      case AES256CBC:\n      case AES256CTR:\n      case AES256OFB:\n        this._cipher = new CryptoCipher(algorithm, key, iv, true, opts)\n        break\n\n      case AES128GCM:\n      case AES256GCM:\n      case CHACHA20POLY1305:\n      case XCHACHA20POLY1305:\n        this._cipher = new CryptoAuthenticatedSeal(algorithm, key, iv, opts)\n        break\n    }\n  }\n\n  update(data, inputEncoding, outputEncoding) {\n    return this._cipher.update(data, inputEncoding, outputEncoding)\n  }\n\n  final(outputEncoding) {\n    return this._cipher.final(outputEncoding)\n  }\n\n  setAutoPadding(pad) {\n    this._cipher.setAutoPadding(pad)\n\n    return this\n  }\n\n  setAAD(buffer, opts) {\n    this._cipher.setAAD(buffer, opts)\n\n    return this\n  }\n\n  getAuthTag() {\n    return this._cipher.getAuthTag()\n  }\n\n  _transform(data, encoding, cb) {\n    this.update(data)\n\n    cb(null)\n  }\n\n  _flush(cb) {\n    this.push(this.digest())\n\n    cb(null)\n  }\n}\n\nexports.Decipheriv = class CryptoDeipheriv extends Transform {\n  constructor(algorithm, key, iv, opts = {}) {\n    super(opts)\n\n    algorithm = constants.toCipher(algorithm)\n\n    switch (algorithm) {\n      case AES128ECB:\n      case AES128CBC:\n      case AES128CTR:\n      case AES128OFB:\n      case AES256ECB:\n      case AES256CBC:\n      case AES256CTR:\n      case AES256OFB:\n        this._cipher = new CryptoCipher(algorithm, key, iv, false, opts)\n        break\n\n      case AES128GCM:\n      case AES256GCM:\n      case CHACHA20POLY1305:\n      case XCHACHA20POLY1305:\n        this._cipher = new CryptoAuthenticatedOpen(algorithm, key, iv, opts)\n        break\n    }\n  }\n\n  update(data, inputEncoding, outputEncoding) {\n    return this._cipher.update(data, inputEncoding, outputEncoding)\n  }\n\n  final(outputEncoding) {\n    return this._cipher.final(outputEncoding)\n  }\n\n  setAutoPadding(pad) {\n    this._cipher.setAutoPadding(pad)\n\n    return this\n  }\n\n  setAAD(buffer, opts) {\n    this._cipher.setAAD(buffer, opts)\n\n    return this\n  }\n\n  setAuthTag(authTag, encoding) {\n    this._cipher.setAuthTag(authTag, encoding)\n\n    return this\n  }\n\n  _transform(data, encoding, cb) {\n    this.update(data)\n\n    cb(null)\n  }\n\n  _flush(cb) {\n    this.push(this.digest())\n\n    cb(null)\n  }\n}\nconst binding = require('../binding')\nconst errors = require('./errors')\n\nmodule.exports = exports = {\n  hash: {\n    MD5: binding.MD5,\n    SHA1: binding.SHA1,\n    SHA256: binding.SHA256,\n    SHA512: binding.SHA512,\n    BLAKE2B256: binding.BLAKE2B256\n  },\n  signature: {\n    ED25519: binding.ED25519\n  },\n  cipher: {\n    AES128ECB: binding.AES128ECB,\n    AES128CBC: binding.AES128CBC,\n    AES128CTR: binding.AES128CTR,\n    AES128OFB: binding.AES128OFB,\n    AES256ECB: binding.AES256ECB,\n    AES256CBC: binding.AES256CBC,\n    AES256CTR: binding.AES256CTR,\n    AES256OFB: binding.AES256OFB,\n    AES128GCM: binding.AES128GCM,\n    AES256GCM: binding.AES256GCM,\n    CHACHA20POLY1305: binding.CHACHA20POLY1305,\n    XCHACHA20POLY1305: binding.XCHACHA20POLY1305\n  },\n  keyType: {\n    ED25519: binding.ED25519\n  }\n}\n\nexports.toHash = function toHash(hash) {\n  if (typeof hash === 'number') return hash\n\n  if (typeof hash === 'string') {\n    hash = hash.replace(/-/g, '')\n\n    if (hash in exports.hash === false) {\n      hash = hash.toUpperCase()\n\n      if (hash in exports.hash === false) {\n        throw errors.UNKNOWN_HASH(`Unknown hash '${hash}'`)\n      }\n    }\n\n    return exports.hash[hash]\n  }\n\n  throw new TypeError(\n    `Hash must be a number or string. Received ${typeof hash} (${hash})`\n  )\n}\n\nexports.toCipher = function toCiper(cipher) {\n  if (typeof cipher === 'number') return cipher\n\n  if (typeof cipher === 'string') {\n    cipher = cipher.replace(/-/g, '')\n\n    if (cipher in exports.cipher === false) {\n      cipher = cipher.toUpperCase()\n\n      if (cipher in exports.cipher === false) {\n        throw errors.UNKNOWN_CIPHER(`Unknown cipher '${cipher}'`)\n      }\n    }\n\n    return exports.cipher[cipher]\n  }\n\n  throw new TypeError(\n    `Cipher must be a number or string. Received ${typeof cipher} (${cipher})`\n  )\n}\n\nexports.toKeyType = function toKeyType(type) {\n  if (typeof type === 'number') return type\n\n  if (typeof type === 'string') {\n    type = type.replace(/-/g, '')\n\n    if (type in exports.keyType === false) {\n      type = type.toUpperCase()\n\n      if (type in exports.keyType === false) {\n        throw errors.UNKNOWN_KEY_TYPE(`Unknown key type '${type}'`)\n      }\n    }\n\n    return exports.keyType[type]\n  }\n\n  throw new TypeError(\n    `Key type must be a number or string. Received ${typeof type} (${type})`\n  )\n}\nmodule.exports = class CryptoError extends Error {\n  constructor(msg, fn = CryptoError, code = fn.name) {\n    super(`${code}: ${msg}`)\n    this.code = code\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, fn)\n    }\n  }\n\n  get name() {\n    return 'CryptoError'\n  }\n\n  static UNKNOWN_HASH(msg) {\n    return new CryptoError(msg, CryptoError.UNKNOWN_HASH)\n  }\n\n  static UNKNOWN_CIPHER(msg) {\n    return new CryptoError(msg, CryptoError.UNKNOWN_CIPHER)\n  }\n\n  static UNKNOWN_KEY_TYPE(msg) {\n    return new CryptoError(msg, CryptoError.UNKNOWN_KEY_TYPE)\n  }\n\n  static INVALID_ACCESS(msg) {\n    return new CryptoError(msg, CryptoError.INVALID_ACCESS)\n  }\n\n  static INVALID_DATA(msg) {\n    return new CryptoError(msg, CryptoError.INVALID_DATA)\n  }\n\n  static OPERATION_ERROR(msg) {\n    return new CryptoError(msg, CryptoError.OPERATION_ERROR)\n  }\n\n  static NOT_SUPPORTED(msg) {\n    return new CryptoError(msg, CryptoError.NOT_SUPPORTED)\n  }\n}\nconst { Transform } = require('bare-stream')\nconst binding = require('../binding')\nconst constants = require('./constants')\n\nmodule.exports = class CryptoHash extends Transform {\n  constructor(algorithm, opts = {}) {\n    super(opts)\n\n    this._handle = binding.hashInit(constants.toHash(algorithm))\n  }\n\n  update(data, encoding = 'utf8') {\n    if (typeof data === 'string') data = Buffer.from(data, encoding)\n\n    binding.hashUpdate(\n      this._handle,\n      data.buffer,\n      data.byteOffset,\n      data.byteLength\n    )\n\n    return this\n  }\n\n  digest(encoding) {\n    const digest = Buffer.from(binding.hashFinal(this._handle))\n\n    return encoding && encoding !== 'buffer'\n      ? digest.toString(encoding)\n      : digest\n  }\n\n  _transform(data, encoding, cb) {\n    this.update(data)\n\n    cb(null)\n  }\n\n  _flush(cb) {\n    this.push(this.digest())\n\n    cb(null)\n  }\n}\nconst { Transform } = require('bare-stream')\nconst binding = require('../binding')\nconst constants = require('./constants')\n\nmodule.exports = class CryptoHmac extends Transform {\n  constructor(algorithm, key, opts = {}) {\n    super(opts)\n\n    const { encoding = 'utf8' } = opts\n\n    if (typeof key === 'string') key = Buffer.from(key, encoding)\n\n    this._handle = binding.hmacInit(\n      constants.toHash(algorithm),\n      key.buffer,\n      key.byteOffset,\n      key.byteLength\n    )\n  }\n\n  update(data, encoding = 'utf8') {\n    if (typeof data === 'string') data = Buffer.from(data, encoding)\n\n    binding.hmacUpdate(\n      this._handle,\n      data.buffer,\n      data.byteOffset,\n      data.byteLength\n    )\n\n    return this\n  }\n\n  digest(encoding) {\n    const digest = Buffer.from(binding.hmacFinal(this._handle))\n\n    return encoding && encoding !== 'buffer'\n      ? digest.toString(encoding)\n      : digest\n  }\n\n  _transform(data, encoding, cb) {\n    this.update(data)\n\n    cb(null)\n  }\n\n  _flush(cb) {\n    this.push(this.digest())\n\n    cb(null)\n  }\n}\nconst binding = require('../binding')\nconst constants = require('./constants')\n\nconst {\n  keyType: { ED25519 }\n} = constants\n\nclass CryptoKey {\n  constructor(keyType) {\n    this._keyType = keyType\n  }\n}\n\nexports.Key = CryptoKey\n\nclass CryptoEd25519Key extends CryptoKey {\n  constructor(key) {\n    super(ED25519)\n\n    this._key = key\n  }\n\n  get asymmetricKeyType() {\n    return 'ed25519'\n  }\n}\n\nclass CryptoEd25519PublicKey extends CryptoEd25519Key {\n  get type() {\n    return 'public'\n  }\n}\n\nexports.Ed25519PublicKey = CryptoEd25519PublicKey\n\nclass CryptoEd25519PrivateKey extends CryptoEd25519Key {\n  get type() {\n    return 'private'\n  }\n}\n\nexports.Ed25519PrivateKey = CryptoEd25519PrivateKey\n\nexports.generateKeyPair = function generateKeyPair(type, opts = {}) {\n  type = constants.toKeyType(type)\n\n  switch (type) {\n    case ED25519: {\n      const { publicKey, privateKey } = binding.ed25519GenerateKeypair()\n\n      return {\n        publicKey: new CryptoEd25519PublicKey(publicKey),\n        privateKey: new CryptoEd25519PrivateKey(privateKey)\n      }\n    }\n  }\n}\nconst binding = require('../binding')\nconst constants = require('./constants')\n\nmodule.exports = function pbkdf2(\n  password,\n  salt,\n  iterations,\n  keylen,\n  digest,\n  cb\n) {\n  if (iterations <= 0) {\n    throw new RangeError('iterations is out of range')\n  }\n\n  if (typeof password === 'string') password = Buffer.from(password)\n  if (typeof salt === 'string') salt = Buffer.from(salt)\n\n  const buffer = Buffer.from(\n    binding.pbkdf2(\n      password.buffer,\n      password.byteOffset,\n      password.byteLength,\n      salt.buffer,\n      salt.byteOffset,\n      salt.byteLength,\n      iterations,\n      constants.toHash(digest),\n      keylen\n    )\n  )\n\n  if (cb) queueMicrotask(() => cb(null, buffer))\n  else return buffer\n}\nconst binding = require('../binding')\n\nexports.randomBytes = function randomBytes(size, cb) {\n  const buffer = Buffer.allocUnsafe(size)\n  exports.randomFill(buffer)\n  if (cb) queueMicrotask(() => cb(null, buffer))\n  else return buffer\n}\n\nexports.randomFill = function randomFill(buffer, offset, size, cb) {\n  if (typeof offset === 'function') {\n    cb = offset\n    offset = undefined\n  } else if (typeof size === 'function') {\n    cb = size\n    size = undefined\n  }\n\n  const elementSize = buffer.BYTES_PER_ELEMENT || 1\n\n  if (offset === undefined) offset = 0\n  else offset *= elementSize\n\n  if (size === undefined) size = buffer.byteLength - offset\n  else size *= elementSize\n\n  if (offset < 0 || offset > buffer.byteLength) {\n    throw new RangeError('offset is out of range')\n  }\n\n  if (size < 0 || size > buffer.byteLength) {\n    throw new RangeError('size is out of range')\n  }\n\n  if (offset + size > buffer.byteLength) {\n    throw new RangeError('offset + size is out of range')\n  }\n\n  let arraybuffer\n\n  if (ArrayBuffer.isView(buffer)) {\n    offset += buffer.byteOffset\n    arraybuffer = buffer.buffer\n  } else {\n    arraybuffer = buffer\n  }\n\n  binding.randomFill(arraybuffer, offset, size)\n\n  if (cb) queueMicrotask(() => cb(null, buffer))\n  else return buffer\n}\n\nexports.randomUUID = function randomUUID() {\n  const uuid = exports.randomBytes(16)\n\n  uuid[6] = (uuid[6] >>> 4) | 0b01000000\n  uuid[8] = (uuid[8] >>> 2) | 0b10000000\n\n  return (\n    uuid.subarray(0, 4).toString('hex') +\n    '-' +\n    uuid.subarray(4, 6).toString('hex') +\n    '-' +\n    uuid.subarray(6, 8).toString('hex') +\n    '-' +\n    uuid.subarray(8, 10).toString('hex') +\n    '-' +\n    uuid.subarray(10, 16).toString('hex')\n  )\n}\nconst binding = require('../binding')\nconst constants = require('./constants')\n\nconst {\n  keyType: { ED25519 }\n} = constants\n\nexports.sign = function sign(algorithm, data, key) {\n  if (ArrayBuffer.isView(data)) {\n    data = Buffer.coerce(data)\n  } else {\n    data = Buffer.from(data)\n  }\n\n  switch (key._keyType) {\n    case ED25519:\n      return Buffer.from(\n        binding.ed25519Sign(\n          data.buffer,\n          data.byteOffset,\n          data.byteLength,\n          key._key\n        )\n      )\n  }\n}\n\nexports.verify = function verify(algorithm, data, key, signature) {\n  if (ArrayBuffer.isView(data)) {\n    data = Buffer.coerce(data)\n  } else {\n    data = Buffer.from(data)\n  }\n\n  if (ArrayBuffer.isView(signature)) {\n    signature = Buffer.coerce(signature)\n  } else {\n    signature = Buffer.from(signature)\n  }\n\n  switch (key._keyType) {\n    case ED25519:\n      return binding.ed25519Verify(\n        data.buffer,\n        data.byteOffset,\n        data.byteLength,\n        signature.buffer,\n        signature.byteOffset,\n        key._key\n      )\n  }\n}\nconst crypto = require('../../..')\nconst binding = require('../../../binding')\nconst errors = require('../../errors')\nconst { Ed25519PublicKey, Ed25519PrivateKey } = require('../../key')\nconst CryptoKey = require('../crypto-key')\n\n// https://w3c.github.io/webcrypto/#ed25519\n\n// https://w3c.github.io/webcrypto/#ed25519-operations-sign\nexports.sign = function sign(algorithm, key, data) {\n  if (key.type !== 'private') {\n    throw errors.INVALID_ACCESS('Must pass private key for Ed25519 signing')\n  }\n\n  const signature = crypto.sign(null, data, key._handle)\n\n  const result = new ArrayBuffer(signature.byteLength)\n  Buffer.from(result).set(signature)\n  return result\n}\n\n// https://w3c.github.io/webcrypto/#ed25519-operations-verify\nexports.verify = function verify(algorithm, key, signature, data) {\n  if (key.type !== 'public') {\n    throw errors.INVALID_ACCESS('Must pass public key for Ed25519 verification')\n  }\n\n  return crypto.verify(null, data, key._handle, signature)\n}\n\n// https://w3c.github.io/webcrypto/#ed25519-operations-generate-key\nexports.generateKey = function generateKey(algorithm, extractable, usages) {\n  for (const usage of usages) {\n    if (usage !== 'sign' && usage !== 'verify') {\n      throw new SyntaxError(\n        `Usage '${usage}' cannot be used for the Ed25519 generateKey() operation`\n      )\n    }\n  }\n\n  const keys = crypto.generateKeyPair('ed25519')\n\n  algorithm = { name: 'Ed25519' }\n\n  return {\n    publicKey: new CryptoKey(\n      'public',\n      true,\n      algorithm,\n      ['verify'],\n      keys.publicKey\n    ),\n    privateKey: new CryptoKey(\n      'private',\n      extractable,\n      algorithm,\n      ['sign'],\n      keys.privateKey\n    )\n  }\n}\n\n// https://w3c.github.io/webcrypto/#ed25519-operations-import-key\nexports.importKey = function importKey(\n  format,\n  keyData,\n  algorithm,\n  extractable,\n  usages\n) {\n  switch (format) {\n    case 'spki':\n      for (const usage of usages) {\n        if (usage !== 'verify') {\n          throw new SyntaxError(\n            `Usage '${usage}' cannot be used for the Ed25519 importKey() operation`\n          )\n        }\n      }\n\n      keyData = binding.ed25519FromSPKI(\n        keyData.buffer,\n        keyData.byteOffset,\n        keyData.byteLength\n      )\n\n      return new CryptoKey(\n        'public',\n        extractable,\n        {\n          name: 'Ed25519'\n        },\n        usages,\n        new Ed25519PublicKey(keyData)\n      )\n    case 'pkcs8':\n      for (const usage of usages) {\n        if (usage !== 'sign') {\n          throw new SyntaxError(\n            `Usage '${usage}' cannot be used for the Ed25519 importKey() operation`\n          )\n        }\n      }\n\n      keyData = binding.ed25519FromPKCS8(\n        keyData.buffer,\n        keyData.byteOffset,\n        keyData.byteLength\n      )\n\n      return new CryptoKey(\n        'private',\n        extractable,\n        {\n          name: 'Ed25519'\n        },\n        usages,\n        new Ed25519PrivateKey(keyData)\n      )\n    case 'raw':\n      for (const usage of usages) {\n        if (usage !== 'verify') {\n          throw new SyntaxError(\n            `Usage '${usage}' cannot be used for the Ed25519 importKey() operation`\n          )\n        }\n      }\n\n      if (keyData.byteLength * 8 !== 256) {\n        throw errors.INVALID_DATA('Key must be 256 bits')\n      }\n\n      return new CryptoKey(\n        'public',\n        extractable,\n        {\n          name: 'Ed25519'\n        },\n        usages,\n        new Ed25519PublicKey(keyData.buffer)\n      )\n    case 'jwk':\n      const jwk = keyData\n\n      if ('d' in jwk) {\n        if (usages.some((usage) => usage !== 'sign')) {\n          throw new SyntaxError('JWK must be valid for signing')\n        }\n      } else {\n        if (usages.some((usage) => usage !== 'verify')) {\n          throw new SyntaxError('JWK must be valid for verification')\n        }\n      }\n\n      if (jwk.kty !== 'OKP') {\n        throw errors.INVALID_DATA('JWK key must be an octet key-pair')\n      }\n\n      if (jwk.crv !== 'Ed25519') {\n        throw errors.INVALID_DATA('JWK must use the Ed25519 curve')\n      }\n\n      if ('alg' in jwk && jwk.alg !== 'Ed25519' && jwk.alg !== 'EdDSA') {\n        throw errors.INVALID_DATA('JWK must use the Ed25519 curve')\n      }\n\n      if (usages.length && 'use' in jwk && jwk.use !== 'sig') {\n        throw errors.INVALID_DATA('JWK cannot be used for signatures')\n      }\n\n      if ('ext' in jwk && jwk.ext !== extractable && extractable) {\n        throw errors.INVALID_DATA('JWK is not extractable')\n      }\n\n      if ('d' in jwk) {\n        return new CryptoKey(\n          'private',\n          extractable,\n          {\n            name: 'Ed25519'\n          },\n          usages,\n          new Ed25519PrivateKey(Buffer.from(jwk.d, 'base64url').buffer)\n        )\n      }\n\n      return new CryptoKey(\n        'public',\n        extractable,\n        {\n          name: 'Ed25519'\n        },\n        usages,\n        new Ed25519PublicKey(Buffer.from(jwk.x, 'base64url').buffer)\n      )\n    default:\n      throw errors.NOT_SUPPORTED(\n        `Format '${format}' cannot be used for the Ed25519 importKey() operation`\n      )\n  }\n}\n\n// https://w3c.github.io/webcrypto/#ed25519-operations-export-key\nexports.exportKey = function exportKey(format, key) {\n  const data = key._handle\n\n  switch (format) {\n    case 'spki':\n      if (key.type !== 'public') {\n        throw errors.INVALID_ACCESS(\n          `Key of type '${key.type}' cannot be used for the Ed25519 exportKey() operations`\n        )\n      }\n\n      return binding.ed25519ToSPKI(data._key)\n    case 'pkcs8':\n      if (key.type !== 'private') {\n        throw errors.INVALID_ACCESS(\n          `Key of type '${key.type}' cannot be used for the Ed25519 exportKey() operations`\n        )\n      }\n\n      return binding.ed25519ToPKCS8(data._key)\n    case 'raw': {\n      if (key.type !== 'public') {\n        throw errors.INVALID_ACCESS(\n          `Key of type '${key.type}' cannot be used for the Ed25519 exportKey() operations`\n        )\n      }\n\n      const result = new ArrayBuffer(data._key.byteLength)\n      Buffer.from(result).set(data._key)\n      return result\n    }\n    case 'jwk':\n      return {\n        kty: 'OKP',\n        alg: 'Ed25519',\n        crv: 'Ed25519',\n        x: Buffer.from(data._key).toString('base64url'),\n        key_ops: key.usages,\n        ext: key.extractable\n      }\n    default:\n      throw errors.NOT_SUPPORTED(\n        `Format '${format}' cannot be used for the HMAC exportKey() operation`\n      )\n  }\n}\nconst crypto = require('../../..')\nconst errors = require('../../errors')\nconst CryptoKey = require('../crypto-key')\n\n// https://w3c.github.io/webcrypto/#hmac\n\n// https://w3c.github.io/webcrypto/#hmac-operations-sign\nexports.sign = function sign(algorithm, key, data) {\n  const digest = crypto\n    .createHmac(key.algorithm.hash.name, key._handle)\n    .update(data)\n    .digest()\n\n  const result = new ArrayBuffer(digest.byteLength)\n  Buffer.from(result).set(digest)\n  return result\n}\n\n// https://w3c.github.io/webcrypto/#hmac-operations-verify\nexports.verify = function verify(algorithm, key, signature, data) {\n  const digest = crypto\n    .createHmac(key.algorithm.hash.name, key._handle)\n    .update(data)\n    .digest()\n\n  if (ArrayBuffer.isView(signature)) {\n    signature = Buffer.coerce(signature)\n  } else {\n    signature = Buffer.from(signature)\n  }\n\n  return signature.equals(digest)\n}\n\n// https://w3c.github.io/webcrypto/#hmac-operations-generate-key\nexports.generateKey = function generateKey(algorithm, extractable, usages) {\n  for (const usage of usages) {\n    if (usage !== 'sign' && usage !== 'verify') {\n      throw new SyntaxError(\n        `Usage '${usage}' cannot be used for the HMAC generateKey() operation`\n      )\n    }\n  }\n\n  const { length = exports.getKeyLength(algorithm) } = algorithm.length\n\n  let hash = algorithm.hash\n\n  if (typeof hash === 'string') hash = { name: hash }\n\n  const key = crypto.createHmac(hash.name, crypto.randomBytes(length)).digest()\n\n  return new CryptoKey(\n    'secret',\n    extractable,\n    {\n      name: 'HMAC',\n      length,\n      hash: {\n        name: hash.name.toUpperCase()\n      }\n    },\n    usages,\n    key\n  )\n}\n\n// https://w3c.github.io/webcrypto/#hmac-operations-import-key\nexports.importKey = function importKey(\n  format,\n  keyData,\n  algorithm,\n  extractable,\n  usages\n) {\n  for (const usage of usages) {\n    if (usage !== 'sign' && usage !== 'verify') {\n      throw new SyntaxError(`Invalid usage ${usage}`)\n    }\n  }\n\n  let hash = algorithm.hash\n\n  if (typeof hash === 'string') hash = { name: hash }\n\n  let data\n\n  switch (format) {\n    case 'raw':\n      data = keyData\n      break\n    case 'jwk':\n      const jwk = keyData\n\n      if (jwk.kty !== 'oct') {\n        throw errors.INVALID_DATA('JWK key must be an octet sequence')\n      }\n\n      data = Buffer.from(jwk.k, 'base64url')\n\n      switch (hash.name.toLowerCase()) {\n        case 'sha-1':\n          if (jwk.alg === 'HS1') break\n          else throw errors.INVALID_DATA('Invalid JWK key algorithm')\n        case 'sha-256':\n          if (jwk.alg === 'HS256') break\n          else throw errors.INVALID_DATA('Invalid JWK key algorithm')\n        case 'sha-384':\n          if (jwk.alg === 'HS384') break\n          else throw errors.INVALID_DATA('Invalid JWK key algorithm')\n        case 'sha-512':\n          if (jwk.alg === 'HS512') break\n          else throw errors.INVALID_DATA('Invalid JWK key algorithm')\n      }\n\n      if (usages.length && 'use' in jwk && jwk.use !== 'sign') {\n        throw errors.INVALID_DATA('JWK cannot be used for signing')\n      }\n\n      if ('ext' in jwk && jwk.ext !== extractable && extractable) {\n        throw errors.INVALID_DATA('JWK is not extractable')\n      }\n      break\n    default:\n      throw errors.NOT_SUPPORTED(\n        `Format '${format}' cannot be used for the HMAC importKey() operation`\n      )\n  }\n\n  const length = data.byteLength * 8\n\n  if (length === 0) {\n    throw errors.INVALID_DATA('Key cannot be empty')\n  }\n\n  return new CryptoKey(\n    'secret',\n    extractable,\n    {\n      name: 'HMAC',\n      length,\n      hash: {\n        name: hash.name.toUpperCase()\n      }\n    },\n    usages,\n    data\n  )\n}\n\n// https://w3c.github.io/webcrypto/#hmac-operations-export-key\nexports.exportKey = function exportKey(format, key) {\n  const data = key._handle\n\n  switch (format) {\n    case 'raw': {\n      const result = new ArrayBuffer(data.byteLength)\n      Buffer.from(result).set(data)\n      return result\n    }\n    case 'jwk': {\n      const jwk = {\n        kty: 'oct',\n        k: data.toString('base64url'),\n        alg: null,\n        key_ops: key.usages,\n        ext: key.extractable\n      }\n\n      switch (key.algorithm.hash.name) {\n        case 'SHA-1':\n          jwk.alg = 'HS1'\n          break\n        case 'SHA-256':\n          jwk.alg = 'HS256'\n          break\n        case 'SHA-384':\n          jwk.alg = 'HS384'\n          break\n        case 'SHA-512':\n          jwk.alg = 'HS512'\n          break\n      }\n\n      return jwk\n    }\n    default:\n      throw errors.NOT_SUPPORTED(\n        `Format '${format}' cannot be used for the HMAC exportKey() operation`\n      )\n  }\n}\n\n// https://w3c.github.io/webcrypto/#hmac-operations-get-key-length\nexports.getKeyLength = function getKeyLength(algorithm) {\n  const { length, hash } = algorithm\n\n  if (length === undefined) {\n    if (hash === 'SHA-1' || hash === 'SHA-256') return 512\n    if (hash === 'SHA-512') return 1024\n\n    throw errors.OPERATION_ERROR(`Invalid hash '${hash}'`)\n  }\n\n  if (length === 0) {\n    throw errors.OPERATION_ERROR(`Invalid length ${length}`)\n  }\n\n  return length\n}\nconst crypto = require('../../..')\nconst errors = require('../../errors')\nconst CryptoKey = require('../crypto-key')\n\n// https://w3c.github.io/webcrypto/#pbkdf2\n\n// https://w3c.github.io/webcrypto/#pbkdf2-operations-derive-bits\nexports.deriveBits = function deriveBits(algorithm, key, length) {\n  if (length === undefined || length % 8) {\n    throw errors.OPERATION_ERROR('Length must be multiple of 8')\n  }\n\n  if (algorithm.iterations === 0) {\n    throw errors.OPERATION_ERROR('Iterations must be non-0')\n  }\n\n  if (length === 0) {\n    return new ArrayBuffer(0)\n  }\n\n  let hash = algorithm.hash\n\n  if (typeof hash === 'string') hash = { name: hash }\n\n  const result = crypto.pbkdf2(\n    key._handle,\n    algorithm.salt,\n    algorithm.iterations,\n    length / 8,\n    hash.name\n  )\n\n  return result.buffer\n}\n\n// https://w3c.github.io/webcrypto/#pbkdf2-operations-import-key\nexports.importKey = function importKey(\n  format,\n  keyData,\n  algorithm,\n  extractable,\n  usages\n) {\n  if (format !== 'raw') {\n    throw errors.NOT_SUPPORTED(\n      `Format '${format}' cannot be used for the PBKDF2 importKey() operation`\n    )\n  }\n\n  for (const usage of usages) {\n    if (usage !== 'deriveKey' && usage !== 'deriveBits') {\n      throw new SyntaxError(`Invalid usage ${usage}`)\n    }\n  }\n\n  if (extractable) {\n    throw new SyntaxError('Extractable must be false')\n  }\n\n  return new CryptoKey(\n    'secret',\n    extractable,\n    {\n      name: 'PBKDF2'\n    },\n    usages,\n    keyData\n  )\n}\n// https://w3c.github.io/webcrypto/#cryptokey-interface\nmodule.exports = class CryptoKey {\n  constructor(type, extractable, algorithm, usages, handle = null) {\n    this._type = type\n    this._extractable = extractable\n    this._algorithm = algorithm\n    this._usages = usages\n    this._handle = handle\n  }\n\n  // https://w3c.github.io/webcrypto/#dom-cryptokey-type\n  get type() {\n    return this._type\n  }\n\n  // https://w3c.github.io/webcrypto/#dom-cryptokey-extractable\n  get extractable() {\n    return this._extractable\n  }\n\n  // https://w3c.github.io/webcrypto/#dom-cryptokey-algorithm\n  get algorithm() {\n    return this._algorithm\n  }\n\n  // https://w3c.github.io/webcrypto/#dom-cryptokey-usages\n  get usages() {\n    return this._usages\n  }\n\n  [Symbol.for('bare.inspect')]() {\n    return {\n      __proto__: { constructor: CryptoKey },\n\n      type: this.type,\n      extractable: this.extractable,\n      algorithm: this.algorithm,\n      usages: this.usages\n    }\n  }\n}\n{\n  \"name\": \"bare-crypto\",\n  \"version\": \"1.11.2\",\n  \"description\": \"Cryptographic primitives for JavaScript\",\n  \"exports\": {\n    \"./package\": \"./package.json\",\n    \".\": {\n      \"types\": \"./index.d.ts\",\n      \"default\": \"./index.js\"\n    },\n    \"./web\": {\n      \"types\": \"./web.d.ts\",\n      \"default\": \"./web.js\"\n    },\n    \"./global\": {\n      \"types\": \"./global.d.ts\",\n      \"default\": \"./global.js\"\n    },\n    \"./constants\": \"./lib/constants.js\",\n    \"./errors\": \"./lib/errors.js\"\n  },\n  \"files\": [\n    \"index.js\",\n    \"index.d.ts\",\n    \"web.js\",\n    \"web.d.ts\",\n    \"global.js\",\n    \"global.d.ts\",\n    \"binding.c\",\n    \"binding.js\",\n    \"CMakeLists.txt\",\n    \"lib\",\n    \"prebuilds\"\n  ],\n  \"addon\": true,\n  \"scripts\": {\n    \"test\": \"prettier . --check && bare test.js\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/holepunchto/bare-crypto.git\"\n  },\n  \"author\": \"Holepunch\",\n  \"license\": \"Apache-2.0\",\n  \"bugs\": {\n    \"url\": \"https://github.com/holepunchto/bare-crypto/issues\"\n  },\n  \"homepage\": \"https://github.com/holepunchto/bare-crypto#readme\",\n  \"dependencies\": {\n    \"bare-stream\": \"^2.6.3\"\n  },\n  \"devDependencies\": {\n    \"bare-buffer\": \"^3.0.1\",\n    \"brittle\": \"^3.5.0\",\n    \"cmake-bare\": \"^1.1.6\",\n    \"cmake-fetch\": \"^1.0.0\",\n    \"prettier\": \"^3.4.2\",\n    \"prettier-config-standard\": \"^7.0.0\"\n  },\n  \"peerDependencies\": {\n    \"bare-buffer\": \"*\"\n  },\n  \"peerDependenciesMeta\": {\n    \"bare-buffer\": {\n      \"optional\": true\n    }\n  }\n}\nconst crypto = require('.')\nconst errors = require('./lib/errors')\nconst CryptoKey = require('./lib/web/crypto-key')\nconst hmac = require('./lib/web/algorithm/hmac')\nconst pbkdf2 = require('./lib/web/algorithm/pbkdf2')\nconst ed25519 = require('./lib/web/algorithm/ed25519')\n\nexports.CryptoKey = CryptoKey\n\n// https://w3c.github.io/webcrypto/#Crypto-method-getRandomValues\nexports.getRandomValues = function getRandomValues(array) {\n  return crypto.randomFillSync(array)\n}\n\n// https://w3c.github.io/webcrypto/#dfn-Crypto-method-randomUUID\nexports.randomUUID = crypto.randomUUID\n\n// https://w3c.github.io/webcrypto/#subtlecrypto-interface\nexports.SubtleCrypto = class SubtleCrypto {\n  // https://w3c.github.io/webcrypto/#SubtleCrypto-method-generateKey\n  async generateKey(algorithm, extractable, usages) {\n    if (typeof algorithm === 'string') algorithm = { name: algorithm }\n\n    switch (algorithm.name.toLowerCase()) {\n      case 'hmac':\n        return hmac.generateKey(algorithm, extractable, usages)\n      case 'ed25519':\n        return ed25519.generateKey(algorithm, extractable, usages)\n      default:\n        throw errors.NOT_SUPPORTED(\n          `Algorithm '${algorithm.name}' does not support the generateKey() operation`\n        )\n    }\n  }\n\n  // https://w3c.github.io/webcrypto/#SubtleCrypto-method-importKey\n  async importKey(format, keyData, algorithm, extractable, usages) {\n    if (typeof algorithm === 'string') algorithm = { name: algorithm }\n\n    switch (format) {\n      case 'raw':\n      case 'pkcs8':\n      case 'spki':\n        if (ArrayBuffer.isView(keyData)) {\n          keyData = Buffer.from(keyData)\n        } else {\n          keyData = Buffer.concat([Buffer.from(keyData)])\n        }\n        break\n    }\n\n    switch (algorithm.name.toLowerCase()) {\n      case 'hmac':\n        return hmac.importKey(format, keyData, algorithm, extractable, usages)\n      case 'ed25519':\n        return ed25519.importKey(\n          format,\n          keyData,\n          algorithm,\n          extractable,\n          usages\n        )\n      case 'pbkdf2':\n        return pbkdf2.importKey(format, keyData, algorithm, extractable, usages)\n      default:\n        throw errors.NOT_SUPPORTED(\n          `Algorithm '${algorithm.name}' does not support the importKey() operation`\n        )\n    }\n  }\n\n  // https://w3c.github.io/webcrypto/#SubtleCrypto-method-exportKey\n  async exportKey(format, key) {\n    if (!key.extractable) {\n      throw errors.INVALID_ACCESS('Key is not extractable')\n    }\n\n    switch (key.algorithm.name.toLowerCase()) {\n      case 'hmac':\n        return hmac.exportKey(format, key)\n      case 'ed25519':\n        return ed25519.exportKey(format, key)\n      default:\n        throw errors.NOT_SUPPORTED(\n          `Algorithm '${key.algorithm.name}' does not support the exportKey() operation`\n        )\n    }\n  }\n\n  // https://w3c.github.io/webcrypto/#SubtleCrypto-method-sign\n  async sign(algorithm, key, data) {\n    if (typeof algorithm === 'string') algorithm = { name: algorithm }\n\n    if (algorithm.name.toLowerCase() !== key.algorithm.name.toLowerCase()) {\n      throw errors.INVALID_ACCESS(\n        `Algorithm '${algorithm.name}' does not match key'`\n      )\n    }\n\n    if (!key.usages.includes('sign')) {\n      throw errors.INVALID_ACCESS('Key cannot be used for signing')\n    }\n\n    switch (algorithm.name.toLowerCase()) {\n      case 'hmac':\n        return hmac.sign(algorithm, key, data)\n      case 'ed25519':\n        return ed25519.sign(algorithm, key, data)\n      default:\n        throw errors.NOT_SUPPORTED(\n          `Algorithm '${algorithm.name}' does not support the sign() operation`\n        )\n    }\n  }\n\n  // https://w3c.github.io/webcrypto/#SubtleCrypto-method-verify\n  async verify(algorithm, key, signature, data) {\n    if (typeof algorithm === 'string') algorithm = { name: algorithm }\n\n    if (algorithm.name.toLowerCase() !== key.algorithm.name.toLowerCase()) {\n      throw errors.INVALID_ACCESS(\n        `Algorithm '${algorithm.name}' does not match key'`\n      )\n    }\n\n    if (!key.usages.includes('verify')) {\n      throw errors.INVALID_ACCESS('Key cannot be used for verification')\n    }\n\n    switch (algorithm.name.toLowerCase()) {\n      case 'hmac':\n        return hmac.verify(algorithm, key, signature, data)\n      case 'ed25519':\n        return ed25519.verify(algorithm, key, signature, data)\n      default:\n        throw errors.NOT_SUPPORTED(\n          `Algorithm '${algorithm.name}' does not support the verify() operation`\n        )\n    }\n  }\n\n  // https://w3c.github.io/webcrypto/#SubtleCrypto-method-deriveBits\n  async deriveBits(algorithm, key, length) {\n    if (typeof algorithm === 'string') algorithm = { name: algorithm }\n\n    if (algorithm.name.toLowerCase() !== key.algorithm.name.toLowerCase()) {\n      throw errors.INVALID_ACCESS(\n        `Algorithm '${algorithm.name}' does not match key'`\n      )\n    }\n\n    if (!key.usages.includes('deriveBits')) {\n      throw errors.INVALID_ACCESS('Key cannot be used to derive bits')\n    }\n\n    switch (algorithm.name.toLowerCase()) {\n      case 'pbkdf2':\n        return pbkdf2.deriveBits(algorithm, key, length)\n      default:\n        throw errors.NOT_SUPPORTED(\n          `Algorithm '${algorithm.name}' does not support the deriveBits() operation`\n        )\n    }\n  }\n\n  // https://w3c.github.io/webcrypto/#SubtleCrypto-method-deriveKey\n  async deriveKey(algorithm, baseKey, derivedKeyType, extractable, usages) {\n    if (typeof algorithm === 'string') algorithm = { name: algorithm }\n\n    if (typeof derivedKeyType === 'string') {\n      derivedKeyType = { name: derivedKeyType }\n    }\n\n    if (algorithm.name.toLowerCase() !== baseKey.algorithm.name.toLowerCase()) {\n      throw errors.INVALID_ACCESS(\n        `Algorithm '${algorithm.name}' does not match key'`\n      )\n    }\n\n    if (!baseKey.usages.includes('deriveKey')) {\n      throw errors.INVALID_ACCESS('Key cannot be used to derive key')\n    }\n\n    let length\n\n    switch (derivedKeyType.name.toLowerCase()) {\n      case 'hmac':\n        length = hmac.getKeyLength(derivedKeyType)\n        break\n      default:\n        throw errors.NOT_SUPPORTED(\n          `Algorithm '${derivedKeyType.name}' does not support the getKeyLength() operation`\n        )\n    }\n\n    let secret\n\n    switch (algorithm.name.toLowerCase()) {\n      case 'pbkdf2':\n        secret = pbkdf2.deriveBits(algorithm, baseKey, length)\n        break\n      default:\n        throw errors.NOT_SUPPORTED(\n          `Algorithm '${algorithm.name}' does not support the deriveBits() operation`\n        )\n    }\n\n    return this.importKey('raw', secret, derivedKeyType, extractable, usages)\n  }\n}\n\nexports.subtle = new exports.SubtleCrypto()\nconst errors = require('./lib/errors')\n\nclass EventListener {\n  constructor() {\n    this.list = []\n    this.count = 0\n  }\n\n  append(ctx, name, fn, once) {\n    this.count++\n    ctx.emit('newListener', name, fn) // Emit BEFORE adding\n    this.list.push([fn, once])\n  }\n\n  prepend(ctx, name, fn, once) {\n    this.count++\n    ctx.emit('newListener', name, fn) // Emit BEFORE adding\n    this.list.unshift([fn, once])\n  }\n\n  remove(ctx, name, fn) {\n    for (let i = 0, n = this.list.length; i < n; i++) {\n      const l = this.list[i]\n\n      if (l[0] === fn) {\n        this.list.splice(i, 1)\n\n        if (this.count === 1) delete ctx._events[name]\n\n        ctx.emit('removeListener', name, fn) // Emit AFTER removing\n\n        this.count--\n        return\n      }\n    }\n  }\n\n  removeAll(ctx, name) {\n    const list = [...this.list]\n    this.list = []\n\n    if (this.count === list.length) delete ctx._events[name]\n\n    for (let i = list.length - 1; i >= 0; i--) {\n      ctx.emit('removeListener', name, list[i][0]) // Emit AFTER removing\n    }\n\n    this.count -= list.length\n  }\n\n  emit(ctx, name, ...args) {\n    const list = [...this.list]\n\n    for (let i = 0, n = list.length; i < n; i++) {\n      const l = list[i]\n\n      if (l[1] === true) this.remove(ctx, name, l[0])\n\n      Reflect.apply(l[0], ctx, args)\n    }\n\n    return list.length > 0\n  }\n}\n\nfunction appendListener(ctx, name, fn, once) {\n  const e = ctx._events[name] || (ctx._events[name] = new EventListener())\n  e.append(ctx, name, fn, once)\n  return ctx\n}\n\nfunction prependListener(ctx, name, fn, once) {\n  const e = ctx._events[name] || (ctx._events[name] = new EventListener())\n  e.prepend(ctx, name, fn, once)\n  return ctx\n}\n\nfunction removeListener(ctx, name, fn) {\n  const e = ctx._events[name]\n  if (e !== undefined) e.remove(ctx, name, fn)\n  return ctx\n}\n\nfunction throwUnhandledError(...args) {\n  let err\n\n  if (args.length > 0) err = args[0]\n\n  if (err instanceof Error === false) err = errors.UNHANDLED_ERROR(err)\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(err, exports.prototype.emit)\n  }\n\n  queueMicrotask(() => {\n    throw err\n  })\n}\n\nmodule.exports = exports = class EventEmitter {\n  constructor() {\n    this._events = Object.create(null)\n  }\n\n  addListener(name, fn) {\n    return appendListener(this, name, fn, false)\n  }\n\n  addOnceListener(name, fn) {\n    return appendListener(this, name, fn, true)\n  }\n\n  prependListener(name, fn) {\n    return prependListener(this, name, fn, false)\n  }\n\n  prependOnceListener(name, fn) {\n    return prependListener(this, name, fn, true)\n  }\n\n  removeListener(name, fn) {\n    return removeListener(this, name, fn)\n  }\n\n  on(name, fn) {\n    return appendListener(this, name, fn, false)\n  }\n\n  once(name, fn) {\n    return appendListener(this, name, fn, true)\n  }\n\n  off(name, fn) {\n    return removeListener(this, name, fn)\n  }\n\n  emit(name, ...args) {\n    if (name === 'error' && this._events.error === undefined) {\n      throwUnhandledError(...args)\n    }\n\n    const e = this._events[name]\n    return e === undefined ? false : e.emit(this, name, ...args)\n  }\n\n  listeners(name) {\n    const e = this._events[name]\n    return e === undefined ? [] : [...e.list]\n  }\n\n  listenerCount(name) {\n    const e = this._events[name]\n    return e === undefined ? 0 : e.list.length\n  }\n\n  getMaxListeners() {\n    return EventEmitter.defaultMaxListeners\n  }\n\n  setMaxListeners(n) {}\n\n  removeAllListeners(name) {\n    if (arguments.length === 0) {\n      for (const key of Reflect.ownKeys(this._events)) {\n        if (key === 'removeListener') continue\n        this.removeAllListeners(key)\n      }\n      this.removeAllListeners('removeListener')\n    } else {\n      const e = this._events[name]\n      if (e !== undefined) e.removeAll(this, name)\n    }\n    return this\n  }\n}\n\nexports.EventEmitter = exports\n\nexports.errors = errors\n\nexports.defaultMaxListeners = 10\n\nexports.on = function on(emitter, name, opts = {}) {\n  const { signal } = opts\n\n  if (signal && signal.aborted) {\n    throw errors.OPERATION_ABORTED(signal.reason)\n  }\n\n  let error = null\n  let done = false\n\n  const events = []\n  const promises = []\n\n  emitter.on(name, onevent)\n\n  if (name !== 'error') emitter.on('error', onerror)\n\n  if (signal) signal.addEventListener('abort', onabort)\n\n  return {\n    next() {\n      if (events.length) {\n        return Promise.resolve({ value: events.shift(), done: false })\n      }\n\n      if (error) {\n        const err = error\n\n        error = null\n\n        return Promise.reject(err)\n      }\n\n      if (done) return onclose()\n\n      return new Promise((resolve, reject) =>\n        promises.push({ resolve, reject })\n      )\n    },\n\n    return() {\n      return onclose()\n    },\n\n    throw(err) {\n      return onerror(err)\n    },\n\n    [Symbol.asyncIterator]() {\n      return this\n    }\n  }\n\n  function onevent(...args) {\n    if (promises.length) {\n      promises.shift().resolve({ value: args, done: false })\n    } else {\n      events.push(args)\n    }\n  }\n\n  function onerror(err) {\n    if (promises.length) {\n      promises.shift().reject(err)\n    } else {\n      error = err\n    }\n\n    return Promise.resolve({ done: true })\n  }\n\n  function onabort() {\n    onerror(errors.OPERATION_ABORTED(signal.reason))\n  }\n\n  function onclose() {\n    emitter.off(name, onevent)\n\n    if (name !== 'error') emitter.off('error', onerror)\n\n    if (signal) signal.removeEventListener('abort', onabort)\n\n    done = true\n\n    if (promises.length) promises.shift().resolve({ done: true })\n\n    return Promise.resolve({ done: true })\n  }\n}\n\nexports.once = function once(emitter, name, opts = {}) {\n  const { signal } = opts\n\n  if (signal && signal.aborted) {\n    throw errors.OPERATION_ABORTED(signal.reason)\n  }\n\n  return new Promise((resolve, reject) => {\n    if (name !== 'error') emitter.on('error', onerror)\n\n    if (signal) signal.addEventListener('abort', onabort)\n\n    emitter.once(name, (...args) => {\n      if (name !== 'error') emitter.off('error', onerror)\n\n      if (signal) signal.removeEventListener('abort', onabort)\n\n      resolve(args)\n    })\n\n    function onerror(err) {\n      emitter.off('error', onerror)\n\n      reject(err)\n    }\n\n    function onabort() {\n      signal.removeEventListener('abort', onabort)\n\n      onerror(errors.OPERATION_ABORTED(signal.reason))\n    }\n  })\n}\n\nexports.forward = function forward(from, to, names, opts = {}) {\n  if (typeof names === 'string') names = [names]\n\n  const { emit = to.emit.bind(to) } = opts\n\n  const listeners = names.map(\n    (name) =>\n      function onevent(...args) {\n        emit(name, ...args)\n      }\n  )\n\n  to.on('newListener', (name) => {\n    const i = names.indexOf(name)\n\n    if (i !== -1 && to.listenerCount(name) === 0) {\n      from.on(name, listeners[i])\n    }\n  }).on('removeListener', (name) => {\n    const i = names.indexOf(name)\n\n    if (i !== -1 && to.listenerCount(name) === 0) {\n      from.off(name, listeners[i])\n    }\n  })\n}\n\nexports.listenerCount = function listenerCount(emitter, name) {\n  return emitter.listenerCount(name)\n}\n\nexports.getMaxListeners = function getMaxListeners(emitter) {\n  if (typeof emitter.getMaxListeners === 'function') {\n    return emitter.getMaxListeners()\n  }\n\n  return exports.defaultMaxListeners\n}\n\nexports.setMaxListeners = function setMaxListeners(n, ...emitters) {\n  if (emitters.length === 0) exports.defaultMaxListeners = n\n  else {\n    for (const emitter of emitters) {\n      if (typeof emitter.setMaxListeners === 'function') {\n        emitter.setMaxListeners(n)\n      }\n    }\n  }\n}\nmodule.exports = class EventEmitterError extends Error {\n  constructor(msg, code, fn = EventEmitterError, opts) {\n    super(`${code}: ${msg}`, opts)\n    this.code = code\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, fn)\n    }\n  }\n\n  get name() {\n    return 'EventEmitterError'\n  }\n\n  static OPERATION_ABORTED(cause, msg = 'Operation aborted') {\n    return new EventEmitterError(\n      msg,\n      'OPERATION_ABORTED',\n      EventEmitterError.OPERATION_ABORTED,\n      { cause }\n    )\n  }\n\n  static UNHANDLED_ERROR(cause, msg = 'Unhandled error') {\n    return new EventEmitterError(\n      msg,\n      'UNHANDLED_ERROR',\n      EventEmitterError.UNHANDLED_ERROR,\n      { cause }\n    )\n  }\n}\n{\n  \"name\": \"bare-events\",\n  \"version\": \"2.7.0\",\n  \"description\": \"Event emitters for JavaScript\",\n  \"exports\": {\n    \"./package\": \"./package.json\",\n    \".\": {\n      \"types\": \"./index.d.ts\",\n      \"default\": \"./index.js\"\n    },\n    \"./global\": {\n      \"types\": \"./global.d.ts\",\n      \"default\": \"./global.js\"\n    },\n    \"./web\": {\n      \"types\": \"./web.d.ts\",\n      \"default\": \"./web.js\"\n    },\n    \"./errors\": \"./lib/errors.js\"\n  },\n  \"files\": [\n    \"index.js\",\n    \"index.d.ts\",\n    \"global.js\",\n    \"global.d.ts\",\n    \"web.js\",\n    \"web.d.ts\",\n    \"lib\"\n  ],\n  \"scripts\": {\n    \"test\": \"npm run lint && npm run test:bare && npm run test:node\",\n    \"test:bare\": \"bare test.js\",\n    \"test:node\": \"node test.js\",\n    \"lint\": \"prettier . --check\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/holepunchto/bare-events.git\"\n  },\n  \"author\": \"Holepunch\",\n  \"license\": \"Apache-2.0\",\n  \"bugs\": {\n    \"url\": \"https://github.com/holepunchto/bare-events/issues\"\n  },\n  \"homepage\": \"https://github.com/holepunchto/bare-events#readme\",\n  \"devDependencies\": {\n    \"brittle\": \"^3.3.2\",\n    \"prettier\": \"^3.4.2\",\n    \"prettier-config-standard\": \"^7.0.0\"\n  }\n}\nconst { satisfies } = require('bare-semver')\nconst errors = require('./lib/errors')\n\nmodule.exports = exports = function resolve(\n  specifier,\n  parentURL,\n  opts,\n  readPackage\n) {\n  if (typeof opts === 'function') {\n    readPackage = opts\n    opts = {}\n  } else if (typeof readPackage !== 'function') {\n    readPackage = defaultReadPackage\n  }\n\n  return {\n    *[Symbol.iterator]() {\n      const generator = exports.module(specifier, parentURL, opts)\n\n      let next = generator.next()\n\n      while (next.done !== true) {\n        const value = next.value\n\n        if (value.package) {\n          next = generator.next(readPackage(value.package))\n        } else {\n          next = generator.next(yield value.resolution)\n        }\n      }\n\n      return next.value\n    },\n\n    async *[Symbol.asyncIterator]() {\n      const generator = exports.module(specifier, parentURL, opts)\n\n      let next = generator.next()\n\n      while (next.done !== true) {\n        const value = next.value\n\n        if (value.package) {\n          next = generator.next(await readPackage(value.package))\n        } else {\n          next = generator.next(yield value.resolution)\n        }\n      }\n\n      return next.value\n    }\n  }\n}\n\nfunction defaultReadPackage() {\n  return null\n}\n\n// No resolution candidate was yielded\nconst UNRESOLVED = 0x0\n// At least 1 resolution candidate was yielded\nconst YIELDED = 0x1\n// At least 1 resolution candidate was yielded and resolved\nconst RESOLVED = YIELDED | 0x2\n\nexports.constants = {\n  UNRESOLVED,\n  YIELDED,\n  RESOLVED\n}\n\nexports.module = function* (specifier, parentURL, opts = {}) {\n  const { resolutions = null, imports = null } = opts\n\n  if (exports.startsWithWindowsDriveLetter(specifier)) {\n    specifier = '/' + specifier\n  }\n\n  let status\n\n  if (resolutions) {\n    status = yield* exports.preresolved(specifier, resolutions, parentURL, opts)\n\n    if (status) return status\n  }\n\n  status = yield* exports.url(specifier, parentURL, opts)\n\n  if (status) return status\n\n  status = yield* exports.packageImports(specifier, parentURL, opts)\n\n  if (status) return status\n\n  if (\n    specifier === '.' ||\n    specifier === '..' ||\n    specifier[0] === '/' ||\n    specifier[0] === '\\\\' ||\n    specifier.startsWith('./') ||\n    specifier.startsWith('.\\\\') ||\n    specifier.startsWith('../') ||\n    specifier.startsWith('..\\\\')\n  ) {\n    if (imports) {\n      status = yield* exports.packageImportsExports(\n        specifier,\n        imports,\n        parentURL,\n        true,\n        opts\n      )\n\n      if (status) return status\n    }\n\n    status = yield* exports.deferred(specifier, opts)\n\n    if (status) return status\n\n    status = yield* exports.file(specifier, parentURL, false, opts)\n\n    if (status === RESOLVED) return status\n\n    return yield* exports.directory(specifier, parentURL, opts)\n  }\n\n  return yield* exports.package(specifier, parentURL, opts)\n}\n\nexports.url = function* (url, parentURL, opts = {}) {\n  const { imports = null, deferredProtocol = 'deferred:' } = opts\n\n  let resolution\n  try {\n    resolution = new URL(url)\n  } catch {\n    return UNRESOLVED\n  }\n\n  if (imports) {\n    const status = yield* exports.packageImportsExports(\n      resolution.href,\n      imports,\n      parentURL,\n      true,\n      opts\n    )\n\n    if (status) return status\n  }\n\n  if (resolution.protocol === deferredProtocol) {\n    const specifier = resolution.pathname\n\n    return yield* exports.module(specifier, parentURL, opts)\n  }\n\n  if (resolution.protocol === 'node:') {\n    const specifier = resolution.pathname\n\n    if (\n      specifier === '.' ||\n      specifier === '..' ||\n      specifier[0] === '/' ||\n      specifier.startsWith('./') ||\n      specifier.startsWith('../')\n    ) {\n      throw errors.INVALID_MODULE_SPECIFIER(\n        `Module specifier '${url}' is not a valid package name`\n      )\n    }\n\n    return yield* exports.package(specifier, parentURL, opts)\n  }\n\n  const resolved = yield { resolution }\n\n  return resolved ? RESOLVED : YIELDED\n}\n\nexports.preresolved = function* (specifier, resolutions, parentURL, opts = {}) {\n  const imports = resolutions[parentURL.href]\n\n  if (typeof imports === 'object' && imports !== null) {\n    return yield* exports.packageImportsExports(\n      specifier,\n      imports,\n      parentURL,\n      true,\n      opts\n    )\n  }\n\n  return UNRESOLVED\n}\n\nexports.deferred = function* (specifier, opts = {}) {\n  const { deferredProtocol = 'deferred:', defer = [] } = opts\n\n  if (defer.includes(specifier)) {\n    const resolved = yield { resolution: new URL(deferredProtocol + specifier) }\n\n    return resolved ? RESOLVED : YIELDED\n  }\n\n  return UNRESOLVED\n}\n\nexports.package = function* (packageSpecifier, parentURL, opts = {}) {\n  const { builtins = [] } = opts\n\n  if (packageSpecifier === '') {\n    throw errors.INVALID_MODULE_SPECIFIER(\n      `Module specifier '${packageSpecifier}' is not a valid package name`\n    )\n  }\n\n  let packageName\n\n  if (packageSpecifier[0] !== '@') {\n    packageName = packageSpecifier.split('/', 1).join()\n  } else {\n    if (!packageSpecifier.includes('/')) {\n      throw errors.INVALID_MODULE_SPECIFIER(\n        `Module specifier '${packageSpecifier}' is not a valid package name`\n      )\n    }\n\n    packageName = packageSpecifier.split('/', 2).join('/')\n  }\n\n  if (\n    packageName[0] === '.' ||\n    packageName.includes('\\\\') ||\n    packageName.includes('%')\n  ) {\n    throw errors.INVALID_MODULE_SPECIFIER(\n      `Module specifier '${packageSpecifier}' is not a valid package name`\n    )\n  }\n\n  let status\n\n  status = yield* exports.builtinTarget(packageSpecifier, null, builtins, opts)\n\n  if (status) return status\n\n  status = yield* exports.deferred(packageSpecifier, opts)\n\n  if (status) return status\n\n  let packageSubpath = '.' + packageSpecifier.substring(packageName.length)\n\n  status = yield* exports.packageSelf(\n    packageName,\n    packageSubpath,\n    parentURL,\n    opts\n  )\n\n  if (status) return status\n\n  parentURL = new URL(parentURL.href)\n\n  do {\n    const packageURL = new URL('node_modules/' + packageName + '/', parentURL)\n\n    parentURL.pathname = parentURL.pathname.substring(\n      0,\n      parentURL.pathname.lastIndexOf('/')\n    )\n\n    const info = yield { package: new URL('package.json', packageURL) }\n\n    if (info) {\n      if (info.engines) exports.validateEngines(packageURL, info.engines, opts)\n\n      if (info.exports) {\n        return yield* exports.packageExports(\n          packageURL,\n          packageSubpath,\n          info.exports,\n          opts\n        )\n      }\n\n      if (packageSubpath === '.') {\n        if (typeof info.main === 'string' && info.main !== '') {\n          packageSubpath = info.main\n        } else {\n          return yield* exports.file('index', packageURL, true, opts)\n        }\n      }\n\n      status = yield* exports.file(packageSubpath, packageURL, false, opts)\n\n      if (status === RESOLVED) return status\n\n      return yield* exports.directory(packageSubpath, packageURL, opts)\n    }\n  } while (parentURL.pathname !== '' && parentURL.pathname !== '/')\n\n  return UNRESOLVED\n}\n\nexports.packageSelf = function* (\n  packageName,\n  packageSubpath,\n  parentURL,\n  opts = {}\n) {\n  for (const packageURL of exports.lookupPackageScope(parentURL, opts)) {\n    const info = yield { package: packageURL }\n\n    if (info) {\n      if (info.name !== packageName) return false\n\n      if (info.exports) {\n        return yield* exports.packageExports(\n          packageURL,\n          packageSubpath,\n          info.exports,\n          opts\n        )\n      }\n\n      if (packageSubpath === '.') {\n        if (typeof info.main === 'string' && info.main !== '') {\n          packageSubpath = info.main\n        } else {\n          return yield* exports.file('index', packageURL, true, opts)\n        }\n      }\n\n      const status = yield* exports.file(\n        packageSubpath,\n        packageURL,\n        false,\n        opts\n      )\n\n      if (status === RESOLVED) return status\n\n      return yield* exports.directory(packageSubpath, packageURL, opts)\n    }\n  }\n\n  return UNRESOLVED\n}\n\nexports.packageExports = function* (\n  packageURL,\n  subpath,\n  packageExports,\n  opts = {}\n) {\n  if (subpath === '.') {\n    let mainExport\n\n    if (typeof packageExports === 'string' || Array.isArray(packageExports)) {\n      mainExport = packageExports\n    } else if (typeof packageExports === 'object' && packageExports !== null) {\n      const keys = Object.keys(packageExports)\n\n      if (keys.some((key) => key.startsWith('.'))) {\n        if ('.' in packageExports) mainExport = packageExports['.']\n      } else {\n        mainExport = packageExports\n      }\n    }\n\n    if (mainExport) {\n      const status = yield* exports.packageTarget(\n        packageURL,\n        mainExport,\n        null,\n        false,\n        opts\n      )\n\n      if (status) return status\n    }\n  } else if (typeof packageExports === 'object' && packageExports !== null) {\n    const keys = Object.keys(packageExports)\n\n    if (keys.every((key) => key.startsWith('.'))) {\n      const status = yield* exports.packageImportsExports(\n        subpath,\n        packageExports,\n        packageURL,\n        false,\n        opts\n      )\n\n      if (status) return status\n    }\n  }\n\n  packageURL = new URL('package.json', packageURL)\n\n  throw errors.PACKAGE_PATH_NOT_EXPORTED(\n    `Package subpath '${subpath}' is not defined by \"exports\" in '${packageURL}'`\n  )\n}\n\nexports.packageImports = function* (specifier, parentURL, opts = {}) {\n  const { imports = null } = opts\n\n  if (specifier === '#' || specifier.startsWith('#/')) {\n    throw errors.INVALID_MODULE_SPECIFIER(\n      `Module specifier '${specifier}' is not a valid internal imports specifier`\n    )\n  }\n\n  for (const packageURL of exports.lookupPackageScope(parentURL, opts)) {\n    const info = yield { package: packageURL }\n\n    if (info) {\n      if (info.imports) {\n        const status = yield* exports.packageImportsExports(\n          specifier,\n          info.imports,\n          packageURL,\n          true,\n          opts\n        )\n\n        if (status) return status\n      }\n\n      if (specifier.startsWith('#')) {\n        throw errors.PACKAGE_IMPORT_NOT_DEFINED(\n          `Package import specifier '${specifier}' is not defined by \"imports\" in '${packageURL}'`\n        )\n      }\n\n      break\n    }\n  }\n\n  if (imports) {\n    const status = yield* exports.packageImportsExports(\n      specifier,\n      imports,\n      parentURL,\n      true,\n      opts\n    )\n\n    if (status) return status\n  }\n\n  return UNRESOLVED\n}\n\nexports.packageImportsExports = function* (\n  matchKey,\n  matchObject,\n  packageURL,\n  isImports,\n  opts = {}\n) {\n  if (matchKey in matchObject && !matchKey.includes('*')) {\n    const target = matchObject[matchKey]\n\n    return yield* exports.packageTarget(\n      packageURL,\n      target,\n      null,\n      isImports,\n      opts\n    )\n  }\n\n  const expansionKeys = Object.keys(matchObject)\n    .filter((key) => key.includes('*'))\n    .sort(exports.patternKeyCompare)\n\n  for (const expansionKey of expansionKeys) {\n    const patternIndex = expansionKey.indexOf('*')\n    const patternBase = expansionKey.substring(0, patternIndex)\n\n    if (matchKey.startsWith(patternBase) && matchKey !== patternBase) {\n      const patternTrailer = expansionKey.substring(patternIndex + 1)\n\n      if (\n        patternTrailer === '' ||\n        (matchKey.endsWith(patternTrailer) &&\n          matchKey.length >= expansionKey.length)\n      ) {\n        const target = matchObject[expansionKey]\n\n        const patternMatch = matchKey.substring(\n          patternBase.length,\n          matchKey.length - patternTrailer.length\n        )\n\n        return yield* exports.packageTarget(\n          packageURL,\n          target,\n          patternMatch,\n          isImports,\n          opts\n        )\n      }\n    }\n  }\n\n  return UNRESOLVED\n}\n\nexports.validateEngines = function validateEngines(\n  packageURL,\n  packageEngines,\n  opts = {}\n) {\n  const { engines = {} } = opts\n\n  for (const [engine, range] of Object.entries(packageEngines)) {\n    if (engine in engines) {\n      const version = engines[engine]\n\n      if (!satisfies(version, range)) {\n        packageURL = new URL('package.json', packageURL)\n\n        throw errors.UNSUPPORTED_ENGINE(\n          `Package not compatible with engine '${engine}' ${version}, requires range '${range}' defined by \"engines\" in '${packageURL}'`\n        )\n      }\n    }\n  }\n}\n\nexports.patternKeyCompare = function patternKeyCompare(keyA, keyB) {\n  const patternIndexA = keyA.indexOf('*')\n  const patternIndexB = keyB.indexOf('*')\n  const baseLengthA = patternIndexA === -1 ? keyA.length : patternIndexA + 1\n  const baseLengthB = patternIndexB === -1 ? keyB.length : patternIndexB + 1\n  if (baseLengthA > baseLengthB) return -1\n  if (baseLengthB > baseLengthA) return 1\n  if (patternIndexA === -1) return 1\n  if (patternIndexB === -1) return -1\n  if (keyA.length > keyB.length) return -1\n  if (keyB.length > keyA.length) return 1\n  return 0\n}\n\nexports.packageTarget = function* (\n  packageURL,\n  target,\n  patternMatch,\n  isImports,\n  opts = {}\n) {\n  const { conditions = [], matchedConditions = [] } = opts\n\n  if (typeof target === 'string') {\n    if (!target.startsWith('./') && !isImports) {\n      packageURL = new URL('package.json', packageURL)\n\n      throw errors.INVALID_PACKAGE_TARGET(\n        `Invalid target '${target}' defined by \"exports\" in '${packageURL}'`\n      )\n    }\n\n    if (patternMatch !== null) {\n      target = target.replaceAll('*', patternMatch)\n    }\n\n    const status = yield* exports.url(target, packageURL, opts)\n\n    if (status) return status\n\n    if (\n      target === '.' ||\n      target === '..' ||\n      target[0] === '/' ||\n      target.startsWith('./') ||\n      target.startsWith('../')\n    ) {\n      const resolved = yield { resolution: new URL(target, packageURL) }\n\n      return resolved ? RESOLVED : YIELDED\n    }\n\n    return yield* exports.package(target, packageURL, opts)\n  }\n\n  if (Array.isArray(target)) {\n    for (const targetValue of target) {\n      const status = yield* exports.packageTarget(\n        packageURL,\n        targetValue,\n        patternMatch,\n        isImports,\n        opts\n      )\n\n      if (status) return status\n    }\n  } else if (typeof target === 'object' && target !== null) {\n    let status = UNRESOLVED\n\n    for (const [condition, targetValue, subset] of exports.conditionMatches(\n      target,\n      conditions,\n      opts\n    )) {\n      matchedConditions.push(condition)\n\n      status |= yield* exports.packageTarget(\n        packageURL,\n        targetValue,\n        patternMatch,\n        isImports,\n        { ...opts, conditions: subset }\n      )\n\n      matchedConditions.pop()\n    }\n\n    if (status) return status\n  }\n\n  return UNRESOLVED\n}\n\nexports.builtinTarget = function* (\n  packageSpecifier,\n  packageVersion,\n  target,\n  opts = {}\n) {\n  const {\n    builtinProtocol = 'builtin:',\n    conditions = [],\n    matchedConditions = []\n  } = opts\n\n  if (typeof target === 'string') {\n    const targetParts = target.split('@')\n\n    let targetName\n    let targetVersion\n\n    if (target[0] !== '@') {\n      targetName = targetParts[0]\n      targetVersion = targetParts[1] || null\n    } else {\n      targetName = targetParts.slice(0, 2).join('@')\n      targetVersion = targetParts[2] || null\n    }\n\n    if (packageSpecifier === targetName) {\n      if (packageVersion === null && targetVersion === null) {\n        const resolved = yield {\n          resolution: new URL(builtinProtocol + packageSpecifier)\n        }\n\n        return resolved ? RESOLVED : YIELDED\n      }\n\n      let version = null\n\n      if (packageVersion === null) {\n        version = targetVersion\n      } else if (targetVersion === null || packageVersion === targetVersion) {\n        version = packageVersion\n      }\n\n      if (version !== null) {\n        const resolved = yield {\n          resolution: new URL(\n            builtinProtocol + packageSpecifier + '@' + version\n          )\n        }\n\n        return resolved ? RESOLVED : YIELDED\n      }\n    }\n  } else if (Array.isArray(target)) {\n    for (const targetValue of target) {\n      const status = yield* exports.builtinTarget(\n        packageSpecifier,\n        packageVersion,\n        targetValue,\n        opts\n      )\n\n      if (status) return status\n    }\n  } else if (typeof target === 'object' && target !== null) {\n    let status = UNRESOLVED\n\n    for (const [condition, targetValue, subset] of exports.conditionMatches(\n      target,\n      conditions,\n      opts\n    )) {\n      matchedConditions.push(condition)\n\n      status |= yield* exports.builtinTarget(\n        packageSpecifier,\n        packageVersion,\n        targetValue,\n        { ...opts, conditions: subset }\n      )\n\n      matchedConditions.pop()\n    }\n\n    if (status) return status\n  }\n\n  return UNRESOLVED\n}\n\nexports.conditionMatches = function* conditionMatches(\n  target,\n  conditions,\n  opts = {}\n) {\n  if (conditions.every((condition) => typeof condition === 'string')) {\n    const keys = Object.keys(target)\n\n    for (const condition of keys) {\n      if (condition === 'default' || conditions.includes(condition)) {\n        yield [condition, target[condition], conditions]\n\n        return true\n      }\n    }\n\n    return false\n  }\n\n  let yielded = false\n\n  for (const subset of conditions) {\n    if (yield* conditionMatches(target, subset, opts)) {\n      yielded = true\n    }\n  }\n\n  return yielded\n}\n\nexports.lookupPackageScope = function* lookupPackageScope(url, opts = {}) {\n  const { resolutions = null } = opts\n\n  if (resolutions) {\n    for (const { resolution } of exports.preresolved(\n      '#package',\n      resolutions,\n      url,\n      opts\n    )) {\n      if (resolution) return yield resolution\n    }\n\n    // Internal preresolution path, do not depend on this! It will be removed without\n    // warning.\n    for (const { resolution } of exports.preresolved(\n      'bare:package',\n      resolutions,\n      url,\n      opts\n    )) {\n      if (resolution) return yield resolution\n    }\n  }\n\n  const scopeURL = new URL(url.href)\n\n  do {\n    if (scopeURL.pathname.endsWith('/node_modules')) break\n\n    yield new URL('package.json', scopeURL)\n\n    scopeURL.pathname = scopeURL.pathname.substring(\n      0,\n      scopeURL.pathname.lastIndexOf('/')\n    )\n\n    if (\n      scopeURL.pathname.length === 3 &&\n      exports.isWindowsDriveLetter(scopeURL.pathname.substring(1))\n    ) {\n      break\n    }\n  } while (scopeURL.pathname !== '' && scopeURL.pathname !== '/')\n}\n\nexports.file = function* (filename, parentURL, isIndex, opts = {}) {\n  if (\n    filename === '.' ||\n    filename === '..' ||\n    filename[filename.length - 1] === '/' ||\n    filename[filename.length - 1] === '\\\\'\n  ) {\n    return UNRESOLVED\n  }\n\n  if (parentURL.protocol === 'file:' && /%2f|%5c/i.test(filename)) {\n    throw errors.INVALID_MODULE_SPECIFIER(\n      `Module specifier '${filename}' is invalid`\n    )\n  }\n\n  const { extensions = [] } = opts\n\n  let status = UNRESOLVED\n\n  if (!isIndex) {\n    if (yield { resolution: new URL(filename, parentURL) }) {\n      return RESOLVED\n    }\n\n    status = YIELDED\n  }\n\n  for (const ext of extensions) {\n    if (yield { resolution: new URL(filename + ext, parentURL) }) {\n      return RESOLVED\n    }\n\n    status = YIELDED\n  }\n\n  return status\n}\n\nexports.directory = function* (dirname, parentURL, opts = {}) {\n  let directoryURL\n\n  if (\n    dirname[dirname.length - 1] === '/' ||\n    dirname[dirname.length - 1] === '\\\\'\n  ) {\n    directoryURL = new URL(dirname, parentURL)\n  } else {\n    directoryURL = new URL(dirname + '/', parentURL)\n  }\n\n  const info = yield { package: new URL('package.json', directoryURL) }\n\n  if (info) {\n    if (info.exports) {\n      return yield* exports.packageExports(\n        directoryURL,\n        '.',\n        info.exports,\n        opts\n      )\n    }\n\n    if (typeof info.main === 'string' && info.main !== '') {\n      const status = yield* exports.file(info.main, directoryURL, false, opts)\n\n      if (status === RESOLVED) return status\n\n      return yield* exports.directory(info.main, directoryURL, opts)\n    }\n  }\n\n  return yield* exports.file('index', directoryURL, true, opts)\n}\n\n// https://infra.spec.whatwg.org/#ascii-upper-alpha\nfunction isASCIIUpperAlpha(c) {\n  return c >= 0x41 && c <= 0x5a\n}\n\n// https://infra.spec.whatwg.org/#ascii-lower-alpha\nfunction isASCIILowerAlpha(c) {\n  return c >= 0x61 && c <= 0x7a\n}\n\n// https://infra.spec.whatwg.org/#ascii-alpha\nfunction isASCIIAlpha(c) {\n  return isASCIIUpperAlpha(c) || isASCIILowerAlpha(c)\n}\n\n// https://url.spec.whatwg.org/#windows-drive-letter\nexports.isWindowsDriveLetter = function isWindowsDriveLetter(input) {\n  return (\n    input.length >= 2 &&\n    isASCIIAlpha(input.charCodeAt(0)) &&\n    (input.charCodeAt(1) === 0x3a || input.charCodeAt(1) === 0x7c)\n  )\n}\n\n// https://url.spec.whatwg.org/#start-with-a-windows-drive-letter\nexports.startsWithWindowsDriveLetter = function startsWithWindowsDriveLetter(\n  input\n) {\n  return (\n    input.length >= 2 &&\n    exports.isWindowsDriveLetter(input) &&\n    (input.length === 2 ||\n      input.charCodeAt(2) === 0x2f ||\n      input.charCodeAt(2) === 0x5c ||\n      input.charCodeAt(2) === 0x3f ||\n      input.charCodeAt(2) === 0x23)\n  )\n}\nmodule.exports = class ModuleResolveError extends Error {\n  constructor(msg, code, fn = ModuleResolveError) {\n    super(`${code}: ${msg}`)\n    this.code = code\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, fn)\n    }\n  }\n\n  get name() {\n    return 'ModuleResolveError'\n  }\n\n  static INVALID_MODULE_SPECIFIER(msg) {\n    return new ModuleResolveError(\n      msg,\n      'INVALID_MODULE_SPECIFIER',\n      ModuleResolveError.INVALID_MODULE_SPECIFIER\n    )\n  }\n\n  static INVALID_PACKAGE_TARGET(msg) {\n    return new ModuleResolveError(\n      msg,\n      'INVALID_PACKAGE_TARGET',\n      ModuleResolveError.INVALID_PACKAGE_TARGET\n    )\n  }\n\n  static PACKAGE_PATH_NOT_EXPORTED(msg) {\n    return new ModuleResolveError(\n      msg,\n      'PACKAGE_PATH_NOT_EXPORTED',\n      ModuleResolveError.PACKAGE_PATH_NOT_EXPORTED\n    )\n  }\n\n  static PACKAGE_IMPORT_NOT_DEFINED(msg) {\n    return new ModuleResolveError(\n      msg,\n      'PACKAGE_IMPORT_NOT_DEFINED',\n      ModuleResolveError.PACKAGE_IMPORT_NOT_DEFINED\n    )\n  }\n\n  static UNSUPPORTED_ENGINE(msg) {\n    return new ModuleResolveError(\n      msg,\n      'UNSUPPORTED_ENGINE',\n      ModuleResolveError.UNSUPPORTED_ENGINE\n    )\n  }\n}\n{\n  \"name\": \"bare-module-resolve\",\n  \"version\": \"1.11.1\",\n  \"description\": \"Low-level module resolution algorithm for Bare\",\n  \"exports\": {\n    \"./package\": \"./package.json\",\n    \".\": {\n      \"types\": \"./index.d.ts\",\n      \"default\": \"./index.js\"\n    },\n    \"./errors\": {\n      \"types\": \"./lib/errors.d.ts\",\n      \"default\": \"./lib/errors.js\"\n    }\n  },\n  \"files\": [\n    \"index.js\",\n    \"index.d.ts\",\n    \"lib\"\n  ],\n  \"scripts\": {\n    \"test\": \"prettier . --check && bare test.js\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/holepunchto/bare-module-resolve.git\"\n  },\n  \"author\": \"Holepunch\",\n  \"license\": \"Apache-2.0\",\n  \"bugs\": {\n    \"url\": \"https://github.com/holepunchto/bare-module-resolve/issues\"\n  },\n  \"homepage\": \"https://github.com/holepunchto/bare-module-resolve#readme\",\n  \"dependencies\": {\n    \"bare-semver\": \"^1.0.0\"\n  },\n  \"devDependencies\": {\n    \"bare-url\": \"^2.1.3\",\n    \"brittle\": \"^3.2.1\",\n    \"prettier\": \"^3.3.3\",\n    \"prettier-config-standard\": \"^7.0.0\"\n  },\n  \"peerDependencies\": {\n    \"bare-url\": \"*\"\n  },\n  \"peerDependenciesMeta\": {\n    \"bare-url\": {\n      \"optional\": true\n    }\n  }\n}\nmodule.exports = require.addon()\nconst binding = require('./binding')\nconst errors = require('./lib/errors')\nconst constants = require('./lib/constants')\n\nexports.constants = constants\n\nexports.EOL = binding.platform === 'win32' ? '\\r\\n' : '\\n'\n\nexports.platform = function platform() {\n  return binding.platform\n}\n\nexports.arch = function arch() {\n  return binding.arch\n}\n\nexports.type = binding.type\nexports.version = binding.version\nexports.release = binding.release\nexports.machine = binding.machine\nexports.execPath = binding.execPath\nexports.pid = binding.pid\nexports.ppid = binding.ppid\nexports.cwd = binding.cwd\nexports.chdir = binding.chdir\nexports.tmpdir = binding.tmpdir\nexports.homedir = binding.homedir\nexports.hostname = binding.hostname\nexports.userInfo = binding.userInfo\n\nexports.kill = function kill(pid, signal = constants.signals.SIGTERM) {\n  if (typeof signal === 'string') {\n    if (signal in constants.signals === false) {\n      throw errors.UNKNOWN_SIGNAL('Unknown signal: ' + signal)\n    }\n\n    signal = constants.signals[signal]\n  }\n\n  binding.kill(pid, signal)\n}\n\nexports.endianness = function endianness() {\n  return binding.isLittleEndian ? 'LE' : 'BE'\n}\n\nexports.availableParallelism = binding.availableParallelism\n\nexports.cpuUsage = function cpuUsage(previous) {\n  const current = binding.cpuUsage()\n\n  if (previous) {\n    return {\n      user: current.user - previous.user,\n      system: current.system - previous.system\n    }\n  }\n\n  return current\n}\n\nexports.threadCpuUsage = function threadCpuUsage(previous) {\n  const current = binding.threadCpuUsage()\n\n  if (previous) {\n    return {\n      user: current.user - previous.user,\n      system: current.system - previous.system\n    }\n  }\n\n  return current\n}\n\nexports.resourceUsage = binding.resourceUsage\nexports.memoryUsage = binding.memoryUsage\nexports.freemem = binding.freemem\nexports.totalmem = binding.totalmem\nexports.uptime = binding.uptime\nexports.loadavg = binding.loadavg\nexports.cpus = binding.cpus\n\nexports.getProcessTitle = binding.getProcessTitle\n\nexports.setProcessTitle = function setProcessTitle(title) {\n  if (typeof title !== 'string') title = title.toString()\n\n  if (title.length >= 256) {\n    throw errors.TITLE_OVERFLOW('Process title is too long')\n  }\n\n  binding.setProcessTitle(title)\n}\n\nexports.getEnvKeys = binding.getEnvKeys\nexports.getEnv = binding.getEnv\nexports.hasEnv = binding.hasEnv\nexports.setEnv = binding.setEnv\nexports.unsetEnv = binding.unsetEnv\nconst binding = require('../binding')\n\nmodule.exports = {\n  signals: binding.signals,\n  errnos: binding.errnos\n}\nmodule.exports = class OSError extends Error {\n  constructor(msg, code, fn = OSError) {\n    super(`${code}: ${msg}`)\n    this.code = code\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, fn)\n    }\n  }\n\n  get name() {\n    return 'OSError'\n  }\n\n  static UNKNOWN_SIGNAL(msg) {\n    return new OSError(msg, 'UNKNOWN_SIGNAL', OSError.UNKNOWN_SIGNAL)\n  }\n\n  static TITLE_OVERFLOW(msg) {\n    return new OSError(msg, 'TITLE_OVERFLOW', OSError.TITLE_OVERFLOW)\n  }\n}\n{\n  \"name\": \"bare-os\",\n  \"version\": \"3.6.2\",\n  \"description\": \"Operating system utilities for Javascript\",\n  \"exports\": {\n    \".\": {\n      \"types\": \"./index.d.ts\",\n      \"default\": \"./index.js\"\n    },\n    \"./package\": \"./package.json\",\n    \"./constants\": \"./lib/constants.js\",\n    \"./errors\": \"./lib/errors.js\"\n  },\n  \"files\": [\n    \"index.js\",\n    \"index.d.ts\",\n    \"binding.c\",\n    \"binding.js\",\n    \"CMakeLists.txt\",\n    \"lib\",\n    \"prebuilds\"\n  ],\n  \"addon\": true,\n  \"scripts\": {\n    \"test\": \"prettier . --check && bare test.js\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/holepunchto/bare-os.git\"\n  },\n  \"author\": \"Holepunch\",\n  \"license\": \"Apache-2.0\",\n  \"bugs\": {\n    \"url\": \"https://github.com/holepunchto/bare-os/issues\"\n  },\n  \"homepage\": \"https://github.com/holepunchto/bare-os#readme\",\n  \"engines\": {\n    \"bare\": \">=1.14.0\"\n  },\n  \"devDependencies\": {\n    \"brittle\": \"^3.1.1\",\n    \"cmake-bare\": \"^1.1.6\",\n    \"prettier\": \"^3.4.2\",\n    \"prettier-config-standard\": \"^7.0.0\"\n  }\n}\n/* global Bare */\n\n// This export SHOULD NOT be shortened in any way as having the full\n// `module.exports = require(...)` statement is crucial for synthesizing\n// ESM exports.\n\nif (Bare.platform === 'win32') {\n  module.exports = require('./lib/win32')\n} else {\n  module.exports = require('./lib/posix')\n}\nmodule.exports = {\n  CHAR_UPPERCASE_A: 0x41,\n  CHAR_LOWERCASE_A: 0x61,\n  CHAR_UPPERCASE_Z: 0x5a,\n  CHAR_LOWERCASE_Z: 0x7a,\n  CHAR_DOT: 0x2e,\n  CHAR_FORWARD_SLASH: 0x2f,\n  CHAR_BACKWARD_SLASH: 0x5c,\n  CHAR_COLON: 0x3a,\n  CHAR_QUESTION_MARK: 0x3f\n}\nconst os = require('bare-os')\n\nconst { normalizeString } = require('./shared')\nconst {\n  CHAR_DOT,\n  CHAR_FORWARD_SLASH\n} = require('./constants')\n\nfunction isPosixPathSeparator (code) {\n  return code === CHAR_FORWARD_SLASH\n}\n\nexports.win32 = require('./win32')\nexports.posix = exports\n\nexports.sep = '/'\nexports.delimiter = ':'\n\nexports.resolve = function resolve (...args) {\n  let resolvedPath = ''\n  let resolvedAbsolute = false\n\n  for (let i = args.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    const path = i >= 0 ? args[i] : os.cwd()\n\n    if (path.length === 0) {\n      continue\n    }\n\n    resolvedPath = `${path}/${resolvedPath}`\n    resolvedAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH\n  }\n\n  resolvedPath = normalizeString(resolvedPath, !resolvedAbsolute, '/', isPosixPathSeparator)\n\n  if (resolvedAbsolute) {\n    return `/${resolvedPath}`\n  }\n\n  return resolvedPath.length > 0 ? resolvedPath : '.'\n}\n\nexports.normalize = function normalize (path) {\n  if (path.length === 0) return '.'\n\n  const isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH\n  const trailingSeparator = path.charCodeAt(path.length - 1) === CHAR_FORWARD_SLASH\n\n  path = normalizeString(path, !isAbsolute, '/', isPosixPathSeparator)\n\n  if (path.length === 0) {\n    if (isAbsolute) return '/'\n    return trailingSeparator ? './' : '.'\n  }\n\n  if (trailingSeparator) path += '/'\n\n  return isAbsolute ? `/${path}` : path\n}\n\nexports.isAbsolute = function isAbsolute (path) {\n  return path.length > 0 && path.charCodeAt(0) === CHAR_FORWARD_SLASH\n}\n\nexports.join = function join (...args) {\n  if (args.length === 0) return '.'\n  let joined\n  for (let i = 0; i < args.length; ++i) {\n    const arg = args[i]\n    if (arg.length > 0) {\n      if (joined === undefined) joined = arg\n      else joined += `/${arg}`\n    }\n  }\n  if (joined === undefined) return '.'\n  return exports.normalize(joined)\n}\n\nexports.relative = function relative (from, to) {\n  if (from === to) return ''\n\n  from = exports.resolve(from)\n  to = exports.resolve(to)\n\n  if (from === to) return ''\n\n  const fromStart = 1\n  const fromEnd = from.length\n  const fromLen = fromEnd - fromStart\n  const toStart = 1\n  const toLen = to.length - toStart\n\n  const length = (fromLen < toLen ? fromLen : toLen)\n  let lastCommonSep = -1\n  let i = 0\n  for (; i < length; i++) {\n    const fromCode = from.charCodeAt(fromStart + i)\n    if (fromCode !== to.charCodeAt(toStart + i)) {\n      break\n    } else if (fromCode === CHAR_FORWARD_SLASH) {\n      lastCommonSep = i\n    }\n  }\n  if (i === length) {\n    if (toLen > length) {\n      if (to.charCodeAt(toStart + i) === CHAR_FORWARD_SLASH) {\n        return to.substring(toStart + i + 1)\n      }\n      if (i === 0) {\n        return to.substring(toStart + i)\n      }\n    } else if (fromLen > length) {\n      if (from.charCodeAt(fromStart + i) === CHAR_FORWARD_SLASH) {\n        lastCommonSep = i\n      } else if (i === 0) {\n        lastCommonSep = 0\n      }\n    }\n  }\n\n  let out = ''\n  for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n    if (i === fromEnd || from.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n      out += out.length === 0 ? '..' : '/..'\n    }\n  }\n\n  return `${out}${to.substring(toStart + lastCommonSep)}`\n}\n\nexports.toNamespacedPath = function toNamespacedPath (path) {\n  return path\n}\n\nexports.dirname = function dirname (path) {\n  if (path.length === 0) return '.'\n  const hasRoot = path.charCodeAt(0) === CHAR_FORWARD_SLASH\n  let end = -1\n  let matchedSlash = true\n  for (let i = path.length - 1; i >= 1; --i) {\n    if (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n      if (!matchedSlash) {\n        end = i\n        break\n      }\n    } else {\n      matchedSlash = false\n    }\n  }\n\n  if (end === -1) return hasRoot ? '/' : '.'\n  if (hasRoot && end === 1) return '//'\n  return path.substring(0, end)\n}\n\nexports.basename = function basename (path, suffix) {\n  let start = 0\n  let end = -1\n  let matchedSlash = true\n\n  if (suffix !== undefined && suffix.length > 0 && suffix.length <= path.length) {\n    if (suffix === path) { return '' }\n    let extIdx = suffix.length - 1\n    let firstNonSlashEnd = -1\n    for (let i = path.length - 1; i >= 0; --i) {\n      const code = path.charCodeAt(i)\n      if (code === CHAR_FORWARD_SLASH) {\n        if (!matchedSlash) {\n          start = i + 1\n          break\n        }\n      } else {\n        if (firstNonSlashEnd === -1) {\n          matchedSlash = false\n          firstNonSlashEnd = i + 1\n        }\n        if (extIdx >= 0) {\n          if (code === suffix.charCodeAt(extIdx)) {\n            if (--extIdx === -1) {\n              end = i\n            }\n          } else {\n            extIdx = -1\n            end = firstNonSlashEnd\n          }\n        }\n      }\n    }\n\n    if (start === end) end = firstNonSlashEnd\n    else if (end === -1) end = path.length\n    return path.substring(start, end)\n  }\n\n  for (let i = path.length - 1; i >= 0; --i) {\n    if (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n      if (!matchedSlash) {\n        start = i + 1\n        break\n      }\n    } else if (end === -1) {\n      matchedSlash = false\n      end = i + 1\n    }\n  }\n\n  if (end === -1) return ''\n  return path.substring(start, end)\n}\n\nexports.extname = function extname (path) {\n  let startDot = -1\n  let startPart = 0\n  let end = -1\n  let matchedSlash = true\n  let preDotState = 0\n  for (let i = path.length - 1; i >= 0; --i) {\n    const code = path.charCodeAt(i)\n    if (code === CHAR_FORWARD_SLASH) {\n      if (!matchedSlash) {\n        startPart = i + 1\n        break\n      }\n      continue\n    }\n    if (end === -1) {\n      matchedSlash = false\n      end = i + 1\n    }\n    if (code === CHAR_DOT) {\n      if (startDot === -1) startDot = i\n      else if (preDotState !== 1) preDotState = 1\n    } else if (startDot !== -1) {\n      preDotState = -1\n    }\n  }\n\n  if (startDot === -1 || end === -1 || preDotState === 0 || (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)) {\n    return ''\n  }\n  return path.substring(startDot, end)\n}\nconst {\n  CHAR_DOT,\n  CHAR_FORWARD_SLASH\n} = require('./constants')\n\nexports.normalizeString = function normalizeString (path, allowAboveRoot, separator, isPathSeparator) {\n  let res = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let code = 0\n  for (let i = 0; i <= path.length; ++i) {\n    if (i < path.length) {\n      code = path.charCodeAt(i)\n    } else if (isPathSeparator(code)) {\n      break\n    } else {\n      code = CHAR_FORWARD_SLASH\n    }\n\n    if (isPathSeparator(code)) {\n      if (lastSlash === i - 1 || dots === 1) ;\n      else if (dots === 2) {\n        if (res.length < 2 || lastSegmentLength !== 2 || res.charCodeAt(res.length - 1) !== CHAR_DOT || res.charCodeAt(res.length - 2) !== CHAR_DOT) {\n          if (res.length > 2) {\n            const lastSlashIndex = res.lastIndexOf(separator)\n            if (lastSlashIndex === -1) {\n              res = ''\n              lastSegmentLength = 0\n            } else {\n              res = res.substring(0, lastSlashIndex)\n              lastSegmentLength =\n                res.length - 1 - res.lastIndexOf(separator)\n            }\n            lastSlash = i\n            dots = 0\n            continue\n          } else if (res.length !== 0) {\n            res = ''\n            lastSegmentLength = 0\n            lastSlash = i\n            dots = 0\n            continue\n          }\n        }\n        if (allowAboveRoot) {\n          res += res.length > 0 ? `${separator}..` : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (res.length > 0) {\n          res += `${separator}${path.substring(lastSlash + 1, i)}`\n        } else {\n          res = path.substring(lastSlash + 1, i)\n        }\n        lastSegmentLength = i - lastSlash - 1\n      }\n      lastSlash = i\n      dots = 0\n    } else if (code === CHAR_DOT && dots !== -1) {\n      ++dots\n    } else {\n      dots = -1\n    }\n  }\n  return res\n}\nconst os = require('bare-os')\n\nconst { normalizeString } = require('./shared')\nconst {\n  CHAR_UPPERCASE_A,\n  CHAR_LOWERCASE_A,\n  CHAR_UPPERCASE_Z,\n  CHAR_LOWERCASE_Z,\n  CHAR_DOT,\n  CHAR_FORWARD_SLASH,\n  CHAR_BACKWARD_SLASH,\n  CHAR_COLON,\n  CHAR_QUESTION_MARK\n} = require('./constants')\n\nfunction isWindowsPathSeparator (code) {\n  return code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH\n}\n\nfunction isWindowsDeviceRoot (code) {\n  return (code >= CHAR_UPPERCASE_A && code <= CHAR_UPPERCASE_Z) ||\n         (code >= CHAR_LOWERCASE_A && code <= CHAR_LOWERCASE_Z)\n}\n\nexports.posix = require('./posix')\nexports.win32 = exports\n\nexports.sep = '\\\\'\nexports.delimiter = ';'\n\nexports.resolve = function resolve (...args) {\n  let resolvedDevice = ''\n  let resolvedTail = ''\n  let resolvedAbsolute = false\n\n  for (let i = args.length - 1; i >= -1; i--) {\n    let path\n    if (i >= 0) {\n      path = args[i]\n\n      if (path.length === 0) continue\n    } else if (resolvedDevice.length === 0) {\n      path = os.cwd()\n    } else {\n      path = os.getEnv(`=${resolvedDevice}`) || os.cwd()\n\n      if (path === undefined || (path.substring(0, 2).toLowerCase() !== resolvedDevice.toLowerCase() && path.charCodeAt(2) === CHAR_BACKWARD_SLASH)) {\n        path = `${resolvedDevice}\\\\`\n      }\n    }\n\n    const len = path.length\n    let rootEnd = 0\n    let device = ''\n    let isAbsolute = false\n    const code = path.charCodeAt(0)\n\n    if (len === 1) {\n      if (isWindowsPathSeparator(code)) {\n        rootEnd = 1\n        isAbsolute = true\n      }\n    } else if (isWindowsPathSeparator(code)) {\n      isAbsolute = true\n\n      if (isWindowsPathSeparator(path.charCodeAt(1))) {\n        let j = 2\n        let last = j\n        while (j < len && !isWindowsPathSeparator(path.charCodeAt(j))) {\n          j++\n        }\n        if (j < len && j !== last) {\n          const firstPart = path.substring(last, j)\n          last = j\n          while (j < len && isWindowsPathSeparator(path.charCodeAt(j))) {\n            j++\n          }\n          if (j < len && j !== last) {\n            last = j\n            while (j < len && !isWindowsPathSeparator(path.charCodeAt(j))) {\n              j++\n            }\n            if (j === len || j !== last) {\n              device = `\\\\\\\\${firstPart}\\\\${path.substring(last, j)}`\n              rootEnd = j\n            }\n          }\n        }\n      } else {\n        rootEnd = 1\n      }\n    } else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n      device = path.substring(0, 2)\n      rootEnd = 2\n      if (len > 2 && isWindowsPathSeparator(path.charCodeAt(2))) {\n        isAbsolute = true\n        rootEnd = 3\n      }\n    }\n\n    if (device.length > 0) {\n      if (resolvedDevice.length > 0) {\n        if (device.toLowerCase() !== resolvedDevice.toLowerCase()) { continue }\n      } else {\n        resolvedDevice = device\n      }\n    }\n\n    if (resolvedAbsolute) {\n      if (resolvedDevice.length > 0) { break }\n    } else {\n      resolvedTail = `${path.substring(rootEnd)}\\\\${resolvedTail}`\n      resolvedAbsolute = isAbsolute\n      if (isAbsolute && resolvedDevice.length > 0) {\n        break\n      }\n    }\n  }\n\n  resolvedTail = normalizeString(resolvedTail, !resolvedAbsolute, '\\\\', isWindowsPathSeparator)\n\n  return resolvedAbsolute ? `${resolvedDevice}\\\\${resolvedTail}` : `${resolvedDevice}${resolvedTail}` || '.'\n}\n\nexports.normalize = function normalize (path) {\n  const len = path.length\n  if (len === 0) return '.'\n  let rootEnd = 0\n  let device\n  let isAbsolute = false\n  const code = path.charCodeAt(0)\n\n  if (len === 1) {\n    return code === CHAR_FORWARD_SLASH ? '\\\\' : path\n  }\n\n  if (isWindowsPathSeparator(code)) {\n    isAbsolute = true\n\n    if (isWindowsPathSeparator(path.charCodeAt(1))) {\n      let j = 2\n      let last = j\n      while (j < len && !isWindowsPathSeparator(path.charCodeAt(j))) {\n        j++\n      }\n      if (j < len && j !== last) {\n        const firstPart = path.substring(last, j)\n        last = j\n        while (j < len && isWindowsPathSeparator(path.charCodeAt(j))) {\n          j++\n        }\n        if (j < len && j !== last) {\n          last = j\n          while (j < len && !isWindowsPathSeparator(path.charCodeAt(j))) {\n            j++\n          }\n          if (j === len) {\n            return `\\\\\\\\${firstPart}\\\\${path.substring(last)}\\\\`\n          }\n          if (j !== last) {\n            device = `\\\\\\\\${firstPart}\\\\${path.substring(last, j)}`\n            rootEnd = j\n          }\n        }\n      }\n    } else {\n      rootEnd = 1\n    }\n  } else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n    device = path.substring(0, 2)\n    rootEnd = 2\n    if (len > 2 && isWindowsPathSeparator(path.charCodeAt(2))) {\n      isAbsolute = true\n      rootEnd = 3\n    }\n  }\n\n  let tail = rootEnd < len ? normalizeString(path.substring(rootEnd), !isAbsolute, '\\\\', isWindowsPathSeparator) : ''\n  if (tail.length === 0 && !isAbsolute) {\n    tail = '.'\n  }\n  if (tail.length > 0 && isWindowsPathSeparator(path.charCodeAt(len - 1))) {\n    tail += '\\\\'\n  }\n  if (device === undefined) {\n    return isAbsolute ? `\\\\${tail}` : tail\n  }\n  return isAbsolute ? `${device}\\\\${tail}` : `${device}${tail}`\n}\n\nexports.isAbsolute = function isAbsolute (path) {\n  const len = path.length\n  if (len === 0) return false\n\n  const code = path.charCodeAt(0)\n\n  return isWindowsPathSeparator(code) || (len > 2 && isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON && isWindowsPathSeparator(path.charCodeAt(2)))\n}\n\nexports.join = function join (...args) {\n  if (args.length === 0) return '.'\n\n  let joined\n  let firstPart\n  for (let i = 0; i < args.length; ++i) {\n    const arg = args[i]\n    if (arg.length > 0) {\n      if (joined === undefined) joined = firstPart = arg\n      else joined += `\\\\${arg}`\n    }\n  }\n\n  if (joined === undefined) return '.'\n\n  let needsReplace = true\n  let slashCount = 0\n  if (isWindowsPathSeparator(firstPart.charCodeAt(0))) {\n    ++slashCount\n    const firstLen = firstPart.length\n    if (firstLen > 1 && isWindowsPathSeparator(firstPart.charCodeAt(1))) {\n      ++slashCount\n      if (firstLen > 2) {\n        if (isWindowsPathSeparator(firstPart.charCodeAt(2))) {\n          ++slashCount\n        } else {\n          needsReplace = false\n        }\n      }\n    }\n  }\n  if (needsReplace) {\n    while (slashCount < joined.length && isWindowsPathSeparator(joined.charCodeAt(slashCount))) {\n      slashCount++\n    }\n\n    if (slashCount >= 2) {\n      joined = `\\\\${joined.substring(slashCount)}`\n    }\n  }\n\n  return exports.normalize(joined)\n}\n\nexports.relative = function relative (from, to) {\n  if (from === to) return ''\n\n  const fromOrig = exports.resolve(from)\n  const toOrig = exports.resolve(to)\n\n  if (fromOrig === toOrig) return ''\n\n  from = fromOrig.toLowerCase()\n  to = toOrig.toLowerCase()\n\n  if (from === to) return ''\n\n  let fromStart = 0\n  while (fromStart < from.length && from.charCodeAt(fromStart) === CHAR_BACKWARD_SLASH) {\n    fromStart++\n  }\n  let fromEnd = from.length\n  while (fromEnd - 1 > fromStart && from.charCodeAt(fromEnd - 1) === CHAR_BACKWARD_SLASH) {\n    fromEnd--\n  }\n  const fromLen = fromEnd - fromStart\n\n  let toStart = 0\n  while (toStart < to.length && to.charCodeAt(toStart) === CHAR_BACKWARD_SLASH) {\n    toStart++\n  }\n  let toEnd = to.length\n  while (toEnd - 1 > toStart && to.charCodeAt(toEnd - 1) === CHAR_BACKWARD_SLASH) {\n    toEnd--\n  }\n  const toLen = toEnd - toStart\n\n  const length = fromLen < toLen ? fromLen : toLen\n  let lastCommonSep = -1\n  let i = 0\n  for (; i < length; i++) {\n    const fromCode = from.charCodeAt(fromStart + i)\n    if (fromCode !== to.charCodeAt(toStart + i)) {\n      break\n    } else if (fromCode === CHAR_BACKWARD_SLASH) {\n      lastCommonSep = i\n    }\n  }\n\n  if (i !== length) {\n    if (lastCommonSep === -1) return toOrig\n  } else {\n    if (toLen > length) {\n      if (to.charCodeAt(toStart + i) === CHAR_BACKWARD_SLASH) {\n        return toOrig.substring(toStart + i + 1)\n      }\n      if (i === 2) {\n        return toOrig.substring(toStart + i)\n      }\n    }\n    if (fromLen > length) {\n      if (from.charCodeAt(fromStart + i) === CHAR_BACKWARD_SLASH) {\n        lastCommonSep = i\n      } else if (i === 2) {\n        lastCommonSep = 3\n      }\n    }\n    if (lastCommonSep === -1) lastCommonSep = 0\n  }\n\n  let out = ''\n  for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n    if (i === fromEnd || from.charCodeAt(i) === CHAR_BACKWARD_SLASH) {\n      out += out.length === 0 ? '..' : '\\\\..'\n    }\n  }\n\n  toStart += lastCommonSep\n\n  if (out.length > 0) {\n    return `${out}${toOrig.substring(toStart, toEnd)}`\n  }\n  if (toOrig.charCodeAt(toStart) === CHAR_BACKWARD_SLASH) {\n    ++toStart\n  }\n  return toOrig.substring(toStart, toEnd)\n}\n\nexports.toNamespacedPath = function toNamespacedPath (path) {\n  if (path.length === 0) return path\n\n  const resolvedPath = exports.resolve(path)\n\n  if (resolvedPath.length <= 2) return path\n\n  if (resolvedPath.charCodeAt(0) === CHAR_BACKWARD_SLASH) {\n    if (resolvedPath.charCodeAt(1) === CHAR_BACKWARD_SLASH) {\n      const code = resolvedPath.charCodeAt(2)\n      if (code !== CHAR_QUESTION_MARK && code !== CHAR_DOT) {\n        return `\\\\\\\\?\\\\UNC\\\\${resolvedPath.substring(2)}`\n      }\n    }\n  } else if (\n    isWindowsDeviceRoot(resolvedPath.charCodeAt(0)) &&\n      resolvedPath.charCodeAt(1) === CHAR_COLON &&\n      resolvedPath.charCodeAt(2) === CHAR_BACKWARD_SLASH\n  ) {\n    return `\\\\\\\\?\\\\${resolvedPath}`\n  }\n\n  return path\n}\n\nexports.dirname = function dirname (path) {\n  const len = path.length\n  if (len === 0) return '.'\n  let rootEnd = -1\n  let offset = 0\n  const code = path.charCodeAt(0)\n\n  if (len === 1) {\n    return isWindowsPathSeparator(code) ? path : '.'\n  }\n\n  if (isWindowsPathSeparator(code)) {\n    rootEnd = offset = 1\n\n    if (isWindowsPathSeparator(path.charCodeAt(1))) {\n      let j = 2\n      let last = j\n      while (j < len && !isWindowsPathSeparator(path.charCodeAt(j))) {\n        j++\n      }\n      if (j < len && j !== last) {\n        last = j\n        while (j < len && isWindowsPathSeparator(path.charCodeAt(j))) {\n          j++\n        }\n        if (j < len && j !== last) {\n          last = j\n          while (j < len && !isWindowsPathSeparator(path.charCodeAt(j))) {\n            j++\n          }\n          if (j === len) {\n            return path\n          }\n          if (j !== last) {\n            rootEnd = offset = j + 1\n          }\n        }\n      }\n    }\n  } else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n    rootEnd = len > 2 && isWindowsPathSeparator(path.charCodeAt(2)) ? 3 : 2\n    offset = rootEnd\n  }\n\n  let end = -1\n  let matchedSlash = true\n  for (let i = len - 1; i >= offset; --i) {\n    if (isWindowsPathSeparator(path.charCodeAt(i))) {\n      if (!matchedSlash) {\n        end = i\n        break\n      }\n    } else {\n      matchedSlash = false\n    }\n  }\n\n  if (end === -1) {\n    if (rootEnd === -1) return '.'\n\n    end = rootEnd\n  }\n  return path.substring(0, end)\n}\n\nexports.basename = function basename (path, suffix) {\n  let start = 0\n  let end = -1\n  let matchedSlash = true\n\n  if (path.length >= 2 && isWindowsDeviceRoot(path.charCodeAt(0)) && path.charCodeAt(1) === CHAR_COLON) {\n    start = 2\n  }\n\n  if (suffix !== undefined && suffix.length > 0 && suffix.length <= path.length) {\n    if (suffix === path) return ''\n    let extIdx = suffix.length - 1\n    let firstNonSlashEnd = -1\n    for (let i = path.length - 1; i >= start; --i) {\n      const code = path.charCodeAt(i)\n      if (isWindowsPathSeparator(code)) {\n        if (!matchedSlash) {\n          start = i + 1\n          break\n        }\n      } else {\n        if (firstNonSlashEnd === -1) {\n          matchedSlash = false\n          firstNonSlashEnd = i + 1\n        }\n        if (extIdx >= 0) {\n          if (code === suffix.charCodeAt(extIdx)) {\n            if (--extIdx === -1) {\n              end = i\n            }\n          } else {\n            extIdx = -1\n            end = firstNonSlashEnd\n          }\n        }\n      }\n    }\n\n    if (start === end) end = firstNonSlashEnd\n    else if (end === -1) end = path.length\n    return path.substring(start, end)\n  }\n  for (let i = path.length - 1; i >= start; --i) {\n    if (isWindowsPathSeparator(path.charCodeAt(i))) {\n      if (!matchedSlash) {\n        start = i + 1\n        break\n      }\n    } else if (end === -1) {\n      matchedSlash = false\n      end = i + 1\n    }\n  }\n\n  if (end === -1) return ''\n  return path.substring(start, end)\n}\n\nexports.extname = function extname (path) {\n  let start = 0\n  let startDot = -1\n  let startPart = 0\n  let end = -1\n  let matchedSlash = true\n  let preDotState = 0\n\n  if (path.length >= 2 && path.charCodeAt(1) === CHAR_COLON && isWindowsDeviceRoot(path.charCodeAt(0))) {\n    start = startPart = 2\n  }\n\n  for (let i = path.length - 1; i >= start; --i) {\n    const code = path.charCodeAt(i)\n    if (isWindowsPathSeparator(code)) {\n      if (!matchedSlash) {\n        startPart = i + 1\n        break\n      }\n      continue\n    }\n    if (end === -1) {\n      matchedSlash = false\n      end = i + 1\n    }\n    if (code === CHAR_DOT) {\n      if (startDot === -1) startDot = i\n      else if (preDotState !== 1) preDotState = 1\n    } else if (startDot !== -1) {\n      preDotState = -1\n    }\n  }\n\n  if (startDot === -1 || end === -1 || preDotState === 0 || (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)) {\n    return ''\n  }\n  return path.substring(startDot, end)\n}\n{\n  \"name\": \"bare-path\",\n  \"version\": \"3.0.0\",\n  \"description\": \"Path manipulation library for JavaScript\",\n  \"exports\": {\n    \".\": \"./index.js\",\n    \"./package\": \"./package.json\",\n    \"./posix\": \"./lib/posix.js\",\n    \"./win32\": \"./lib/win32.js\"\n  },\n  \"files\": [\n    \"index.js\",\n    \"lib\",\n    \"NOTICE\"\n  ],\n  \"scripts\": {\n    \"test\": \"standard && bare test.js\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/holepunchto/bare-path.git\"\n  },\n  \"author\": \"Holepunch\",\n  \"license\": \"Apache-2.0\",\n  \"bugs\": {\n    \"url\": \"https://github.com/holepunchto/bare-path/issues\"\n  },\n  \"homepage\": \"https://github.com/holepunchto/bare-path#readme\",\n  \"dependencies\": {\n    \"bare-os\": \"^3.0.1\"\n  },\n  \"devDependencies\": {\n    \"brittle\": \"^3.3.2\",\n    \"standard\": \"^17.0.0\"\n  }\n}\nconst safetyCatch = require('safety-catch')\nconst b4a = require('b4a')\nconst c = require('compact-encoding')\nconst m = require('./lib/messages')\nconst { type: t, stream: s } = require('./lib/constants')\nconst IncomingRequest = require('./lib/incoming-request')\nconst IncomingStream = require('./lib/incoming-stream')\nconst OutgoingRequest = require('./lib/outgoing-request')\nconst OutgoingStream = require('./lib/outgoing-stream')\nconst CommandRouter = require('./lib/command-router')\n\nmodule.exports = exports = class RPC {\n  constructor(stream, onrequest = noop) {\n    this._stream = stream\n    this._id = 0\n\n    this._outgoingRequests = new Map()\n    this._outgoingResponses = new Map()\n    this._incomingRequests = new Map()\n    this._incomingResponses = new Map()\n    this._pendingRequests = new Set()\n    this._pendingResponses = new Set()\n\n    this._buffer = []\n    this._buffered = 0\n    this._frame = -1\n    this._draining = []\n\n    if (typeof onrequest === 'function') {\n      onrequest = onrequest.bind(this)\n    } else {\n      onrequest = onrequest._onrequest.bind(onrequest)\n    }\n\n    this._onrequest = onrequest\n    this._onerror = this._onerror.bind(this)\n    this._ondata = this._ondata.bind(this)\n    this._ondrain = this._ondrain.bind(this)\n\n    this._stream\n      .on('error', this._onerror)\n      .on('data', this._ondata)\n      .on('drain', this._ondrain)\n  }\n\n  request(command) {\n    return new OutgoingRequest(this, ++this._id, command)\n  }\n\n  _sendMessage(message, cb) {\n    const header = c.encode(m.header, message)\n\n    let flushed = this._stream.write(header)\n\n    if (message.data) flushed = this._stream.write(message.data)\n\n    if (cb) {\n      if (flushed) cb(null)\n      else this._draining.push(cb)\n    }\n  }\n\n  _sendRequest(request, data = null) {\n    this._outgoingRequests.set(request.id, request)\n\n    this._sendMessage({\n      type: t.REQUEST,\n      id: request.id,\n      command: request.command,\n      stream: 0,\n      data\n    })\n  }\n\n  _createRequestStream(request, isInitiator, opts) {\n    if (isInitiator) {\n      this._outgoingRequests.set(request.id, request)\n\n      request._requestStream = new OutgoingStream(\n        this,\n        request,\n        t.REQUEST,\n        opts\n      )\n    } else {\n      this._incomingRequests.set(request.id, request)\n\n      request._requestStream = new IncomingStream(\n        this,\n        request,\n        t.REQUEST,\n        opts\n      )\n\n      request._requestStream.on('close', () =>\n        this._incomingRequests.delete(request.id)\n      )\n    }\n  }\n\n  _sendResponse(request, data) {\n    this._sendMessage({\n      type: t.RESPONSE,\n      id: request.id,\n      stream: 0,\n      error: null,\n      data\n    })\n  }\n\n  _createResponseStream(request, isInitiator, opts) {\n    if (isInitiator) {\n      this._outgoingResponses.set(request.id, request)\n\n      request._responseStream = new OutgoingStream(\n        this,\n        request,\n        t.RESPONSE,\n        opts\n      )\n    } else {\n      this._incomingResponses.set(request.id, request)\n\n      request._responseStream = new IncomingStream(\n        this,\n        request,\n        t.RESPONSE,\n        opts\n      )\n\n      request._responseStream.on('close', () =>\n        this._incomingResponses.delete(request.id)\n      )\n    }\n  }\n\n  _sendError(request, err) {\n    this._sendMessage({\n      type: t.RESPONSE,\n      id: request.id,\n      stream: 0,\n      error: err,\n      data: null\n    })\n  }\n\n  _onerror(err) {\n    this._ondrain(err)\n\n    // TODO Destroy pending requests and responses\n  }\n\n  _ondata(data) {\n    this._buffer.push(data)\n    this._buffered += data.byteLength\n\n    if (this._frame === -1) {\n      this._onbeforeframe()\n    } else {\n      this._onafterframe()\n    }\n  }\n\n  _onbeforeframe() {\n    if (this._buffered < 4) return\n\n    const buffer =\n      this._buffer.length === 1 ? this._buffer[0] : b4a.concat(this._buffer)\n\n    this._buffer = [buffer]\n    this._frame = 4 + c.uint32.decode(c.state(0, 4, buffer))\n\n    this._onafterframe()\n  }\n\n  _onafterframe() {\n    if (this._buffered < this._frame) return\n\n    const buffer =\n      this._buffer.length === 1 ? this._buffer[0] : b4a.concat(this._buffer)\n\n    const frame = this._frame\n\n    this._buffered -= frame\n    this._buffer = this._buffered > 0 ? [buffer.subarray(frame)] : []\n    this._frame = -1\n\n    this._onmessage(buffer.subarray(0, frame))\n    this._onbeforeframe()\n  }\n\n  async _onmessage(buffer) {\n    let message\n    try {\n      message = m.message.decode(c.state(0, buffer.length, buffer))\n    } catch (err) {\n      safetyCatch(err)\n\n      return this._stream.destroy(err)\n    }\n\n    switch (message.type) {\n      case t.REQUEST:\n        const request = new IncomingRequest(\n          this,\n          message.id,\n          message.command,\n          message.data\n        )\n\n        try {\n          await this._onrequest(request)\n        } catch (err) {\n          safetyCatch(err)\n\n          this._sendError(request, err)\n        }\n        break\n      case t.RESPONSE:\n        try {\n          this._onresponse(message)\n        } catch (err) {\n          safetyCatch(err)\n        }\n        break\n      case t.STREAM:\n        try {\n          this._onstream(message)\n        } catch (err) {\n          safetyCatch(err)\n        }\n    }\n  }\n\n  _onresponse(message) {\n    if (message.id === 0) return\n\n    const request = this._outgoingRequests.get(message.id)\n    if (request === undefined) return\n\n    if (message.error) {\n      request._reject(message.error)\n    } else if (message.stream === 0) {\n      request._resolve(message.data)\n    }\n  }\n\n  _onstream(message) {\n    if (message.id === 0) return\n\n    if (message.stream & s.OPEN) this._onstreamopen(message)\n    else if (message.stream & s.CLOSE) this._onstreamclose(message)\n    else if (message.stream & s.PAUSE) this._onstreampause(message)\n    else if (message.stream & s.RESUME) this._onstreamresume(message)\n    else if (message.stream & s.DATA) this._onstreamdata(message)\n    else if (message.stream & s.END) this._onstreamend(message)\n    else if (message.stream & s.DESTROY) this._onstreamdestroy(message)\n  }\n\n  _onstreamopen(message) {\n    let stream\n\n    if (message.stream & s.REQUEST) {\n      const request = this._outgoingRequests.get(message.id)\n      if (request === undefined) {\n        this._pendingRequests.add(message.id)\n        return\n      }\n\n      stream = request._requestStream\n\n      if (stream._pendingOpen === null) {\n        this._pendingRequests.add(message.id)\n        return\n      }\n    } else if (message.stream & s.RESPONSE) {\n      const request = this._outgoingResponses.get(message.id)\n      if (request === undefined) {\n        this._pendingResponses.add(message.id)\n        return\n      }\n\n      stream = request._responseStream\n\n      if (stream._pendingOpen === null) {\n        this._pendingResponses.add(message.id)\n        return\n      }\n    } else {\n      return\n    }\n\n    stream._continueOpen()\n  }\n\n  _onstreamclose(message) {\n    let stream\n\n    if (message.stream & s.REQUEST) {\n      const request = this._incomingRequests.get(message.id)\n      if (request === undefined) return\n\n      stream = request._requestStream\n    } else if (message.stream & s.RESPONSE) {\n      const request = this._incomingResponses.get(message.id)\n      if (request === undefined) return\n\n      stream = request._responseStream\n    } else {\n      return\n    }\n\n    if (message.error) stream.destroy(message.error)\n    else stream.push(null)\n  }\n\n  _onstreampause(message) {\n    let stream\n\n    if (message.stream & s.REQUEST) {\n      const request = this._outgoingRequests.get(message.id)\n      if (request === undefined) return\n\n      stream = request._requestStream\n    } else if (message.stream & s.RESPONSE) {\n      const request = this._outgoingResponses.get(message.id)\n      if (request === undefined) return\n\n      stream = request._responseStream\n    } else {\n      return\n    }\n\n    stream.cork()\n  }\n\n  _onstreamresume(message) {\n    let stream\n\n    if (message.stream & s.REQUEST) {\n      const request = this._outgoingRequests.get(message.id)\n      if (request === undefined) return\n\n      stream = request._requestStream\n    } else if (message.stream & s.RESPONSE) {\n      const request = this._outgoingResponses.get(message.id)\n      if (request === undefined) return\n\n      stream = request._responseStream\n    } else {\n      return\n    }\n\n    stream.uncork()\n  }\n\n  _onstreamdata(message) {\n    let stream\n\n    if (message.stream & s.REQUEST) {\n      const request = this._incomingRequests.get(message.id)\n      if (request === undefined) return\n\n      stream = request._requestStream\n    } else if (message.stream & s.RESPONSE) {\n      const request = this._incomingResponses.get(message.id)\n      if (request === undefined) return\n\n      stream = request._responseStream\n    } else {\n      return\n    }\n\n    if (stream.push(message.data) === false) {\n      this._sendMessage({\n        type: t.STREAM,\n        id: stream._request.id,\n        stream: stream._mask | s.PAUSE,\n        error: null,\n        data: null\n      })\n    }\n  }\n\n  _onstreamend(message) {\n    let stream\n\n    if (message.stream & s.REQUEST) {\n      const request = this._incomingRequests.get(message.id)\n      if (request === undefined) return\n\n      stream = request._requestStream\n    } else if (message.stream & s.RESPONSE) {\n      const request = this._incomingResponses.get(message.id)\n      if (request === undefined) return\n\n      stream = request._responseStream\n    } else {\n      return\n    }\n\n    stream.push(null)\n  }\n\n  _onstreamdestroy(message) {\n    let stream\n\n    if (message.stream & s.REQUEST) {\n      const request = this._outgoingRequests.get(message.id)\n      if (request === undefined) return\n\n      stream = request._requestStream\n    } else if (message.stream & s.RESPONSE) {\n      const request = this._outgoingResponses.get(message.id)\n      if (request === undefined) return\n\n      stream = request._responseStream\n    } else {\n      return\n    }\n\n    stream.destroy(message.error)\n  }\n\n  _ondrain(err = null) {\n    const draining = this._draining\n\n    this._draining = []\n\n    for (const cb of draining) cb(err)\n  }\n}\n\nexports.CommandRouter = CommandRouter\n\nfunction noop() {}\nconst c = require('compact-encoding')\n\nmodule.exports = class RPCCommandRouter {\n  constructor(opts = {}) {\n    const { valueEncoding = c.raw } = opts\n\n    this._responders = new Map()\n    this._defaultValueEncoding = valueEncoding\n  }\n\n  respond(command, opts = {}, onrequest) {\n    if (typeof opts === 'function') {\n      onrequest = opts\n      opts = {}\n    }\n\n    const {\n      valueEncoding = this._defaultValueEncoding,\n      requestEncoding = valueEncoding,\n      responseEncoding = valueEncoding\n    } = opts\n\n    this._responders.set(command, {\n      onrequest,\n      requestEncoding,\n      responseEncoding\n    })\n  }\n\n  async _onrequest(req) {\n    const responder = this._responders.get(req.command)\n\n    if (responder === undefined) return\n\n    const { onrequest, requestEncoding, responseEncoding } = responder\n\n    let data = req.data\n\n    if (requestEncoding) data = c.decode(requestEncoding, data)\n\n    data = await onrequest(req, data)\n\n    if (req.sent) return\n\n    if (responseEncoding) data = c.encode(responseEncoding, data)\n\n    req.reply(data)\n  }\n}\nmodule.exports = {\n  type: {\n    REQUEST: 1,\n    RESPONSE: 2,\n    STREAM: 3\n  },\n  stream: {\n    OPEN: 0x1,\n    CLOSE: 0x2,\n    PAUSE: 0x4,\n    RESUME: 0x8,\n    DATA: 0x10,\n    END: 0x20,\n    DESTROY: 0x40,\n    ERROR: 0x80,\n    REQUEST: 0x100,\n    RESPONSE: 0x200\n  }\n}\nmodule.exports = class RPCError extends Error {\n  constructor(msg, code, fn = RPCError) {\n    super(`${code}: ${msg}`)\n    this.code = code\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, fn)\n    }\n  }\n\n  get name() {\n    return 'RPCError'\n  }\n\n  static UNKNOWN_MESSAGE(msg) {\n    return new RPCError(msg, 'UNKNOWN_MESSAGE', RPCError.UNKNOWN_MESSAGE)\n  }\n\n  static ALREADY_SENT(msg) {\n    return new RPCError(msg, 'ALREADY_SENT', RPCError.ALREADY_SENT)\n  }\n\n  static ALREADY_RECEIVED(msg) {\n    return new RPCError(msg, 'ALREADY_RECEIVED', RPCError.ALREADY_RECEIVED)\n  }\n}\nconst c = require('compact-encoding')\nconst errors = require('./errors')\n\nmodule.exports = class RPCIncomingRequest {\n  constructor(rpc, id, command, data) {\n    this.rpc = rpc\n    this.id = id\n    this.command = command\n    this.data = data\n    this.sent = false\n    this.received = false\n\n    this._requestStream = null\n    this._responseStream = null\n  }\n\n  reply(data, encoding) {\n    if (this.sent) {\n      throw errors.ALREADY_SENT('Response has already been sent')\n    }\n\n    encoding =\n      encoding && encoding !== 'buffer'\n        ? c.from(encoding)\n        : typeof data === 'string'\n          ? c.raw.utf8\n          : null\n\n    this.sent = true\n\n    this.rpc._sendResponse(this, encoding ? c.encode(encoding, data) : data)\n  }\n\n  createResponseStream(opts = {}) {\n    if (this.sent) {\n      throw errors.ALREADY_SENT('Response has already been sent')\n    }\n\n    this.sent = true\n\n    this.rpc._createResponseStream(this, true, opts)\n\n    return this._responseStream\n  }\n\n  createRequestStream(opts = {}) {\n    if (this.received) {\n      throw errors.ALREADY_RECEIVED('Request has already been received')\n    }\n\n    this.received = true\n\n    this.rpc._createRequestStream(this, false, opts)\n\n    return this._requestStream\n  }\n}\nconst { Readable } = require('bare-stream')\nconst { type: t, stream: s } = require('./constants')\n\nmodule.exports = class RPCIncomingStream extends Readable {\n  constructor(rpc, request, type, opts) {\n    super({ ...opts, eagerOpen: true })\n\n    this._rpc = rpc\n    this._request = request\n    this._type = type\n    this._mask = type === t.REQUEST ? s.REQUEST : s.RESPONSE\n  }\n\n  _open(cb) {\n    this._rpc._sendMessage(\n      {\n        type: t.STREAM,\n        id: this._request.id,\n        stream: this._mask | s.OPEN,\n        error: null,\n        data: null\n      },\n      cb\n    )\n  }\n\n  _read() {\n    this._rpc._sendMessage({\n      type: t.STREAM,\n      id: this._request.id,\n      stream: this._mask | s.RESUME,\n      error: null,\n      data: null\n    })\n  }\n\n  _destroy(err, cb) {\n    if (err) {\n      this._rpc._sendMessage(\n        {\n          type: t.STREAM,\n          id: this._request.id,\n          stream: this._mask | s.DESTROY | s.ERROR,\n          error: err,\n          data: null\n        },\n        cb\n      )\n    } else {\n      this._rpc._sendMessage(\n        {\n          type: t.STREAM,\n          id: this._request.id,\n          stream: this._mask | s.DESTROY,\n          error: null,\n          data: null\n        },\n        cb\n      )\n    }\n  }\n}\nconst c = require('compact-encoding')\nconst { type: t, stream: s } = require('./constants')\nconst errors = require('./errors')\n\nconst error = {\n  preencode(state, m) {\n    c.utf8.preencode(state, m.message)\n    c.utf8.preencode(state, m.code || '')\n    c.int.preencode(state, m.errno || 0)\n  },\n  encode(state, m) {\n    c.utf8.encode(state, m.message)\n    c.utf8.encode(state, m.code || '')\n    c.int.encode(state, m.errno || 0)\n  },\n  decode(state) {\n    const err = new Error(`${c.utf8.decode(state)}`)\n    err.code = c.utf8.decode(state)\n    err.errno = c.int.decode(state)\n    return err\n  }\n}\n\nexports.header = {\n  preencode(state, m) {\n    c.uint32.preencode(state, 0) // Frame\n    c.uint.preencode(state, m.type)\n    c.uint.preencode(state, m.id)\n\n    let hasData = false\n\n    switch (m.type) {\n      case t.REQUEST:\n        c.uint.preencode(state, m.command)\n        c.uint.preencode(state, m.stream)\n        if (m.stream === 0) hasData = true\n        break\n\n      case t.RESPONSE:\n        c.bool.preencode(state, !!m.error)\n        c.uint.preencode(state, m.stream)\n\n        if (m.error) error.preencode(state, m.error)\n        else if (m.stream === 0) hasData = true\n        break\n\n      case t.STREAM:\n        c.uint.preencode(state, m.stream)\n\n        if (m.stream & s.ERROR) error.preencode(state, m.error)\n        else if (m.stream & s.DATA) hasData = true\n        break\n    }\n\n    if (hasData) c.uint.preencode(state, m.data ? m.data.byteLength : 0)\n  },\n  encode(state, m) {\n    const frame = state.start\n\n    c.uint32.encode(state, 0) // Frame\n\n    const start = state.start\n\n    c.uint.encode(state, m.type)\n    c.uint.encode(state, m.id)\n\n    let hasData = false\n\n    switch (m.type) {\n      case t.REQUEST:\n        c.uint.encode(state, m.command)\n        c.uint.encode(state, m.stream)\n        if (m.stream === 0) hasData = true\n        break\n\n      case t.RESPONSE:\n        c.bool.encode(state, !!m.error)\n        c.uint.encode(state, m.stream)\n\n        if (m.error) error.encode(state, m.error)\n        else if (m.stream === 0) hasData = true\n        break\n\n      case t.STREAM:\n        c.uint.encode(state, m.stream)\n\n        if (m.stream & s.ERROR) error.encode(state, m.error)\n        else if (m.stream & s.DATA) hasData = true\n        break\n    }\n\n    if (hasData) c.uint.encode(state, m.data ? m.data.byteLength : 0)\n\n    const end = state.start\n\n    state.start = frame\n\n    c.uint32.encode(\n      state,\n      end - start + (hasData && m.data ? m.data.byteLength : 0)\n    )\n\n    state.start = end\n  }\n}\n\nexports.message = {\n  decode(state) {\n    const frame = c.uint32.decode(state)\n\n    if (state.end - state.start < frame) throw new RangeError('Out of bounds')\n\n    const type = c.uint.decode(state)\n    const id = c.uint.decode(state)\n\n    switch (type) {\n      case t.REQUEST: {\n        const command = c.uint.decode(state)\n        const stream = c.uint.decode(state)\n        const data = stream === 0 ? c.buffer.decode(state) : null\n\n        return { type, id, command, stream, data }\n      }\n\n      case t.RESPONSE: {\n        const err = c.bool.decode(state)\n        const stream = c.uint.decode(state)\n\n        if (err) {\n          return { type, id, stream, error: error.decode(state), data: null }\n        }\n\n        if (stream === 0) {\n          return { type, id, stream, error: null, data: c.buffer.decode(state) }\n        }\n\n        return { type, id, stream, error: null, data: null }\n      }\n\n      case t.STREAM:\n        const stream = c.uint.decode(state)\n\n        if (stream & s.ERROR) {\n          return { type, id, stream, error: error.decode(state), data: null }\n        }\n\n        if (stream & s.DATA) {\n          return { type, id, stream, error: null, data: c.buffer.decode(state) }\n        }\n\n        return { type, id, stream, error: null, data: null }\n\n      default:\n        throw errors.UNKNOWN_MESSAGE(`Unknown message '${type}'`)\n    }\n  }\n}\nconst c = require('compact-encoding')\nconst errors = require('./errors')\n\nmodule.exports = class RPCOutgoingRequest {\n  constructor(rpc, id, command) {\n    this.rpc = rpc\n    this.id = id\n    this.command = command\n    this.sent = false\n    this.received = false\n\n    this._promise = new Promise((resolve, reject) => {\n      this._resolve = resolve\n      this._reject = reject\n    })\n\n    this._requestStream = null\n    this._responseStream = null\n  }\n\n  send(data, encoding) {\n    if (this.sent) {\n      throw errors.ALREADY_SENT('Request has already been sent')\n    }\n\n    encoding =\n      encoding && encoding !== 'buffer'\n        ? c.from(encoding)\n        : typeof data === 'string'\n          ? c.raw.utf8\n          : null\n\n    this.sent = true\n\n    this.rpc._sendRequest(this, encoding ? c.encode(encoding, data) : data)\n  }\n\n  reply(encoding) {\n    if (this.received) {\n      throw errors.ALREADY_RECEIVED('Response is already being received')\n    }\n\n    encoding = encoding && encoding !== 'buffer' ? c.from(encoding) : null\n\n    this.received = true\n\n    return encoding\n      ? this._promise.then((data) => c.decode(encoding, data))\n      : this._promise\n  }\n\n  createRequestStream(opts = {}) {\n    if (this.sent) {\n      throw errors.ALREADY_SENT('Request has already been sent')\n    }\n\n    this.sent = true\n\n    this.rpc._createRequestStream(this, true, opts)\n\n    return this._requestStream\n  }\n\n  createResponseStream(opts = {}) {\n    if (this.received) {\n      throw errors.ALREADY_RECEIVED('Response has already been received')\n    }\n\n    this.received = true\n\n    this.rpc._createResponseStream(this, false, opts)\n\n    return this._responseStream\n  }\n}\nconst { Writable } = require('bare-stream')\nconst { type: t, stream: s } = require('./constants')\n\nmodule.exports = class RPCOutgoingStream extends Writable {\n  constructor(rpc, request, type, opts) {\n    super({ ...opts, eagerOpen: true })\n\n    this._rpc = rpc\n    this._request = request\n    this._type = type\n    this._mask = type === t.REQUEST ? s.REQUEST : s.RESPONSE\n\n    this._pendingOpen = null\n  }\n\n  _open(cb) {\n    let pending\n\n    const onflushed = () => {\n      if (pending.has(this._request.id)) {\n        pending.delete(this._request.id)\n\n        cb(null)\n      } else {\n        this._pendingOpen = cb\n      }\n    }\n\n    switch (this._type) {\n      case t.REQUEST:\n        pending = this._rpc._pendingRequests\n\n        this._rpc._sendMessage(\n          {\n            type: t.REQUEST,\n            id: this._request.id,\n            command: this._request.command,\n            stream: s.OPEN,\n            data: null\n          },\n          onflushed\n        )\n        break\n\n      case t.RESPONSE:\n        pending = this._rpc._pendingResponses\n\n        this._rpc._sendMessage(\n          {\n            type: t.RESPONSE,\n            id: this._request.id,\n            error: false,\n            stream: s.OPEN,\n            data: null\n          },\n          onflushed\n        )\n        break\n    }\n  }\n\n  _continueOpen() {\n    if (this._pendingOpen === null) return\n    const cb = this._pendingOpen\n    this._pendingOpen = null\n    cb()\n  }\n\n  _write(data, encoding, cb) {\n    this._rpc._sendMessage(\n      {\n        type: t.STREAM,\n        id: this._request.id,\n        stream: this._mask | s.DATA,\n        error: null,\n        data\n      },\n      cb\n    )\n  }\n\n  _final(cb) {\n    this._rpc._sendMessage(\n      {\n        type: t.STREAM,\n        id: this._request.id,\n        stream: this._mask | s.END,\n        error: null,\n        data: null\n      },\n      cb\n    )\n  }\n\n  _destroy(err, cb) {\n    if (err) {\n      this._rpc._sendMessage(\n        {\n          type: t.STREAM,\n          id: this._request.id,\n          stream: this._mask | s.CLOSE | s.ERROR,\n          error: err,\n          data: null\n        },\n        cb\n      )\n    } else {\n      this._rpc._sendMessage(\n        {\n          type: t.STREAM,\n          id: this._request.id,\n          stream: this._mask | s.CLOSE,\n          error: null,\n          data: null\n        },\n        cb\n      )\n    }\n  }\n}\n{\n  \"name\": \"bare-rpc\",\n  \"version\": \"0.2.12\",\n  \"description\": \"librpc ABI compatible RPC for Bare\",\n  \"exports\": {\n    \".\": {\n      \"types\": \"./index.d.ts\",\n      \"default\": \"./index.js\"\n    },\n    \"./package\": \"./package.json\",\n    \"./errors\": {\n      \"types\": \"./lib/errors.d.ts\",\n      \"default\": \"./lib/errors.js\"\n    }\n  },\n  \"files\": [\n    \"index.js\",\n    \"index.d.ts\",\n    \"lib\"\n  ],\n  \"scripts\": {\n    \"test\": \"prettier . --check && bare test.js\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/holepunchto/bare-rpc.git\"\n  },\n  \"author\": \"Holepunch\",\n  \"license\": \"Apache-2.0\",\n  \"bugs\": {\n    \"url\": \"https://github.com/holepunchto/bare-rpc/issues\"\n  },\n  \"homepage\": \"https://github.com/holepunchto/bare-rpc#readme\",\n  \"dependencies\": {\n    \"b4a\": \"^1.6.6\",\n    \"bare-stream\": \"^2.1.3\",\n    \"compact-encoding\": \"^2.15.0\",\n    \"safety-catch\": \"^1.0.2\"\n  },\n  \"devDependencies\": {\n    \"bare-buffer\": \"^3.0.1\",\n    \"bare-ipc\": \"^1.1.0\",\n    \"brittle\": \"^3.2.1\",\n    \"prettier\": \"^3.4.2\",\n    \"prettier-config-standard\": \"^7.0.0\"\n  },\n  \"peerDependencies\": {\n    \"bare-buffer\": \"*\"\n  },\n  \"peerDependenciesMeta\": {\n    \"bare-buffer\": {\n      \"optional\": true\n    }\n  }\n}\nexports.constants = require('./lib/constants')\nexports.errors = require('./lib/errors')\n\nconst Version = exports.Version = require('./lib/version')\nconst Range = exports.Range = require('./lib/range')\nexports.Comparator = require('./lib/comparator')\n\nexports.satisfies = function satisfies (version, range) {\n  if (typeof version === 'string') version = Version.parse(version)\n  if (typeof range === 'string') range = Range.parse(range)\n\n  return range.test(version)\n}\nconst constants = require('./constants')\n\nconst symbols = {\n  [constants.EQ]: '=',\n  [constants.LT]: '<',\n  [constants.LTE]: '<=',\n  [constants.GT]: '>',\n  [constants.GTE]: '>='\n}\n\nmodule.exports = class Comparator {\n  constructor (operator, version) {\n    this.operator = operator\n    this.version = version\n  }\n\n  test (version) {\n    const result = version.compare(this.version)\n\n    switch (this.operator) {\n      case constants.LT: return result < 0\n      case constants.LTE: return result <= 0\n      case constants.GT: return result > 0\n      case constants.GTE: return result >= 0\n      default: return result === 0\n    }\n  }\n\n  toString () {\n    return symbols[this.operator] + this.version\n  }\n}\nmodule.exports = {\n  EQ: 1,\n  LT: 2,\n  LTE: 3,\n  GT: 4,\n  GTE: 5\n}\nmodule.exports = class SemVerError extends Error {\n  constructor (msg, code, fn = SemVerError) {\n    super(`${code}: ${msg}`)\n    this.code = code\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, fn)\n    }\n  }\n\n  get name () {\n    return 'SemVerError'\n  }\n\n  static INVALID_VERSION (msg, fn = SemVerError.INVALID_VERSION) {\n    return new SemVerError(msg, 'INVALID_VERSION', fn)\n  }\n\n  static INVALID_RANGE (msg, fn = SemVerError.INVALID_RANGE) {\n    return new SemVerError(msg, 'INVALID_RANGE', fn)\n  }\n}\nconst constants = require('./constants')\nconst errors = require('./errors')\nconst Version = require('./version')\nconst Comparator = require('./comparator')\n\nconst Range = module.exports = exports = class Range {\n  constructor (comparators = []) {\n    this.comparators = comparators\n  }\n\n  test (version) {\n    for (const set of this.comparators) {\n      let matches = true\n\n      for (const comparator of set) {\n        if (comparator.test(version)) continue\n        matches = false\n        break\n      }\n\n      if (matches) return true\n    }\n\n    return false\n  }\n\n  toString () {\n    let result = ''\n    let first = true\n\n    for (const set of this.comparators) {\n      if (first) first = false\n      else result += ' || '\n\n      result += set.join(' ')\n    }\n\n    return result\n  }\n}\n\nexports.parse = function parse (input, state = { position: 0, partial: false }) {\n  let i = state.position\n  let c\n\n  const unexpected = (expected) => {\n    let msg\n\n    if (i >= input.length) {\n      msg = `Unexpected end of input in '${input}'`\n    } else {\n      msg = `Unexpected token '${input[i]}' in '${input}' at position ${i}`\n    }\n\n    if (expected) msg += `, ${expected}`\n\n    throw errors.INVALID_VERSION(msg, unexpected)\n  }\n\n  const comparators = []\n\n  while (i < input.length) {\n    const set = []\n\n    while (i < input.length) {\n      c = input[i]\n\n      let operator = constants.EQ\n\n      if (c === '<') {\n        operator = constants.LT\n        c = input[++i]\n\n        if (c === '=') {\n          operator = constants.LTE\n          c = input[++i]\n        }\n      } else if (c === '>') {\n        operator = constants.GT\n        c = input[++i]\n\n        if (c === '=') {\n          operator = constants.GTE\n          c = input[++i]\n        }\n      } else if (c === '=') {\n        c = input[++i]\n      }\n\n      const state = { position: i, partial: true }\n\n      set.push(new Comparator(operator, Version.parse(input, state)))\n\n      c = input[i = state.position]\n\n      while (c === ' ') c = input[++i]\n\n      if (c === '|' && input[i + 1] === '|') {\n        c = input[i += 2]\n\n        while (c === ' ') c = input[++i]\n\n        break\n      }\n\n      if (c && c !== '<' && c !== '>') unexpected('expected \\'||\\', \\'<\\', or \\'>\\'')\n    }\n\n    if (set.length) comparators.push(set)\n  }\n\n  if (i < input.length && state.partial === false) unexpected('expected end of input')\n\n  state.position = i\n\n  return new Range(comparators)\n}\nconst errors = require('./errors')\n\nconst Version = module.exports = exports = class Version {\n  constructor (major, minor, patch, opts = {}) {\n    const {\n      prerelease = [],\n      build = []\n    } = opts\n\n    this.major = major\n    this.minor = minor\n    this.patch = patch\n    this.prerelease = prerelease\n    this.build = build\n  }\n\n  compare (version) {\n    return exports.compare(this, version)\n  }\n\n  toString () {\n    let result = `${this.major}.${this.minor}.${this.patch}`\n\n    if (this.prerelease.length) {\n      result += '-' + this.prerelease.join('.')\n    }\n\n    if (this.build.length) {\n      result += '+' + this.build.join('.')\n    }\n\n    return result\n  }\n}\n\nexports.parse = function parse (input, state = { position: 0, partial: false }) {\n  let i = state.position\n  let c\n\n  const unexpected = (expected) => {\n    let msg\n\n    if (i >= input.length) {\n      msg = `Unexpected end of input in '${input}'`\n    } else {\n      msg = `Unexpected token '${input[i]}' in '${input}' at position ${i}`\n    }\n\n    if (expected) msg += `, ${expected}`\n\n    throw errors.INVALID_VERSION(msg, unexpected)\n  }\n\n  const components = []\n\n  while (components.length < 3) {\n    c = input[i]\n\n    if (components.length > 0) {\n      if (c === '.') c = input[++i]\n      else unexpected('expected \\'.\\'')\n    }\n\n    if (c === '0') {\n      components.push(0)\n\n      i++\n    } else if (c >= '1' && c <= '9') {\n      let j = 0\n      do c = input[i + ++j]\n      while (c >= '0' && c <= '9')\n\n      components.push(parseInt(input.substring(i, i + j)))\n\n      i += j\n    } else unexpected('expected /[0-9]/')\n  }\n\n  const prerelease = []\n\n  if (input[i] === '-') {\n    i++\n\n    while (true) {\n      c = input[i]\n\n      let tag = ''\n      let j = 0\n\n      while (c >= '0' && c <= '9') c = input[i + ++j]\n\n      let isNumeric = false\n\n      if (j) {\n        tag += input.substring(i, i + j)\n\n        c = input[i += j]\n\n        isNumeric = tag[0] !== '0' || tag.length === 1\n      }\n\n      j = 0\n\n      while ((c >= '0' && c <= '9') || (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z') || c === '-') c = input[i + ++j]\n\n      if (j) {\n        tag += input.substring(i, i + j)\n\n        c = input[i += j]\n      } else if (!isNumeric) unexpected('expected /[a-zA-Z-]/')\n\n      prerelease.push(tag)\n\n      if (c === '.') c = input[++i]\n      else break\n    }\n  }\n\n  const build = []\n\n  if (input[i] === '+') {\n    i++\n\n    while (true) {\n      c = input[i]\n\n      let tag = ''\n      let j = 0\n\n      while ((c >= '0' && c <= '9') || (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z') || c === '-') c = input[i + ++j]\n\n      if (j) {\n        tag += input.substring(i, i + j)\n\n        c = input[i += j]\n      } else unexpected('expected /[0-9a-zA-Z-]/')\n\n      build.push(tag)\n\n      if (c === '.') c = input[++i]\n      else break\n    }\n  }\n\n  if (i < input.length && state.partial === false) unexpected('expected end of input')\n\n  state.position = i\n\n  return new Version(...components, { prerelease, build })\n}\n\nconst integer = /^[0-9]+$/\n\nexports.compare = function compare (a, b) {\n  if (a.major > b.major) return 1\n  if (a.major < b.major) return -1\n\n  if (a.minor > b.minor) return 1\n  if (a.minor < b.minor) return -1\n\n  if (a.patch > b.patch) return 1\n  if (a.patch < b.patch) return -1\n\n  if (a.prerelease.length === 0) return b.prerelease.length === 0 ? 0 : 1\n  if (b.prerelease.length === 0) return -1\n\n  let i = 0\n  do {\n    let x = a.prerelease[i]\n    let y = b.prerelease[i]\n\n    if (x === undefined) return y === undefined ? 0 : -1\n    if (y === undefined) return 1\n\n    if (x === y) continue\n\n    const xInt = integer.test(x)\n    const yInt = integer.test(y)\n\n    if (xInt && yInt) {\n      x = +x\n      y = +y\n    } else {\n      if (xInt) return -1\n      if (yInt) return 1\n    }\n\n    return x > y ? 1 : -1\n  } while (++i)\n}\n{\n  \"name\": \"bare-semver\",\n  \"version\": \"1.0.1\",\n  \"description\": \"Minimal semantic versioning library for Bare\",\n  \"exports\": {\n    \".\": \"./index.js\",\n    \"./package\": \"./package.json\",\n    \"./constants\": \"./lib/constants.js\",\n    \"./errors\": \"./lib/errors.js\",\n    \"./version\": \"./lib/version.js\",\n    \"./range\": \"./lib/range.js\",\n    \"./comparator\": \"./lib/comparator.js\"\n  },\n  \"files\": [\n    \"index.js\",\n    \"lib\"\n  ],\n  \"scripts\": {\n    \"test\": \"standard && bare test.js\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/holepunchto/bare-semver.git\"\n  },\n  \"author\": \"Holepunch\",\n  \"license\": \"Apache-2.0\",\n  \"bugs\": {\n    \"url\": \"https://github.com/holepunchto/bare-semver/issues\"\n  },\n  \"homepage\": \"https://github.com/holepunchto/bare-semver#readme\",\n  \"devDependencies\": {\n    \"brittle\": \"^3.2.1\",\n    \"standard\": \"^17.0.0\"\n  }\n}\nconst stream = require('streamx')\n\nconst defaultEncoding = 'utf8'\n\nmodule.exports = exports = stream.Stream\n\nexports.pipeline = stream.pipeline\n\nexports.isStream = stream.isStream\nexports.isEnded = stream.isEnded\nexports.isFinished = stream.isFinished\nexports.isDisturbed = stream.isDisturbed\n\nexports.getStreamError = stream.getStreamError\n\nexports.Stream = exports\n\nexports.Readable = class Readable extends stream.Readable {\n  constructor(opts = {}) {\n    super({\n      ...opts,\n      byteLength: null,\n      byteLengthReadable: null,\n      map: null,\n      mapReadable: null\n    })\n\n    if (this._construct) this._open = this._construct\n\n    if (this._read !== stream.Readable.prototype._read) {\n      this._read = read.bind(this, this._read)\n    }\n\n    if (this._destroy !== stream.Stream.prototype._destroy) {\n      this._destroy = destroy.bind(this, this._destroy)\n    }\n  }\n\n  push(chunk, encoding) {\n    if (typeof chunk === 'string') {\n      chunk = Buffer.from(chunk, encoding || defaultEncoding)\n    }\n\n    return super.push(chunk)\n  }\n\n  unshift(chunk, encoding) {\n    if (typeof chunk === 'string') {\n      chunk = Buffer.from(chunk, encoding || defaultEncoding)\n    }\n\n    super.unshift(chunk)\n  }\n}\n\nexports.Writable = class Writable extends stream.Writable {\n  constructor(opts = {}) {\n    super({\n      ...opts,\n      byteLength: null,\n      byteLengthWritable,\n      map: null,\n      mapWritable: null\n    })\n\n    if (this._construct) this._open = this._construct\n\n    if (this._write !== stream.Writable.prototype._write) {\n      this._write = write.bind(this, this._write)\n    }\n\n    if (this._destroy !== stream.Stream.prototype._destroy) {\n      this._destroy = destroy.bind(this, this._destroy)\n    }\n  }\n\n  write(chunk, encoding, cb) {\n    if (typeof encoding === 'function') {\n      cb = encoding\n      encoding = null\n    }\n\n    if (typeof chunk === 'string') {\n      encoding = encoding || defaultEncoding\n      chunk = Buffer.from(chunk, encoding)\n    } else {\n      encoding = 'buffer'\n    }\n\n    const result = super.write({ chunk, encoding })\n\n    if (cb) stream.Writable.drained(this).then(() => cb(null), cb)\n\n    return result\n  }\n\n  end(chunk, encoding, cb) {\n    if (typeof chunk === 'function') {\n      cb = chunk\n      chunk = null\n    } else if (typeof encoding === 'function') {\n      cb = encoding\n      encoding = null\n    }\n\n    if (typeof chunk === 'string') {\n      encoding = encoding || defaultEncoding\n      chunk = Buffer.from(chunk, encoding || defaultEncoding)\n    } else {\n      encoding = 'buffer'\n    }\n\n    const result =\n      chunk !== undefined && chunk !== null\n        ? super.end({ chunk, encoding })\n        : super.end()\n\n    if (cb) this.once('finish', () => cb(null))\n\n    return result\n  }\n}\n\nexports.Duplex = class Duplex extends stream.Duplex {\n  constructor(opts = {}) {\n    super({\n      ...opts,\n      byteLength: null,\n      byteLengthReadable: null,\n      byteLengthWritable,\n      map: null,\n      mapReadable: null,\n      mapWritable: null\n    })\n\n    if (this._construct) this._open = this._construct\n\n    if (this._read !== stream.Readable.prototype._read) {\n      this._read = read.bind(this, this._read)\n    }\n\n    if (this._write !== stream.Duplex.prototype._write) {\n      this._write = write.bind(this, this._write)\n    }\n\n    if (this._destroy !== stream.Stream.prototype._destroy) {\n      this._destroy = destroy.bind(this, this._destroy)\n    }\n  }\n\n  push(chunk, encoding) {\n    if (typeof chunk === 'string') {\n      chunk = Buffer.from(chunk, encoding || defaultEncoding)\n    }\n\n    return super.push(chunk)\n  }\n\n  unshift(chunk, encoding) {\n    if (typeof chunk === 'string') {\n      chunk = Buffer.from(chunk, encoding || defaultEncoding)\n    }\n\n    super.unshift(chunk)\n  }\n\n  write(chunk, encoding, cb) {\n    if (typeof encoding === 'function') {\n      cb = encoding\n      encoding = null\n    }\n\n    if (typeof chunk === 'string') {\n      encoding = encoding || defaultEncoding\n      chunk = Buffer.from(chunk, encoding)\n    } else {\n      encoding = 'buffer'\n    }\n\n    const result = super.write({ chunk, encoding })\n\n    if (cb) stream.Writable.drained(this).then(() => cb(null), cb)\n\n    return result\n  }\n\n  end(chunk, encoding, cb) {\n    if (typeof chunk === 'function') {\n      cb = chunk\n      chunk = null\n    } else if (typeof encoding === 'function') {\n      cb = encoding\n      encoding = null\n    }\n\n    if (typeof chunk === 'string') {\n      encoding = encoding || defaultEncoding\n      chunk = Buffer.from(chunk, encoding)\n    } else {\n      encoding = 'buffer'\n    }\n\n    const result =\n      chunk !== undefined && chunk !== null\n        ? super.end({ chunk, encoding })\n        : super.end()\n\n    if (cb) this.once('finish', () => cb(null))\n\n    return result\n  }\n}\n\nexports.Transform = class Transform extends stream.Transform {\n  constructor(opts = {}) {\n    super({\n      ...opts,\n      byteLength: null,\n      byteLengthReadable: null,\n      byteLengthWritable,\n      map: null,\n      mapReadable: null,\n      mapWritable: null\n    })\n\n    if (this._transform !== stream.Transform.prototype._transform) {\n      this._transform = transform.bind(this, this._transform)\n    } else {\n      this._transform = passthrough\n    }\n  }\n\n  push(chunk, encoding) {\n    if (typeof chunk === 'string') {\n      chunk = Buffer.from(chunk, encoding || defaultEncoding)\n    }\n\n    return super.push(chunk)\n  }\n\n  unshift(chunk, encoding) {\n    if (typeof chunk === 'string') {\n      chunk = Buffer.from(chunk, encoding || defaultEncoding)\n    }\n\n    super.unshift(chunk)\n  }\n\n  write(chunk, encoding, cb) {\n    if (typeof encoding === 'function') {\n      cb = encoding\n      encoding = null\n    }\n\n    if (typeof chunk === 'string') {\n      encoding = encoding || defaultEncoding\n      chunk = Buffer.from(chunk, encoding)\n    } else {\n      encoding = 'buffer'\n    }\n\n    const result = super.write({ chunk, encoding })\n\n    if (cb) stream.Writable.drained(this).then(() => cb(null), cb)\n\n    return result\n  }\n\n  end(chunk, encoding, cb) {\n    if (typeof chunk === 'function') {\n      cb = chunk\n      chunk = null\n    } else if (typeof encoding === 'function') {\n      cb = encoding\n      encoding = null\n    }\n\n    if (typeof chunk === 'string') {\n      encoding = encoding || defaultEncoding\n      chunk = Buffer.from(chunk, encoding)\n    } else {\n      encoding = 'buffer'\n    }\n\n    const result =\n      chunk !== undefined && chunk !== null\n        ? super.end({ chunk, encoding })\n        : super.end()\n\n    if (cb) this.once('finish', () => cb(null))\n\n    return result\n  }\n}\n\nexports.PassThrough = class PassThrough extends exports.Transform {}\n\nexports.finished = function finished(stream, opts, cb) {\n  if (typeof opts === 'function') {\n    cb = opts\n    opts = {}\n  }\n\n  if (!opts) opts = {}\n\n  const { cleanup = false } = opts\n\n  const done = () => {\n    cb(exports.getStreamError(stream, { all: true }))\n\n    if (cleanup) detach()\n  }\n\n  const detach = () => {\n    stream.off('close', done)\n    stream.off('error', noop)\n  }\n\n  if (stream.destroyed) {\n    done()\n  } else {\n    stream.on('close', done)\n    stream.on('error', noop)\n  }\n\n  return detach\n}\n\nfunction read(read, cb) {\n  read.call(this, 65536)\n\n  cb(null)\n}\n\nfunction write(write, data, cb) {\n  write.call(this, data.chunk, data.encoding, cb)\n}\n\nfunction transform(transform, data, cb) {\n  transform.call(this, data.chunk, data.encoding, cb)\n}\n\nfunction destroy(destroy, cb) {\n  destroy.call(this, exports.getStreamError(this), cb)\n}\n\nfunction passthrough(data, cb) {\n  cb(null, data.chunk)\n}\n\nfunction byteLengthWritable(data) {\n  return data.chunk.byteLength\n}\n\nfunction noop() {}\n{\n  \"name\": \"bare-stream\",\n  \"version\": \"2.7.0\",\n  \"description\": \"Streaming data for JavaScript\",\n  \"exports\": {\n    \".\": {\n      \"types\": \"./index.d.ts\",\n      \"default\": \"./index.js\"\n    },\n    \"./package\": \"./package.json\",\n    \"./promises\": \"./promises.js\",\n    \"./web\": {\n      \"types\": \"./web.d.ts\",\n      \"default\": \"./web.js\"\n    },\n    \"./global\": \"./global.js\"\n  },\n  \"files\": [\n    \"index.js\",\n    \"index.d.ts\",\n    \"promises.js\",\n    \"web.js\",\n    \"web.d.ts\",\n    \"global.js\"\n  ],\n  \"scripts\": {\n    \"test\": \"prettier . --check && bare test.js\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/holepunchto/bare-stream.git\"\n  },\n  \"author\": \"Holepunch\",\n  \"license\": \"Apache-2.0\",\n  \"bugs\": {\n    \"url\": \"https://github.com/holepunchto/bare-stream/issues\"\n  },\n  \"homepage\": \"https://github.com/holepunchto/bare-stream#readme\",\n  \"dependencies\": {\n    \"streamx\": \"^2.21.0\"\n  },\n  \"devDependencies\": {\n    \"bare-buffer\": \"^3.0.0\",\n    \"bare-events\": \"^2.5.4\",\n    \"brittle\": \"^3.5.2\",\n    \"prettier\": \"^3.3.3\",\n    \"prettier-config-standard\": \"^7.0.0\"\n  },\n  \"peerDependencies\": {\n    \"bare-buffer\": \"*\",\n    \"bare-events\": \"*\"\n  },\n  \"peerDependenciesMeta\": {\n    \"bare-buffer\": {\n      \"optional\": true\n    },\n    \"bare-events\": {\n      \"optional\": true\n    }\n  }\n}\nmodule.exports = require.addon()\nconst path = require('bare-path')\nconst binding = require('./binding')\nconst errors = require('./lib/errors')\nconst URLSearchParams = require('./lib/url-search-params')\n\nconst kind = Symbol.for('bare.url.kind')\n\nconst isWindows = Bare.platform === 'win32'\n\nmodule.exports = exports = class URL {\n  static get [kind]() {\n    return 0 // Compatibility version\n  }\n\n  constructor(input, base, opts = {}) {\n    if (arguments.length === 0) throw errors.INVALID_URL()\n\n    input = String(input)\n\n    if (base !== undefined) base = String(base)\n\n    this._components = new Uint32Array(8)\n\n    this._parse(input, base, opts.throw !== false)\n\n    if (this._href) this._params = new URLSearchParams(this.search, this)\n  }\n\n  get [kind]() {\n    return URL[kind]\n  }\n\n  // https://url.spec.whatwg.org/#dom-url-href\n\n  get href() {\n    return this._href\n  }\n\n  set href(value) {\n    this._update(value)\n\n    this._params._parse(this.search)\n  }\n\n  // https://url.spec.whatwg.org/#dom-url-protocol\n\n  get protocol() {\n    return this._slice(0, this._components[0]) + ':'\n  }\n\n  set protocol(value) {\n    this._update(\n      this._replace(value.replace(/:+$/, ''), 0, this._components[0])\n    )\n  }\n\n  // https://url.spec.whatwg.org/#dom-url-username\n\n  get username() {\n    return this._slice(this._components[0] + 3 /* :// */, this._components[1])\n  }\n\n  set username(value) {\n    if (cannotHaveCredentialsOrPort(this)) {\n      return\n    }\n\n    if (this.username === '') value += '@'\n\n    this._update(\n      this._replace(\n        value,\n        this._components[0] + 3 /* :// */,\n        this._components[1]\n      )\n    )\n  }\n\n  // https://url.spec.whatwg.org/#dom-url-password\n\n  get password() {\n    return this._href.slice(\n      this._components[1] + 1 /* : */,\n      this._components[2] - 1 /* @ */\n    )\n  }\n\n  set password(value) {\n    if (cannotHaveCredentialsOrPort(this)) {\n      return\n    }\n\n    let start = this._components[1] + 1 /* : */\n    let end = this._components[2] - 1 /* @ */\n\n    if (this.password === '') {\n      value = ':' + value\n      start--\n    }\n\n    if (this.username === '') {\n      value += '@'\n      end++\n    }\n\n    this._update(this._replace(value, start, end))\n  }\n\n  // https://url.spec.whatwg.org/#dom-url-host\n\n  get host() {\n    return this._slice(this._components[2], this._components[5])\n  }\n\n  set host(value) {\n    if (hasOpaquePath(this)) {\n      return\n    }\n\n    this._update(\n      this._replace(\n        value,\n        this._components[2],\n        this._components[value.includes(':') ? 5 : 3]\n      )\n    )\n  }\n\n  // https://url.spec.whatwg.org/#dom-url-hostname\n\n  get hostname() {\n    return this._slice(this._components[2], this._components[3])\n  }\n\n  set hostname(value) {\n    if (hasOpaquePath(this)) {\n      return\n    }\n\n    this._update(this._replace(value, this._components[2], this._components[3]))\n  }\n\n  // https://url.spec.whatwg.org/#dom-url-port\n\n  get port() {\n    return this._slice(this._components[3] + 1 /* : */, this._components[5])\n  }\n\n  set port(value) {\n    if (cannotHaveCredentialsOrPort(this)) {\n      return\n    }\n\n    let start = this._components[3] + 1 /* : */\n\n    if (this.port === '') {\n      value = ':' + value\n      start--\n    }\n\n    this._update(this._replace(value, start, this._components[5]))\n  }\n\n  // https://url.spec.whatwg.org/#dom-url-pathname\n\n  get pathname() {\n    return this._slice(this._components[5], this._components[6] - 1 /* ? */)\n  }\n\n  set pathname(value) {\n    if (hasOpaquePath(this)) {\n      return\n    }\n\n    if (value[0] !== '/' && value[0] !== '\\\\') {\n      value = '/' + value\n    }\n\n    this._update(\n      this._replace(value, this._components[5], this._components[6] - 1 /* ? */)\n    )\n  }\n\n  // https://url.spec.whatwg.org/#dom-url-search\n\n  get search() {\n    return this._slice(\n      this._components[6] - 1 /* ? */,\n      this._components[7] - 1 /* # */\n    )\n  }\n\n  set search(value) {\n    if (value && value[0] !== '?') value = '?' + value\n\n    this._update(\n      this._replace(\n        value,\n        this._components[6] - 1 /* ? */,\n        this._components[7] - 1 /* # */\n      )\n    )\n\n    this._params._parse(this.search)\n  }\n\n  // https://url.spec.whatwg.org/#dom-url-searchparams\n\n  get searchParams() {\n    return this._params\n  }\n\n  // https://url.spec.whatwg.org/#dom-url-hash\n\n  get hash() {\n    return this._slice(this._components[7] - 1 /* # */)\n  }\n\n  set hash(value) {\n    if (value && value[0] !== '#') value = '#' + value\n\n    this._update(this._replace(value, this._components[7] - 1 /* # */))\n  }\n\n  toString() {\n    return this._href\n  }\n\n  toJSON() {\n    return this._href\n  }\n\n  [Symbol.for('bare.inspect')]() {\n    return {\n      __proto__: { constructor: URL },\n\n      href: this.href,\n      protocol: this.protocol,\n      username: this.username,\n      password: this.password,\n      host: this.host,\n      hostname: this.hostname,\n      port: this.port,\n      pathname: this.pathname,\n      search: this.search,\n      searchParams: this.searchParams,\n      hash: this.hash\n    }\n  }\n\n  _slice(start, end = this._href.length) {\n    return this._href.slice(start, end)\n  }\n\n  _replace(replacement, start, end = this._href.length) {\n    return this._slice(0, start) + replacement + this._slice(end)\n  }\n\n  _parse(input, base, shouldThrow) {\n    try {\n      this._href = binding.parse(\n        String(input),\n        base ? String(base) : null,\n        this._components,\n        shouldThrow\n      )\n    } catch (err) {\n      if (err instanceof TypeError) throw err\n\n      throw errors.INVALID_URL()\n    }\n  }\n\n  _update(input) {\n    try {\n      this._parse(input, null, true)\n    } catch (err) {\n      if (err instanceof TypeError) throw err\n    }\n  }\n}\n\n// https://url.spec.whatwg.org/#url-opaque-path\nfunction hasOpaquePath(url) {\n  return url.pathname[0] !== '/'\n}\n\n// https://url.spec.whatwg.org/#cannot-have-a-username-password-port\nfunction cannotHaveCredentialsOrPort(url) {\n  return url.hostname === '' || url.protocol === 'file:'\n}\n\nconst URL = exports\n\nexports.URL = URL\nexports.URLSearchParams = URLSearchParams\n\nexports.errors = errors\n\nexports.isURL = function isURL(value) {\n  if (value instanceof URL) return true\n\n  return (\n    typeof value === 'object' && value !== null && value[kind] === URL[kind]\n  )\n}\n\n// https://url.spec.whatwg.org/#dom-url-parse\nexports.parse = function parse(input, base) {\n  const url = new URL(input, base, { throw: false })\n  return url._href ? url : null\n}\n\n// https://url.spec.whatwg.org/#dom-url-canparse\nexports.canParse = function canParse(input, base) {\n  return binding.canParse(String(input), base ? String(base) : null)\n}\n\nexports.fileURLToPath = function fileURLToPath(url) {\n  if (typeof url === 'string') {\n    url = new URL(url)\n  }\n\n  if (url.protocol !== 'file:') {\n    throw errors.INVALID_URL_SCHEME('The URL must use the file: protocol')\n  }\n\n  if (isWindows) {\n    if (/%2f|%5c/i.test(url.pathname)) {\n      throw errors.INVALID_FILE_URL_PATH(\n        'The file: URL path must not include encoded \\\\ or / characters'\n      )\n    }\n  } else {\n    if (url.hostname) {\n      throw errors.INVALID_FILE_URL_HOST(\n        \"The file: URL host must be 'localhost' or empty\"\n      )\n    }\n\n    if (/%2f/i.test(url.pathname)) {\n      throw errors.INVALID_FILE_URL_PATH(\n        'The file: URL path must not include encoded / characters'\n      )\n    }\n  }\n\n  const pathname = path.normalize(decodeURIComponent(url.pathname))\n\n  if (isWindows) {\n    if (url.hostname) return '\\\\\\\\' + url.hostname + pathname\n\n    const letter = pathname.charCodeAt(1) | 0x20\n\n    if (\n      letter < 0x61 /* a */ ||\n      letter > 0x7a /* z */ ||\n      pathname.charCodeAt(2) !== 0x3a /* : */\n    ) {\n      throw errors.INVALID_FILE_URL_PATH('The file: URL path must be absolute')\n    }\n\n    return pathname.slice(1)\n  }\n\n  return pathname\n}\n\nexports.pathToFileURL = function pathToFileURL(pathname) {\n  let resolved = path.resolve(pathname)\n\n  if (pathname[pathname.length - 1] === '/') {\n    resolved += '/'\n  } else if (isWindows && pathname[pathname.length - 1] === '\\\\') {\n    resolved += '\\\\'\n  }\n\n  resolved = resolved\n    .replaceAll('%', '%25') // Must be first\n    .replaceAll('#', '%23')\n    .replaceAll('?', '%3f')\n    .replaceAll('\\n', '%0a')\n    .replaceAll('\\r', '%0d')\n    .replaceAll('\\t', '%09')\n\n  if (!isWindows) {\n    resolved = resolved.replaceAll('\\\\', '%5c')\n  }\n\n  return new URL('file:' + resolved)\n}\nmodule.exports = class URLError extends Error {\n  constructor(msg, code, fn = URLError) {\n    super(`${code}: ${msg}`)\n    this.code = code\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, fn)\n    }\n  }\n\n  get name() {\n    return 'URLError'\n  }\n\n  static INVALID_URL(msg = 'Invalid URL') {\n    return new URLError(msg, 'INVALID_URL', URLError.INVALID_URL)\n  }\n\n  static INVALID_URL_SCHEME(msg = 'Invalid URL') {\n    return new URLError(msg, 'INVALID_URL_SCHEME', URLError.INVALID_URL_SCHEME)\n  }\n\n  static INVALID_FILE_URL_HOST(msg = 'Invalid file: URL host') {\n    return new URLError(\n      msg,\n      'INVALID_FILE_URL_HOST',\n      URLError.INVALID_FILE_URL_HOST\n    )\n  }\n\n  static INVALID_FILE_URL_PATH(msg = 'Invalid file: URL path') {\n    return new URLError(\n      msg,\n      'INVALID_FILE_URL_PATH',\n      URLError.INVALID_FILE_URL_PATH\n    )\n  }\n}\nmodule.exports = class URLSearchParams {\n  static _urls = new WeakMap()\n\n  // https://url.spec.whatwg.org/#dom-urlsearchparams-urlsearchparams\n  constructor(init, url = null) {\n    this._params = new Map()\n\n    if (url) URLSearchParams._urls.set(this, url)\n\n    if (typeof init === 'string') {\n      this._parse(init)\n    } else if (init) {\n      for (const [name, value] of typeof init[Symbol.iterator] === 'function'\n        ? init\n        : Object.entries(init)) {\n        this.append(name, value)\n      }\n    }\n  }\n\n  // https://url.spec.whatwg.org/#dom-urlsearchparams-size\n  get size() {\n    return this._params.length\n  }\n\n  // https://url.spec.whatwg.org/#dom-urlsearchparams-append\n  append(name, value = null) {\n    if (value === null) return\n\n    let list = this._params.get(name)\n\n    if (list === undefined) {\n      list = []\n      this._params.set(name, list)\n    }\n\n    list.push(value)\n\n    this._update()\n  }\n\n  // https://url.spec.whatwg.org/#dom-urlsearchparams-delete\n  delete(name, value = null) {\n    if (value === null) this._params.delete(name)\n    else {\n      let list = this._params.get(name)\n\n      if (list === undefined) return\n\n      list = list.filter((found) => found !== value)\n\n      if (list.length === 0) this._params.delete(name)\n      else this._params.set(name, list)\n    }\n\n    this._update()\n  }\n\n  // https://url.spec.whatwg.org/#dom-urlsearchparams-get\n  get(name) {\n    const list = this._params.get(name)\n\n    if (list === undefined) return null\n\n    return list[0]\n  }\n\n  // https://url.spec.whatwg.org/#dom-urlsearchparams-getall\n  getAll(name) {\n    const list = this._params.get(name)\n\n    if (list === undefined) return []\n\n    return Array.from(list)\n  }\n\n  // https://url.spec.whatwg.org/#dom-urlsearchparams-has\n  has(name, value = null) {\n    const list = this._params.get(name)\n\n    if (list === undefined) return false\n\n    if (value === null) return true\n\n    return list.includes(value)\n  }\n\n  // https://url.spec.whatwg.org/#dom-urlsearchparams-set\n  set(name, value = null) {\n    if (value === null) this._params.delete(name)\n    else this._params.set(name, [value])\n\n    this._update()\n  }\n\n  toString() {\n    return this._serialize()\n  }\n\n  toJSON() {\n    return [...this]\n  }\n\n  *[Symbol.iterator]() {\n    for (const [name, values] of this._params) {\n      for (const value of values) yield [name, value]\n    }\n  }\n\n  [Symbol.for('bare.inspect')]() {\n    const object = {\n      __proto__: { constructor: URLSearchParams }\n    }\n\n    for (const [name, values] of this._params) {\n      if (values.length === 1) object[name] = values[0]\n      else object[name] = values\n    }\n\n    return object\n  }\n\n  // https://url.spec.whatwg.org/#concept-urlsearchparams-update\n  _update() {\n    const url = URLSearchParams._urls.get(this)\n\n    if (url === undefined) return\n\n    url.search = this._serialize()\n  }\n\n  // https://url.spec.whatwg.org/#concept-urlencoded-parser\n  _parse(input) {\n    if (input[0] === '?') input = input.substring(1)\n\n    this._params = new Map()\n\n    for (const sequence of input.split('&')) {\n      if (sequence.length === 0) continue\n\n      let i = sequence.indexOf('=')\n      if (i === -1) i = sequence.length\n\n      const name = decodeURIComponent(sequence.substring(0, i))\n      const value = decodeURIComponent(\n        sequence.substring(i + 1, sequence.length)\n      )\n\n      let list = this._params.get(name)\n\n      if (list === undefined) {\n        list = []\n        this._params.set(name, list)\n      }\n\n      list.push(value)\n    }\n  }\n\n  // https://url.spec.whatwg.org/#concept-urlencoded-serializer\n  _serialize() {\n    let output = ''\n\n    for (let [name, values] of this._params) {\n      name = encodeURIComponent(name)\n\n      for (const value of values) {\n        if (output) output += '&'\n\n        output += name + '=' + encodeURIComponent(value)\n      }\n    }\n\n    return output\n  }\n}\n{\n  \"name\": \"bare-url\",\n  \"version\": \"2.2.2\",\n  \"description\": \"WHATWG URL implementation for JavaScript\",\n  \"exports\": {\n    \"./package\": \"./package.json\",\n    \".\": {\n      \"types\": \"./index.d.ts\",\n      \"default\": \"./index.js\"\n    },\n    \"./global\": {\n      \"types\": \"./global.d.ts\",\n      \"default\": \"./global.js\"\n    }\n  },\n  \"files\": [\n    \"index.js\",\n    \"index.d.ts\",\n    \"global.js\",\n    \"global.d.ts\",\n    \"binding.c\",\n    \"binding.js\",\n    \"CMakeLists.txt\",\n    \"lib\",\n    \"prebuilds\"\n  ],\n  \"addon\": true,\n  \"scripts\": {\n    \"test\": \"prettier . --check && bare test.js\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/holepunchto/bare-url.git\"\n  },\n  \"author\": \"Holepunch\",\n  \"license\": \"Apache-2.0\",\n  \"bugs\": {\n    \"url\": \"https://github.com/holepunchto/bare-url/issues\"\n  },\n  \"homepage\": \"https://github.com/holepunchto/bare-url\",\n  \"dependencies\": {\n    \"bare-path\": \"^3.0.0\"\n  },\n  \"devDependencies\": {\n    \"brittle\": \"^3.3.2\",\n    \"cmake-bare\": \"^1.1.6\",\n    \"cmake-fetch\": \"^1.0.0\",\n    \"prettier\": \"^3.3.3\",\n    \"prettier-config-standard\": \"^7.0.0\"\n  }\n}\nconst sodium = require('sodium-universal')\nconst b4a = require('b4a')\nconst assert = require('nanoassert')\nconst { detectLanguage, loadWordlist } = require('./wordlist')\n\nmodule.exports = {\n  generateEntropy,\n  generateMnemonic,\n  normalizeMnemonic,\n  validateMnemonic,\n  mnemonicToEntropy,\n  mnemonicToSeed,\n  entropyToMnemonic\n}\n\nfunction generateMnemonic ({ entropy = generateEntropy(), language = 'english' } = {}) {\n  const wordlist = loadWordlist(language)\n  const extended = computeCheckSum(entropy)\n\n  const words = []\n\n  for (const index of uint11Reader(extended)) {\n    words.push(wordlist[index])\n  }\n\n  const delimiter = language === 'japanese' ? '\\u3000' : ' '\n\n  return words.join(delimiter).trim()\n}\n\nfunction entropyToMnemonic (entropy, { language = 'english' } = {}) {\n  return generateMnemonic({ entropy, language })\n}\n\nfunction mnemonicToEntropy (mnemonic) {\n  const words = mnemonic.replace(/\\u3000/g, ' ').trim().split(' ')\n  const language = detectLanguage(words)\n\n  if (!language) {\n    throw new Error('Language not recognised')\n  }\n\n  if (words.length % 3 !== 0) {\n    throw new Error('Invalid length')\n  }\n\n  const wordlist = loadWordlist(language)\n\n  const indexes = []\n  for (const word of words) {\n    const index = wordlist.indexOf(word)\n    if (index === -1) {\n      throw new Error('Bad word')\n    }\n\n    indexes.push(index)\n  }\n\n  const bits = words.length * 11\n  const len = (bits * 32 / 33) >> 3\n\n  const extended = b4a.alloc(Math.ceil(bits / 8))\n  const entropy = extended.subarray(0, len)\n\n  uint11Writer(extended, indexes)\n\n  if (!b4a.equals(extended, computeCheckSum(entropy))) {\n    throw new Error('Invalid checksum')\n  }\n\n  return entropy\n}\n\nfunction normalizeMnemonic (mnemonic) {\n  return mnemonic.trim().replace(/\\u3000/, ' ').split(/\\s+/).map(c => c.toLowerCase()).join(' ')\n}\n\nasync function mnemonicToSeed (mnemonic, passphrase = '') {\n  mnemonic = normalizeMnemonic(mnemonic)\n\n  if (!validateMnemonic(mnemonic)) {\n    throw new Error('Invalid mnemonic')\n  }\n\n  const input = b4a.from(mnemonic)\n  const salt = b4a.from('mnemonic' + passphrase)\n\n  const output = b4a.alloc(64)\n\n  await sodium.extension_pbkdf2_sha512_async(\n    output,\n    input,\n    salt,\n    2048,\n    64\n  )\n\n  return output\n}\n\nfunction validateMnemonic (mnemonic) {\n  try {\n    mnemonicToEntropy(mnemonic)\n  } catch (e) {\n    return false\n  }\n  return true\n}\n\nfunction sha256 (data, output = b4a.alloc(32)) {\n  sodium.crypto_hash_sha256(output, data)\n  return output\n}\n\nfunction computeCheckSum (seed) {\n  assert((seed.byteLength & 4) === 0, 'seed must be a multiple of 4 bytes')\n\n  const len = seed.byteLength\n  const cklen = len >> 2 // cksum bits\n  const total = len + Math.ceil(cklen / 8)\n\n  const output = b4a.alloc(len + 32)\n  output.set(seed)\n\n  const entropy = output.subarray(0, len)\n  const cksum = output.subarray(len)\n\n  sha256(entropy, cksum)\n\n  // only append cklen bits\n  output[total - 1] &= (0xff ^ (0xff >> cklen))\n\n  return output.subarray(0, total)\n}\n\nfunction generateEntropy (length = 32) {\n  const seed = b4a.alloc(length)\n  sodium.randombytes_buf(seed)\n\n  return seed\n}\n\nfunction * uint11Reader (state) {\n  yield * uintReader(state, 11)\n}\n\nfunction uint11Writer (buf, uints) {\n  return uintWriter(buf, uints, 11)\n}\n\nfunction * uintReader (buffer, width) {\n  const MASK = (2 << (width - 1)) - 1\n\n  let pos = 0\n  let value = 0\n\n  while (true) {\n    const offset = pos >> 3 // byte offset\n\n    if (offset >= buffer.byteLength) {\n      return value & MASK\n    }\n\n    const height = width - (pos % width)\n    const leftover = (offset + 1) * 8 - pos\n\n    value += shift(buffer[offset], height - leftover)\n\n    pos += Math.min(height, leftover)\n    if (pos % width) continue\n\n    yield value & MASK\n\n    value = 0\n  }\n}\n\nfunction uintWriter (buffer, uints, width) {\n  let pos = 0\n\n  while (true) {\n    const offset = pos >> 3 // byte offset\n\n    const i = Math.floor(pos / width)\n    if (i >= uints.length) break\n\n    if (offset >= buffer.length) {\n      throw new Error('Failed to encode uints')\n    }\n\n    const rem = 8 - pos % 8\n    const height = (i + 1) * width - pos\n\n    const value = shift(uints[i], rem - height)\n\n    buffer[offset] += mask(value, rem)\n\n    pos += Math.min(rem, height)\n  }\n\n  return buffer\n}\n\n// when n is positive, shift left n bits\n// when n is negative, shift right -n bits\nfunction shift (val, n) {\n  if (n === 0) return val\n  if (n > 0) return val << n\n\n  return val >> (-1 * n)\n}\n\nfunction mask (val, bits) {\n  if (bits < 32) return val & ((1 << bits) - 1)\n  return val % (2 ** bits)\n}\n{\n  \"name\": \"bip39-mnemonic\",\n  \"version\": \"2.5.0\",\n  \"description\": \"BIP39 mnemonic for key derivation schemes\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"generate-wordlist\": \"node scripts/generate-wordlist.js\",\n    \"test\": \"standard && brittle test/*.js\"\n  },\n  \"author\": \"Holepunch Inc\",\n  \"license\": \"Apache-2.0\",\n  \"devDependencies\": {\n    \"brittle\": \"^3.4.0\",\n    \"standard\": \"^17.1.0\"\n  },\n  \"dependencies\": {\n    \"b4a\": \"^1.6.6\",\n    \"nanoassert\": \"^2.0.0\",\n    \"sodium-universal\": \"^5.0.1\"\n  },\n  \"files\": [\n    \"index.js\",\n    \"wordlist\"\n  ],\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/holepunchto/bip39.git\"\n  },\n  \"bugs\": {\n    \"url\": \"https://github.com/holepunchto/bip39/issues\"\n  },\n  \"homepage\": \"https://github.com/holepunchto/bip39#readme\"\n}\n[\"的\",\"一\",\"是\",\"在\",\"不\",\"了\",\"有\",\"和\",\"人\",\"这\",\"中\",\"大\",\"为\",\"上\",\"个\",\"国\",\"我\",\"以\",\"要\",\"他\",\"时\",\"来\",\"用\",\"们\",\"生\",\"到\",\"作\",\"地\",\"于\",\"出\",\"就\",\"分\",\"对\",\"成\",\"会\",\"可\",\"主\",\"发\",\"年\",\"动\",\"同\",\"工\",\"也\",\"能\",\"下\",\"过\",\"子\",\"说\",\"产\",\"种\",\"面\",\"而\",\"方\",\"后\",\"多\",\"定\",\"行\",\"学\",\"法\",\"所\",\"民\",\"得\",\"经\",\"十\",\"三\",\"之\",\"进\",\"着\",\"等\",\"部\",\"度\",\"家\",\"电\",\"力\",\"里\",\"如\",\"水\",\"化\",\"高\",\"自\",\"二\",\"理\",\"起\",\"小\",\"物\",\"现\",\"实\",\"加\",\"量\",\"都\",\"两\",\"体\",\"制\",\"机\",\"当\",\"使\",\"点\",\"从\",\"业\",\"本\",\"去\",\"把\",\"性\",\"好\",\"应\",\"开\",\"它\",\"合\",\"还\",\"因\",\"由\",\"其\",\"些\",\"然\",\"前\",\"外\",\"天\",\"政\",\"四\",\"日\",\"那\",\"社\",\"义\",\"事\",\"平\",\"形\",\"相\",\"全\",\"表\",\"间\",\"样\",\"与\",\"关\",\"各\",\"重\",\"新\",\"线\",\"内\",\"数\",\"正\",\"心\",\"反\",\"你\",\"明\",\"看\",\"原\",\"又\",\"么\",\"利\",\"比\",\"或\",\"但\",\"质\",\"气\",\"第\",\"向\",\"道\",\"命\",\"此\",\"变\",\"条\",\"只\",\"没\",\"结\",\"解\",\"问\",\"意\",\"建\",\"月\",\"公\",\"无\",\"系\",\"军\",\"很\",\"情\",\"者\",\"最\",\"立\",\"代\",\"想\",\"已\",\"通\",\"并\",\"提\",\"直\",\"题\",\"党\",\"程\",\"展\",\"五\",\"果\",\"料\",\"象\",\"员\",\"革\",\"位\",\"入\",\"常\",\"文\",\"总\",\"次\",\"品\",\"式\",\"活\",\"设\",\"及\",\"管\",\"特\",\"件\",\"长\",\"求\",\"老\",\"头\",\"基\",\"资\",\"边\",\"流\",\"路\",\"级\",\"少\",\"图\",\"山\",\"统\",\"接\",\"知\",\"较\",\"将\",\"组\",\"见\",\"计\",\"别\",\"她\",\"手\",\"角\",\"期\",\"根\",\"论\",\"运\",\"农\",\"指\",\"几\",\"九\",\"区\",\"强\",\"放\",\"决\",\"西\",\"被\",\"干\",\"做\",\"必\",\"战\",\"先\",\"回\",\"则\",\"任\",\"取\",\"据\",\"处\",\"队\",\"南\",\"给\",\"色\",\"光\",\"门\",\"即\",\"保\",\"治\",\"北\",\"造\",\"百\",\"规\",\"热\",\"领\",\"七\",\"海\",\"口\",\"东\",\"导\",\"器\",\"压\",\"志\",\"世\",\"金\",\"增\",\"争\",\"济\",\"阶\",\"油\",\"思\",\"术\",\"极\",\"交\",\"受\",\"联\",\"什\",\"认\",\"六\",\"共\",\"权\",\"收\",\"证\",\"改\",\"清\",\"美\",\"再\",\"采\",\"转\",\"更\",\"单\",\"风\",\"切\",\"打\",\"白\",\"教\",\"速\",\"花\",\"带\",\"安\",\"场\",\"身\",\"车\",\"例\",\"真\",\"务\",\"具\",\"万\",\"每\",\"目\",\"至\",\"达\",\"走\",\"积\",\"示\",\"议\",\"声\",\"报\",\"斗\",\"完\",\"类\",\"八\",\"离\",\"华\",\"名\",\"确\",\"才\",\"科\",\"张\",\"信\",\"马\",\"节\",\"话\",\"米\",\"整\",\"空\",\"元\",\"况\",\"今\",\"集\",\"温\",\"传\",\"土\",\"许\",\"步\",\"群\",\"广\",\"石\",\"记\",\"需\",\"段\",\"研\",\"界\",\"拉\",\"林\",\"律\",\"叫\",\"且\",\"究\",\"观\",\"越\",\"织\",\"装\",\"影\",\"算\",\"低\",\"持\",\"音\",\"众\",\"书\",\"布\",\"复\",\"容\",\"儿\",\"须\",\"际\",\"商\",\"非\",\"验\",\"连\",\"断\",\"深\",\"难\",\"近\",\"矿\",\"千\",\"周\",\"委\",\"素\",\"技\",\"备\",\"半\",\"办\",\"青\",\"省\",\"列\",\"习\",\"响\",\"约\",\"支\",\"般\",\"史\",\"感\",\"劳\",\"便\",\"团\",\"往\",\"酸\",\"历\",\"市\",\"克\",\"何\",\"除\",\"消\",\"构\",\"府\",\"称\",\"太\",\"准\",\"精\",\"值\",\"号\",\"率\",\"族\",\"维\",\"划\",\"选\",\"标\",\"写\",\"存\",\"候\",\"毛\",\"亲\",\"快\",\"效\",\"斯\",\"院\",\"查\",\"江\",\"型\",\"眼\",\"王\",\"按\",\"格\",\"养\",\"易\",\"置\",\"派\",\"层\",\"片\",\"始\",\"却\",\"专\",\"状\",\"育\",\"厂\",\"京\",\"识\",\"适\",\"属\",\"圆\",\"包\",\"火\",\"住\",\"调\",\"满\",\"县\",\"局\",\"照\",\"参\",\"红\",\"细\",\"引\",\"听\",\"该\",\"铁\",\"价\",\"严\",\"首\",\"底\",\"液\",\"官\",\"德\",\"随\",\"病\",\"苏\",\"失\",\"尔\",\"死\",\"讲\",\"配\",\"女\",\"黄\",\"推\",\"显\",\"谈\",\"罪\",\"神\",\"艺\",\"呢\",\"席\",\"含\",\"企\",\"望\",\"密\",\"批\",\"营\",\"项\",\"防\",\"举\",\"球\",\"英\",\"氧\",\"势\",\"告\",\"李\",\"台\",\"落\",\"木\",\"帮\",\"轮\",\"破\",\"亚\",\"师\",\"围\",\"注\",\"远\",\"字\",\"材\",\"排\",\"供\",\"河\",\"态\",\"封\",\"另\",\"施\",\"减\",\"树\",\"溶\",\"怎\",\"止\",\"案\",\"言\",\"士\",\"均\",\"武\",\"固\",\"叶\",\"鱼\",\"波\",\"视\",\"仅\",\"费\",\"紧\",\"爱\",\"左\",\"章\",\"早\",\"朝\",\"害\",\"续\",\"轻\",\"服\",\"试\",\"食\",\"充\",\"兵\",\"源\",\"判\",\"护\",\"司\",\"足\",\"某\",\"练\",\"差\",\"致\",\"板\",\"田\",\"降\",\"黑\",\"犯\",\"负\",\"击\",\"范\",\"继\",\"兴\",\"似\",\"余\",\"坚\",\"曲\",\"输\",\"修\",\"故\",\"城\",\"夫\",\"够\",\"送\",\"笔\",\"船\",\"占\",\"右\",\"财\",\"吃\",\"富\",\"春\",\"职\",\"觉\",\"汉\",\"画\",\"功\",\"巴\",\"跟\",\"虽\",\"杂\",\"飞\",\"检\",\"吸\",\"助\",\"升\",\"阳\",\"互\",\"初\",\"创\",\"抗\",\"考\",\"投\",\"坏\",\"策\",\"古\",\"径\",\"换\",\"未\",\"跑\",\"留\",\"钢\",\"曾\",\"端\",\"责\",\"站\",\"简\",\"述\",\"钱\",\"副\",\"尽\",\"帝\",\"射\",\"草\",\"冲\",\"承\",\"独\",\"令\",\"限\",\"阿\",\"宣\",\"环\",\"双\",\"请\",\"超\",\"微\",\"让\",\"控\",\"州\",\"良\",\"轴\",\"找\",\"否\",\"纪\",\"益\",\"依\",\"优\",\"顶\",\"础\",\"载\",\"倒\",\"房\",\"突\",\"坐\",\"粉\",\"敌\",\"略\",\"客\",\"袁\",\"冷\",\"胜\",\"绝\",\"析\",\"块\",\"剂\",\"测\",\"丝\",\"协\",\"诉\",\"念\",\"陈\",\"仍\",\"罗\",\"盐\",\"友\",\"洋\",\"错\",\"苦\",\"夜\",\"刑\",\"移\",\"频\",\"逐\",\"靠\",\"混\",\"母\",\"短\",\"皮\",\"终\",\"聚\",\"汽\",\"村\",\"云\",\"哪\",\"既\",\"距\",\"卫\",\"停\",\"烈\",\"央\",\"察\",\"烧\",\"迅\",\"境\",\"若\",\"印\",\"洲\",\"刻\",\"括\",\"激\",\"孔\",\"搞\",\"甚\",\"室\",\"待\",\"核\",\"校\",\"散\",\"侵\",\"吧\",\"甲\",\"游\",\"久\",\"菜\",\"味\",\"旧\",\"模\",\"湖\",\"货\",\"损\",\"预\",\"阻\",\"毫\",\"普\",\"稳\",\"乙\",\"妈\",\"植\",\"息\",\"扩\",\"银\",\"语\",\"挥\",\"酒\",\"守\",\"拿\",\"序\",\"纸\",\"医\",\"缺\",\"雨\",\"吗\",\"针\",\"刘\",\"啊\",\"急\",\"唱\",\"误\",\"训\",\"愿\",\"审\",\"附\",\"获\",\"茶\",\"鲜\",\"粮\",\"斤\",\"孩\",\"脱\",\"硫\",\"肥\",\"善\",\"龙\",\"演\",\"父\",\"渐\",\"血\",\"欢\",\"械\",\"掌\",\"歌\",\"沙\",\"刚\",\"攻\",\"谓\",\"盾\",\"讨\",\"晚\",\"粒\",\"乱\",\"燃\",\"矛\",\"乎\",\"杀\",\"药\",\"宁\",\"鲁\",\"贵\",\"钟\",\"煤\",\"读\",\"班\",\"伯\",\"香\",\"介\",\"迫\",\"句\",\"丰\",\"培\",\"握\",\"兰\",\"担\",\"弦\",\"蛋\",\"沉\",\"假\",\"穿\",\"执\",\"答\",\"乐\",\"谁\",\"顺\",\"烟\",\"缩\",\"征\",\"脸\",\"喜\",\"松\",\"脚\",\"困\",\"异\",\"免\",\"背\",\"星\",\"福\",\"买\",\"染\",\"井\",\"概\",\"慢\",\"怕\",\"磁\",\"倍\",\"祖\",\"皇\",\"促\",\"静\",\"补\",\"评\",\"翻\",\"肉\",\"践\",\"尼\",\"衣\",\"宽\",\"扬\",\"棉\",\"希\",\"伤\",\"操\",\"垂\",\"秋\",\"宜\",\"氢\",\"套\",\"督\",\"振\",\"架\",\"亮\",\"末\",\"宪\",\"庆\",\"编\",\"牛\",\"触\",\"映\",\"雷\",\"销\",\"诗\",\"座\",\"居\",\"抓\",\"裂\",\"胞\",\"呼\",\"娘\",\"景\",\"威\",\"绿\",\"晶\",\"厚\",\"盟\",\"衡\",\"鸡\",\"孙\",\"延\",\"危\",\"胶\",\"屋\",\"乡\",\"临\",\"陆\",\"顾\",\"掉\",\"呀\",\"灯\",\"岁\",\"措\",\"束\",\"耐\",\"剧\",\"玉\",\"赵\",\"跳\",\"哥\",\"季\",\"课\",\"凯\",\"胡\",\"额\",\"款\",\"绍\",\"卷\",\"齐\",\"伟\",\"蒸\",\"殖\",\"永\",\"宗\",\"苗\",\"川\",\"炉\",\"岩\",\"弱\",\"零\",\"杨\",\"奏\",\"沿\",\"露\",\"杆\",\"探\",\"滑\",\"镇\",\"饭\",\"浓\",\"航\",\"怀\",\"赶\",\"库\",\"夺\",\"伊\",\"灵\",\"税\",\"途\",\"灭\",\"赛\",\"归\",\"召\",\"鼓\",\"播\",\"盘\",\"裁\",\"险\",\"康\",\"唯\",\"录\",\"菌\",\"纯\",\"借\",\"糖\",\"盖\",\"横\",\"符\",\"私\",\"努\",\"堂\",\"域\",\"枪\",\"润\",\"幅\",\"哈\",\"竟\",\"熟\",\"虫\",\"泽\",\"脑\",\"壤\",\"碳\",\"欧\",\"遍\",\"侧\",\"寨\",\"敢\",\"彻\",\"虑\",\"斜\",\"薄\",\"庭\",\"纳\",\"弹\",\"饲\",\"伸\",\"折\",\"麦\",\"湿\",\"暗\",\"荷\",\"瓦\",\"塞\",\"床\",\"筑\",\"恶\",\"户\",\"访\",\"塔\",\"奇\",\"透\",\"梁\",\"刀\",\"旋\",\"迹\",\"卡\",\"氯\",\"遇\",\"份\",\"毒\",\"泥\",\"退\",\"洗\",\"摆\",\"灰\",\"彩\",\"卖\",\"耗\",\"夏\",\"择\",\"忙\",\"铜\",\"献\",\"硬\",\"予\",\"繁\",\"圈\",\"雪\",\"函\",\"亦\",\"抽\",\"篇\",\"阵\",\"阴\",\"丁\",\"尺\",\"追\",\"堆\",\"雄\",\"迎\",\"泛\",\"爸\",\"楼\",\"避\",\"谋\",\"吨\",\"野\",\"猪\",\"旗\",\"累\",\"偏\",\"典\",\"馆\",\"索\",\"秦\",\"脂\",\"潮\",\"爷\",\"豆\",\"忽\",\"托\",\"惊\",\"塑\",\"遗\",\"愈\",\"朱\",\"替\",\"纤\",\"粗\",\"倾\",\"尚\",\"痛\",\"楚\",\"谢\",\"奋\",\"购\",\"磨\",\"君\",\"池\",\"旁\",\"碎\",\"骨\",\"监\",\"捕\",\"弟\",\"暴\",\"割\",\"贯\",\"殊\",\"释\",\"词\",\"亡\",\"壁\",\"顿\",\"宝\",\"午\",\"尘\",\"闻\",\"揭\",\"炮\",\"残\",\"冬\",\"桥\",\"妇\",\"警\",\"综\",\"招\",\"吴\",\"付\",\"浮\",\"遭\",\"徐\",\"您\",\"摇\",\"谷\",\"赞\",\"箱\",\"隔\",\"订\",\"男\",\"吹\",\"园\",\"纷\",\"唐\",\"败\",\"宋\",\"玻\",\"巨\",\"耕\",\"坦\",\"荣\",\"闭\",\"湾\",\"键\",\"凡\",\"驻\",\"锅\",\"救\",\"恩\",\"剥\",\"凝\",\"碱\",\"齿\",\"截\",\"炼\",\"麻\",\"纺\",\"禁\",\"废\",\"盛\",\"版\",\"缓\",\"净\",\"睛\",\"昌\",\"婚\",\"涉\",\"筒\",\"嘴\",\"插\",\"岸\",\"朗\",\"庄\",\"街\",\"藏\",\"姑\",\"贸\",\"腐\",\"奴\",\"啦\",\"惯\",\"乘\",\"伙\",\"恢\",\"匀\",\"纱\",\"扎\",\"辩\",\"耳\",\"彪\",\"臣\",\"亿\",\"璃\",\"抵\",\"脉\",\"秀\",\"萨\",\"俄\",\"网\",\"舞\",\"店\",\"喷\",\"纵\",\"寸\",\"汗\",\"挂\",\"洪\",\"贺\",\"闪\",\"柬\",\"爆\",\"烯\",\"津\",\"稻\",\"墙\",\"软\",\"勇\",\"像\",\"滚\",\"厘\",\"蒙\",\"芳\",\"肯\",\"坡\",\"柱\",\"荡\",\"腿\",\"仪\",\"旅\",\"尾\",\"轧\",\"冰\",\"贡\",\"登\",\"黎\",\"削\",\"钻\",\"勒\",\"逃\",\"障\",\"氨\",\"郭\",\"峰\",\"币\",\"港\",\"伏\",\"轨\",\"亩\",\"毕\",\"擦\",\"莫\",\"刺\",\"浪\",\"秘\",\"援\",\"株\",\"健\",\"售\",\"股\",\"岛\",\"甘\",\"泡\",\"睡\",\"童\",\"铸\",\"汤\",\"阀\",\"休\",\"汇\",\"舍\",\"牧\",\"绕\",\"炸\",\"哲\",\"磷\",\"绩\",\"朋\",\"淡\",\"尖\",\"启\",\"陷\",\"柴\",\"呈\",\"徒\",\"颜\",\"泪\",\"稍\",\"忘\",\"泵\",\"蓝\",\"拖\",\"洞\",\"授\",\"镜\",\"辛\",\"壮\",\"锋\",\"贫\",\"虚\",\"弯\",\"摩\",\"泰\",\"幼\",\"廷\",\"尊\",\"窗\",\"纲\",\"弄\",\"隶\",\"疑\",\"氏\",\"宫\",\"姐\",\"震\",\"瑞\",\"怪\",\"尤\",\"琴\",\"循\",\"描\",\"膜\",\"违\",\"夹\",\"腰\",\"缘\",\"珠\",\"穷\",\"森\",\"枝\",\"竹\",\"沟\",\"催\",\"绳\",\"忆\",\"邦\",\"剩\",\"幸\",\"浆\",\"栏\",\"拥\",\"牙\",\"贮\",\"礼\",\"滤\",\"钠\",\"纹\",\"罢\",\"拍\",\"咱\",\"喊\",\"袖\",\"埃\",\"勤\",\"罚\",\"焦\",\"潜\",\"伍\",\"墨\",\"欲\",\"缝\",\"姓\",\"刊\",\"饱\",\"仿\",\"奖\",\"铝\",\"鬼\",\"丽\",\"跨\",\"默\",\"挖\",\"链\",\"扫\",\"喝\",\"袋\",\"炭\",\"污\",\"幕\",\"诸\",\"弧\",\"励\",\"梅\",\"奶\",\"洁\",\"灾\",\"舟\",\"鉴\",\"苯\",\"讼\",\"抱\",\"毁\",\"懂\",\"寒\",\"智\",\"埔\",\"寄\",\"届\",\"跃\",\"渡\",\"挑\",\"丹\",\"艰\",\"贝\",\"碰\",\"拔\",\"爹\",\"戴\",\"码\",\"梦\",\"芽\",\"熔\",\"赤\",\"渔\",\"哭\",\"敬\",\"颗\",\"奔\",\"铅\",\"仲\",\"虎\",\"稀\",\"妹\",\"乏\",\"珍\",\"申\",\"桌\",\"遵\",\"允\",\"隆\",\"螺\",\"仓\",\"魏\",\"锐\",\"晓\",\"氮\",\"兼\",\"隐\",\"碍\",\"赫\",\"拨\",\"忠\",\"肃\",\"缸\",\"牵\",\"抢\",\"博\",\"巧\",\"壳\",\"兄\",\"杜\",\"讯\",\"诚\",\"碧\",\"祥\",\"柯\",\"页\",\"巡\",\"矩\",\"悲\",\"灌\",\"龄\",\"伦\",\"票\",\"寻\",\"桂\",\"铺\",\"圣\",\"恐\",\"恰\",\"郑\",\"趣\",\"抬\",\"荒\",\"腾\",\"贴\",\"柔\",\"滴\",\"猛\",\"阔\",\"辆\",\"妻\",\"填\",\"撤\",\"储\",\"签\",\"闹\",\"扰\",\"紫\",\"砂\",\"递\",\"戏\",\"吊\",\"陶\",\"伐\",\"喂\",\"疗\",\"瓶\",\"婆\",\"抚\",\"臂\",\"摸\",\"忍\",\"虾\",\"蜡\",\"邻\",\"胸\",\"巩\",\"挤\",\"偶\",\"弃\",\"槽\",\"劲\",\"乳\",\"邓\",\"吉\",\"仁\",\"烂\",\"砖\",\"租\",\"乌\",\"舰\",\"伴\",\"瓜\",\"浅\",\"丙\",\"暂\",\"燥\",\"橡\",\"柳\",\"迷\",\"暖\",\"牌\",\"秧\",\"胆\",\"详\",\"簧\",\"踏\",\"瓷\",\"谱\",\"呆\",\"宾\",\"糊\",\"洛\",\"辉\",\"愤\",\"竞\",\"隙\",\"怒\",\"粘\",\"乃\",\"绪\",\"肩\",\"籍\",\"敏\",\"涂\",\"熙\",\"皆\",\"侦\",\"悬\",\"掘\",\"享\",\"纠\",\"醒\",\"狂\",\"锁\",\"淀\",\"恨\",\"牲\",\"霸\",\"爬\",\"赏\",\"逆\",\"玩\",\"陵\",\"祝\",\"秒\",\"浙\",\"貌\",\"役\",\"彼\",\"悉\",\"鸭\",\"趋\",\"凤\",\"晨\",\"畜\",\"辈\",\"秩\",\"卵\",\"署\",\"梯\",\"炎\",\"滩\",\"棋\",\"驱\",\"筛\",\"峡\",\"冒\",\"啥\",\"寿\",\"译\",\"浸\",\"泉\",\"帽\",\"迟\",\"硅\",\"疆\",\"贷\",\"漏\",\"稿\",\"冠\",\"嫩\",\"胁\",\"芯\",\"牢\",\"叛\",\"蚀\",\"奥\",\"鸣\",\"岭\",\"羊\",\"凭\",\"串\",\"塘\",\"绘\",\"酵\",\"融\",\"盆\",\"锡\",\"庙\",\"筹\",\"冻\",\"辅\",\"摄\",\"袭\",\"筋\",\"拒\",\"僚\",\"旱\",\"钾\",\"鸟\",\"漆\",\"沈\",\"眉\",\"疏\",\"添\",\"棒\",\"穗\",\"硝\",\"韩\",\"逼\",\"扭\",\"侨\",\"凉\",\"挺\",\"碗\",\"栽\",\"炒\",\"杯\",\"患\",\"馏\",\"劝\",\"豪\",\"辽\",\"勃\",\"鸿\",\"旦\",\"吏\",\"拜\",\"狗\",\"埋\",\"辊\",\"掩\",\"饮\",\"搬\",\"骂\",\"辞\",\"勾\",\"扣\",\"估\",\"蒋\",\"绒\",\"雾\",\"丈\",\"朵\",\"姆\",\"拟\",\"宇\",\"辑\",\"陕\",\"雕\",\"偿\",\"蓄\",\"崇\",\"剪\",\"倡\",\"厅\",\"咬\",\"驶\",\"薯\",\"刷\",\"斥\",\"番\",\"赋\",\"奉\",\"佛\",\"浇\",\"漫\",\"曼\",\"扇\",\"钙\",\"桃\",\"扶\",\"仔\",\"返\",\"俗\",\"亏\",\"腔\",\"鞋\",\"棱\",\"覆\",\"框\",\"悄\",\"叔\",\"撞\",\"骗\",\"勘\",\"旺\",\"沸\",\"孤\",\"吐\",\"孟\",\"渠\",\"屈\",\"疾\",\"妙\",\"惜\",\"仰\",\"狠\",\"胀\",\"谐\",\"抛\",\"霉\",\"桑\",\"岗\",\"嘛\",\"衰\",\"盗\",\"渗\",\"脏\",\"赖\",\"涌\",\"甜\",\"曹\",\"阅\",\"肌\",\"哩\",\"厉\",\"烃\",\"纬\",\"毅\",\"昨\",\"伪\",\"症\",\"煮\",\"叹\",\"钉\",\"搭\",\"茎\",\"笼\",\"酷\",\"偷\",\"弓\",\"锥\",\"恒\",\"杰\",\"坑\",\"鼻\",\"翼\",\"纶\",\"叙\",\"狱\",\"逮\",\"罐\",\"络\",\"棚\",\"抑\",\"膨\",\"蔬\",\"寺\",\"骤\",\"穆\",\"冶\",\"枯\",\"册\",\"尸\",\"凸\",\"绅\",\"坯\",\"牺\",\"焰\",\"轰\",\"欣\",\"晋\",\"瘦\",\"御\",\"锭\",\"锦\",\"丧\",\"旬\",\"锻\",\"垄\",\"搜\",\"扑\",\"邀\",\"亭\",\"酯\",\"迈\",\"舒\",\"脆\",\"酶\",\"闲\",\"忧\",\"酚\",\"顽\",\"羽\",\"涨\",\"卸\",\"仗\",\"陪\",\"辟\",\"惩\",\"杭\",\"姚\",\"肚\",\"捉\",\"飘\",\"漂\",\"昆\",\"欺\",\"吾\",\"郎\",\"烷\",\"汁\",\"呵\",\"饰\",\"萧\",\"雅\",\"邮\",\"迁\",\"燕\",\"撒\",\"姻\",\"赴\",\"宴\",\"烦\",\"债\",\"帐\",\"斑\",\"铃\",\"旨\",\"醇\",\"董\",\"饼\",\"雏\",\"姿\",\"拌\",\"傅\",\"腹\",\"妥\",\"揉\",\"贤\",\"拆\",\"歪\",\"葡\",\"胺\",\"丢\",\"浩\",\"徽\",\"昂\",\"垫\",\"挡\",\"览\",\"贪\",\"慰\",\"缴\",\"汪\",\"慌\",\"冯\",\"诺\",\"姜\",\"谊\",\"凶\",\"劣\",\"诬\",\"耀\",\"昏\",\"躺\",\"盈\",\"骑\",\"乔\",\"溪\",\"丛\",\"卢\",\"抹\",\"闷\",\"咨\",\"刮\",\"驾\",\"缆\",\"悟\",\"摘\",\"铒\",\"掷\",\"颇\",\"幻\",\"柄\",\"惠\",\"惨\",\"佳\",\"仇\",\"腊\",\"窝\",\"涤\",\"剑\",\"瞧\",\"堡\",\"泼\",\"葱\",\"罩\",\"霍\",\"捞\",\"胎\",\"苍\",\"滨\",\"俩\",\"捅\",\"湘\",\"砍\",\"霞\",\"邵\",\"萄\",\"疯\",\"淮\",\"遂\",\"熊\",\"粪\",\"烘\",\"宿\",\"档\",\"戈\",\"驳\",\"嫂\",\"裕\",\"徙\",\"箭\",\"捐\",\"肠\",\"撑\",\"晒\",\"辨\",\"殿\",\"莲\",\"摊\",\"搅\",\"酱\",\"屏\",\"疫\",\"哀\",\"蔡\",\"堵\",\"沫\",\"皱\",\"畅\",\"叠\",\"阁\",\"莱\",\"敲\",\"辖\",\"钩\",\"痕\",\"坝\",\"巷\",\"饿\",\"祸\",\"丘\",\"玄\",\"溜\",\"曰\",\"逻\",\"彭\",\"尝\",\"卿\",\"妨\",\"艇\",\"吞\",\"韦\",\"怨\",\"矮\",\"歇\"][\"的\",\"一\",\"是\",\"在\",\"不\",\"了\",\"有\",\"和\",\"人\",\"這\",\"中\",\"大\",\"為\",\"上\",\"個\",\"國\",\"我\",\"以\",\"要\",\"他\",\"時\",\"來\",\"用\",\"們\",\"生\",\"到\",\"作\",\"地\",\"於\",\"出\",\"就\",\"分\",\"對\",\"成\",\"會\",\"可\",\"主\",\"發\",\"年\",\"動\",\"同\",\"工\",\"也\",\"能\",\"下\",\"過\",\"子\",\"說\",\"產\",\"種\",\"面\",\"而\",\"方\",\"後\",\"多\",\"定\",\"行\",\"學\",\"法\",\"所\",\"民\",\"得\",\"經\",\"十\",\"三\",\"之\",\"進\",\"著\",\"等\",\"部\",\"度\",\"家\",\"電\",\"力\",\"裡\",\"如\",\"水\",\"化\",\"高\",\"自\",\"二\",\"理\",\"起\",\"小\",\"物\",\"現\",\"實\",\"加\",\"量\",\"都\",\"兩\",\"體\",\"制\",\"機\",\"當\",\"使\",\"點\",\"從\",\"業\",\"本\",\"去\",\"把\",\"性\",\"好\",\"應\",\"開\",\"它\",\"合\",\"還\",\"因\",\"由\",\"其\",\"些\",\"然\",\"前\",\"外\",\"天\",\"政\",\"四\",\"日\",\"那\",\"社\",\"義\",\"事\",\"平\",\"形\",\"相\",\"全\",\"表\",\"間\",\"樣\",\"與\",\"關\",\"各\",\"重\",\"新\",\"線\",\"內\",\"數\",\"正\",\"心\",\"反\",\"你\",\"明\",\"看\",\"原\",\"又\",\"麼\",\"利\",\"比\",\"或\",\"但\",\"質\",\"氣\",\"第\",\"向\",\"道\",\"命\",\"此\",\"變\",\"條\",\"只\",\"沒\",\"結\",\"解\",\"問\",\"意\",\"建\",\"月\",\"公\",\"無\",\"系\",\"軍\",\"很\",\"情\",\"者\",\"最\",\"立\",\"代\",\"想\",\"已\",\"通\",\"並\",\"提\",\"直\",\"題\",\"黨\",\"程\",\"展\",\"五\",\"果\",\"料\",\"象\",\"員\",\"革\",\"位\",\"入\",\"常\",\"文\",\"總\",\"次\",\"品\",\"式\",\"活\",\"設\",\"及\",\"管\",\"特\",\"件\",\"長\",\"求\",\"老\",\"頭\",\"基\",\"資\",\"邊\",\"流\",\"路\",\"級\",\"少\",\"圖\",\"山\",\"統\",\"接\",\"知\",\"較\",\"將\",\"組\",\"見\",\"計\",\"別\",\"她\",\"手\",\"角\",\"期\",\"根\",\"論\",\"運\",\"農\",\"指\",\"幾\",\"九\",\"區\",\"強\",\"放\",\"決\",\"西\",\"被\",\"幹\",\"做\",\"必\",\"戰\",\"先\",\"回\",\"則\",\"任\",\"取\",\"據\",\"處\",\"隊\",\"南\",\"給\",\"色\",\"光\",\"門\",\"即\",\"保\",\"治\",\"北\",\"造\",\"百\",\"規\",\"熱\",\"領\",\"七\",\"海\",\"口\",\"東\",\"導\",\"器\",\"壓\",\"志\",\"世\",\"金\",\"增\",\"爭\",\"濟\",\"階\",\"油\",\"思\",\"術\",\"極\",\"交\",\"受\",\"聯\",\"什\",\"認\",\"六\",\"共\",\"權\",\"收\",\"證\",\"改\",\"清\",\"美\",\"再\",\"採\",\"轉\",\"更\",\"單\",\"風\",\"切\",\"打\",\"白\",\"教\",\"速\",\"花\",\"帶\",\"安\",\"場\",\"身\",\"車\",\"例\",\"真\",\"務\",\"具\",\"萬\",\"每\",\"目\",\"至\",\"達\",\"走\",\"積\",\"示\",\"議\",\"聲\",\"報\",\"鬥\",\"完\",\"類\",\"八\",\"離\",\"華\",\"名\",\"確\",\"才\",\"科\",\"張\",\"信\",\"馬\",\"節\",\"話\",\"米\",\"整\",\"空\",\"元\",\"況\",\"今\",\"集\",\"溫\",\"傳\",\"土\",\"許\",\"步\",\"群\",\"廣\",\"石\",\"記\",\"需\",\"段\",\"研\",\"界\",\"拉\",\"林\",\"律\",\"叫\",\"且\",\"究\",\"觀\",\"越\",\"織\",\"裝\",\"影\",\"算\",\"低\",\"持\",\"音\",\"眾\",\"書\",\"布\",\"复\",\"容\",\"兒\",\"須\",\"際\",\"商\",\"非\",\"驗\",\"連\",\"斷\",\"深\",\"難\",\"近\",\"礦\",\"千\",\"週\",\"委\",\"素\",\"技\",\"備\",\"半\",\"辦\",\"青\",\"省\",\"列\",\"習\",\"響\",\"約\",\"支\",\"般\",\"史\",\"感\",\"勞\",\"便\",\"團\",\"往\",\"酸\",\"歷\",\"市\",\"克\",\"何\",\"除\",\"消\",\"構\",\"府\",\"稱\",\"太\",\"準\",\"精\",\"值\",\"號\",\"率\",\"族\",\"維\",\"劃\",\"選\",\"標\",\"寫\",\"存\",\"候\",\"毛\",\"親\",\"快\",\"效\",\"斯\",\"院\",\"查\",\"江\",\"型\",\"眼\",\"王\",\"按\",\"格\",\"養\",\"易\",\"置\",\"派\",\"層\",\"片\",\"始\",\"卻\",\"專\",\"狀\",\"育\",\"廠\",\"京\",\"識\",\"適\",\"屬\",\"圓\",\"包\",\"火\",\"住\",\"調\",\"滿\",\"縣\",\"局\",\"照\",\"參\",\"紅\",\"細\",\"引\",\"聽\",\"該\",\"鐵\",\"價\",\"嚴\",\"首\",\"底\",\"液\",\"官\",\"德\",\"隨\",\"病\",\"蘇\",\"失\",\"爾\",\"死\",\"講\",\"配\",\"女\",\"黃\",\"推\",\"顯\",\"談\",\"罪\",\"神\",\"藝\",\"呢\",\"席\",\"含\",\"企\",\"望\",\"密\",\"批\",\"營\",\"項\",\"防\",\"舉\",\"球\",\"英\",\"氧\",\"勢\",\"告\",\"李\",\"台\",\"落\",\"木\",\"幫\",\"輪\",\"破\",\"亞\",\"師\",\"圍\",\"注\",\"遠\",\"字\",\"材\",\"排\",\"供\",\"河\",\"態\",\"封\",\"另\",\"施\",\"減\",\"樹\",\"溶\",\"怎\",\"止\",\"案\",\"言\",\"士\",\"均\",\"武\",\"固\",\"葉\",\"魚\",\"波\",\"視\",\"僅\",\"費\",\"緊\",\"愛\",\"左\",\"章\",\"早\",\"朝\",\"害\",\"續\",\"輕\",\"服\",\"試\",\"食\",\"充\",\"兵\",\"源\",\"判\",\"護\",\"司\",\"足\",\"某\",\"練\",\"差\",\"致\",\"板\",\"田\",\"降\",\"黑\",\"犯\",\"負\",\"擊\",\"范\",\"繼\",\"興\",\"似\",\"餘\",\"堅\",\"曲\",\"輸\",\"修\",\"故\",\"城\",\"夫\",\"夠\",\"送\",\"筆\",\"船\",\"佔\",\"右\",\"財\",\"吃\",\"富\",\"春\",\"職\",\"覺\",\"漢\",\"畫\",\"功\",\"巴\",\"跟\",\"雖\",\"雜\",\"飛\",\"檢\",\"吸\",\"助\",\"昇\",\"陽\",\"互\",\"初\",\"創\",\"抗\",\"考\",\"投\",\"壞\",\"策\",\"古\",\"徑\",\"換\",\"未\",\"跑\",\"留\",\"鋼\",\"曾\",\"端\",\"責\",\"站\",\"簡\",\"述\",\"錢\",\"副\",\"盡\",\"帝\",\"射\",\"草\",\"衝\",\"承\",\"獨\",\"令\",\"限\",\"阿\",\"宣\",\"環\",\"雙\",\"請\",\"超\",\"微\",\"讓\",\"控\",\"州\",\"良\",\"軸\",\"找\",\"否\",\"紀\",\"益\",\"依\",\"優\",\"頂\",\"礎\",\"載\",\"倒\",\"房\",\"突\",\"坐\",\"粉\",\"敵\",\"略\",\"客\",\"袁\",\"冷\",\"勝\",\"絕\",\"析\",\"塊\",\"劑\",\"測\",\"絲\",\"協\",\"訴\",\"念\",\"陳\",\"仍\",\"羅\",\"鹽\",\"友\",\"洋\",\"錯\",\"苦\",\"夜\",\"刑\",\"移\",\"頻\",\"逐\",\"靠\",\"混\",\"母\",\"短\",\"皮\",\"終\",\"聚\",\"汽\",\"村\",\"雲\",\"哪\",\"既\",\"距\",\"衛\",\"停\",\"烈\",\"央\",\"察\",\"燒\",\"迅\",\"境\",\"若\",\"印\",\"洲\",\"刻\",\"括\",\"激\",\"孔\",\"搞\",\"甚\",\"室\",\"待\",\"核\",\"校\",\"散\",\"侵\",\"吧\",\"甲\",\"遊\",\"久\",\"菜\",\"味\",\"舊\",\"模\",\"湖\",\"貨\",\"損\",\"預\",\"阻\",\"毫\",\"普\",\"穩\",\"乙\",\"媽\",\"植\",\"息\",\"擴\",\"銀\",\"語\",\"揮\",\"酒\",\"守\",\"拿\",\"序\",\"紙\",\"醫\",\"缺\",\"雨\",\"嗎\",\"針\",\"劉\",\"啊\",\"急\",\"唱\",\"誤\",\"訓\",\"願\",\"審\",\"附\",\"獲\",\"茶\",\"鮮\",\"糧\",\"斤\",\"孩\",\"脫\",\"硫\",\"肥\",\"善\",\"龍\",\"演\",\"父\",\"漸\",\"血\",\"歡\",\"械\",\"掌\",\"歌\",\"沙\",\"剛\",\"攻\",\"謂\",\"盾\",\"討\",\"晚\",\"粒\",\"亂\",\"燃\",\"矛\",\"乎\",\"殺\",\"藥\",\"寧\",\"魯\",\"貴\",\"鐘\",\"煤\",\"讀\",\"班\",\"伯\",\"香\",\"介\",\"迫\",\"句\",\"豐\",\"培\",\"握\",\"蘭\",\"擔\",\"弦\",\"蛋\",\"沉\",\"假\",\"穿\",\"執\",\"答\",\"樂\",\"誰\",\"順\",\"煙\",\"縮\",\"徵\",\"臉\",\"喜\",\"松\",\"腳\",\"困\",\"異\",\"免\",\"背\",\"星\",\"福\",\"買\",\"染\",\"井\",\"概\",\"慢\",\"怕\",\"磁\",\"倍\",\"祖\",\"皇\",\"促\",\"靜\",\"補\",\"評\",\"翻\",\"肉\",\"踐\",\"尼\",\"衣\",\"寬\",\"揚\",\"棉\",\"希\",\"傷\",\"操\",\"垂\",\"秋\",\"宜\",\"氫\",\"套\",\"督\",\"振\",\"架\",\"亮\",\"末\",\"憲\",\"慶\",\"編\",\"牛\",\"觸\",\"映\",\"雷\",\"銷\",\"詩\",\"座\",\"居\",\"抓\",\"裂\",\"胞\",\"呼\",\"娘\",\"景\",\"威\",\"綠\",\"晶\",\"厚\",\"盟\",\"衡\",\"雞\",\"孫\",\"延\",\"危\",\"膠\",\"屋\",\"鄉\",\"臨\",\"陸\",\"顧\",\"掉\",\"呀\",\"燈\",\"歲\",\"措\",\"束\",\"耐\",\"劇\",\"玉\",\"趙\",\"跳\",\"哥\",\"季\",\"課\",\"凱\",\"胡\",\"額\",\"款\",\"紹\",\"卷\",\"齊\",\"偉\",\"蒸\",\"殖\",\"永\",\"宗\",\"苗\",\"川\",\"爐\",\"岩\",\"弱\",\"零\",\"楊\",\"奏\",\"沿\",\"露\",\"桿\",\"探\",\"滑\",\"鎮\",\"飯\",\"濃\",\"航\",\"懷\",\"趕\",\"庫\",\"奪\",\"伊\",\"靈\",\"稅\",\"途\",\"滅\",\"賽\",\"歸\",\"召\",\"鼓\",\"播\",\"盤\",\"裁\",\"險\",\"康\",\"唯\",\"錄\",\"菌\",\"純\",\"借\",\"糖\",\"蓋\",\"橫\",\"符\",\"私\",\"努\",\"堂\",\"域\",\"槍\",\"潤\",\"幅\",\"哈\",\"竟\",\"熟\",\"蟲\",\"澤\",\"腦\",\"壤\",\"碳\",\"歐\",\"遍\",\"側\",\"寨\",\"敢\",\"徹\",\"慮\",\"斜\",\"薄\",\"庭\",\"納\",\"彈\",\"飼\",\"伸\",\"折\",\"麥\",\"濕\",\"暗\",\"荷\",\"瓦\",\"塞\",\"床\",\"築\",\"惡\",\"戶\",\"訪\",\"塔\",\"奇\",\"透\",\"梁\",\"刀\",\"旋\",\"跡\",\"卡\",\"氯\",\"遇\",\"份\",\"毒\",\"泥\",\"退\",\"洗\",\"擺\",\"灰\",\"彩\",\"賣\",\"耗\",\"夏\",\"擇\",\"忙\",\"銅\",\"獻\",\"硬\",\"予\",\"繁\",\"圈\",\"雪\",\"函\",\"亦\",\"抽\",\"篇\",\"陣\",\"陰\",\"丁\",\"尺\",\"追\",\"堆\",\"雄\",\"迎\",\"泛\",\"爸\",\"樓\",\"避\",\"謀\",\"噸\",\"野\",\"豬\",\"旗\",\"累\",\"偏\",\"典\",\"館\",\"索\",\"秦\",\"脂\",\"潮\",\"爺\",\"豆\",\"忽\",\"托\",\"驚\",\"塑\",\"遺\",\"愈\",\"朱\",\"替\",\"纖\",\"粗\",\"傾\",\"尚\",\"痛\",\"楚\",\"謝\",\"奮\",\"購\",\"磨\",\"君\",\"池\",\"旁\",\"碎\",\"骨\",\"監\",\"捕\",\"弟\",\"暴\",\"割\",\"貫\",\"殊\",\"釋\",\"詞\",\"亡\",\"壁\",\"頓\",\"寶\",\"午\",\"塵\",\"聞\",\"揭\",\"炮\",\"殘\",\"冬\",\"橋\",\"婦\",\"警\",\"綜\",\"招\",\"吳\",\"付\",\"浮\",\"遭\",\"徐\",\"您\",\"搖\",\"谷\",\"贊\",\"箱\",\"隔\",\"訂\",\"男\",\"吹\",\"園\",\"紛\",\"唐\",\"敗\",\"宋\",\"玻\",\"巨\",\"耕\",\"坦\",\"榮\",\"閉\",\"灣\",\"鍵\",\"凡\",\"駐\",\"鍋\",\"救\",\"恩\",\"剝\",\"凝\",\"鹼\",\"齒\",\"截\",\"煉\",\"麻\",\"紡\",\"禁\",\"廢\",\"盛\",\"版\",\"緩\",\"淨\",\"睛\",\"昌\",\"婚\",\"涉\",\"筒\",\"嘴\",\"插\",\"岸\",\"朗\",\"莊\",\"街\",\"藏\",\"姑\",\"貿\",\"腐\",\"奴\",\"啦\",\"慣\",\"乘\",\"夥\",\"恢\",\"勻\",\"紗\",\"扎\",\"辯\",\"耳\",\"彪\",\"臣\",\"億\",\"璃\",\"抵\",\"脈\",\"秀\",\"薩\",\"俄\",\"網\",\"舞\",\"店\",\"噴\",\"縱\",\"寸\",\"汗\",\"掛\",\"洪\",\"賀\",\"閃\",\"柬\",\"爆\",\"烯\",\"津\",\"稻\",\"牆\",\"軟\",\"勇\",\"像\",\"滾\",\"厘\",\"蒙\",\"芳\",\"肯\",\"坡\",\"柱\",\"盪\",\"腿\",\"儀\",\"旅\",\"尾\",\"軋\",\"冰\",\"貢\",\"登\",\"黎\",\"削\",\"鑽\",\"勒\",\"逃\",\"障\",\"氨\",\"郭\",\"峰\",\"幣\",\"港\",\"伏\",\"軌\",\"畝\",\"畢\",\"擦\",\"莫\",\"刺\",\"浪\",\"秘\",\"援\",\"株\",\"健\",\"售\",\"股\",\"島\",\"甘\",\"泡\",\"睡\",\"童\",\"鑄\",\"湯\",\"閥\",\"休\",\"匯\",\"舍\",\"牧\",\"繞\",\"炸\",\"哲\",\"磷\",\"績\",\"朋\",\"淡\",\"尖\",\"啟\",\"陷\",\"柴\",\"呈\",\"徒\",\"顏\",\"淚\",\"稍\",\"忘\",\"泵\",\"藍\",\"拖\",\"洞\",\"授\",\"鏡\",\"辛\",\"壯\",\"鋒\",\"貧\",\"虛\",\"彎\",\"摩\",\"泰\",\"幼\",\"廷\",\"尊\",\"窗\",\"綱\",\"弄\",\"隸\",\"疑\",\"氏\",\"宮\",\"姐\",\"震\",\"瑞\",\"怪\",\"尤\",\"琴\",\"循\",\"描\",\"膜\",\"違\",\"夾\",\"腰\",\"緣\",\"珠\",\"窮\",\"森\",\"枝\",\"竹\",\"溝\",\"催\",\"繩\",\"憶\",\"邦\",\"剩\",\"幸\",\"漿\",\"欄\",\"擁\",\"牙\",\"貯\",\"禮\",\"濾\",\"鈉\",\"紋\",\"罷\",\"拍\",\"咱\",\"喊\",\"袖\",\"埃\",\"勤\",\"罰\",\"焦\",\"潛\",\"伍\",\"墨\",\"欲\",\"縫\",\"姓\",\"刊\",\"飽\",\"仿\",\"獎\",\"鋁\",\"鬼\",\"麗\",\"跨\",\"默\",\"挖\",\"鏈\",\"掃\",\"喝\",\"袋\",\"炭\",\"污\",\"幕\",\"諸\",\"弧\",\"勵\",\"梅\",\"奶\",\"潔\",\"災\",\"舟\",\"鑑\",\"苯\",\"訟\",\"抱\",\"毀\",\"懂\",\"寒\",\"智\",\"埔\",\"寄\",\"屆\",\"躍\",\"渡\",\"挑\",\"丹\",\"艱\",\"貝\",\"碰\",\"拔\",\"爹\",\"戴\",\"碼\",\"夢\",\"芽\",\"熔\",\"赤\",\"漁\",\"哭\",\"敬\",\"顆\",\"奔\",\"鉛\",\"仲\",\"虎\",\"稀\",\"妹\",\"乏\",\"珍\",\"申\",\"桌\",\"遵\",\"允\",\"隆\",\"螺\",\"倉\",\"魏\",\"銳\",\"曉\",\"氮\",\"兼\",\"隱\",\"礙\",\"赫\",\"撥\",\"忠\",\"肅\",\"缸\",\"牽\",\"搶\",\"博\",\"巧\",\"殼\",\"兄\",\"杜\",\"訊\",\"誠\",\"碧\",\"祥\",\"柯\",\"頁\",\"巡\",\"矩\",\"悲\",\"灌\",\"齡\",\"倫\",\"票\",\"尋\",\"桂\",\"鋪\",\"聖\",\"恐\",\"恰\",\"鄭\",\"趣\",\"抬\",\"荒\",\"騰\",\"貼\",\"柔\",\"滴\",\"猛\",\"闊\",\"輛\",\"妻\",\"填\",\"撤\",\"儲\",\"簽\",\"鬧\",\"擾\",\"紫\",\"砂\",\"遞\",\"戲\",\"吊\",\"陶\",\"伐\",\"餵\",\"療\",\"瓶\",\"婆\",\"撫\",\"臂\",\"摸\",\"忍\",\"蝦\",\"蠟\",\"鄰\",\"胸\",\"鞏\",\"擠\",\"偶\",\"棄\",\"槽\",\"勁\",\"乳\",\"鄧\",\"吉\",\"仁\",\"爛\",\"磚\",\"租\",\"烏\",\"艦\",\"伴\",\"瓜\",\"淺\",\"丙\",\"暫\",\"燥\",\"橡\",\"柳\",\"迷\",\"暖\",\"牌\",\"秧\",\"膽\",\"詳\",\"簧\",\"踏\",\"瓷\",\"譜\",\"呆\",\"賓\",\"糊\",\"洛\",\"輝\",\"憤\",\"競\",\"隙\",\"怒\",\"粘\",\"乃\",\"緒\",\"肩\",\"籍\",\"敏\",\"塗\",\"熙\",\"皆\",\"偵\",\"懸\",\"掘\",\"享\",\"糾\",\"醒\",\"狂\",\"鎖\",\"淀\",\"恨\",\"牲\",\"霸\",\"爬\",\"賞\",\"逆\",\"玩\",\"陵\",\"祝\",\"秒\",\"浙\",\"貌\",\"役\",\"彼\",\"悉\",\"鴨\",\"趨\",\"鳳\",\"晨\",\"畜\",\"輩\",\"秩\",\"卵\",\"署\",\"梯\",\"炎\",\"灘\",\"棋\",\"驅\",\"篩\",\"峽\",\"冒\",\"啥\",\"壽\",\"譯\",\"浸\",\"泉\",\"帽\",\"遲\",\"矽\",\"疆\",\"貸\",\"漏\",\"稿\",\"冠\",\"嫩\",\"脅\",\"芯\",\"牢\",\"叛\",\"蝕\",\"奧\",\"鳴\",\"嶺\",\"羊\",\"憑\",\"串\",\"塘\",\"繪\",\"酵\",\"融\",\"盆\",\"錫\",\"廟\",\"籌\",\"凍\",\"輔\",\"攝\",\"襲\",\"筋\",\"拒\",\"僚\",\"旱\",\"鉀\",\"鳥\",\"漆\",\"沈\",\"眉\",\"疏\",\"添\",\"棒\",\"穗\",\"硝\",\"韓\",\"逼\",\"扭\",\"僑\",\"涼\",\"挺\",\"碗\",\"栽\",\"炒\",\"杯\",\"患\",\"餾\",\"勸\",\"豪\",\"遼\",\"勃\",\"鴻\",\"旦\",\"吏\",\"拜\",\"狗\",\"埋\",\"輥\",\"掩\",\"飲\",\"搬\",\"罵\",\"辭\",\"勾\",\"扣\",\"估\",\"蔣\",\"絨\",\"霧\",\"丈\",\"朵\",\"姆\",\"擬\",\"宇\",\"輯\",\"陝\",\"雕\",\"償\",\"蓄\",\"崇\",\"剪\",\"倡\",\"廳\",\"咬\",\"駛\",\"薯\",\"刷\",\"斥\",\"番\",\"賦\",\"奉\",\"佛\",\"澆\",\"漫\",\"曼\",\"扇\",\"鈣\",\"桃\",\"扶\",\"仔\",\"返\",\"俗\",\"虧\",\"腔\",\"鞋\",\"棱\",\"覆\",\"框\",\"悄\",\"叔\",\"撞\",\"騙\",\"勘\",\"旺\",\"沸\",\"孤\",\"吐\",\"孟\",\"渠\",\"屈\",\"疾\",\"妙\",\"惜\",\"仰\",\"狠\",\"脹\",\"諧\",\"拋\",\"黴\",\"桑\",\"崗\",\"嘛\",\"衰\",\"盜\",\"滲\",\"臟\",\"賴\",\"湧\",\"甜\",\"曹\",\"閱\",\"肌\",\"哩\",\"厲\",\"烴\",\"緯\",\"毅\",\"昨\",\"偽\",\"症\",\"煮\",\"嘆\",\"釘\",\"搭\",\"莖\",\"籠\",\"酷\",\"偷\",\"弓\",\"錐\",\"恆\",\"傑\",\"坑\",\"鼻\",\"翼\",\"綸\",\"敘\",\"獄\",\"逮\",\"罐\",\"絡\",\"棚\",\"抑\",\"膨\",\"蔬\",\"寺\",\"驟\",\"穆\",\"冶\",\"枯\",\"冊\",\"屍\",\"凸\",\"紳\",\"坯\",\"犧\",\"焰\",\"轟\",\"欣\",\"晉\",\"瘦\",\"禦\",\"錠\",\"錦\",\"喪\",\"旬\",\"鍛\",\"壟\",\"搜\",\"撲\",\"邀\",\"亭\",\"酯\",\"邁\",\"舒\",\"脆\",\"酶\",\"閒\",\"憂\",\"酚\",\"頑\",\"羽\",\"漲\",\"卸\",\"仗\",\"陪\",\"闢\",\"懲\",\"杭\",\"姚\",\"肚\",\"捉\",\"飄\",\"漂\",\"昆\",\"欺\",\"吾\",\"郎\",\"烷\",\"汁\",\"呵\",\"飾\",\"蕭\",\"雅\",\"郵\",\"遷\",\"燕\",\"撒\",\"姻\",\"赴\",\"宴\",\"煩\",\"債\",\"帳\",\"斑\",\"鈴\",\"旨\",\"醇\",\"董\",\"餅\",\"雛\",\"姿\",\"拌\",\"傅\",\"腹\",\"妥\",\"揉\",\"賢\",\"拆\",\"歪\",\"葡\",\"胺\",\"丟\",\"浩\",\"徽\",\"昂\",\"墊\",\"擋\",\"覽\",\"貪\",\"慰\",\"繳\",\"汪\",\"慌\",\"馮\",\"諾\",\"姜\",\"誼\",\"兇\",\"劣\",\"誣\",\"耀\",\"昏\",\"躺\",\"盈\",\"騎\",\"喬\",\"溪\",\"叢\",\"盧\",\"抹\",\"悶\",\"諮\",\"刮\",\"駕\",\"纜\",\"悟\",\"摘\",\"鉺\",\"擲\",\"頗\",\"幻\",\"柄\",\"惠\",\"慘\",\"佳\",\"仇\",\"臘\",\"窩\",\"滌\",\"劍\",\"瞧\",\"堡\",\"潑\",\"蔥\",\"罩\",\"霍\",\"撈\",\"胎\",\"蒼\",\"濱\",\"倆\",\"捅\",\"湘\",\"砍\",\"霞\",\"邵\",\"萄\",\"瘋\",\"淮\",\"遂\",\"熊\",\"糞\",\"烘\",\"宿\",\"檔\",\"戈\",\"駁\",\"嫂\",\"裕\",\"徙\",\"箭\",\"捐\",\"腸\",\"撐\",\"曬\",\"辨\",\"殿\",\"蓮\",\"攤\",\"攪\",\"醬\",\"屏\",\"疫\",\"哀\",\"蔡\",\"堵\",\"沫\",\"皺\",\"暢\",\"疊\",\"閣\",\"萊\",\"敲\",\"轄\",\"鉤\",\"痕\",\"壩\",\"巷\",\"餓\",\"禍\",\"丘\",\"玄\",\"溜\",\"曰\",\"邏\",\"彭\",\"嘗\",\"卿\",\"妨\",\"艇\",\"吞\",\"韋\",\"怨\",\"矮\",\"歇\"][\"abdikace\",\"abeceda\",\"adresa\",\"agrese\",\"akce\",\"aktovka\",\"alej\",\"alkohol\",\"amputace\",\"ananas\",\"andulka\",\"anekdota\",\"anketa\",\"antika\",\"anulovat\",\"archa\",\"arogance\",\"asfalt\",\"asistent\",\"aspirace\",\"astma\",\"astronom\",\"atlas\",\"atletika\",\"atol\",\"autobus\",\"azyl\",\"babka\",\"bachor\",\"bacil\",\"baculka\",\"badatel\",\"bageta\",\"bagr\",\"bahno\",\"bakterie\",\"balada\",\"baletka\",\"balkon\",\"balonek\",\"balvan\",\"balza\",\"bambus\",\"bankomat\",\"barbar\",\"baret\",\"barman\",\"baroko\",\"barva\",\"baterka\",\"batoh\",\"bavlna\",\"bazalka\",\"bazilika\",\"bazuka\",\"bedna\",\"beran\",\"beseda\",\"bestie\",\"beton\",\"bezinka\",\"bezmoc\",\"beztak\",\"bicykl\",\"bidlo\",\"biftek\",\"bikiny\",\"bilance\",\"biograf\",\"biolog\",\"bitva\",\"bizon\",\"blahobyt\",\"blatouch\",\"blecha\",\"bledule\",\"blesk\",\"blikat\",\"blizna\",\"blokovat\",\"bloudit\",\"blud\",\"bobek\",\"bobr\",\"bodlina\",\"bodnout\",\"bohatost\",\"bojkot\",\"bojovat\",\"bokorys\",\"bolest\",\"borec\",\"borovice\",\"bota\",\"boubel\",\"bouchat\",\"bouda\",\"boule\",\"bourat\",\"boxer\",\"bradavka\",\"brambora\",\"branka\",\"bratr\",\"brepta\",\"briketa\",\"brko\",\"brloh\",\"bronz\",\"broskev\",\"brunetka\",\"brusinka\",\"brzda\",\"brzy\",\"bublina\",\"bubnovat\",\"buchta\",\"buditel\",\"budka\",\"budova\",\"bufet\",\"bujarost\",\"bukvice\",\"buldok\",\"bulva\",\"bunda\",\"bunkr\",\"burza\",\"butik\",\"buvol\",\"buzola\",\"bydlet\",\"bylina\",\"bytovka\",\"bzukot\",\"capart\",\"carevna\",\"cedr\",\"cedule\",\"cejch\",\"cejn\",\"cela\",\"celer\",\"celkem\",\"celnice\",\"cenina\",\"cennost\",\"cenovka\",\"centrum\",\"cenzor\",\"cestopis\",\"cetka\",\"chalupa\",\"chapadlo\",\"charita\",\"chata\",\"chechtat\",\"chemie\",\"chichot\",\"chirurg\",\"chlad\",\"chleba\",\"chlubit\",\"chmel\",\"chmura\",\"chobot\",\"chochol\",\"chodba\",\"cholera\",\"chomout\",\"chopit\",\"choroba\",\"chov\",\"chrapot\",\"chrlit\",\"chrt\",\"chrup\",\"chtivost\",\"chudina\",\"chutnat\",\"chvat\",\"chvilka\",\"chvost\",\"chyba\",\"chystat\",\"chytit\",\"cibule\",\"cigareta\",\"cihelna\",\"cihla\",\"cinkot\",\"cirkus\",\"cisterna\",\"citace\",\"citrus\",\"cizinec\",\"cizost\",\"clona\",\"cokoliv\",\"couvat\",\"ctitel\",\"ctnost\",\"cudnost\",\"cuketa\",\"cukr\",\"cupot\",\"cvaknout\",\"cval\",\"cvik\",\"cvrkot\",\"cyklista\",\"daleko\",\"dareba\",\"datel\",\"datum\",\"dcera\",\"debata\",\"dechovka\",\"decibel\",\"deficit\",\"deflace\",\"dekl\",\"dekret\",\"demokrat\",\"deprese\",\"derby\",\"deska\",\"detektiv\",\"dikobraz\",\"diktovat\",\"dioda\",\"diplom\",\"disk\",\"displej\",\"divadlo\",\"divoch\",\"dlaha\",\"dlouho\",\"dluhopis\",\"dnes\",\"dobro\",\"dobytek\",\"docent\",\"dochutit\",\"dodnes\",\"dohled\",\"dohoda\",\"dohra\",\"dojem\",\"dojnice\",\"doklad\",\"dokola\",\"doktor\",\"dokument\",\"dolar\",\"doleva\",\"dolina\",\"doma\",\"dominant\",\"domluvit\",\"domov\",\"donutit\",\"dopad\",\"dopis\",\"doplnit\",\"doposud\",\"doprovod\",\"dopustit\",\"dorazit\",\"dorost\",\"dort\",\"dosah\",\"doslov\",\"dostatek\",\"dosud\",\"dosyta\",\"dotaz\",\"dotek\",\"dotknout\",\"doufat\",\"doutnat\",\"dovozce\",\"dozadu\",\"doznat\",\"dozorce\",\"drahota\",\"drak\",\"dramatik\",\"dravec\",\"draze\",\"drdol\",\"drobnost\",\"drogerie\",\"drozd\",\"drsnost\",\"drtit\",\"drzost\",\"duben\",\"duchovno\",\"dudek\",\"duha\",\"duhovka\",\"dusit\",\"dusno\",\"dutost\",\"dvojice\",\"dvorec\",\"dynamit\",\"ekolog\",\"ekonomie\",\"elektron\",\"elipsa\",\"email\",\"emise\",\"emoce\",\"empatie\",\"epizoda\",\"epocha\",\"epopej\",\"epos\",\"esej\",\"esence\",\"eskorta\",\"eskymo\",\"etiketa\",\"euforie\",\"evoluce\",\"exekuce\",\"exkurze\",\"expedice\",\"exploze\",\"export\",\"extrakt\",\"facka\",\"fajfka\",\"fakulta\",\"fanatik\",\"fantazie\",\"farmacie\",\"favorit\",\"fazole\",\"federace\",\"fejeton\",\"fenka\",\"fialka\",\"figurant\",\"filozof\",\"filtr\",\"finance\",\"finta\",\"fixace\",\"fjord\",\"flanel\",\"flirt\",\"flotila\",\"fond\",\"fosfor\",\"fotbal\",\"fotka\",\"foton\",\"frakce\",\"freska\",\"fronta\",\"fukar\",\"funkce\",\"fyzika\",\"galeje\",\"garant\",\"genetika\",\"geolog\",\"gilotina\",\"glazura\",\"glejt\",\"golem\",\"golfista\",\"gotika\",\"graf\",\"gramofon\",\"granule\",\"grep\",\"gril\",\"grog\",\"groteska\",\"guma\",\"hadice\",\"hadr\",\"hala\",\"halenka\",\"hanba\",\"hanopis\",\"harfa\",\"harpuna\",\"havran\",\"hebkost\",\"hejkal\",\"hejno\",\"hejtman\",\"hektar\",\"helma\",\"hematom\",\"herec\",\"herna\",\"heslo\",\"hezky\",\"historik\",\"hladovka\",\"hlasivky\",\"hlava\",\"hledat\",\"hlen\",\"hlodavec\",\"hloh\",\"hloupost\",\"hltat\",\"hlubina\",\"hluchota\",\"hmat\",\"hmota\",\"hmyz\",\"hnis\",\"hnojivo\",\"hnout\",\"hoblina\",\"hoboj\",\"hoch\",\"hodiny\",\"hodlat\",\"hodnota\",\"hodovat\",\"hojnost\",\"hokej\",\"holinka\",\"holka\",\"holub\",\"homole\",\"honitba\",\"honorace\",\"horal\",\"horda\",\"horizont\",\"horko\",\"horlivec\",\"hormon\",\"hornina\",\"horoskop\",\"horstvo\",\"hospoda\",\"hostina\",\"hotovost\",\"houba\",\"houf\",\"houpat\",\"houska\",\"hovor\",\"hradba\",\"hranice\",\"hravost\",\"hrazda\",\"hrbolek\",\"hrdina\",\"hrdlo\",\"hrdost\",\"hrnek\",\"hrobka\",\"hromada\",\"hrot\",\"hrouda\",\"hrozen\",\"hrstka\",\"hrubost\",\"hryzat\",\"hubenost\",\"hubnout\",\"hudba\",\"hukot\",\"humr\",\"husita\",\"hustota\",\"hvozd\",\"hybnost\",\"hydrant\",\"hygiena\",\"hymna\",\"hysterik\",\"idylka\",\"ihned\",\"ikona\",\"iluze\",\"imunita\",\"infekce\",\"inflace\",\"inkaso\",\"inovace\",\"inspekce\",\"internet\",\"invalida\",\"investor\",\"inzerce\",\"ironie\",\"jablko\",\"jachta\",\"jahoda\",\"jakmile\",\"jakost\",\"jalovec\",\"jantar\",\"jarmark\",\"jaro\",\"jasan\",\"jasno\",\"jatka\",\"javor\",\"jazyk\",\"jedinec\",\"jedle\",\"jednatel\",\"jehlan\",\"jekot\",\"jelen\",\"jelito\",\"jemnost\",\"jenom\",\"jepice\",\"jeseter\",\"jevit\",\"jezdec\",\"jezero\",\"jinak\",\"jindy\",\"jinoch\",\"jiskra\",\"jistota\",\"jitrnice\",\"jizva\",\"jmenovat\",\"jogurt\",\"jurta\",\"kabaret\",\"kabel\",\"kabinet\",\"kachna\",\"kadet\",\"kadidlo\",\"kahan\",\"kajak\",\"kajuta\",\"kakao\",\"kaktus\",\"kalamita\",\"kalhoty\",\"kalibr\",\"kalnost\",\"kamera\",\"kamkoliv\",\"kamna\",\"kanibal\",\"kanoe\",\"kantor\",\"kapalina\",\"kapela\",\"kapitola\",\"kapka\",\"kaple\",\"kapota\",\"kapr\",\"kapusta\",\"kapybara\",\"karamel\",\"karotka\",\"karton\",\"kasa\",\"katalog\",\"katedra\",\"kauce\",\"kauza\",\"kavalec\",\"kazajka\",\"kazeta\",\"kazivost\",\"kdekoliv\",\"kdesi\",\"kedluben\",\"kemp\",\"keramika\",\"kino\",\"klacek\",\"kladivo\",\"klam\",\"klapot\",\"klasika\",\"klaun\",\"klec\",\"klenba\",\"klepat\",\"klesnout\",\"klid\",\"klima\",\"klisna\",\"klobouk\",\"klokan\",\"klopa\",\"kloub\",\"klubovna\",\"klusat\",\"kluzkost\",\"kmen\",\"kmitat\",\"kmotr\",\"kniha\",\"knot\",\"koalice\",\"koberec\",\"kobka\",\"kobliha\",\"kobyla\",\"kocour\",\"kohout\",\"kojenec\",\"kokos\",\"koktejl\",\"kolaps\",\"koleda\",\"kolize\",\"kolo\",\"komando\",\"kometa\",\"komik\",\"komnata\",\"komora\",\"kompas\",\"komunita\",\"konat\",\"koncept\",\"kondice\",\"konec\",\"konfese\",\"kongres\",\"konina\",\"konkurs\",\"kontakt\",\"konzerva\",\"kopanec\",\"kopie\",\"kopnout\",\"koprovka\",\"korbel\",\"korektor\",\"kormidlo\",\"koroptev\",\"korpus\",\"koruna\",\"koryto\",\"korzet\",\"kosatec\",\"kostka\",\"kotel\",\"kotleta\",\"kotoul\",\"koukat\",\"koupelna\",\"kousek\",\"kouzlo\",\"kovboj\",\"koza\",\"kozoroh\",\"krabice\",\"krach\",\"krajina\",\"kralovat\",\"krasopis\",\"kravata\",\"kredit\",\"krejcar\",\"kresba\",\"kreveta\",\"kriket\",\"kritik\",\"krize\",\"krkavec\",\"krmelec\",\"krmivo\",\"krocan\",\"krok\",\"kronika\",\"kropit\",\"kroupa\",\"krovka\",\"krtek\",\"kruhadlo\",\"krupice\",\"krutost\",\"krvinka\",\"krychle\",\"krypta\",\"krystal\",\"kryt\",\"kudlanka\",\"kufr\",\"kujnost\",\"kukla\",\"kulajda\",\"kulich\",\"kulka\",\"kulomet\",\"kultura\",\"kuna\",\"kupodivu\",\"kurt\",\"kurzor\",\"kutil\",\"kvalita\",\"kvasinka\",\"kvestor\",\"kynolog\",\"kyselina\",\"kytara\",\"kytice\",\"kytka\",\"kytovec\",\"kyvadlo\",\"labrador\",\"lachtan\",\"ladnost\",\"laik\",\"lakomec\",\"lamela\",\"lampa\",\"lanovka\",\"lasice\",\"laso\",\"lastura\",\"latinka\",\"lavina\",\"lebka\",\"leckdy\",\"leden\",\"lednice\",\"ledovka\",\"ledvina\",\"legenda\",\"legie\",\"legrace\",\"lehce\",\"lehkost\",\"lehnout\",\"lektvar\",\"lenochod\",\"lentilka\",\"lepenka\",\"lepidlo\",\"letadlo\",\"letec\",\"letmo\",\"letokruh\",\"levhart\",\"levitace\",\"levobok\",\"libra\",\"lichotka\",\"lidojed\",\"lidskost\",\"lihovina\",\"lijavec\",\"lilek\",\"limetka\",\"linie\",\"linka\",\"linoleum\",\"listopad\",\"litina\",\"litovat\",\"lobista\",\"lodivod\",\"logika\",\"logoped\",\"lokalita\",\"loket\",\"lomcovat\",\"lopata\",\"lopuch\",\"lord\",\"losos\",\"lotr\",\"loudal\",\"louh\",\"louka\",\"louskat\",\"lovec\",\"lstivost\",\"lucerna\",\"lucifer\",\"lump\",\"lusk\",\"lustrace\",\"lvice\",\"lyra\",\"lyrika\",\"lysina\",\"madam\",\"madlo\",\"magistr\",\"mahagon\",\"majetek\",\"majitel\",\"majorita\",\"makak\",\"makovice\",\"makrela\",\"malba\",\"malina\",\"malovat\",\"malvice\",\"maminka\",\"mandle\",\"manko\",\"marnost\",\"masakr\",\"maskot\",\"masopust\",\"matice\",\"matrika\",\"maturita\",\"mazanec\",\"mazivo\",\"mazlit\",\"mazurka\",\"mdloba\",\"mechanik\",\"meditace\",\"medovina\",\"melasa\",\"meloun\",\"mentolka\",\"metla\",\"metoda\",\"metr\",\"mezera\",\"migrace\",\"mihnout\",\"mihule\",\"mikina\",\"mikrofon\",\"milenec\",\"milimetr\",\"milost\",\"mimika\",\"mincovna\",\"minibar\",\"minomet\",\"minulost\",\"miska\",\"mistr\",\"mixovat\",\"mladost\",\"mlha\",\"mlhovina\",\"mlok\",\"mlsat\",\"mluvit\",\"mnich\",\"mnohem\",\"mobil\",\"mocnost\",\"modelka\",\"modlitba\",\"mohyla\",\"mokro\",\"molekula\",\"momentka\",\"monarcha\",\"monokl\",\"monstrum\",\"montovat\",\"monzun\",\"mosaz\",\"moskyt\",\"most\",\"motivace\",\"motorka\",\"motyka\",\"moucha\",\"moudrost\",\"mozaika\",\"mozek\",\"mozol\",\"mramor\",\"mravenec\",\"mrkev\",\"mrtvola\",\"mrzet\",\"mrzutost\",\"mstitel\",\"mudrc\",\"muflon\",\"mulat\",\"mumie\",\"munice\",\"muset\",\"mutace\",\"muzeum\",\"muzikant\",\"myslivec\",\"mzda\",\"nabourat\",\"nachytat\",\"nadace\",\"nadbytek\",\"nadhoz\",\"nadobro\",\"nadpis\",\"nahlas\",\"nahnat\",\"nahodile\",\"nahradit\",\"naivita\",\"najednou\",\"najisto\",\"najmout\",\"naklonit\",\"nakonec\",\"nakrmit\",\"nalevo\",\"namazat\",\"namluvit\",\"nanometr\",\"naoko\",\"naopak\",\"naostro\",\"napadat\",\"napevno\",\"naplnit\",\"napnout\",\"naposled\",\"naprosto\",\"narodit\",\"naruby\",\"narychlo\",\"nasadit\",\"nasekat\",\"naslepo\",\"nastat\",\"natolik\",\"navenek\",\"navrch\",\"navzdory\",\"nazvat\",\"nebe\",\"nechat\",\"necky\",\"nedaleko\",\"nedbat\",\"neduh\",\"negace\",\"nehet\",\"nehoda\",\"nejen\",\"nejprve\",\"neklid\",\"nelibost\",\"nemilost\",\"nemoc\",\"neochota\",\"neonka\",\"nepokoj\",\"nerost\",\"nerv\",\"nesmysl\",\"nesoulad\",\"netvor\",\"neuron\",\"nevina\",\"nezvykle\",\"nicota\",\"nijak\",\"nikam\",\"nikdy\",\"nikl\",\"nikterak\",\"nitro\",\"nocleh\",\"nohavice\",\"nominace\",\"nora\",\"norek\",\"nositel\",\"nosnost\",\"nouze\",\"noviny\",\"novota\",\"nozdra\",\"nuda\",\"nudle\",\"nuget\",\"nutit\",\"nutnost\",\"nutrie\",\"nymfa\",\"obal\",\"obarvit\",\"obava\",\"obdiv\",\"obec\",\"obehnat\",\"obejmout\",\"obezita\",\"obhajoba\",\"obilnice\",\"objasnit\",\"objekt\",\"obklopit\",\"oblast\",\"oblek\",\"obliba\",\"obloha\",\"obluda\",\"obnos\",\"obohatit\",\"obojek\",\"obout\",\"obrazec\",\"obrna\",\"obruba\",\"obrys\",\"obsah\",\"obsluha\",\"obstarat\",\"obuv\",\"obvaz\",\"obvinit\",\"obvod\",\"obvykle\",\"obyvatel\",\"obzor\",\"ocas\",\"ocel\",\"ocenit\",\"ochladit\",\"ochota\",\"ochrana\",\"ocitnout\",\"odboj\",\"odbyt\",\"odchod\",\"odcizit\",\"odebrat\",\"odeslat\",\"odevzdat\",\"odezva\",\"odhadce\",\"odhodit\",\"odjet\",\"odjinud\",\"odkaz\",\"odkoupit\",\"odliv\",\"odluka\",\"odmlka\",\"odolnost\",\"odpad\",\"odpis\",\"odplout\",\"odpor\",\"odpustit\",\"odpykat\",\"odrazka\",\"odsoudit\",\"odstup\",\"odsun\",\"odtok\",\"odtud\",\"odvaha\",\"odveta\",\"odvolat\",\"odvracet\",\"odznak\",\"ofina\",\"ofsajd\",\"ohlas\",\"ohnisko\",\"ohrada\",\"ohrozit\",\"ohryzek\",\"okap\",\"okenice\",\"oklika\",\"okno\",\"okouzlit\",\"okovy\",\"okrasa\",\"okres\",\"okrsek\",\"okruh\",\"okupant\",\"okurka\",\"okusit\",\"olejnina\",\"olizovat\",\"omak\",\"omeleta\",\"omezit\",\"omladina\",\"omlouvat\",\"omluva\",\"omyl\",\"onehdy\",\"opakovat\",\"opasek\",\"operace\",\"opice\",\"opilost\",\"opisovat\",\"opora\",\"opozice\",\"opravdu\",\"oproti\",\"orbital\",\"orchestr\",\"orgie\",\"orlice\",\"orloj\",\"ortel\",\"osada\",\"oschnout\",\"osika\",\"osivo\",\"oslava\",\"oslepit\",\"oslnit\",\"oslovit\",\"osnova\",\"osoba\",\"osolit\",\"ospalec\",\"osten\",\"ostraha\",\"ostuda\",\"ostych\",\"osvojit\",\"oteplit\",\"otisk\",\"otop\",\"otrhat\",\"otrlost\",\"otrok\",\"otruby\",\"otvor\",\"ovanout\",\"ovar\",\"oves\",\"ovlivnit\",\"ovoce\",\"oxid\",\"ozdoba\",\"pachatel\",\"pacient\",\"padouch\",\"pahorek\",\"pakt\",\"palanda\",\"palec\",\"palivo\",\"paluba\",\"pamflet\",\"pamlsek\",\"panenka\",\"panika\",\"panna\",\"panovat\",\"panstvo\",\"pantofle\",\"paprika\",\"parketa\",\"parodie\",\"parta\",\"paruka\",\"paryba\",\"paseka\",\"pasivita\",\"pastelka\",\"patent\",\"patrona\",\"pavouk\",\"pazneht\",\"pazourek\",\"pecka\",\"pedagog\",\"pejsek\",\"peklo\",\"peloton\",\"penalta\",\"pendrek\",\"penze\",\"periskop\",\"pero\",\"pestrost\",\"petarda\",\"petice\",\"petrolej\",\"pevnina\",\"pexeso\",\"pianista\",\"piha\",\"pijavice\",\"pikle\",\"piknik\",\"pilina\",\"pilnost\",\"pilulka\",\"pinzeta\",\"pipeta\",\"pisatel\",\"pistole\",\"pitevna\",\"pivnice\",\"pivovar\",\"placenta\",\"plakat\",\"plamen\",\"planeta\",\"plastika\",\"platit\",\"plavidlo\",\"plaz\",\"plech\",\"plemeno\",\"plenta\",\"ples\",\"pletivo\",\"plevel\",\"plivat\",\"plnit\",\"plno\",\"plocha\",\"plodina\",\"plomba\",\"plout\",\"pluk\",\"plyn\",\"pobavit\",\"pobyt\",\"pochod\",\"pocit\",\"poctivec\",\"podat\",\"podcenit\",\"podepsat\",\"podhled\",\"podivit\",\"podklad\",\"podmanit\",\"podnik\",\"podoba\",\"podpora\",\"podraz\",\"podstata\",\"podvod\",\"podzim\",\"poezie\",\"pohanka\",\"pohnutka\",\"pohovor\",\"pohroma\",\"pohyb\",\"pointa\",\"pojistka\",\"pojmout\",\"pokazit\",\"pokles\",\"pokoj\",\"pokrok\",\"pokuta\",\"pokyn\",\"poledne\",\"polibek\",\"polknout\",\"poloha\",\"polynom\",\"pomalu\",\"pominout\",\"pomlka\",\"pomoc\",\"pomsta\",\"pomyslet\",\"ponechat\",\"ponorka\",\"ponurost\",\"popadat\",\"popel\",\"popisek\",\"poplach\",\"poprosit\",\"popsat\",\"popud\",\"poradce\",\"porce\",\"porod\",\"porucha\",\"poryv\",\"posadit\",\"posed\",\"posila\",\"poskok\",\"poslanec\",\"posoudit\",\"pospolu\",\"postava\",\"posudek\",\"posyp\",\"potah\",\"potkan\",\"potlesk\",\"potomek\",\"potrava\",\"potupa\",\"potvora\",\"poukaz\",\"pouto\",\"pouzdro\",\"povaha\",\"povidla\",\"povlak\",\"povoz\",\"povrch\",\"povstat\",\"povyk\",\"povzdech\",\"pozdrav\",\"pozemek\",\"poznatek\",\"pozor\",\"pozvat\",\"pracovat\",\"prahory\",\"praktika\",\"prales\",\"praotec\",\"praporek\",\"prase\",\"pravda\",\"princip\",\"prkno\",\"probudit\",\"procento\",\"prodej\",\"profese\",\"prohra\",\"projekt\",\"prolomit\",\"promile\",\"pronikat\",\"propad\",\"prorok\",\"prosba\",\"proton\",\"proutek\",\"provaz\",\"prskavka\",\"prsten\",\"prudkost\",\"prut\",\"prvek\",\"prvohory\",\"psanec\",\"psovod\",\"pstruh\",\"ptactvo\",\"puberta\",\"puch\",\"pudl\",\"pukavec\",\"puklina\",\"pukrle\",\"pult\",\"pumpa\",\"punc\",\"pupen\",\"pusa\",\"pusinka\",\"pustina\",\"putovat\",\"putyka\",\"pyramida\",\"pysk\",\"pytel\",\"racek\",\"rachot\",\"radiace\",\"radnice\",\"radon\",\"raft\",\"ragby\",\"raketa\",\"rakovina\",\"rameno\",\"rampouch\",\"rande\",\"rarach\",\"rarita\",\"rasovna\",\"rastr\",\"ratolest\",\"razance\",\"razidlo\",\"reagovat\",\"reakce\",\"recept\",\"redaktor\",\"referent\",\"reflex\",\"rejnok\",\"reklama\",\"rekord\",\"rekrut\",\"rektor\",\"reputace\",\"revize\",\"revma\",\"revolver\",\"rezerva\",\"riskovat\",\"riziko\",\"robotika\",\"rodokmen\",\"rohovka\",\"rokle\",\"rokoko\",\"romaneto\",\"ropovod\",\"ropucha\",\"rorejs\",\"rosol\",\"rostlina\",\"rotmistr\",\"rotoped\",\"rotunda\",\"roubenka\",\"roucho\",\"roup\",\"roura\",\"rovina\",\"rovnice\",\"rozbor\",\"rozchod\",\"rozdat\",\"rozeznat\",\"rozhodce\",\"rozinka\",\"rozjezd\",\"rozkaz\",\"rozloha\",\"rozmar\",\"rozpad\",\"rozruch\",\"rozsah\",\"roztok\",\"rozum\",\"rozvod\",\"rubrika\",\"ruchadlo\",\"rukavice\",\"rukopis\",\"ryba\",\"rybolov\",\"rychlost\",\"rydlo\",\"rypadlo\",\"rytina\",\"ryzost\",\"sadista\",\"sahat\",\"sako\",\"samec\",\"samizdat\",\"samota\",\"sanitka\",\"sardinka\",\"sasanka\",\"satelit\",\"sazba\",\"sazenice\",\"sbor\",\"schovat\",\"sebranka\",\"secese\",\"sedadlo\",\"sediment\",\"sedlo\",\"sehnat\",\"sejmout\",\"sekera\",\"sekta\",\"sekunda\",\"sekvoje\",\"semeno\",\"seno\",\"servis\",\"sesadit\",\"seshora\",\"seskok\",\"seslat\",\"sestra\",\"sesuv\",\"sesypat\",\"setba\",\"setina\",\"setkat\",\"setnout\",\"setrvat\",\"sever\",\"seznam\",\"shoda\",\"shrnout\",\"sifon\",\"silnice\",\"sirka\",\"sirotek\",\"sirup\",\"situace\",\"skafandr\",\"skalisko\",\"skanzen\",\"skaut\",\"skeptik\",\"skica\",\"skladba\",\"sklenice\",\"sklo\",\"skluz\",\"skoba\",\"skokan\",\"skoro\",\"skripta\",\"skrz\",\"skupina\",\"skvost\",\"skvrna\",\"slabika\",\"sladidlo\",\"slanina\",\"slast\",\"slavnost\",\"sledovat\",\"slepec\",\"sleva\",\"slezina\",\"slib\",\"slina\",\"sliznice\",\"slon\",\"sloupek\",\"slovo\",\"sluch\",\"sluha\",\"slunce\",\"slupka\",\"slza\",\"smaragd\",\"smetana\",\"smilstvo\",\"smlouva\",\"smog\",\"smrad\",\"smrk\",\"smrtka\",\"smutek\",\"smysl\",\"snad\",\"snaha\",\"snob\",\"sobota\",\"socha\",\"sodovka\",\"sokol\",\"sopka\",\"sotva\",\"souboj\",\"soucit\",\"soudce\",\"souhlas\",\"soulad\",\"soumrak\",\"souprava\",\"soused\",\"soutok\",\"souviset\",\"spalovna\",\"spasitel\",\"spis\",\"splav\",\"spodek\",\"spojenec\",\"spolu\",\"sponzor\",\"spornost\",\"spousta\",\"sprcha\",\"spustit\",\"sranda\",\"sraz\",\"srdce\",\"srna\",\"srnec\",\"srovnat\",\"srpen\",\"srst\",\"srub\",\"stanice\",\"starosta\",\"statika\",\"stavba\",\"stehno\",\"stezka\",\"stodola\",\"stolek\",\"stopa\",\"storno\",\"stoupat\",\"strach\",\"stres\",\"strhnout\",\"strom\",\"struna\",\"studna\",\"stupnice\",\"stvol\",\"styk\",\"subjekt\",\"subtropy\",\"suchar\",\"sudost\",\"sukno\",\"sundat\",\"sunout\",\"surikata\",\"surovina\",\"svah\",\"svalstvo\",\"svetr\",\"svatba\",\"svazek\",\"svisle\",\"svitek\",\"svoboda\",\"svodidlo\",\"svorka\",\"svrab\",\"sykavka\",\"sykot\",\"synek\",\"synovec\",\"sypat\",\"sypkost\",\"syrovost\",\"sysel\",\"sytost\",\"tabletka\",\"tabule\",\"tahoun\",\"tajemno\",\"tajfun\",\"tajga\",\"tajit\",\"tajnost\",\"taktika\",\"tamhle\",\"tampon\",\"tancovat\",\"tanec\",\"tanker\",\"tapeta\",\"tavenina\",\"tazatel\",\"technika\",\"tehdy\",\"tekutina\",\"telefon\",\"temnota\",\"tendence\",\"tenista\",\"tenor\",\"teplota\",\"tepna\",\"teprve\",\"terapie\",\"termoska\",\"textil\",\"ticho\",\"tiskopis\",\"titulek\",\"tkadlec\",\"tkanina\",\"tlapka\",\"tleskat\",\"tlukot\",\"tlupa\",\"tmel\",\"toaleta\",\"topinka\",\"topol\",\"torzo\",\"touha\",\"toulec\",\"tradice\",\"traktor\",\"tramp\",\"trasa\",\"traverza\",\"trefit\",\"trest\",\"trezor\",\"trhavina\",\"trhlina\",\"trochu\",\"trojice\",\"troska\",\"trouba\",\"trpce\",\"trpitel\",\"trpkost\",\"trubec\",\"truchlit\",\"truhlice\",\"trus\",\"trvat\",\"tudy\",\"tuhnout\",\"tuhost\",\"tundra\",\"turista\",\"turnaj\",\"tuzemsko\",\"tvaroh\",\"tvorba\",\"tvrdost\",\"tvrz\",\"tygr\",\"tykev\",\"ubohost\",\"uboze\",\"ubrat\",\"ubrousek\",\"ubrus\",\"ubytovna\",\"ucho\",\"uctivost\",\"udivit\",\"uhradit\",\"ujednat\",\"ujistit\",\"ujmout\",\"ukazatel\",\"uklidnit\",\"uklonit\",\"ukotvit\",\"ukrojit\",\"ulice\",\"ulita\",\"ulovit\",\"umyvadlo\",\"unavit\",\"uniforma\",\"uniknout\",\"upadnout\",\"uplatnit\",\"uplynout\",\"upoutat\",\"upravit\",\"uran\",\"urazit\",\"usednout\",\"usilovat\",\"usmrtit\",\"usnadnit\",\"usnout\",\"usoudit\",\"ustlat\",\"ustrnout\",\"utahovat\",\"utkat\",\"utlumit\",\"utonout\",\"utopenec\",\"utrousit\",\"uvalit\",\"uvolnit\",\"uvozovka\",\"uzdravit\",\"uzel\",\"uzenina\",\"uzlina\",\"uznat\",\"vagon\",\"valcha\",\"valoun\",\"vana\",\"vandal\",\"vanilka\",\"varan\",\"varhany\",\"varovat\",\"vcelku\",\"vchod\",\"vdova\",\"vedro\",\"vegetace\",\"vejce\",\"velbloud\",\"veletrh\",\"velitel\",\"velmoc\",\"velryba\",\"venkov\",\"veranda\",\"verze\",\"veselka\",\"veskrze\",\"vesnice\",\"vespodu\",\"vesta\",\"veterina\",\"veverka\",\"vibrace\",\"vichr\",\"videohra\",\"vidina\",\"vidle\",\"vila\",\"vinice\",\"viset\",\"vitalita\",\"vize\",\"vizitka\",\"vjezd\",\"vklad\",\"vkus\",\"vlajka\",\"vlak\",\"vlasec\",\"vlevo\",\"vlhkost\",\"vliv\",\"vlnovka\",\"vloupat\",\"vnucovat\",\"vnuk\",\"voda\",\"vodivost\",\"vodoznak\",\"vodstvo\",\"vojensky\",\"vojna\",\"vojsko\",\"volant\",\"volba\",\"volit\",\"volno\",\"voskovka\",\"vozidlo\",\"vozovna\",\"vpravo\",\"vrabec\",\"vracet\",\"vrah\",\"vrata\",\"vrba\",\"vrcholek\",\"vrhat\",\"vrstva\",\"vrtule\",\"vsadit\",\"vstoupit\",\"vstup\",\"vtip\",\"vybavit\",\"vybrat\",\"vychovat\",\"vydat\",\"vydra\",\"vyfotit\",\"vyhledat\",\"vyhnout\",\"vyhodit\",\"vyhradit\",\"vyhubit\",\"vyjasnit\",\"vyjet\",\"vyjmout\",\"vyklopit\",\"vykonat\",\"vylekat\",\"vymazat\",\"vymezit\",\"vymizet\",\"vymyslet\",\"vynechat\",\"vynikat\",\"vynutit\",\"vypadat\",\"vyplatit\",\"vypravit\",\"vypustit\",\"vyrazit\",\"vyrovnat\",\"vyrvat\",\"vyslovit\",\"vysoko\",\"vystavit\",\"vysunout\",\"vysypat\",\"vytasit\",\"vytesat\",\"vytratit\",\"vyvinout\",\"vyvolat\",\"vyvrhel\",\"vyzdobit\",\"vyznat\",\"vzadu\",\"vzbudit\",\"vzchopit\",\"vzdor\",\"vzduch\",\"vzdychat\",\"vzestup\",\"vzhledem\",\"vzkaz\",\"vzlykat\",\"vznik\",\"vzorek\",\"vzpoura\",\"vztah\",\"vztek\",\"xylofon\",\"zabrat\",\"zabydlet\",\"zachovat\",\"zadarmo\",\"zadusit\",\"zafoukat\",\"zahltit\",\"zahodit\",\"zahrada\",\"zahynout\",\"zajatec\",\"zajet\",\"zajistit\",\"zaklepat\",\"zakoupit\",\"zalepit\",\"zamezit\",\"zamotat\",\"zamyslet\",\"zanechat\",\"zanikat\",\"zaplatit\",\"zapojit\",\"zapsat\",\"zarazit\",\"zastavit\",\"zasunout\",\"zatajit\",\"zatemnit\",\"zatknout\",\"zaujmout\",\"zavalit\",\"zavelet\",\"zavinit\",\"zavolat\",\"zavrtat\",\"zazvonit\",\"zbavit\",\"zbrusu\",\"zbudovat\",\"zbytek\",\"zdaleka\",\"zdarma\",\"zdatnost\",\"zdivo\",\"zdobit\",\"zdroj\",\"zdvih\",\"zdymadlo\",\"zelenina\",\"zeman\",\"zemina\",\"zeptat\",\"zezadu\",\"zezdola\",\"zhatit\",\"zhltnout\",\"zhluboka\",\"zhotovit\",\"zhruba\",\"zima\",\"zimnice\",\"zjemnit\",\"zklamat\",\"zkoumat\",\"zkratka\",\"zkumavka\",\"zlato\",\"zlehka\",\"zloba\",\"zlom\",\"zlost\",\"zlozvyk\",\"zmapovat\",\"zmar\",\"zmatek\",\"zmije\",\"zmizet\",\"zmocnit\",\"zmodrat\",\"zmrzlina\",\"zmutovat\",\"znak\",\"znalost\",\"znamenat\",\"znovu\",\"zobrazit\",\"zotavit\",\"zoubek\",\"zoufale\",\"zplodit\",\"zpomalit\",\"zprava\",\"zprostit\",\"zprudka\",\"zprvu\",\"zrada\",\"zranit\",\"zrcadlo\",\"zrnitost\",\"zrno\",\"zrovna\",\"zrychlit\",\"zrzavost\",\"zticha\",\"ztratit\",\"zubovina\",\"zubr\",\"zvednout\",\"zvenku\",\"zvesela\",\"zvon\",\"zvrat\",\"zvukovod\",\"zvyk\"][\"abandon\",\"ability\",\"able\",\"about\",\"above\",\"absent\",\"absorb\",\"abstract\",\"absurd\",\"abuse\",\"access\",\"accident\",\"account\",\"accuse\",\"achieve\",\"acid\",\"acoustic\",\"acquire\",\"across\",\"act\",\"action\",\"actor\",\"actress\",\"actual\",\"adapt\",\"add\",\"addict\",\"address\",\"adjust\",\"admit\",\"adult\",\"advance\",\"advice\",\"aerobic\",\"affair\",\"afford\",\"afraid\",\"again\",\"age\",\"agent\",\"agree\",\"ahead\",\"aim\",\"air\",\"airport\",\"aisle\",\"alarm\",\"album\",\"alcohol\",\"alert\",\"alien\",\"all\",\"alley\",\"allow\",\"almost\",\"alone\",\"alpha\",\"already\",\"also\",\"alter\",\"always\",\"amateur\",\"amazing\",\"among\",\"amount\",\"amused\",\"analyst\",\"anchor\",\"ancient\",\"anger\",\"angle\",\"angry\",\"animal\",\"ankle\",\"announce\",\"annual\",\"another\",\"answer\",\"antenna\",\"antique\",\"anxiety\",\"any\",\"apart\",\"apology\",\"appear\",\"apple\",\"approve\",\"april\",\"arch\",\"arctic\",\"area\",\"arena\",\"argue\",\"arm\",\"armed\",\"armor\",\"army\",\"around\",\"arrange\",\"arrest\",\"arrive\",\"arrow\",\"art\",\"artefact\",\"artist\",\"artwork\",\"ask\",\"aspect\",\"assault\",\"asset\",\"assist\",\"assume\",\"asthma\",\"athlete\",\"atom\",\"attack\",\"attend\",\"attitude\",\"attract\",\"auction\",\"audit\",\"august\",\"aunt\",\"author\",\"auto\",\"autumn\",\"average\",\"avocado\",\"avoid\",\"awake\",\"aware\",\"away\",\"awesome\",\"awful\",\"awkward\",\"axis\",\"baby\",\"bachelor\",\"bacon\",\"badge\",\"bag\",\"balance\",\"balcony\",\"ball\",\"bamboo\",\"banana\",\"banner\",\"bar\",\"barely\",\"bargain\",\"barrel\",\"base\",\"basic\",\"basket\",\"battle\",\"beach\",\"bean\",\"beauty\",\"because\",\"become\",\"beef\",\"before\",\"begin\",\"behave\",\"behind\",\"believe\",\"below\",\"belt\",\"bench\",\"benefit\",\"best\",\"betray\",\"better\",\"between\",\"beyond\",\"bicycle\",\"bid\",\"bike\",\"bind\",\"biology\",\"bird\",\"birth\",\"bitter\",\"black\",\"blade\",\"blame\",\"blanket\",\"blast\",\"bleak\",\"bless\",\"blind\",\"blood\",\"blossom\",\"blouse\",\"blue\",\"blur\",\"blush\",\"board\",\"boat\",\"body\",\"boil\",\"bomb\",\"bone\",\"bonus\",\"book\",\"boost\",\"border\",\"boring\",\"borrow\",\"boss\",\"bottom\",\"bounce\",\"box\",\"boy\",\"bracket\",\"brain\",\"brand\",\"brass\",\"brave\",\"bread\",\"breeze\",\"brick\",\"bridge\",\"brief\",\"bright\",\"bring\",\"brisk\",\"broccoli\",\"broken\",\"bronze\",\"broom\",\"brother\",\"brown\",\"brush\",\"bubble\",\"buddy\",\"budget\",\"buffalo\",\"build\",\"bulb\",\"bulk\",\"bullet\",\"bundle\",\"bunker\",\"burden\",\"burger\",\"burst\",\"bus\",\"business\",\"busy\",\"butter\",\"buyer\",\"buzz\",\"cabbage\",\"cabin\",\"cable\",\"cactus\",\"cage\",\"cake\",\"call\",\"calm\",\"camera\",\"camp\",\"can\",\"canal\",\"cancel\",\"candy\",\"cannon\",\"canoe\",\"canvas\",\"canyon\",\"capable\",\"capital\",\"captain\",\"car\",\"carbon\",\"card\",\"cargo\",\"carpet\",\"carry\",\"cart\",\"case\",\"cash\",\"casino\",\"castle\",\"casual\",\"cat\",\"catalog\",\"catch\",\"category\",\"cattle\",\"caught\",\"cause\",\"caution\",\"cave\",\"ceiling\",\"celery\",\"cement\",\"census\",\"century\",\"cereal\",\"certain\",\"chair\",\"chalk\",\"champion\",\"change\",\"chaos\",\"chapter\",\"charge\",\"chase\",\"chat\",\"cheap\",\"check\",\"cheese\",\"chef\",\"cherry\",\"chest\",\"chicken\",\"chief\",\"child\",\"chimney\",\"choice\",\"choose\",\"chronic\",\"chuckle\",\"chunk\",\"churn\",\"cigar\",\"cinnamon\",\"circle\",\"citizen\",\"city\",\"civil\",\"claim\",\"clap\",\"clarify\",\"claw\",\"clay\",\"clean\",\"clerk\",\"clever\",\"click\",\"client\",\"cliff\",\"climb\",\"clinic\",\"clip\",\"clock\",\"clog\",\"close\",\"cloth\",\"cloud\",\"clown\",\"club\",\"clump\",\"cluster\",\"clutch\",\"coach\",\"coast\",\"coconut\",\"code\",\"coffee\",\"coil\",\"coin\",\"collect\",\"color\",\"column\",\"combine\",\"come\",\"comfort\",\"comic\",\"common\",\"company\",\"concert\",\"conduct\",\"confirm\",\"congress\",\"connect\",\"consider\",\"control\",\"convince\",\"cook\",\"cool\",\"copper\",\"copy\",\"coral\",\"core\",\"corn\",\"correct\",\"cost\",\"cotton\",\"couch\",\"country\",\"couple\",\"course\",\"cousin\",\"cover\",\"coyote\",\"crack\",\"cradle\",\"craft\",\"cram\",\"crane\",\"crash\",\"crater\",\"crawl\",\"crazy\",\"cream\",\"credit\",\"creek\",\"crew\",\"cricket\",\"crime\",\"crisp\",\"critic\",\"crop\",\"cross\",\"crouch\",\"crowd\",\"crucial\",\"cruel\",\"cruise\",\"crumble\",\"crunch\",\"crush\",\"cry\",\"crystal\",\"cube\",\"culture\",\"cup\",\"cupboard\",\"curious\",\"current\",\"curtain\",\"curve\",\"cushion\",\"custom\",\"cute\",\"cycle\",\"dad\",\"damage\",\"damp\",\"dance\",\"danger\",\"daring\",\"dash\",\"daughter\",\"dawn\",\"day\",\"deal\",\"debate\",\"debris\",\"decade\",\"december\",\"decide\",\"decline\",\"decorate\",\"decrease\",\"deer\",\"defense\",\"define\",\"defy\",\"degree\",\"delay\",\"deliver\",\"demand\",\"demise\",\"denial\",\"dentist\",\"deny\",\"depart\",\"depend\",\"deposit\",\"depth\",\"deputy\",\"derive\",\"describe\",\"desert\",\"design\",\"desk\",\"despair\",\"destroy\",\"detail\",\"detect\",\"develop\",\"device\",\"devote\",\"diagram\",\"dial\",\"diamond\",\"diary\",\"dice\",\"diesel\",\"diet\",\"differ\",\"digital\",\"dignity\",\"dilemma\",\"dinner\",\"dinosaur\",\"direct\",\"dirt\",\"disagree\",\"discover\",\"disease\",\"dish\",\"dismiss\",\"disorder\",\"display\",\"distance\",\"divert\",\"divide\",\"divorce\",\"dizzy\",\"doctor\",\"document\",\"dog\",\"doll\",\"dolphin\",\"domain\",\"donate\",\"donkey\",\"donor\",\"door\",\"dose\",\"double\",\"dove\",\"draft\",\"dragon\",\"drama\",\"drastic\",\"draw\",\"dream\",\"dress\",\"drift\",\"drill\",\"drink\",\"drip\",\"drive\",\"drop\",\"drum\",\"dry\",\"duck\",\"dumb\",\"dune\",\"during\",\"dust\",\"dutch\",\"duty\",\"dwarf\",\"dynamic\",\"eager\",\"eagle\",\"early\",\"earn\",\"earth\",\"easily\",\"east\",\"easy\",\"echo\",\"ecology\",\"economy\",\"edge\",\"edit\",\"educate\",\"effort\",\"egg\",\"eight\",\"either\",\"elbow\",\"elder\",\"electric\",\"elegant\",\"element\",\"elephant\",\"elevator\",\"elite\",\"else\",\"embark\",\"embody\",\"embrace\",\"emerge\",\"emotion\",\"employ\",\"empower\",\"empty\",\"enable\",\"enact\",\"end\",\"endless\",\"endorse\",\"enemy\",\"energy\",\"enforce\",\"engage\",\"engine\",\"enhance\",\"enjoy\",\"enlist\",\"enough\",\"enrich\",\"enroll\",\"ensure\",\"enter\",\"entire\",\"entry\",\"envelope\",\"episode\",\"equal\",\"equip\",\"era\",\"erase\",\"erode\",\"erosion\",\"error\",\"erupt\",\"escape\",\"essay\",\"essence\",\"estate\",\"eternal\",\"ethics\",\"evidence\",\"evil\",\"evoke\",\"evolve\",\"exact\",\"example\",\"excess\",\"exchange\",\"excite\",\"exclude\",\"excuse\",\"execute\",\"exercise\",\"exhaust\",\"exhibit\",\"exile\",\"exist\",\"exit\",\"exotic\",\"expand\",\"expect\",\"expire\",\"explain\",\"expose\",\"express\",\"extend\",\"extra\",\"eye\",\"eyebrow\",\"fabric\",\"face\",\"faculty\",\"fade\",\"faint\",\"faith\",\"fall\",\"false\",\"fame\",\"family\",\"famous\",\"fan\",\"fancy\",\"fantasy\",\"farm\",\"fashion\",\"fat\",\"fatal\",\"father\",\"fatigue\",\"fault\",\"favorite\",\"feature\",\"february\",\"federal\",\"fee\",\"feed\",\"feel\",\"female\",\"fence\",\"festival\",\"fetch\",\"fever\",\"few\",\"fiber\",\"fiction\",\"field\",\"figure\",\"file\",\"film\",\"filter\",\"final\",\"find\",\"fine\",\"finger\",\"finish\",\"fire\",\"firm\",\"first\",\"fiscal\",\"fish\",\"fit\",\"fitness\",\"fix\",\"flag\",\"flame\",\"flash\",\"flat\",\"flavor\",\"flee\",\"flight\",\"flip\",\"float\",\"flock\",\"floor\",\"flower\",\"fluid\",\"flush\",\"fly\",\"foam\",\"focus\",\"fog\",\"foil\",\"fold\",\"follow\",\"food\",\"foot\",\"force\",\"forest\",\"forget\",\"fork\",\"fortune\",\"forum\",\"forward\",\"fossil\",\"foster\",\"found\",\"fox\",\"fragile\",\"frame\",\"frequent\",\"fresh\",\"friend\",\"fringe\",\"frog\",\"front\",\"frost\",\"frown\",\"frozen\",\"fruit\",\"fuel\",\"fun\",\"funny\",\"furnace\",\"fury\",\"future\",\"gadget\",\"gain\",\"galaxy\",\"gallery\",\"game\",\"gap\",\"garage\",\"garbage\",\"garden\",\"garlic\",\"garment\",\"gas\",\"gasp\",\"gate\",\"gather\",\"gauge\",\"gaze\",\"general\",\"genius\",\"genre\",\"gentle\",\"genuine\",\"gesture\",\"ghost\",\"giant\",\"gift\",\"giggle\",\"ginger\",\"giraffe\",\"girl\",\"give\",\"glad\",\"glance\",\"glare\",\"glass\",\"glide\",\"glimpse\",\"globe\",\"gloom\",\"glory\",\"glove\",\"glow\",\"glue\",\"goat\",\"goddess\",\"gold\",\"good\",\"goose\",\"gorilla\",\"gospel\",\"gossip\",\"govern\",\"gown\",\"grab\",\"grace\",\"grain\",\"grant\",\"grape\",\"grass\",\"gravity\",\"great\",\"green\",\"grid\",\"grief\",\"grit\",\"grocery\",\"group\",\"grow\",\"grunt\",\"guard\",\"guess\",\"guide\",\"guilt\",\"guitar\",\"gun\",\"gym\",\"habit\",\"hair\",\"half\",\"hammer\",\"hamster\",\"hand\",\"happy\",\"harbor\",\"hard\",\"harsh\",\"harvest\",\"hat\",\"have\",\"hawk\",\"hazard\",\"head\",\"health\",\"heart\",\"heavy\",\"hedgehog\",\"height\",\"hello\",\"helmet\",\"help\",\"hen\",\"hero\",\"hidden\",\"high\",\"hill\",\"hint\",\"hip\",\"hire\",\"history\",\"hobby\",\"hockey\",\"hold\",\"hole\",\"holiday\",\"hollow\",\"home\",\"honey\",\"hood\",\"hope\",\"horn\",\"horror\",\"horse\",\"hospital\",\"host\",\"hotel\",\"hour\",\"hover\",\"hub\",\"huge\",\"human\",\"humble\",\"humor\",\"hundred\",\"hungry\",\"hunt\",\"hurdle\",\"hurry\",\"hurt\",\"husband\",\"hybrid\",\"ice\",\"icon\",\"idea\",\"identify\",\"idle\",\"ignore\",\"ill\",\"illegal\",\"illness\",\"image\",\"imitate\",\"immense\",\"immune\",\"impact\",\"impose\",\"improve\",\"impulse\",\"inch\",\"include\",\"income\",\"increase\",\"index\",\"indicate\",\"indoor\",\"industry\",\"infant\",\"inflict\",\"inform\",\"inhale\",\"inherit\",\"initial\",\"inject\",\"injury\",\"inmate\",\"inner\",\"innocent\",\"input\",\"inquiry\",\"insane\",\"insect\",\"inside\",\"inspire\",\"install\",\"intact\",\"interest\",\"into\",\"invest\",\"invite\",\"involve\",\"iron\",\"island\",\"isolate\",\"issue\",\"item\",\"ivory\",\"jacket\",\"jaguar\",\"jar\",\"jazz\",\"jealous\",\"jeans\",\"jelly\",\"jewel\",\"job\",\"join\",\"joke\",\"journey\",\"joy\",\"judge\",\"juice\",\"jump\",\"jungle\",\"junior\",\"junk\",\"just\",\"kangaroo\",\"keen\",\"keep\",\"ketchup\",\"key\",\"kick\",\"kid\",\"kidney\",\"kind\",\"kingdom\",\"kiss\",\"kit\",\"kitchen\",\"kite\",\"kitten\",\"kiwi\",\"knee\",\"knife\",\"knock\",\"know\",\"lab\",\"label\",\"labor\",\"ladder\",\"lady\",\"lake\",\"lamp\",\"language\",\"laptop\",\"large\",\"later\",\"latin\",\"laugh\",\"laundry\",\"lava\",\"law\",\"lawn\",\"lawsuit\",\"layer\",\"lazy\",\"leader\",\"leaf\",\"learn\",\"leave\",\"lecture\",\"left\",\"leg\",\"legal\",\"legend\",\"leisure\",\"lemon\",\"lend\",\"length\",\"lens\",\"leopard\",\"lesson\",\"letter\",\"level\",\"liar\",\"liberty\",\"library\",\"license\",\"life\",\"lift\",\"light\",\"like\",\"limb\",\"limit\",\"link\",\"lion\",\"liquid\",\"list\",\"little\",\"live\",\"lizard\",\"load\",\"loan\",\"lobster\",\"local\",\"lock\",\"logic\",\"lonely\",\"long\",\"loop\",\"lottery\",\"loud\",\"lounge\",\"love\",\"loyal\",\"lucky\",\"luggage\",\"lumber\",\"lunar\",\"lunch\",\"luxury\",\"lyrics\",\"machine\",\"mad\",\"magic\",\"magnet\",\"maid\",\"mail\",\"main\",\"major\",\"make\",\"mammal\",\"man\",\"manage\",\"mandate\",\"mango\",\"mansion\",\"manual\",\"maple\",\"marble\",\"march\",\"margin\",\"marine\",\"market\",\"marriage\",\"mask\",\"mass\",\"master\",\"match\",\"material\",\"math\",\"matrix\",\"matter\",\"maximum\",\"maze\",\"meadow\",\"mean\",\"measure\",\"meat\",\"mechanic\",\"medal\",\"media\",\"melody\",\"melt\",\"member\",\"memory\",\"mention\",\"menu\",\"mercy\",\"merge\",\"merit\",\"merry\",\"mesh\",\"message\",\"metal\",\"method\",\"middle\",\"midnight\",\"milk\",\"million\",\"mimic\",\"mind\",\"minimum\",\"minor\",\"minute\",\"miracle\",\"mirror\",\"misery\",\"miss\",\"mistake\",\"mix\",\"mixed\",\"mixture\",\"mobile\",\"model\",\"modify\",\"mom\",\"moment\",\"monitor\",\"monkey\",\"monster\",\"month\",\"moon\",\"moral\",\"more\",\"morning\",\"mosquito\",\"mother\",\"motion\",\"motor\",\"mountain\",\"mouse\",\"move\",\"movie\",\"much\",\"muffin\",\"mule\",\"multiply\",\"muscle\",\"museum\",\"mushroom\",\"music\",\"must\",\"mutual\",\"myself\",\"mystery\",\"myth\",\"naive\",\"name\",\"napkin\",\"narrow\",\"nasty\",\"nation\",\"nature\",\"near\",\"neck\",\"need\",\"negative\",\"neglect\",\"neither\",\"nephew\",\"nerve\",\"nest\",\"net\",\"network\",\"neutral\",\"never\",\"news\",\"next\",\"nice\",\"night\",\"noble\",\"noise\",\"nominee\",\"noodle\",\"normal\",\"north\",\"nose\",\"notable\",\"note\",\"nothing\",\"notice\",\"novel\",\"now\",\"nuclear\",\"number\",\"nurse\",\"nut\",\"oak\",\"obey\",\"object\",\"oblige\",\"obscure\",\"observe\",\"obtain\",\"obvious\",\"occur\",\"ocean\",\"october\",\"odor\",\"off\",\"offer\",\"office\",\"often\",\"oil\",\"okay\",\"old\",\"olive\",\"olympic\",\"omit\",\"once\",\"one\",\"onion\",\"online\",\"only\",\"open\",\"opera\",\"opinion\",\"oppose\",\"option\",\"orange\",\"orbit\",\"orchard\",\"order\",\"ordinary\",\"organ\",\"orient\",\"original\",\"orphan\",\"ostrich\",\"other\",\"outdoor\",\"outer\",\"output\",\"outside\",\"oval\",\"oven\",\"over\",\"own\",\"owner\",\"oxygen\",\"oyster\",\"ozone\",\"pact\",\"paddle\",\"page\",\"pair\",\"palace\",\"palm\",\"panda\",\"panel\",\"panic\",\"panther\",\"paper\",\"parade\",\"parent\",\"park\",\"parrot\",\"party\",\"pass\",\"patch\",\"path\",\"patient\",\"patrol\",\"pattern\",\"pause\",\"pave\",\"payment\",\"peace\",\"peanut\",\"pear\",\"peasant\",\"pelican\",\"pen\",\"penalty\",\"pencil\",\"people\",\"pepper\",\"perfect\",\"permit\",\"person\",\"pet\",\"phone\",\"photo\",\"phrase\",\"physical\",\"piano\",\"picnic\",\"picture\",\"piece\",\"pig\",\"pigeon\",\"pill\",\"pilot\",\"pink\",\"pioneer\",\"pipe\",\"pistol\",\"pitch\",\"pizza\",\"place\",\"planet\",\"plastic\",\"plate\",\"play\",\"please\",\"pledge\",\"pluck\",\"plug\",\"plunge\",\"poem\",\"poet\",\"point\",\"polar\",\"pole\",\"police\",\"pond\",\"pony\",\"pool\",\"popular\",\"portion\",\"position\",\"possible\",\"post\",\"potato\",\"pottery\",\"poverty\",\"powder\",\"power\",\"practice\",\"praise\",\"predict\",\"prefer\",\"prepare\",\"present\",\"pretty\",\"prevent\",\"price\",\"pride\",\"primary\",\"print\",\"priority\",\"prison\",\"private\",\"prize\",\"problem\",\"process\",\"produce\",\"profit\",\"program\",\"project\",\"promote\",\"proof\",\"property\",\"prosper\",\"protect\",\"proud\",\"provide\",\"public\",\"pudding\",\"pull\",\"pulp\",\"pulse\",\"pumpkin\",\"punch\",\"pupil\",\"puppy\",\"purchase\",\"purity\",\"purpose\",\"purse\",\"push\",\"put\",\"puzzle\",\"pyramid\",\"quality\",\"quantum\",\"quarter\",\"question\",\"quick\",\"quit\",\"quiz\",\"quote\",\"rabbit\",\"raccoon\",\"race\",\"rack\",\"radar\",\"radio\",\"rail\",\"rain\",\"raise\",\"rally\",\"ramp\",\"ranch\",\"random\",\"range\",\"rapid\",\"rare\",\"rate\",\"rather\",\"raven\",\"raw\",\"razor\",\"ready\",\"real\",\"reason\",\"rebel\",\"rebuild\",\"recall\",\"receive\",\"recipe\",\"record\",\"recycle\",\"reduce\",\"reflect\",\"reform\",\"refuse\",\"region\",\"regret\",\"regular\",\"reject\",\"relax\",\"release\",\"relief\",\"rely\",\"remain\",\"remember\",\"remind\",\"remove\",\"render\",\"renew\",\"rent\",\"reopen\",\"repair\",\"repeat\",\"replace\",\"report\",\"require\",\"rescue\",\"resemble\",\"resist\",\"resource\",\"response\",\"result\",\"retire\",\"retreat\",\"return\",\"reunion\",\"reveal\",\"review\",\"reward\",\"rhythm\",\"rib\",\"ribbon\",\"rice\",\"rich\",\"ride\",\"ridge\",\"rifle\",\"right\",\"rigid\",\"ring\",\"riot\",\"ripple\",\"risk\",\"ritual\",\"rival\",\"river\",\"road\",\"roast\",\"robot\",\"robust\",\"rocket\",\"romance\",\"roof\",\"rookie\",\"room\",\"rose\",\"rotate\",\"rough\",\"round\",\"route\",\"royal\",\"rubber\",\"rude\",\"rug\",\"rule\",\"run\",\"runway\",\"rural\",\"sad\",\"saddle\",\"sadness\",\"safe\",\"sail\",\"salad\",\"salmon\",\"salon\",\"salt\",\"salute\",\"same\",\"sample\",\"sand\",\"satisfy\",\"satoshi\",\"sauce\",\"sausage\",\"save\",\"say\",\"scale\",\"scan\",\"scare\",\"scatter\",\"scene\",\"scheme\",\"school\",\"science\",\"scissors\",\"scorpion\",\"scout\",\"scrap\",\"screen\",\"script\",\"scrub\",\"sea\",\"search\",\"season\",\"seat\",\"second\",\"secret\",\"section\",\"security\",\"seed\",\"seek\",\"segment\",\"select\",\"sell\",\"seminar\",\"senior\",\"sense\",\"sentence\",\"series\",\"service\",\"session\",\"settle\",\"setup\",\"seven\",\"shadow\",\"shaft\",\"shallow\",\"share\",\"shed\",\"shell\",\"sheriff\",\"shield\",\"shift\",\"shine\",\"ship\",\"shiver\",\"shock\",\"shoe\",\"shoot\",\"shop\",\"short\",\"shoulder\",\"shove\",\"shrimp\",\"shrug\",\"shuffle\",\"shy\",\"sibling\",\"sick\",\"side\",\"siege\",\"sight\",\"sign\",\"silent\",\"silk\",\"silly\",\"silver\",\"similar\",\"simple\",\"since\",\"sing\",\"siren\",\"sister\",\"situate\",\"six\",\"size\",\"skate\",\"sketch\",\"ski\",\"skill\",\"skin\",\"skirt\",\"skull\",\"slab\",\"slam\",\"sleep\",\"slender\",\"slice\",\"slide\",\"slight\",\"slim\",\"slogan\",\"slot\",\"slow\",\"slush\",\"small\",\"smart\",\"smile\",\"smoke\",\"smooth\",\"snack\",\"snake\",\"snap\",\"sniff\",\"snow\",\"soap\",\"soccer\",\"social\",\"sock\",\"soda\",\"soft\",\"solar\",\"soldier\",\"solid\",\"solution\",\"solve\",\"someone\",\"song\",\"soon\",\"sorry\",\"sort\",\"soul\",\"sound\",\"soup\",\"source\",\"south\",\"space\",\"spare\",\"spatial\",\"spawn\",\"speak\",\"special\",\"speed\",\"spell\",\"spend\",\"sphere\",\"spice\",\"spider\",\"spike\",\"spin\",\"spirit\",\"split\",\"spoil\",\"sponsor\",\"spoon\",\"sport\",\"spot\",\"spray\",\"spread\",\"spring\",\"spy\",\"square\",\"squeeze\",\"squirrel\",\"stable\",\"stadium\",\"staff\",\"stage\",\"stairs\",\"stamp\",\"stand\",\"start\",\"state\",\"stay\",\"steak\",\"steel\",\"stem\",\"step\",\"stereo\",\"stick\",\"still\",\"sting\",\"stock\",\"stomach\",\"stone\",\"stool\",\"story\",\"stove\",\"strategy\",\"street\",\"strike\",\"strong\",\"struggle\",\"student\",\"stuff\",\"stumble\",\"style\",\"subject\",\"submit\",\"subway\",\"success\",\"such\",\"sudden\",\"suffer\",\"sugar\",\"suggest\",\"suit\",\"summer\",\"sun\",\"sunny\",\"sunset\",\"super\",\"supply\",\"supreme\",\"sure\",\"surface\",\"surge\",\"surprise\",\"surround\",\"survey\",\"suspect\",\"sustain\",\"swallow\",\"swamp\",\"swap\",\"swarm\",\"swear\",\"sweet\",\"swift\",\"swim\",\"swing\",\"switch\",\"sword\",\"symbol\",\"symptom\",\"syrup\",\"system\",\"table\",\"tackle\",\"tag\",\"tail\",\"talent\",\"talk\",\"tank\",\"tape\",\"target\",\"task\",\"taste\",\"tattoo\",\"taxi\",\"teach\",\"team\",\"tell\",\"ten\",\"tenant\",\"tennis\",\"tent\",\"term\",\"test\",\"text\",\"thank\",\"that\",\"theme\",\"then\",\"theory\",\"there\",\"they\",\"thing\",\"this\",\"thought\",\"three\",\"thrive\",\"throw\",\"thumb\",\"thunder\",\"ticket\",\"tide\",\"tiger\",\"tilt\",\"timber\",\"time\",\"tiny\",\"tip\",\"tired\",\"tissue\",\"title\",\"toast\",\"tobacco\",\"today\",\"toddler\",\"toe\",\"together\",\"toilet\",\"token\",\"tomato\",\"tomorrow\",\"tone\",\"tongue\",\"tonight\",\"tool\",\"tooth\",\"top\",\"topic\",\"topple\",\"torch\",\"tornado\",\"tortoise\",\"toss\",\"total\",\"tourist\",\"toward\",\"tower\",\"town\",\"toy\",\"track\",\"trade\",\"traffic\",\"tragic\",\"train\",\"transfer\",\"trap\",\"trash\",\"travel\",\"tray\",\"treat\",\"tree\",\"trend\",\"trial\",\"tribe\",\"trick\",\"trigger\",\"trim\",\"trip\",\"trophy\",\"trouble\",\"truck\",\"true\",\"truly\",\"trumpet\",\"trust\",\"truth\",\"try\",\"tube\",\"tuition\",\"tumble\",\"tuna\",\"tunnel\",\"turkey\",\"turn\",\"turtle\",\"twelve\",\"twenty\",\"twice\",\"twin\",\"twist\",\"two\",\"type\",\"typical\",\"ugly\",\"umbrella\",\"unable\",\"unaware\",\"uncle\",\"uncover\",\"under\",\"undo\",\"unfair\",\"unfold\",\"unhappy\",\"uniform\",\"unique\",\"unit\",\"universe\",\"unknown\",\"unlock\",\"until\",\"unusual\",\"unveil\",\"update\",\"upgrade\",\"uphold\",\"upon\",\"upper\",\"upset\",\"urban\",\"urge\",\"usage\",\"use\",\"used\",\"useful\",\"useless\",\"usual\",\"utility\",\"vacant\",\"vacuum\",\"vague\",\"valid\",\"valley\",\"valve\",\"van\",\"vanish\",\"vapor\",\"various\",\"vast\",\"vault\",\"vehicle\",\"velvet\",\"vendor\",\"venture\",\"venue\",\"verb\",\"verify\",\"version\",\"very\",\"vessel\",\"veteran\",\"viable\",\"vibrant\",\"vicious\",\"victory\",\"video\",\"view\",\"village\",\"vintage\",\"violin\",\"virtual\",\"virus\",\"visa\",\"visit\",\"visual\",\"vital\",\"vivid\",\"vocal\",\"voice\",\"void\",\"volcano\",\"volume\",\"vote\",\"voyage\",\"wage\",\"wagon\",\"wait\",\"walk\",\"wall\",\"walnut\",\"want\",\"warfare\",\"warm\",\"warrior\",\"wash\",\"wasp\",\"waste\",\"water\",\"wave\",\"way\",\"wealth\",\"weapon\",\"wear\",\"weasel\",\"weather\",\"web\",\"wedding\",\"weekend\",\"weird\",\"welcome\",\"west\",\"wet\",\"whale\",\"what\",\"wheat\",\"wheel\",\"when\",\"where\",\"whip\",\"whisper\",\"wide\",\"width\",\"wife\",\"wild\",\"will\",\"win\",\"window\",\"wine\",\"wing\",\"wink\",\"winner\",\"winter\",\"wire\",\"wisdom\",\"wise\",\"wish\",\"witness\",\"wolf\",\"woman\",\"wonder\",\"wood\",\"wool\",\"word\",\"work\",\"world\",\"worry\",\"worth\",\"wrap\",\"wreck\",\"wrestle\",\"wrist\",\"write\",\"wrong\",\"yard\",\"year\",\"yellow\",\"you\",\"young\",\"youth\",\"zebra\",\"zero\",\"zone\",\"zoo\"][\"abaisser\",\"abandon\",\"abdiquer\",\"abeille\",\"abolir\",\"aborder\",\"aboutir\",\"aboyer\",\"abrasif\",\"abreuver\",\"abriter\",\"abroger\",\"abrupt\",\"absence\",\"absolu\",\"absurde\",\"abusif\",\"abyssal\",\"académie\",\"acajou\",\"acarien\",\"accabler\",\"accepter\",\"acclamer\",\"accolade\",\"accroche\",\"accuser\",\"acerbe\",\"achat\",\"acheter\",\"aciduler\",\"acier\",\"acompte\",\"acquérir\",\"acronyme\",\"acteur\",\"actif\",\"actuel\",\"adepte\",\"adéquat\",\"adhésif\",\"adjectif\",\"adjuger\",\"admettre\",\"admirer\",\"adopter\",\"adorer\",\"adoucir\",\"adresse\",\"adroit\",\"adulte\",\"adverbe\",\"aérer\",\"aéronef\",\"affaire\",\"affecter\",\"affiche\",\"affreux\",\"affubler\",\"agacer\",\"agencer\",\"agile\",\"agiter\",\"agrafer\",\"agréable\",\"agrume\",\"aider\",\"aiguille\",\"ailier\",\"aimable\",\"aisance\",\"ajouter\",\"ajuster\",\"alarmer\",\"alchimie\",\"alerte\",\"algèbre\",\"algue\",\"aliéner\",\"aliment\",\"alléger\",\"alliage\",\"allouer\",\"allumer\",\"alourdir\",\"alpaga\",\"altesse\",\"alvéole\",\"amateur\",\"ambigu\",\"ambre\",\"aménager\",\"amertume\",\"amidon\",\"amiral\",\"amorcer\",\"amour\",\"amovible\",\"amphibie\",\"ampleur\",\"amusant\",\"analyse\",\"anaphore\",\"anarchie\",\"anatomie\",\"ancien\",\"anéantir\",\"angle\",\"angoisse\",\"anguleux\",\"animal\",\"annexer\",\"annonce\",\"annuel\",\"anodin\",\"anomalie\",\"anonyme\",\"anormal\",\"antenne\",\"antidote\",\"anxieux\",\"apaiser\",\"apéritif\",\"aplanir\",\"apologie\",\"appareil\",\"appeler\",\"apporter\",\"appuyer\",\"aquarium\",\"aqueduc\",\"arbitre\",\"arbuste\",\"ardeur\",\"ardoise\",\"argent\",\"arlequin\",\"armature\",\"armement\",\"armoire\",\"armure\",\"arpenter\",\"arracher\",\"arriver\",\"arroser\",\"arsenic\",\"artériel\",\"article\",\"aspect\",\"asphalte\",\"aspirer\",\"assaut\",\"asservir\",\"assiette\",\"associer\",\"assurer\",\"asticot\",\"astre\",\"astuce\",\"atelier\",\"atome\",\"atrium\",\"atroce\",\"attaque\",\"attentif\",\"attirer\",\"attraper\",\"aubaine\",\"auberge\",\"audace\",\"audible\",\"augurer\",\"aurore\",\"automne\",\"autruche\",\"avaler\",\"avancer\",\"avarice\",\"avenir\",\"averse\",\"aveugle\",\"aviateur\",\"avide\",\"avion\",\"aviser\",\"avoine\",\"avouer\",\"avril\",\"axial\",\"axiome\",\"badge\",\"bafouer\",\"bagage\",\"baguette\",\"baignade\",\"balancer\",\"balcon\",\"baleine\",\"balisage\",\"bambin\",\"bancaire\",\"bandage\",\"banlieue\",\"bannière\",\"banquier\",\"barbier\",\"baril\",\"baron\",\"barque\",\"barrage\",\"bassin\",\"bastion\",\"bataille\",\"bateau\",\"batterie\",\"baudrier\",\"bavarder\",\"belette\",\"bélier\",\"belote\",\"bénéfice\",\"berceau\",\"berger\",\"berline\",\"bermuda\",\"besace\",\"besogne\",\"bétail\",\"beurre\",\"biberon\",\"bicycle\",\"bidule\",\"bijou\",\"bilan\",\"bilingue\",\"billard\",\"binaire\",\"biologie\",\"biopsie\",\"biotype\",\"biscuit\",\"bison\",\"bistouri\",\"bitume\",\"bizarre\",\"blafard\",\"blague\",\"blanchir\",\"blessant\",\"blinder\",\"blond\",\"bloquer\",\"blouson\",\"bobard\",\"bobine\",\"boire\",\"boiser\",\"bolide\",\"bonbon\",\"bondir\",\"bonheur\",\"bonifier\",\"bonus\",\"bordure\",\"borne\",\"botte\",\"boucle\",\"boueux\",\"bougie\",\"boulon\",\"bouquin\",\"bourse\",\"boussole\",\"boutique\",\"boxeur\",\"branche\",\"brasier\",\"brave\",\"brebis\",\"brèche\",\"breuvage\",\"bricoler\",\"brigade\",\"brillant\",\"brioche\",\"brique\",\"brochure\",\"broder\",\"bronzer\",\"brousse\",\"broyeur\",\"brume\",\"brusque\",\"brutal\",\"bruyant\",\"buffle\",\"buisson\",\"bulletin\",\"bureau\",\"burin\",\"bustier\",\"butiner\",\"butoir\",\"buvable\",\"buvette\",\"cabanon\",\"cabine\",\"cachette\",\"cadeau\",\"cadre\",\"caféine\",\"caillou\",\"caisson\",\"calculer\",\"calepin\",\"calibre\",\"calmer\",\"calomnie\",\"calvaire\",\"camarade\",\"caméra\",\"camion\",\"campagne\",\"canal\",\"caneton\",\"canon\",\"cantine\",\"canular\",\"capable\",\"caporal\",\"caprice\",\"capsule\",\"capter\",\"capuche\",\"carabine\",\"carbone\",\"caresser\",\"caribou\",\"carnage\",\"carotte\",\"carreau\",\"carton\",\"cascade\",\"casier\",\"casque\",\"cassure\",\"causer\",\"caution\",\"cavalier\",\"caverne\",\"caviar\",\"cédille\",\"ceinture\",\"céleste\",\"cellule\",\"cendrier\",\"censurer\",\"central\",\"cercle\",\"cérébral\",\"cerise\",\"cerner\",\"cerveau\",\"cesser\",\"chagrin\",\"chaise\",\"chaleur\",\"chambre\",\"chance\",\"chapitre\",\"charbon\",\"chasseur\",\"chaton\",\"chausson\",\"chavirer\",\"chemise\",\"chenille\",\"chéquier\",\"chercher\",\"cheval\",\"chien\",\"chiffre\",\"chignon\",\"chimère\",\"chiot\",\"chlorure\",\"chocolat\",\"choisir\",\"chose\",\"chouette\",\"chrome\",\"chute\",\"cigare\",\"cigogne\",\"cimenter\",\"cinéma\",\"cintrer\",\"circuler\",\"cirer\",\"cirque\",\"citerne\",\"citoyen\",\"citron\",\"civil\",\"clairon\",\"clameur\",\"claquer\",\"classe\",\"clavier\",\"client\",\"cligner\",\"climat\",\"clivage\",\"cloche\",\"clonage\",\"cloporte\",\"cobalt\",\"cobra\",\"cocasse\",\"cocotier\",\"coder\",\"codifier\",\"coffre\",\"cogner\",\"cohésion\",\"coiffer\",\"coincer\",\"colère\",\"colibri\",\"colline\",\"colmater\",\"colonel\",\"combat\",\"comédie\",\"commande\",\"compact\",\"concert\",\"conduire\",\"confier\",\"congeler\",\"connoter\",\"consonne\",\"contact\",\"convexe\",\"copain\",\"copie\",\"corail\",\"corbeau\",\"cordage\",\"corniche\",\"corpus\",\"correct\",\"cortège\",\"cosmique\",\"costume\",\"coton\",\"coude\",\"coupure\",\"courage\",\"couteau\",\"couvrir\",\"coyote\",\"crabe\",\"crainte\",\"cravate\",\"crayon\",\"créature\",\"créditer\",\"crémeux\",\"creuser\",\"crevette\",\"cribler\",\"crier\",\"cristal\",\"critère\",\"croire\",\"croquer\",\"crotale\",\"crucial\",\"cruel\",\"crypter\",\"cubique\",\"cueillir\",\"cuillère\",\"cuisine\",\"cuivre\",\"culminer\",\"cultiver\",\"cumuler\",\"cupide\",\"curatif\",\"curseur\",\"cyanure\",\"cycle\",\"cylindre\",\"cynique\",\"daigner\",\"damier\",\"danger\",\"danseur\",\"dauphin\",\"débattre\",\"débiter\",\"déborder\",\"débrider\",\"débutant\",\"décaler\",\"décembre\",\"déchirer\",\"décider\",\"déclarer\",\"décorer\",\"décrire\",\"décupler\",\"dédale\",\"déductif\",\"déesse\",\"défensif\",\"défiler\",\"défrayer\",\"dégager\",\"dégivrer\",\"déglutir\",\"dégrafer\",\"déjeuner\",\"délice\",\"déloger\",\"demander\",\"demeurer\",\"démolir\",\"dénicher\",\"dénouer\",\"dentelle\",\"dénuder\",\"départ\",\"dépenser\",\"déphaser\",\"déplacer\",\"déposer\",\"déranger\",\"dérober\",\"désastre\",\"descente\",\"désert\",\"désigner\",\"désobéir\",\"dessiner\",\"destrier\",\"détacher\",\"détester\",\"détourer\",\"détresse\",\"devancer\",\"devenir\",\"deviner\",\"devoir\",\"diable\",\"dialogue\",\"diamant\",\"dicter\",\"différer\",\"digérer\",\"digital\",\"digne\",\"diluer\",\"dimanche\",\"diminuer\",\"dioxyde\",\"directif\",\"diriger\",\"discuter\",\"disposer\",\"dissiper\",\"distance\",\"divertir\",\"diviser\",\"docile\",\"docteur\",\"dogme\",\"doigt\",\"domaine\",\"domicile\",\"dompter\",\"donateur\",\"donjon\",\"donner\",\"dopamine\",\"dortoir\",\"dorure\",\"dosage\",\"doseur\",\"dossier\",\"dotation\",\"douanier\",\"double\",\"douceur\",\"douter\",\"doyen\",\"dragon\",\"draper\",\"dresser\",\"dribbler\",\"droiture\",\"duperie\",\"duplexe\",\"durable\",\"durcir\",\"dynastie\",\"éblouir\",\"écarter\",\"écharpe\",\"échelle\",\"éclairer\",\"éclipse\",\"éclore\",\"écluse\",\"école\",\"économie\",\"écorce\",\"écouter\",\"écraser\",\"écrémer\",\"écrivain\",\"écrou\",\"écume\",\"écureuil\",\"édifier\",\"éduquer\",\"effacer\",\"effectif\",\"effigie\",\"effort\",\"effrayer\",\"effusion\",\"égaliser\",\"égarer\",\"éjecter\",\"élaborer\",\"élargir\",\"électron\",\"élégant\",\"éléphant\",\"élève\",\"éligible\",\"élitisme\",\"éloge\",\"élucider\",\"éluder\",\"emballer\",\"embellir\",\"embryon\",\"émeraude\",\"émission\",\"emmener\",\"émotion\",\"émouvoir\",\"empereur\",\"employer\",\"emporter\",\"emprise\",\"émulsion\",\"encadrer\",\"enchère\",\"enclave\",\"encoche\",\"endiguer\",\"endosser\",\"endroit\",\"enduire\",\"énergie\",\"enfance\",\"enfermer\",\"enfouir\",\"engager\",\"engin\",\"englober\",\"énigme\",\"enjamber\",\"enjeu\",\"enlever\",\"ennemi\",\"ennuyeux\",\"enrichir\",\"enrobage\",\"enseigne\",\"entasser\",\"entendre\",\"entier\",\"entourer\",\"entraver\",\"énumérer\",\"envahir\",\"enviable\",\"envoyer\",\"enzyme\",\"éolien\",\"épaissir\",\"épargne\",\"épatant\",\"épaule\",\"épicerie\",\"épidémie\",\"épier\",\"épilogue\",\"épine\",\"épisode\",\"épitaphe\",\"époque\",\"épreuve\",\"éprouver\",\"épuisant\",\"équerre\",\"équipe\",\"ériger\",\"érosion\",\"erreur\",\"éruption\",\"escalier\",\"espadon\",\"espèce\",\"espiègle\",\"espoir\",\"esprit\",\"esquiver\",\"essayer\",\"essence\",\"essieu\",\"essorer\",\"estime\",\"estomac\",\"estrade\",\"étagère\",\"étaler\",\"étanche\",\"étatique\",\"éteindre\",\"étendoir\",\"éternel\",\"éthanol\",\"éthique\",\"ethnie\",\"étirer\",\"étoffer\",\"étoile\",\"étonnant\",\"étourdir\",\"étrange\",\"étroit\",\"étude\",\"euphorie\",\"évaluer\",\"évasion\",\"éventail\",\"évidence\",\"éviter\",\"évolutif\",\"évoquer\",\"exact\",\"exagérer\",\"exaucer\",\"exceller\",\"excitant\",\"exclusif\",\"excuse\",\"exécuter\",\"exemple\",\"exercer\",\"exhaler\",\"exhorter\",\"exigence\",\"exiler\",\"exister\",\"exotique\",\"expédier\",\"explorer\",\"exposer\",\"exprimer\",\"exquis\",\"extensif\",\"extraire\",\"exulter\",\"fable\",\"fabuleux\",\"facette\",\"facile\",\"facture\",\"faiblir\",\"falaise\",\"fameux\",\"famille\",\"farceur\",\"farfelu\",\"farine\",\"farouche\",\"fasciner\",\"fatal\",\"fatigue\",\"faucon\",\"fautif\",\"faveur\",\"favori\",\"fébrile\",\"féconder\",\"fédérer\",\"félin\",\"femme\",\"fémur\",\"fendoir\",\"féodal\",\"fermer\",\"féroce\",\"ferveur\",\"festival\",\"feuille\",\"feutre\",\"février\",\"fiasco\",\"ficeler\",\"fictif\",\"fidèle\",\"figure\",\"filature\",\"filetage\",\"filière\",\"filleul\",\"filmer\",\"filou\",\"filtrer\",\"financer\",\"finir\",\"fiole\",\"firme\",\"fissure\",\"fixer\",\"flairer\",\"flamme\",\"flasque\",\"flatteur\",\"fléau\",\"flèche\",\"fleur\",\"flexion\",\"flocon\",\"flore\",\"fluctuer\",\"fluide\",\"fluvial\",\"folie\",\"fonderie\",\"fongible\",\"fontaine\",\"forcer\",\"forgeron\",\"formuler\",\"fortune\",\"fossile\",\"foudre\",\"fougère\",\"fouiller\",\"foulure\",\"fourmi\",\"fragile\",\"fraise\",\"franchir\",\"frapper\",\"frayeur\",\"frégate\",\"freiner\",\"frelon\",\"frémir\",\"frénésie\",\"frère\",\"friable\",\"friction\",\"frisson\",\"frivole\",\"froid\",\"fromage\",\"frontal\",\"frotter\",\"fruit\",\"fugitif\",\"fuite\",\"fureur\",\"furieux\",\"furtif\",\"fusion\",\"futur\",\"gagner\",\"galaxie\",\"galerie\",\"gambader\",\"garantir\",\"gardien\",\"garnir\",\"garrigue\",\"gazelle\",\"gazon\",\"géant\",\"gélatine\",\"gélule\",\"gendarme\",\"général\",\"génie\",\"genou\",\"gentil\",\"géologie\",\"géomètre\",\"géranium\",\"germe\",\"gestuel\",\"geyser\",\"gibier\",\"gicler\",\"girafe\",\"givre\",\"glace\",\"glaive\",\"glisser\",\"globe\",\"gloire\",\"glorieux\",\"golfeur\",\"gomme\",\"gonfler\",\"gorge\",\"gorille\",\"goudron\",\"gouffre\",\"goulot\",\"goupille\",\"gourmand\",\"goutte\",\"graduel\",\"graffiti\",\"graine\",\"grand\",\"grappin\",\"gratuit\",\"gravir\",\"grenat\",\"griffure\",\"griller\",\"grimper\",\"grogner\",\"gronder\",\"grotte\",\"groupe\",\"gruger\",\"grutier\",\"gruyère\",\"guépard\",\"guerrier\",\"guide\",\"guimauve\",\"guitare\",\"gustatif\",\"gymnaste\",\"gyrostat\",\"habitude\",\"hachoir\",\"halte\",\"hameau\",\"hangar\",\"hanneton\",\"haricot\",\"harmonie\",\"harpon\",\"hasard\",\"hélium\",\"hématome\",\"herbe\",\"hérisson\",\"hermine\",\"héron\",\"hésiter\",\"heureux\",\"hiberner\",\"hibou\",\"hilarant\",\"histoire\",\"hiver\",\"homard\",\"hommage\",\"homogène\",\"honneur\",\"honorer\",\"honteux\",\"horde\",\"horizon\",\"horloge\",\"hormone\",\"horrible\",\"houleux\",\"housse\",\"hublot\",\"huileux\",\"humain\",\"humble\",\"humide\",\"humour\",\"hurler\",\"hydromel\",\"hygiène\",\"hymne\",\"hypnose\",\"idylle\",\"ignorer\",\"iguane\",\"illicite\",\"illusion\",\"image\",\"imbiber\",\"imiter\",\"immense\",\"immobile\",\"immuable\",\"impact\",\"impérial\",\"implorer\",\"imposer\",\"imprimer\",\"imputer\",\"incarner\",\"incendie\",\"incident\",\"incliner\",\"incolore\",\"indexer\",\"indice\",\"inductif\",\"inédit\",\"ineptie\",\"inexact\",\"infini\",\"infliger\",\"informer\",\"infusion\",\"ingérer\",\"inhaler\",\"inhiber\",\"injecter\",\"injure\",\"innocent\",\"inoculer\",\"inonder\",\"inscrire\",\"insecte\",\"insigne\",\"insolite\",\"inspirer\",\"instinct\",\"insulter\",\"intact\",\"intense\",\"intime\",\"intrigue\",\"intuitif\",\"inutile\",\"invasion\",\"inventer\",\"inviter\",\"invoquer\",\"ironique\",\"irradier\",\"irréel\",\"irriter\",\"isoler\",\"ivoire\",\"ivresse\",\"jaguar\",\"jaillir\",\"jambe\",\"janvier\",\"jardin\",\"jauger\",\"jaune\",\"javelot\",\"jetable\",\"jeton\",\"jeudi\",\"jeunesse\",\"joindre\",\"joncher\",\"jongler\",\"joueur\",\"jouissif\",\"journal\",\"jovial\",\"joyau\",\"joyeux\",\"jubiler\",\"jugement\",\"junior\",\"jupon\",\"juriste\",\"justice\",\"juteux\",\"juvénile\",\"kayak\",\"kimono\",\"kiosque\",\"label\",\"labial\",\"labourer\",\"lacérer\",\"lactose\",\"lagune\",\"laine\",\"laisser\",\"laitier\",\"lambeau\",\"lamelle\",\"lampe\",\"lanceur\",\"langage\",\"lanterne\",\"lapin\",\"largeur\",\"larme\",\"laurier\",\"lavabo\",\"lavoir\",\"lecture\",\"légal\",\"léger\",\"légume\",\"lessive\",\"lettre\",\"levier\",\"lexique\",\"lézard\",\"liasse\",\"libérer\",\"libre\",\"licence\",\"licorne\",\"liège\",\"lièvre\",\"ligature\",\"ligoter\",\"ligue\",\"limer\",\"limite\",\"limonade\",\"limpide\",\"linéaire\",\"lingot\",\"lionceau\",\"liquide\",\"lisière\",\"lister\",\"lithium\",\"litige\",\"littoral\",\"livreur\",\"logique\",\"lointain\",\"loisir\",\"lombric\",\"loterie\",\"louer\",\"lourd\",\"loutre\",\"louve\",\"loyal\",\"lubie\",\"lucide\",\"lucratif\",\"lueur\",\"lugubre\",\"luisant\",\"lumière\",\"lunaire\",\"lundi\",\"luron\",\"lutter\",\"luxueux\",\"machine\",\"magasin\",\"magenta\",\"magique\",\"maigre\",\"maillon\",\"maintien\",\"mairie\",\"maison\",\"majorer\",\"malaxer\",\"maléfice\",\"malheur\",\"malice\",\"mallette\",\"mammouth\",\"mandater\",\"maniable\",\"manquant\",\"manteau\",\"manuel\",\"marathon\",\"marbre\",\"marchand\",\"mardi\",\"maritime\",\"marqueur\",\"marron\",\"marteler\",\"mascotte\",\"massif\",\"matériel\",\"matière\",\"matraque\",\"maudire\",\"maussade\",\"mauve\",\"maximal\",\"méchant\",\"méconnu\",\"médaille\",\"médecin\",\"méditer\",\"méduse\",\"meilleur\",\"mélange\",\"mélodie\",\"membre\",\"mémoire\",\"menacer\",\"mener\",\"menhir\",\"mensonge\",\"mentor\",\"mercredi\",\"mérite\",\"merle\",\"messager\",\"mesure\",\"métal\",\"météore\",\"méthode\",\"métier\",\"meuble\",\"miauler\",\"microbe\",\"miette\",\"mignon\",\"migrer\",\"milieu\",\"million\",\"mimique\",\"mince\",\"minéral\",\"minimal\",\"minorer\",\"minute\",\"miracle\",\"miroiter\",\"missile\",\"mixte\",\"mobile\",\"moderne\",\"moelleux\",\"mondial\",\"moniteur\",\"monnaie\",\"monotone\",\"monstre\",\"montagne\",\"monument\",\"moqueur\",\"morceau\",\"morsure\",\"mortier\",\"moteur\",\"motif\",\"mouche\",\"moufle\",\"moulin\",\"mousson\",\"mouton\",\"mouvant\",\"multiple\",\"munition\",\"muraille\",\"murène\",\"murmure\",\"muscle\",\"muséum\",\"musicien\",\"mutation\",\"muter\",\"mutuel\",\"myriade\",\"myrtille\",\"mystère\",\"mythique\",\"nageur\",\"nappe\",\"narquois\",\"narrer\",\"natation\",\"nation\",\"nature\",\"naufrage\",\"nautique\",\"navire\",\"nébuleux\",\"nectar\",\"néfaste\",\"négation\",\"négliger\",\"négocier\",\"neige\",\"nerveux\",\"nettoyer\",\"neurone\",\"neutron\",\"neveu\",\"niche\",\"nickel\",\"nitrate\",\"niveau\",\"noble\",\"nocif\",\"nocturne\",\"noirceur\",\"noisette\",\"nomade\",\"nombreux\",\"nommer\",\"normatif\",\"notable\",\"notifier\",\"notoire\",\"nourrir\",\"nouveau\",\"novateur\",\"novembre\",\"novice\",\"nuage\",\"nuancer\",\"nuire\",\"nuisible\",\"numéro\",\"nuptial\",\"nuque\",\"nutritif\",\"obéir\",\"objectif\",\"obliger\",\"obscur\",\"observer\",\"obstacle\",\"obtenir\",\"obturer\",\"occasion\",\"occuper\",\"océan\",\"octobre\",\"octroyer\",\"octupler\",\"oculaire\",\"odeur\",\"odorant\",\"offenser\",\"officier\",\"offrir\",\"ogive\",\"oiseau\",\"oisillon\",\"olfactif\",\"olivier\",\"ombrage\",\"omettre\",\"onctueux\",\"onduler\",\"onéreux\",\"onirique\",\"opale\",\"opaque\",\"opérer\",\"opinion\",\"opportun\",\"opprimer\",\"opter\",\"optique\",\"orageux\",\"orange\",\"orbite\",\"ordonner\",\"oreille\",\"organe\",\"orgueil\",\"orifice\",\"ornement\",\"orque\",\"ortie\",\"osciller\",\"osmose\",\"ossature\",\"otarie\",\"ouragan\",\"ourson\",\"outil\",\"outrager\",\"ouvrage\",\"ovation\",\"oxyde\",\"oxygène\",\"ozone\",\"paisible\",\"palace\",\"palmarès\",\"palourde\",\"palper\",\"panache\",\"panda\",\"pangolin\",\"paniquer\",\"panneau\",\"panorama\",\"pantalon\",\"papaye\",\"papier\",\"papoter\",\"papyrus\",\"paradoxe\",\"parcelle\",\"paresse\",\"parfumer\",\"parler\",\"parole\",\"parrain\",\"parsemer\",\"partager\",\"parure\",\"parvenir\",\"passion\",\"pastèque\",\"paternel\",\"patience\",\"patron\",\"pavillon\",\"pavoiser\",\"payer\",\"paysage\",\"peigne\",\"peintre\",\"pelage\",\"pélican\",\"pelle\",\"pelouse\",\"peluche\",\"pendule\",\"pénétrer\",\"pénible\",\"pensif\",\"pénurie\",\"pépite\",\"péplum\",\"perdrix\",\"perforer\",\"période\",\"permuter\",\"perplexe\",\"persil\",\"perte\",\"peser\",\"pétale\",\"petit\",\"pétrir\",\"peuple\",\"pharaon\",\"phobie\",\"phoque\",\"photon\",\"phrase\",\"physique\",\"piano\",\"pictural\",\"pièce\",\"pierre\",\"pieuvre\",\"pilote\",\"pinceau\",\"pipette\",\"piquer\",\"pirogue\",\"piscine\",\"piston\",\"pivoter\",\"pixel\",\"pizza\",\"placard\",\"plafond\",\"plaisir\",\"planer\",\"plaque\",\"plastron\",\"plateau\",\"pleurer\",\"plexus\",\"pliage\",\"plomb\",\"plonger\",\"pluie\",\"plumage\",\"pochette\",\"poésie\",\"poète\",\"pointe\",\"poirier\",\"poisson\",\"poivre\",\"polaire\",\"policier\",\"pollen\",\"polygone\",\"pommade\",\"pompier\",\"ponctuel\",\"pondérer\",\"poney\",\"portique\",\"position\",\"posséder\",\"posture\",\"potager\",\"poteau\",\"potion\",\"pouce\",\"poulain\",\"poumon\",\"pourpre\",\"poussin\",\"pouvoir\",\"prairie\",\"pratique\",\"précieux\",\"prédire\",\"préfixe\",\"prélude\",\"prénom\",\"présence\",\"prétexte\",\"prévoir\",\"primitif\",\"prince\",\"prison\",\"priver\",\"problème\",\"procéder\",\"prodige\",\"profond\",\"progrès\",\"proie\",\"projeter\",\"prologue\",\"promener\",\"propre\",\"prospère\",\"protéger\",\"prouesse\",\"proverbe\",\"prudence\",\"pruneau\",\"psychose\",\"public\",\"puceron\",\"puiser\",\"pulpe\",\"pulsar\",\"punaise\",\"punitif\",\"pupitre\",\"purifier\",\"puzzle\",\"pyramide\",\"quasar\",\"querelle\",\"question\",\"quiétude\",\"quitter\",\"quotient\",\"racine\",\"raconter\",\"radieux\",\"ragondin\",\"raideur\",\"raisin\",\"ralentir\",\"rallonge\",\"ramasser\",\"rapide\",\"rasage\",\"ratisser\",\"ravager\",\"ravin\",\"rayonner\",\"réactif\",\"réagir\",\"réaliser\",\"réanimer\",\"recevoir\",\"réciter\",\"réclamer\",\"récolter\",\"recruter\",\"reculer\",\"recycler\",\"rédiger\",\"redouter\",\"refaire\",\"réflexe\",\"réformer\",\"refrain\",\"refuge\",\"régalien\",\"région\",\"réglage\",\"régulier\",\"réitérer\",\"rejeter\",\"rejouer\",\"relatif\",\"relever\",\"relief\",\"remarque\",\"remède\",\"remise\",\"remonter\",\"remplir\",\"remuer\",\"renard\",\"renfort\",\"renifler\",\"renoncer\",\"rentrer\",\"renvoi\",\"replier\",\"reporter\",\"reprise\",\"reptile\",\"requin\",\"réserve\",\"résineux\",\"résoudre\",\"respect\",\"rester\",\"résultat\",\"rétablir\",\"retenir\",\"réticule\",\"retomber\",\"retracer\",\"réunion\",\"réussir\",\"revanche\",\"revivre\",\"révolte\",\"révulsif\",\"richesse\",\"rideau\",\"rieur\",\"rigide\",\"rigoler\",\"rincer\",\"riposter\",\"risible\",\"risque\",\"rituel\",\"rival\",\"rivière\",\"rocheux\",\"romance\",\"rompre\",\"ronce\",\"rondin\",\"roseau\",\"rosier\",\"rotatif\",\"rotor\",\"rotule\",\"rouge\",\"rouille\",\"rouleau\",\"routine\",\"royaume\",\"ruban\",\"rubis\",\"ruche\",\"ruelle\",\"rugueux\",\"ruiner\",\"ruisseau\",\"ruser\",\"rustique\",\"rythme\",\"sabler\",\"saboter\",\"sabre\",\"sacoche\",\"safari\",\"sagesse\",\"saisir\",\"salade\",\"salive\",\"salon\",\"saluer\",\"samedi\",\"sanction\",\"sanglier\",\"sarcasme\",\"sardine\",\"saturer\",\"saugrenu\",\"saumon\",\"sauter\",\"sauvage\",\"savant\",\"savonner\",\"scalpel\",\"scandale\",\"scélérat\",\"scénario\",\"sceptre\",\"schéma\",\"science\",\"scinder\",\"score\",\"scrutin\",\"sculpter\",\"séance\",\"sécable\",\"sécher\",\"secouer\",\"sécréter\",\"sédatif\",\"séduire\",\"seigneur\",\"séjour\",\"sélectif\",\"semaine\",\"sembler\",\"semence\",\"séminal\",\"sénateur\",\"sensible\",\"sentence\",\"séparer\",\"séquence\",\"serein\",\"sergent\",\"sérieux\",\"serrure\",\"sérum\",\"service\",\"sésame\",\"sévir\",\"sevrage\",\"sextuple\",\"sidéral\",\"siècle\",\"siéger\",\"siffler\",\"sigle\",\"signal\",\"silence\",\"silicium\",\"simple\",\"sincère\",\"sinistre\",\"siphon\",\"sirop\",\"sismique\",\"situer\",\"skier\",\"social\",\"socle\",\"sodium\",\"soigneux\",\"soldat\",\"soleil\",\"solitude\",\"soluble\",\"sombre\",\"sommeil\",\"somnoler\",\"sonde\",\"songeur\",\"sonnette\",\"sonore\",\"sorcier\",\"sortir\",\"sosie\",\"sottise\",\"soucieux\",\"soudure\",\"souffle\",\"soulever\",\"soupape\",\"source\",\"soutirer\",\"souvenir\",\"spacieux\",\"spatial\",\"spécial\",\"sphère\",\"spiral\",\"stable\",\"station\",\"sternum\",\"stimulus\",\"stipuler\",\"strict\",\"studieux\",\"stupeur\",\"styliste\",\"sublime\",\"substrat\",\"subtil\",\"subvenir\",\"succès\",\"sucre\",\"suffixe\",\"suggérer\",\"suiveur\",\"sulfate\",\"superbe\",\"supplier\",\"surface\",\"suricate\",\"surmener\",\"surprise\",\"sursaut\",\"survie\",\"suspect\",\"syllabe\",\"symbole\",\"symétrie\",\"synapse\",\"syntaxe\",\"système\",\"tabac\",\"tablier\",\"tactile\",\"tailler\",\"talent\",\"talisman\",\"talonner\",\"tambour\",\"tamiser\",\"tangible\",\"tapis\",\"taquiner\",\"tarder\",\"tarif\",\"tartine\",\"tasse\",\"tatami\",\"tatouage\",\"taupe\",\"taureau\",\"taxer\",\"témoin\",\"temporel\",\"tenaille\",\"tendre\",\"teneur\",\"tenir\",\"tension\",\"terminer\",\"terne\",\"terrible\",\"tétine\",\"texte\",\"thème\",\"théorie\",\"thérapie\",\"thorax\",\"tibia\",\"tiède\",\"timide\",\"tirelire\",\"tiroir\",\"tissu\",\"titane\",\"titre\",\"tituber\",\"toboggan\",\"tolérant\",\"tomate\",\"tonique\",\"tonneau\",\"toponyme\",\"torche\",\"tordre\",\"tornade\",\"torpille\",\"torrent\",\"torse\",\"tortue\",\"totem\",\"toucher\",\"tournage\",\"tousser\",\"toxine\",\"traction\",\"trafic\",\"tragique\",\"trahir\",\"train\",\"trancher\",\"travail\",\"trèfle\",\"tremper\",\"trésor\",\"treuil\",\"triage\",\"tribunal\",\"tricoter\",\"trilogie\",\"triomphe\",\"tripler\",\"triturer\",\"trivial\",\"trombone\",\"tronc\",\"tropical\",\"troupeau\",\"tuile\",\"tulipe\",\"tumulte\",\"tunnel\",\"turbine\",\"tuteur\",\"tutoyer\",\"tuyau\",\"tympan\",\"typhon\",\"typique\",\"tyran\",\"ubuesque\",\"ultime\",\"ultrason\",\"unanime\",\"unifier\",\"union\",\"unique\",\"unitaire\",\"univers\",\"uranium\",\"urbain\",\"urticant\",\"usage\",\"usine\",\"usuel\",\"usure\",\"utile\",\"utopie\",\"vacarme\",\"vaccin\",\"vagabond\",\"vague\",\"vaillant\",\"vaincre\",\"vaisseau\",\"valable\",\"valise\",\"vallon\",\"valve\",\"vampire\",\"vanille\",\"vapeur\",\"varier\",\"vaseux\",\"vassal\",\"vaste\",\"vecteur\",\"vedette\",\"végétal\",\"véhicule\",\"veinard\",\"véloce\",\"vendredi\",\"vénérer\",\"venger\",\"venimeux\",\"ventouse\",\"verdure\",\"vérin\",\"vernir\",\"verrou\",\"verser\",\"vertu\",\"veston\",\"vétéran\",\"vétuste\",\"vexant\",\"vexer\",\"viaduc\",\"viande\",\"victoire\",\"vidange\",\"vidéo\",\"vignette\",\"vigueur\",\"vilain\",\"village\",\"vinaigre\",\"violon\",\"vipère\",\"virement\",\"virtuose\",\"virus\",\"visage\",\"viseur\",\"vision\",\"visqueux\",\"visuel\",\"vital\",\"vitesse\",\"viticole\",\"vitrine\",\"vivace\",\"vivipare\",\"vocation\",\"voguer\",\"voile\",\"voisin\",\"voiture\",\"volaille\",\"volcan\",\"voltiger\",\"volume\",\"vorace\",\"vortex\",\"voter\",\"vouloir\",\"voyage\",\"voyelle\",\"wagon\",\"xénon\",\"yacht\",\"zèbre\",\"zénith\",\"zeste\",\"zoologie\"]// note all JSON files in this folder are generated with npm run generate-wordlist\nconst lookup = require('./lookup.json')\n\nmodule.exports = {\n  loadWordlist,\n  detectLanguage\n}\n\nfunction loadWordlist (language) {\n  switch (language) {\n    case 'chinese_simplified': return require('./chinese_simplified.json')\n    case 'chinese_traditional': return require('./chinese_traditional.json')\n    case 'czech': return require('./czech.json')\n    case 'english': return require('./english.json')\n    case 'french': return require('./french.json')\n    case 'italian': return require('./italian.json')\n    case 'japanese': return require('./japanese.json')\n    case 'korean': return require('./korean.json')\n    case 'portuguese': return require('./portuguese.json')\n    case 'russian': return require('./russian.json')\n    case 'spanish': return require('./spanish.json')\n    case 'turkish': return require('./turkish.json')\n  }\n\n  throw new Error('Unknown language: ' + language)\n}\n\nfunction detectLanguage (words) {\n  let candidate = null\n\n  for (const word of words) {\n    const languages = lookup[word]\n    if (!languages) return null\n\n    if (languages.length === 1) return languages[0]\n\n    if (!candidate) {\n      candidate = languages\n      continue\n    }\n\n    const intersect = candidate.filter(l => languages.includes(l))\n    if (intersect.length === 1) return intersect[0]\n  }\n\n  return candidate[0]\n}\n[\"abaco\",\"abbaglio\",\"abbinato\",\"abete\",\"abisso\",\"abolire\",\"abrasivo\",\"abrogato\",\"accadere\",\"accenno\",\"accusato\",\"acetone\",\"achille\",\"acido\",\"acqua\",\"acre\",\"acrilico\",\"acrobata\",\"acuto\",\"adagio\",\"addebito\",\"addome\",\"adeguato\",\"aderire\",\"adipe\",\"adottare\",\"adulare\",\"affabile\",\"affetto\",\"affisso\",\"affranto\",\"aforisma\",\"afoso\",\"africano\",\"agave\",\"agente\",\"agevole\",\"aggancio\",\"agire\",\"agitare\",\"agonismo\",\"agricolo\",\"agrumeto\",\"aguzzo\",\"alabarda\",\"alato\",\"albatro\",\"alberato\",\"albo\",\"albume\",\"alce\",\"alcolico\",\"alettone\",\"alfa\",\"algebra\",\"aliante\",\"alibi\",\"alimento\",\"allagato\",\"allegro\",\"allievo\",\"allodola\",\"allusivo\",\"almeno\",\"alogeno\",\"alpaca\",\"alpestre\",\"altalena\",\"alterno\",\"alticcio\",\"altrove\",\"alunno\",\"alveolo\",\"alzare\",\"amalgama\",\"amanita\",\"amarena\",\"ambito\",\"ambrato\",\"ameba\",\"america\",\"ametista\",\"amico\",\"ammasso\",\"ammenda\",\"ammirare\",\"ammonito\",\"amore\",\"ampio\",\"ampliare\",\"amuleto\",\"anacardo\",\"anagrafe\",\"analista\",\"anarchia\",\"anatra\",\"anca\",\"ancella\",\"ancora\",\"andare\",\"andrea\",\"anello\",\"angelo\",\"angolare\",\"angusto\",\"anima\",\"annegare\",\"annidato\",\"anno\",\"annuncio\",\"anonimo\",\"anticipo\",\"anzi\",\"apatico\",\"apertura\",\"apode\",\"apparire\",\"appetito\",\"appoggio\",\"approdo\",\"appunto\",\"aprile\",\"arabica\",\"arachide\",\"aragosta\",\"araldica\",\"arancio\",\"aratura\",\"arazzo\",\"arbitro\",\"archivio\",\"ardito\",\"arenile\",\"argento\",\"argine\",\"arguto\",\"aria\",\"armonia\",\"arnese\",\"arredato\",\"arringa\",\"arrosto\",\"arsenico\",\"arso\",\"artefice\",\"arzillo\",\"asciutto\",\"ascolto\",\"asepsi\",\"asettico\",\"asfalto\",\"asino\",\"asola\",\"aspirato\",\"aspro\",\"assaggio\",\"asse\",\"assoluto\",\"assurdo\",\"asta\",\"astenuto\",\"astice\",\"astratto\",\"atavico\",\"ateismo\",\"atomico\",\"atono\",\"attesa\",\"attivare\",\"attorno\",\"attrito\",\"attuale\",\"ausilio\",\"austria\",\"autista\",\"autonomo\",\"autunno\",\"avanzato\",\"avere\",\"avvenire\",\"avviso\",\"avvolgere\",\"azione\",\"azoto\",\"azzimo\",\"azzurro\",\"babele\",\"baccano\",\"bacino\",\"baco\",\"badessa\",\"badilata\",\"bagnato\",\"baita\",\"balcone\",\"baldo\",\"balena\",\"ballata\",\"balzano\",\"bambino\",\"bandire\",\"baraonda\",\"barbaro\",\"barca\",\"baritono\",\"barlume\",\"barocco\",\"basilico\",\"basso\",\"batosta\",\"battuto\",\"baule\",\"bava\",\"bavosa\",\"becco\",\"beffa\",\"belgio\",\"belva\",\"benda\",\"benevole\",\"benigno\",\"benzina\",\"bere\",\"berlina\",\"beta\",\"bibita\",\"bici\",\"bidone\",\"bifido\",\"biga\",\"bilancia\",\"bimbo\",\"binocolo\",\"biologo\",\"bipede\",\"bipolare\",\"birbante\",\"birra\",\"biscotto\",\"bisesto\",\"bisnonno\",\"bisonte\",\"bisturi\",\"bizzarro\",\"blando\",\"blatta\",\"bollito\",\"bonifico\",\"bordo\",\"bosco\",\"botanico\",\"bottino\",\"bozzolo\",\"braccio\",\"bradipo\",\"brama\",\"branca\",\"bravura\",\"bretella\",\"brevetto\",\"brezza\",\"briglia\",\"brillante\",\"brindare\",\"broccolo\",\"brodo\",\"bronzina\",\"brullo\",\"bruno\",\"bubbone\",\"buca\",\"budino\",\"buffone\",\"buio\",\"bulbo\",\"buono\",\"burlone\",\"burrasca\",\"bussola\",\"busta\",\"cadetto\",\"caduco\",\"calamaro\",\"calcolo\",\"calesse\",\"calibro\",\"calmo\",\"caloria\",\"cambusa\",\"camerata\",\"camicia\",\"cammino\",\"camola\",\"campale\",\"canapa\",\"candela\",\"cane\",\"canino\",\"canotto\",\"cantina\",\"capace\",\"capello\",\"capitolo\",\"capogiro\",\"cappero\",\"capra\",\"capsula\",\"carapace\",\"carcassa\",\"cardo\",\"carisma\",\"carovana\",\"carretto\",\"cartolina\",\"casaccio\",\"cascata\",\"caserma\",\"caso\",\"cassone\",\"castello\",\"casuale\",\"catasta\",\"catena\",\"catrame\",\"cauto\",\"cavillo\",\"cedibile\",\"cedrata\",\"cefalo\",\"celebre\",\"cellulare\",\"cena\",\"cenone\",\"centesimo\",\"ceramica\",\"cercare\",\"certo\",\"cerume\",\"cervello\",\"cesoia\",\"cespo\",\"ceto\",\"chela\",\"chiaro\",\"chicca\",\"chiedere\",\"chimera\",\"china\",\"chirurgo\",\"chitarra\",\"ciao\",\"ciclismo\",\"cifrare\",\"cigno\",\"cilindro\",\"ciottolo\",\"circa\",\"cirrosi\",\"citrico\",\"cittadino\",\"ciuffo\",\"civetta\",\"civile\",\"classico\",\"clinica\",\"cloro\",\"cocco\",\"codardo\",\"codice\",\"coerente\",\"cognome\",\"collare\",\"colmato\",\"colore\",\"colposo\",\"coltivato\",\"colza\",\"coma\",\"cometa\",\"commando\",\"comodo\",\"computer\",\"comune\",\"conciso\",\"condurre\",\"conferma\",\"congelare\",\"coniuge\",\"connesso\",\"conoscere\",\"consumo\",\"continuo\",\"convegno\",\"coperto\",\"copione\",\"coppia\",\"copricapo\",\"corazza\",\"cordata\",\"coricato\",\"cornice\",\"corolla\",\"corpo\",\"corredo\",\"corsia\",\"cortese\",\"cosmico\",\"costante\",\"cottura\",\"covato\",\"cratere\",\"cravatta\",\"creato\",\"credere\",\"cremoso\",\"crescita\",\"creta\",\"criceto\",\"crinale\",\"crisi\",\"critico\",\"croce\",\"cronaca\",\"crostata\",\"cruciale\",\"crusca\",\"cucire\",\"cuculo\",\"cugino\",\"cullato\",\"cupola\",\"curatore\",\"cursore\",\"curvo\",\"cuscino\",\"custode\",\"dado\",\"daino\",\"dalmata\",\"damerino\",\"daniela\",\"dannoso\",\"danzare\",\"datato\",\"davanti\",\"davvero\",\"debutto\",\"decennio\",\"deciso\",\"declino\",\"decollo\",\"decreto\",\"dedicato\",\"definito\",\"deforme\",\"degno\",\"delegare\",\"delfino\",\"delirio\",\"delta\",\"demenza\",\"denotato\",\"dentro\",\"deposito\",\"derapata\",\"derivare\",\"deroga\",\"descritto\",\"deserto\",\"desiderio\",\"desumere\",\"detersivo\",\"devoto\",\"diametro\",\"dicembre\",\"diedro\",\"difeso\",\"diffuso\",\"digerire\",\"digitale\",\"diluvio\",\"dinamico\",\"dinnanzi\",\"dipinto\",\"diploma\",\"dipolo\",\"diradare\",\"dire\",\"dirotto\",\"dirupo\",\"disagio\",\"discreto\",\"disfare\",\"disgelo\",\"disposto\",\"distanza\",\"disumano\",\"dito\",\"divano\",\"divelto\",\"dividere\",\"divorato\",\"doblone\",\"docente\",\"doganale\",\"dogma\",\"dolce\",\"domato\",\"domenica\",\"dominare\",\"dondolo\",\"dono\",\"dormire\",\"dote\",\"dottore\",\"dovuto\",\"dozzina\",\"drago\",\"druido\",\"dubbio\",\"dubitare\",\"ducale\",\"duna\",\"duomo\",\"duplice\",\"duraturo\",\"ebano\",\"eccesso\",\"ecco\",\"eclissi\",\"economia\",\"edera\",\"edicola\",\"edile\",\"editoria\",\"educare\",\"egemonia\",\"egli\",\"egoismo\",\"egregio\",\"elaborato\",\"elargire\",\"elegante\",\"elencato\",\"eletto\",\"elevare\",\"elfico\",\"elica\",\"elmo\",\"elsa\",\"eluso\",\"emanato\",\"emblema\",\"emesso\",\"emiro\",\"emotivo\",\"emozione\",\"empirico\",\"emulo\",\"endemico\",\"enduro\",\"energia\",\"enfasi\",\"enoteca\",\"entrare\",\"enzima\",\"epatite\",\"epilogo\",\"episodio\",\"epocale\",\"eppure\",\"equatore\",\"erario\",\"erba\",\"erboso\",\"erede\",\"eremita\",\"erigere\",\"ermetico\",\"eroe\",\"erosivo\",\"errante\",\"esagono\",\"esame\",\"esanime\",\"esaudire\",\"esca\",\"esempio\",\"esercito\",\"esibito\",\"esigente\",\"esistere\",\"esito\",\"esofago\",\"esortato\",\"esoso\",\"espanso\",\"espresso\",\"essenza\",\"esso\",\"esteso\",\"estimare\",\"estonia\",\"estroso\",\"esultare\",\"etilico\",\"etnico\",\"etrusco\",\"etto\",\"euclideo\",\"europa\",\"evaso\",\"evidenza\",\"evitato\",\"evoluto\",\"evviva\",\"fabbrica\",\"faccenda\",\"fachiro\",\"falco\",\"famiglia\",\"fanale\",\"fanfara\",\"fango\",\"fantasma\",\"fare\",\"farfalla\",\"farinoso\",\"farmaco\",\"fascia\",\"fastoso\",\"fasullo\",\"faticare\",\"fato\",\"favoloso\",\"febbre\",\"fecola\",\"fede\",\"fegato\",\"felpa\",\"feltro\",\"femmina\",\"fendere\",\"fenomeno\",\"fermento\",\"ferro\",\"fertile\",\"fessura\",\"festivo\",\"fetta\",\"feudo\",\"fiaba\",\"fiducia\",\"fifa\",\"figurato\",\"filo\",\"finanza\",\"finestra\",\"finire\",\"fiore\",\"fiscale\",\"fisico\",\"fiume\",\"flacone\",\"flamenco\",\"flebo\",\"flemma\",\"florido\",\"fluente\",\"fluoro\",\"fobico\",\"focaccia\",\"focoso\",\"foderato\",\"foglio\",\"folata\",\"folclore\",\"folgore\",\"fondente\",\"fonetico\",\"fonia\",\"fontana\",\"forbito\",\"forchetta\",\"foresta\",\"formica\",\"fornaio\",\"foro\",\"fortezza\",\"forzare\",\"fosfato\",\"fosso\",\"fracasso\",\"frana\",\"frassino\",\"fratello\",\"freccetta\",\"frenata\",\"fresco\",\"frigo\",\"frollino\",\"fronde\",\"frugale\",\"frutta\",\"fucilata\",\"fucsia\",\"fuggente\",\"fulmine\",\"fulvo\",\"fumante\",\"fumetto\",\"fumoso\",\"fune\",\"funzione\",\"fuoco\",\"furbo\",\"furgone\",\"furore\",\"fuso\",\"futile\",\"gabbiano\",\"gaffe\",\"galateo\",\"gallina\",\"galoppo\",\"gambero\",\"gamma\",\"garanzia\",\"garbo\",\"garofano\",\"garzone\",\"gasdotto\",\"gasolio\",\"gastrico\",\"gatto\",\"gaudio\",\"gazebo\",\"gazzella\",\"geco\",\"gelatina\",\"gelso\",\"gemello\",\"gemmato\",\"gene\",\"genitore\",\"gennaio\",\"genotipo\",\"gergo\",\"ghepardo\",\"ghiaccio\",\"ghisa\",\"giallo\",\"gilda\",\"ginepro\",\"giocare\",\"gioiello\",\"giorno\",\"giove\",\"girato\",\"girone\",\"gittata\",\"giudizio\",\"giurato\",\"giusto\",\"globulo\",\"glutine\",\"gnomo\",\"gobba\",\"golf\",\"gomito\",\"gommone\",\"gonfio\",\"gonna\",\"governo\",\"gracile\",\"grado\",\"grafico\",\"grammo\",\"grande\",\"grattare\",\"gravoso\",\"grazia\",\"greca\",\"gregge\",\"grifone\",\"grigio\",\"grinza\",\"grotta\",\"gruppo\",\"guadagno\",\"guaio\",\"guanto\",\"guardare\",\"gufo\",\"guidare\",\"ibernato\",\"icona\",\"identico\",\"idillio\",\"idolo\",\"idra\",\"idrico\",\"idrogeno\",\"igiene\",\"ignaro\",\"ignorato\",\"ilare\",\"illeso\",\"illogico\",\"illudere\",\"imballo\",\"imbevuto\",\"imbocco\",\"imbuto\",\"immane\",\"immerso\",\"immolato\",\"impacco\",\"impeto\",\"impiego\",\"importo\",\"impronta\",\"inalare\",\"inarcare\",\"inattivo\",\"incanto\",\"incendio\",\"inchino\",\"incisivo\",\"incluso\",\"incontro\",\"incrocio\",\"incubo\",\"indagine\",\"india\",\"indole\",\"inedito\",\"infatti\",\"infilare\",\"inflitto\",\"ingaggio\",\"ingegno\",\"inglese\",\"ingordo\",\"ingrosso\",\"innesco\",\"inodore\",\"inoltrare\",\"inondato\",\"insano\",\"insetto\",\"insieme\",\"insonnia\",\"insulina\",\"intasato\",\"intero\",\"intonaco\",\"intuito\",\"inumidire\",\"invalido\",\"invece\",\"invito\",\"iperbole\",\"ipnotico\",\"ipotesi\",\"ippica\",\"iride\",\"irlanda\",\"ironico\",\"irrigato\",\"irrorare\",\"isolato\",\"isotopo\",\"isterico\",\"istituto\",\"istrice\",\"italia\",\"iterare\",\"labbro\",\"labirinto\",\"lacca\",\"lacerato\",\"lacrima\",\"lacuna\",\"laddove\",\"lago\",\"lampo\",\"lancetta\",\"lanterna\",\"lardoso\",\"larga\",\"laringe\",\"lastra\",\"latenza\",\"latino\",\"lattuga\",\"lavagna\",\"lavoro\",\"legale\",\"leggero\",\"lembo\",\"lentezza\",\"lenza\",\"leone\",\"lepre\",\"lesivo\",\"lessato\",\"lesto\",\"letterale\",\"leva\",\"levigato\",\"libero\",\"lido\",\"lievito\",\"lilla\",\"limatura\",\"limitare\",\"limpido\",\"lineare\",\"lingua\",\"liquido\",\"lira\",\"lirica\",\"lisca\",\"lite\",\"litigio\",\"livrea\",\"locanda\",\"lode\",\"logica\",\"lombare\",\"londra\",\"longevo\",\"loquace\",\"lorenzo\",\"loto\",\"lotteria\",\"luce\",\"lucidato\",\"lumaca\",\"luminoso\",\"lungo\",\"lupo\",\"luppolo\",\"lusinga\",\"lusso\",\"lutto\",\"macabro\",\"macchina\",\"macero\",\"macinato\",\"madama\",\"magico\",\"maglia\",\"magnete\",\"magro\",\"maiolica\",\"malafede\",\"malgrado\",\"malinteso\",\"malsano\",\"malto\",\"malumore\",\"mana\",\"mancia\",\"mandorla\",\"mangiare\",\"manifesto\",\"mannaro\",\"manovra\",\"mansarda\",\"mantide\",\"manubrio\",\"mappa\",\"maratona\",\"marcire\",\"maretta\",\"marmo\",\"marsupio\",\"maschera\",\"massaia\",\"mastino\",\"materasso\",\"matricola\",\"mattone\",\"maturo\",\"mazurca\",\"meandro\",\"meccanico\",\"mecenate\",\"medesimo\",\"meditare\",\"mega\",\"melassa\",\"melis\",\"melodia\",\"meninge\",\"meno\",\"mensola\",\"mercurio\",\"merenda\",\"merlo\",\"meschino\",\"mese\",\"messere\",\"mestolo\",\"metallo\",\"metodo\",\"mettere\",\"miagolare\",\"mica\",\"micelio\",\"michele\",\"microbo\",\"midollo\",\"miele\",\"migliore\",\"milano\",\"milite\",\"mimosa\",\"minerale\",\"mini\",\"minore\",\"mirino\",\"mirtillo\",\"miscela\",\"missiva\",\"misto\",\"misurare\",\"mitezza\",\"mitigare\",\"mitra\",\"mittente\",\"mnemonico\",\"modello\",\"modifica\",\"modulo\",\"mogano\",\"mogio\",\"mole\",\"molosso\",\"monastero\",\"monco\",\"mondina\",\"monetario\",\"monile\",\"monotono\",\"monsone\",\"montato\",\"monviso\",\"mora\",\"mordere\",\"morsicato\",\"mostro\",\"motivato\",\"motosega\",\"motto\",\"movenza\",\"movimento\",\"mozzo\",\"mucca\",\"mucosa\",\"muffa\",\"mughetto\",\"mugnaio\",\"mulatto\",\"mulinello\",\"multiplo\",\"mummia\",\"munto\",\"muovere\",\"murale\",\"musa\",\"muscolo\",\"musica\",\"mutevole\",\"muto\",\"nababbo\",\"nafta\",\"nanometro\",\"narciso\",\"narice\",\"narrato\",\"nascere\",\"nastrare\",\"naturale\",\"nautica\",\"naviglio\",\"nebulosa\",\"necrosi\",\"negativo\",\"negozio\",\"nemmeno\",\"neofita\",\"neretto\",\"nervo\",\"nessuno\",\"nettuno\",\"neutrale\",\"neve\",\"nevrotico\",\"nicchia\",\"ninfa\",\"nitido\",\"nobile\",\"nocivo\",\"nodo\",\"nome\",\"nomina\",\"nordico\",\"normale\",\"norvegese\",\"nostrano\",\"notare\",\"notizia\",\"notturno\",\"novella\",\"nucleo\",\"nulla\",\"numero\",\"nuovo\",\"nutrire\",\"nuvola\",\"nuziale\",\"oasi\",\"obbedire\",\"obbligo\",\"obelisco\",\"oblio\",\"obolo\",\"obsoleto\",\"occasione\",\"occhio\",\"occidente\",\"occorrere\",\"occultare\",\"ocra\",\"oculato\",\"odierno\",\"odorare\",\"offerta\",\"offrire\",\"offuscato\",\"oggetto\",\"oggi\",\"ognuno\",\"olandese\",\"olfatto\",\"oliato\",\"oliva\",\"ologramma\",\"oltre\",\"omaggio\",\"ombelico\",\"ombra\",\"omega\",\"omissione\",\"ondoso\",\"onere\",\"onice\",\"onnivoro\",\"onorevole\",\"onta\",\"operato\",\"opinione\",\"opposto\",\"oracolo\",\"orafo\",\"ordine\",\"orecchino\",\"orefice\",\"orfano\",\"organico\",\"origine\",\"orizzonte\",\"orma\",\"ormeggio\",\"ornativo\",\"orologio\",\"orrendo\",\"orribile\",\"ortensia\",\"ortica\",\"orzata\",\"orzo\",\"osare\",\"oscurare\",\"osmosi\",\"ospedale\",\"ospite\",\"ossa\",\"ossidare\",\"ostacolo\",\"oste\",\"otite\",\"otre\",\"ottagono\",\"ottimo\",\"ottobre\",\"ovale\",\"ovest\",\"ovino\",\"oviparo\",\"ovocito\",\"ovunque\",\"ovviare\",\"ozio\",\"pacchetto\",\"pace\",\"pacifico\",\"padella\",\"padrone\",\"paese\",\"paga\",\"pagina\",\"palazzina\",\"palesare\",\"pallido\",\"palo\",\"palude\",\"pandoro\",\"pannello\",\"paolo\",\"paonazzo\",\"paprica\",\"parabola\",\"parcella\",\"parere\",\"pargolo\",\"pari\",\"parlato\",\"parola\",\"partire\",\"parvenza\",\"parziale\",\"passivo\",\"pasticca\",\"patacca\",\"patologia\",\"pattume\",\"pavone\",\"peccato\",\"pedalare\",\"pedonale\",\"peggio\",\"peloso\",\"penare\",\"pendice\",\"penisola\",\"pennuto\",\"penombra\",\"pensare\",\"pentola\",\"pepe\",\"pepita\",\"perbene\",\"percorso\",\"perdonato\",\"perforare\",\"pergamena\",\"periodo\",\"permesso\",\"perno\",\"perplesso\",\"persuaso\",\"pertugio\",\"pervaso\",\"pesatore\",\"pesista\",\"peso\",\"pestifero\",\"petalo\",\"pettine\",\"petulante\",\"pezzo\",\"piacere\",\"pianta\",\"piattino\",\"piccino\",\"picozza\",\"piega\",\"pietra\",\"piffero\",\"pigiama\",\"pigolio\",\"pigro\",\"pila\",\"pilifero\",\"pillola\",\"pilota\",\"pimpante\",\"pineta\",\"pinna\",\"pinolo\",\"pioggia\",\"piombo\",\"piramide\",\"piretico\",\"pirite\",\"pirolisi\",\"pitone\",\"pizzico\",\"placebo\",\"planare\",\"plasma\",\"platano\",\"plenario\",\"pochezza\",\"poderoso\",\"podismo\",\"poesia\",\"poggiare\",\"polenta\",\"poligono\",\"pollice\",\"polmonite\",\"polpetta\",\"polso\",\"poltrona\",\"polvere\",\"pomice\",\"pomodoro\",\"ponte\",\"popoloso\",\"porfido\",\"poroso\",\"porpora\",\"porre\",\"portata\",\"posa\",\"positivo\",\"possesso\",\"postulato\",\"potassio\",\"potere\",\"pranzo\",\"prassi\",\"pratica\",\"precluso\",\"predica\",\"prefisso\",\"pregiato\",\"prelievo\",\"premere\",\"prenotare\",\"preparato\",\"presenza\",\"pretesto\",\"prevalso\",\"prima\",\"principe\",\"privato\",\"problema\",\"procura\",\"produrre\",\"profumo\",\"progetto\",\"prolunga\",\"promessa\",\"pronome\",\"proposta\",\"proroga\",\"proteso\",\"prova\",\"prudente\",\"prugna\",\"prurito\",\"psiche\",\"pubblico\",\"pudica\",\"pugilato\",\"pugno\",\"pulce\",\"pulito\",\"pulsante\",\"puntare\",\"pupazzo\",\"pupilla\",\"puro\",\"quadro\",\"qualcosa\",\"quasi\",\"querela\",\"quota\",\"raccolto\",\"raddoppio\",\"radicale\",\"radunato\",\"raffica\",\"ragazzo\",\"ragione\",\"ragno\",\"ramarro\",\"ramingo\",\"ramo\",\"randagio\",\"rantolare\",\"rapato\",\"rapina\",\"rappreso\",\"rasatura\",\"raschiato\",\"rasente\",\"rassegna\",\"rastrello\",\"rata\",\"ravveduto\",\"reale\",\"recepire\",\"recinto\",\"recluta\",\"recondito\",\"recupero\",\"reddito\",\"redimere\",\"regalato\",\"registro\",\"regola\",\"regresso\",\"relazione\",\"remare\",\"remoto\",\"renna\",\"replica\",\"reprimere\",\"reputare\",\"resa\",\"residente\",\"responso\",\"restauro\",\"rete\",\"retina\",\"retorica\",\"rettifica\",\"revocato\",\"riassunto\",\"ribadire\",\"ribelle\",\"ribrezzo\",\"ricarica\",\"ricco\",\"ricevere\",\"riciclato\",\"ricordo\",\"ricreduto\",\"ridicolo\",\"ridurre\",\"rifasare\",\"riflesso\",\"riforma\",\"rifugio\",\"rigare\",\"rigettato\",\"righello\",\"rilassato\",\"rilevato\",\"rimanere\",\"rimbalzo\",\"rimedio\",\"rimorchio\",\"rinascita\",\"rincaro\",\"rinforzo\",\"rinnovo\",\"rinomato\",\"rinsavito\",\"rintocco\",\"rinuncia\",\"rinvenire\",\"riparato\",\"ripetuto\",\"ripieno\",\"riportare\",\"ripresa\",\"ripulire\",\"risata\",\"rischio\",\"riserva\",\"risibile\",\"riso\",\"rispetto\",\"ristoro\",\"risultato\",\"risvolto\",\"ritardo\",\"ritegno\",\"ritmico\",\"ritrovo\",\"riunione\",\"riva\",\"riverso\",\"rivincita\",\"rivolto\",\"rizoma\",\"roba\",\"robotico\",\"robusto\",\"roccia\",\"roco\",\"rodaggio\",\"rodere\",\"roditore\",\"rogito\",\"rollio\",\"romantico\",\"rompere\",\"ronzio\",\"rosolare\",\"rospo\",\"rotante\",\"rotondo\",\"rotula\",\"rovescio\",\"rubizzo\",\"rubrica\",\"ruga\",\"rullino\",\"rumine\",\"rumoroso\",\"ruolo\",\"rupe\",\"russare\",\"rustico\",\"sabato\",\"sabbiare\",\"sabotato\",\"sagoma\",\"salasso\",\"saldatura\",\"salgemma\",\"salivare\",\"salmone\",\"salone\",\"saltare\",\"saluto\",\"salvo\",\"sapere\",\"sapido\",\"saporito\",\"saraceno\",\"sarcasmo\",\"sarto\",\"sassoso\",\"satellite\",\"satira\",\"satollo\",\"saturno\",\"savana\",\"savio\",\"saziato\",\"sbadiglio\",\"sbalzo\",\"sbancato\",\"sbarra\",\"sbattere\",\"sbavare\",\"sbendare\",\"sbirciare\",\"sbloccato\",\"sbocciato\",\"sbrinare\",\"sbruffone\",\"sbuffare\",\"scabroso\",\"scadenza\",\"scala\",\"scambiare\",\"scandalo\",\"scapola\",\"scarso\",\"scatenare\",\"scavato\",\"scelto\",\"scenico\",\"scettro\",\"scheda\",\"schiena\",\"sciarpa\",\"scienza\",\"scindere\",\"scippo\",\"sciroppo\",\"scivolo\",\"sclerare\",\"scodella\",\"scolpito\",\"scomparto\",\"sconforto\",\"scoprire\",\"scorta\",\"scossone\",\"scozzese\",\"scriba\",\"scrollare\",\"scrutinio\",\"scuderia\",\"scultore\",\"scuola\",\"scuro\",\"scusare\",\"sdebitare\",\"sdoganare\",\"seccatura\",\"secondo\",\"sedano\",\"seggiola\",\"segnalato\",\"segregato\",\"seguito\",\"selciato\",\"selettivo\",\"sella\",\"selvaggio\",\"semaforo\",\"sembrare\",\"seme\",\"seminato\",\"sempre\",\"senso\",\"sentire\",\"sepolto\",\"sequenza\",\"serata\",\"serbato\",\"sereno\",\"serio\",\"serpente\",\"serraglio\",\"servire\",\"sestina\",\"setola\",\"settimana\",\"sfacelo\",\"sfaldare\",\"sfamato\",\"sfarzoso\",\"sfaticato\",\"sfera\",\"sfida\",\"sfilato\",\"sfinge\",\"sfocato\",\"sfoderare\",\"sfogo\",\"sfoltire\",\"sforzato\",\"sfratto\",\"sfruttato\",\"sfuggito\",\"sfumare\",\"sfuso\",\"sgabello\",\"sgarbato\",\"sgonfiare\",\"sgorbio\",\"sgrassato\",\"sguardo\",\"sibilo\",\"siccome\",\"sierra\",\"sigla\",\"signore\",\"silenzio\",\"sillaba\",\"simbolo\",\"simpatico\",\"simulato\",\"sinfonia\",\"singolo\",\"sinistro\",\"sino\",\"sintesi\",\"sinusoide\",\"sipario\",\"sisma\",\"sistole\",\"situato\",\"slitta\",\"slogatura\",\"sloveno\",\"smarrito\",\"smemorato\",\"smentito\",\"smeraldo\",\"smilzo\",\"smontare\",\"smottato\",\"smussato\",\"snellire\",\"snervato\",\"snodo\",\"sobbalzo\",\"sobrio\",\"soccorso\",\"sociale\",\"sodale\",\"soffitto\",\"sogno\",\"soldato\",\"solenne\",\"solido\",\"sollazzo\",\"solo\",\"solubile\",\"solvente\",\"somatico\",\"somma\",\"sonda\",\"sonetto\",\"sonnifero\",\"sopire\",\"soppeso\",\"sopra\",\"sorgere\",\"sorpasso\",\"sorriso\",\"sorso\",\"sorteggio\",\"sorvolato\",\"sospiro\",\"sosta\",\"sottile\",\"spada\",\"spalla\",\"spargere\",\"spatola\",\"spavento\",\"spazzola\",\"specie\",\"spedire\",\"spegnere\",\"spelatura\",\"speranza\",\"spessore\",\"spettrale\",\"spezzato\",\"spia\",\"spigoloso\",\"spillato\",\"spinoso\",\"spirale\",\"splendido\",\"sportivo\",\"sposo\",\"spranga\",\"sprecare\",\"spronato\",\"spruzzo\",\"spuntino\",\"squillo\",\"sradicare\",\"srotolato\",\"stabile\",\"stacco\",\"staffa\",\"stagnare\",\"stampato\",\"stantio\",\"starnuto\",\"stasera\",\"statuto\",\"stelo\",\"steppa\",\"sterzo\",\"stiletto\",\"stima\",\"stirpe\",\"stivale\",\"stizzoso\",\"stonato\",\"storico\",\"strappo\",\"stregato\",\"stridulo\",\"strozzare\",\"strutto\",\"stuccare\",\"stufo\",\"stupendo\",\"subentro\",\"succoso\",\"sudore\",\"suggerito\",\"sugo\",\"sultano\",\"suonare\",\"superbo\",\"supporto\",\"surgelato\",\"surrogato\",\"sussurro\",\"sutura\",\"svagare\",\"svedese\",\"sveglio\",\"svelare\",\"svenuto\",\"svezia\",\"sviluppo\",\"svista\",\"svizzera\",\"svolta\",\"svuotare\",\"tabacco\",\"tabulato\",\"tacciare\",\"taciturno\",\"tale\",\"talismano\",\"tampone\",\"tannino\",\"tara\",\"tardivo\",\"targato\",\"tariffa\",\"tarpare\",\"tartaruga\",\"tasto\",\"tattico\",\"taverna\",\"tavolata\",\"tazza\",\"teca\",\"tecnico\",\"telefono\",\"temerario\",\"tempo\",\"temuto\",\"tendone\",\"tenero\",\"tensione\",\"tentacolo\",\"teorema\",\"terme\",\"terrazzo\",\"terzetto\",\"tesi\",\"tesserato\",\"testato\",\"tetro\",\"tettoia\",\"tifare\",\"tigella\",\"timbro\",\"tinto\",\"tipico\",\"tipografo\",\"tiraggio\",\"tiro\",\"titanio\",\"titolo\",\"titubante\",\"tizio\",\"tizzone\",\"toccare\",\"tollerare\",\"tolto\",\"tombola\",\"tomo\",\"tonfo\",\"tonsilla\",\"topazio\",\"topologia\",\"toppa\",\"torba\",\"tornare\",\"torrone\",\"tortora\",\"toscano\",\"tossire\",\"tostatura\",\"totano\",\"trabocco\",\"trachea\",\"trafila\",\"tragedia\",\"tralcio\",\"tramonto\",\"transito\",\"trapano\",\"trarre\",\"trasloco\",\"trattato\",\"trave\",\"treccia\",\"tremolio\",\"trespolo\",\"tributo\",\"tricheco\",\"trifoglio\",\"trillo\",\"trincea\",\"trio\",\"tristezza\",\"triturato\",\"trivella\",\"tromba\",\"trono\",\"troppo\",\"trottola\",\"trovare\",\"truccato\",\"tubatura\",\"tuffato\",\"tulipano\",\"tumulto\",\"tunisia\",\"turbare\",\"turchino\",\"tuta\",\"tutela\",\"ubicato\",\"uccello\",\"uccisore\",\"udire\",\"uditivo\",\"uffa\",\"ufficio\",\"uguale\",\"ulisse\",\"ultimato\",\"umano\",\"umile\",\"umorismo\",\"uncinetto\",\"ungere\",\"ungherese\",\"unicorno\",\"unificato\",\"unisono\",\"unitario\",\"unte\",\"uovo\",\"upupa\",\"uragano\",\"urgenza\",\"urlo\",\"usanza\",\"usato\",\"uscito\",\"usignolo\",\"usuraio\",\"utensile\",\"utilizzo\",\"utopia\",\"vacante\",\"vaccinato\",\"vagabondo\",\"vagliato\",\"valanga\",\"valgo\",\"valico\",\"valletta\",\"valoroso\",\"valutare\",\"valvola\",\"vampata\",\"vangare\",\"vanitoso\",\"vano\",\"vantaggio\",\"vanvera\",\"vapore\",\"varano\",\"varcato\",\"variante\",\"vasca\",\"vedetta\",\"vedova\",\"veduto\",\"vegetale\",\"veicolo\",\"velcro\",\"velina\",\"velluto\",\"veloce\",\"venato\",\"vendemmia\",\"vento\",\"verace\",\"verbale\",\"vergogna\",\"verifica\",\"vero\",\"verruca\",\"verticale\",\"vescica\",\"vessillo\",\"vestale\",\"veterano\",\"vetrina\",\"vetusto\",\"viandante\",\"vibrante\",\"vicenda\",\"vichingo\",\"vicinanza\",\"vidimare\",\"vigilia\",\"vigneto\",\"vigore\",\"vile\",\"villano\",\"vimini\",\"vincitore\",\"viola\",\"vipera\",\"virgola\",\"virologo\",\"virulento\",\"viscoso\",\"visione\",\"vispo\",\"vissuto\",\"visura\",\"vita\",\"vitello\",\"vittima\",\"vivanda\",\"vivido\",\"viziare\",\"voce\",\"voga\",\"volatile\",\"volere\",\"volpe\",\"voragine\",\"vulcano\",\"zampogna\",\"zanna\",\"zappato\",\"zattera\",\"zavorra\",\"zefiro\",\"zelante\",\"zelo\",\"zenzero\",\"zerbino\",\"zibetto\",\"zinco\",\"zircone\",\"zitto\",\"zolla\",\"zotico\",\"zucchero\",\"zufolo\",\"zulu\",\"zuppa\"][\"あいこくしん\",\"あいさつ\",\"あいだ\",\"あおぞら\",\"あかちゃん\",\"あきる\",\"あけがた\",\"あける\",\"あこがれる\",\"あさい\",\"あさひ\",\"あしあと\",\"あじわう\",\"あずかる\",\"あずき\",\"あそぶ\",\"あたえる\",\"あたためる\",\"あたりまえ\",\"あたる\",\"あつい\",\"あつかう\",\"あっしゅく\",\"あつまり\",\"あつめる\",\"あてな\",\"あてはまる\",\"あひる\",\"あぶら\",\"あぶる\",\"あふれる\",\"あまい\",\"あまど\",\"あまやかす\",\"あまり\",\"あみもの\",\"あめりか\",\"あやまる\",\"あゆむ\",\"あらいぐま\",\"あらし\",\"あらすじ\",\"あらためる\",\"あらゆる\",\"あらわす\",\"ありがとう\",\"あわせる\",\"あわてる\",\"あんい\",\"あんがい\",\"あんこ\",\"あんぜん\",\"あんてい\",\"あんない\",\"あんまり\",\"いいだす\",\"いおん\",\"いがい\",\"いがく\",\"いきおい\",\"いきなり\",\"いきもの\",\"いきる\",\"いくじ\",\"いくぶん\",\"いけばな\",\"いけん\",\"いこう\",\"いこく\",\"いこつ\",\"いさましい\",\"いさん\",\"いしき\",\"いじゅう\",\"いじょう\",\"いじわる\",\"いずみ\",\"いずれ\",\"いせい\",\"いせえび\",\"いせかい\",\"いせき\",\"いぜん\",\"いそうろう\",\"いそがしい\",\"いだい\",\"いだく\",\"いたずら\",\"いたみ\",\"いたりあ\",\"いちおう\",\"いちじ\",\"いちど\",\"いちば\",\"いちぶ\",\"いちりゅう\",\"いつか\",\"いっしゅん\",\"いっせい\",\"いっそう\",\"いったん\",\"いっち\",\"いってい\",\"いっぽう\",\"いてざ\",\"いてん\",\"いどう\",\"いとこ\",\"いない\",\"いなか\",\"いねむり\",\"いのち\",\"いのる\",\"いはつ\",\"いばる\",\"いはん\",\"いびき\",\"いひん\",\"いふく\",\"いへん\",\"いほう\",\"いみん\",\"いもうと\",\"いもたれ\",\"いもり\",\"いやがる\",\"いやす\",\"いよかん\",\"いよく\",\"いらい\",\"いらすと\",\"いりぐち\",\"いりょう\",\"いれい\",\"いれもの\",\"いれる\",\"いろえんぴつ\",\"いわい\",\"いわう\",\"いわかん\",\"いわば\",\"いわゆる\",\"いんげんまめ\",\"いんさつ\",\"いんしょう\",\"いんよう\",\"うえき\",\"うえる\",\"うおざ\",\"うがい\",\"うかぶ\",\"うかべる\",\"うきわ\",\"うくらいな\",\"うくれれ\",\"うけたまわる\",\"うけつけ\",\"うけとる\",\"うけもつ\",\"うける\",\"うごかす\",\"うごく\",\"うこん\",\"うさぎ\",\"うしなう\",\"うしろがみ\",\"うすい\",\"うすぎ\",\"うすぐらい\",\"うすめる\",\"うせつ\",\"うちあわせ\",\"うちがわ\",\"うちき\",\"うちゅう\",\"うっかり\",\"うつくしい\",\"うったえる\",\"うつる\",\"うどん\",\"うなぎ\",\"うなじ\",\"うなずく\",\"うなる\",\"うねる\",\"うのう\",\"うぶげ\",\"うぶごえ\",\"うまれる\",\"うめる\",\"うもう\",\"うやまう\",\"うよく\",\"うらがえす\",\"うらぐち\",\"うらない\",\"うりあげ\",\"うりきれ\",\"うるさい\",\"うれしい\",\"うれゆき\",\"うれる\",\"うろこ\",\"うわき\",\"うわさ\",\"うんこう\",\"うんちん\",\"うんてん\",\"うんどう\",\"えいえん\",\"えいが\",\"えいきょう\",\"えいご\",\"えいせい\",\"えいぶん\",\"えいよう\",\"えいわ\",\"えおり\",\"えがお\",\"えがく\",\"えきたい\",\"えくせる\",\"えしゃく\",\"えすて\",\"えつらん\",\"えのぐ\",\"えほうまき\",\"えほん\",\"えまき\",\"えもじ\",\"えもの\",\"えらい\",\"えらぶ\",\"えりあ\",\"えんえん\",\"えんかい\",\"えんぎ\",\"えんげき\",\"えんしゅう\",\"えんぜつ\",\"えんそく\",\"えんちょう\",\"えんとつ\",\"おいかける\",\"おいこす\",\"おいしい\",\"おいつく\",\"おうえん\",\"おうさま\",\"おうじ\",\"おうせつ\",\"おうたい\",\"おうふく\",\"おうべい\",\"おうよう\",\"おえる\",\"おおい\",\"おおう\",\"おおどおり\",\"おおや\",\"おおよそ\",\"おかえり\",\"おかず\",\"おがむ\",\"おかわり\",\"おぎなう\",\"おきる\",\"おくさま\",\"おくじょう\",\"おくりがな\",\"おくる\",\"おくれる\",\"おこす\",\"おこなう\",\"おこる\",\"おさえる\",\"おさない\",\"おさめる\",\"おしいれ\",\"おしえる\",\"おじぎ\",\"おじさん\",\"おしゃれ\",\"おそらく\",\"おそわる\",\"おたがい\",\"おたく\",\"おだやか\",\"おちつく\",\"おっと\",\"おつり\",\"おでかけ\",\"おとしもの\",\"おとなしい\",\"おどり\",\"おどろかす\",\"おばさん\",\"おまいり\",\"おめでとう\",\"おもいで\",\"おもう\",\"おもたい\",\"おもちゃ\",\"おやつ\",\"おやゆび\",\"およぼす\",\"おらんだ\",\"おろす\",\"おんがく\",\"おんけい\",\"おんしゃ\",\"おんせん\",\"おんだん\",\"おんちゅう\",\"おんどけい\",\"かあつ\",\"かいが\",\"がいき\",\"がいけん\",\"がいこう\",\"かいさつ\",\"かいしゃ\",\"かいすいよく\",\"かいぜん\",\"かいぞうど\",\"かいつう\",\"かいてん\",\"かいとう\",\"かいふく\",\"がいへき\",\"かいほう\",\"かいよう\",\"がいらい\",\"かいわ\",\"かえる\",\"かおり\",\"かかえる\",\"かがく\",\"かがし\",\"かがみ\",\"かくご\",\"かくとく\",\"かざる\",\"がぞう\",\"かたい\",\"かたち\",\"がちょう\",\"がっきゅう\",\"がっこう\",\"がっさん\",\"がっしょう\",\"かなざわし\",\"かのう\",\"がはく\",\"かぶか\",\"かほう\",\"かほご\",\"かまう\",\"かまぼこ\",\"かめれおん\",\"かゆい\",\"かようび\",\"からい\",\"かるい\",\"かろう\",\"かわく\",\"かわら\",\"がんか\",\"かんけい\",\"かんこう\",\"かんしゃ\",\"かんそう\",\"かんたん\",\"かんち\",\"がんばる\",\"きあい\",\"きあつ\",\"きいろ\",\"ぎいん\",\"きうい\",\"きうん\",\"きえる\",\"きおう\",\"きおく\",\"きおち\",\"きおん\",\"きかい\",\"きかく\",\"きかんしゃ\",\"ききて\",\"きくばり\",\"きくらげ\",\"きけんせい\",\"きこう\",\"きこえる\",\"きこく\",\"きさい\",\"きさく\",\"きさま\",\"きさらぎ\",\"ぎじかがく\",\"ぎしき\",\"ぎじたいけん\",\"ぎじにってい\",\"ぎじゅつしゃ\",\"きすう\",\"きせい\",\"きせき\",\"きせつ\",\"きそう\",\"きぞく\",\"きぞん\",\"きたえる\",\"きちょう\",\"きつえん\",\"ぎっちり\",\"きつつき\",\"きつね\",\"きてい\",\"きどう\",\"きどく\",\"きない\",\"きなが\",\"きなこ\",\"きぬごし\",\"きねん\",\"きのう\",\"きのした\",\"きはく\",\"きびしい\",\"きひん\",\"きふく\",\"きぶん\",\"きぼう\",\"きほん\",\"きまる\",\"きみつ\",\"きむずかしい\",\"きめる\",\"きもだめし\",\"きもち\",\"きもの\",\"きゃく\",\"きやく\",\"ぎゅうにく\",\"きよう\",\"きょうりゅう\",\"きらい\",\"きらく\",\"きりん\",\"きれい\",\"きれつ\",\"きろく\",\"ぎろん\",\"きわめる\",\"ぎんいろ\",\"きんかくじ\",\"きんじょ\",\"きんようび\",\"ぐあい\",\"くいず\",\"くうかん\",\"くうき\",\"くうぐん\",\"くうこう\",\"ぐうせい\",\"くうそう\",\"ぐうたら\",\"くうふく\",\"くうぼ\",\"くかん\",\"くきょう\",\"くげん\",\"ぐこう\",\"くさい\",\"くさき\",\"くさばな\",\"くさる\",\"くしゃみ\",\"くしょう\",\"くすのき\",\"くすりゆび\",\"くせげ\",\"くせん\",\"ぐたいてき\",\"くださる\",\"くたびれる\",\"くちこみ\",\"くちさき\",\"くつした\",\"ぐっすり\",\"くつろぐ\",\"くとうてん\",\"くどく\",\"くなん\",\"くねくね\",\"くのう\",\"くふう\",\"くみあわせ\",\"くみたてる\",\"くめる\",\"くやくしょ\",\"くらす\",\"くらべる\",\"くるま\",\"くれる\",\"くろう\",\"くわしい\",\"ぐんかん\",\"ぐんしょく\",\"ぐんたい\",\"ぐんて\",\"けあな\",\"けいかく\",\"けいけん\",\"けいこ\",\"けいさつ\",\"げいじゅつ\",\"けいたい\",\"げいのうじん\",\"けいれき\",\"けいろ\",\"けおとす\",\"けおりもの\",\"げきか\",\"げきげん\",\"げきだん\",\"げきちん\",\"げきとつ\",\"げきは\",\"げきやく\",\"げこう\",\"げこくじょう\",\"げざい\",\"けさき\",\"げざん\",\"けしき\",\"けしごむ\",\"けしょう\",\"げすと\",\"けたば\",\"けちゃっぷ\",\"けちらす\",\"けつあつ\",\"けつい\",\"けつえき\",\"けっこん\",\"けつじょ\",\"けっせき\",\"けってい\",\"けつまつ\",\"げつようび\",\"げつれい\",\"けつろん\",\"げどく\",\"けとばす\",\"けとる\",\"けなげ\",\"けなす\",\"けなみ\",\"けぬき\",\"げねつ\",\"けねん\",\"けはい\",\"げひん\",\"けぶかい\",\"げぼく\",\"けまり\",\"けみかる\",\"けむし\",\"けむり\",\"けもの\",\"けらい\",\"けろけろ\",\"けわしい\",\"けんい\",\"けんえつ\",\"けんお\",\"けんか\",\"げんき\",\"けんげん\",\"けんこう\",\"けんさく\",\"けんしゅう\",\"けんすう\",\"げんそう\",\"けんちく\",\"けんてい\",\"けんとう\",\"けんない\",\"けんにん\",\"げんぶつ\",\"けんま\",\"けんみん\",\"けんめい\",\"けんらん\",\"けんり\",\"こあくま\",\"こいぬ\",\"こいびと\",\"ごうい\",\"こうえん\",\"こうおん\",\"こうかん\",\"ごうきゅう\",\"ごうけい\",\"こうこう\",\"こうさい\",\"こうじ\",\"こうすい\",\"ごうせい\",\"こうそく\",\"こうたい\",\"こうちゃ\",\"こうつう\",\"こうてい\",\"こうどう\",\"こうない\",\"こうはい\",\"ごうほう\",\"ごうまん\",\"こうもく\",\"こうりつ\",\"こえる\",\"こおり\",\"ごかい\",\"ごがつ\",\"ごかん\",\"こくご\",\"こくさい\",\"こくとう\",\"こくない\",\"こくはく\",\"こぐま\",\"こけい\",\"こける\",\"ここのか\",\"こころ\",\"こさめ\",\"こしつ\",\"こすう\",\"こせい\",\"こせき\",\"こぜん\",\"こそだて\",\"こたい\",\"こたえる\",\"こたつ\",\"こちょう\",\"こっか\",\"こつこつ\",\"こつばん\",\"こつぶ\",\"こてい\",\"こてん\",\"ことがら\",\"ことし\",\"ことば\",\"ことり\",\"こなごな\",\"こねこね\",\"このまま\",\"このみ\",\"このよ\",\"ごはん\",\"こひつじ\",\"こふう\",\"こふん\",\"こぼれる\",\"ごまあぶら\",\"こまかい\",\"ごますり\",\"こまつな\",\"こまる\",\"こむぎこ\",\"こもじ\",\"こもち\",\"こもの\",\"こもん\",\"こやく\",\"こやま\",\"こゆう\",\"こゆび\",\"こよい\",\"こよう\",\"こりる\",\"これくしょん\",\"ころっけ\",\"こわもて\",\"こわれる\",\"こんいん\",\"こんかい\",\"こんき\",\"こんしゅう\",\"こんすい\",\"こんだて\",\"こんとん\",\"こんなん\",\"こんびに\",\"こんぽん\",\"こんまけ\",\"こんや\",\"こんれい\",\"こんわく\",\"ざいえき\",\"さいかい\",\"さいきん\",\"ざいげん\",\"ざいこ\",\"さいしょ\",\"さいせい\",\"ざいたく\",\"ざいちゅう\",\"さいてき\",\"ざいりょう\",\"さうな\",\"さかいし\",\"さがす\",\"さかな\",\"さかみち\",\"さがる\",\"さぎょう\",\"さくし\",\"さくひん\",\"さくら\",\"さこく\",\"さこつ\",\"さずかる\",\"ざせき\",\"さたん\",\"さつえい\",\"ざつおん\",\"ざっか\",\"ざつがく\",\"さっきょく\",\"ざっし\",\"さつじん\",\"ざっそう\",\"さつたば\",\"さつまいも\",\"さてい\",\"さといも\",\"さとう\",\"さとおや\",\"さとし\",\"さとる\",\"さのう\",\"さばく\",\"さびしい\",\"さべつ\",\"さほう\",\"さほど\",\"さます\",\"さみしい\",\"さみだれ\",\"さむけ\",\"さめる\",\"さやえんどう\",\"さゆう\",\"さよう\",\"さよく\",\"さらだ\",\"ざるそば\",\"さわやか\",\"さわる\",\"さんいん\",\"さんか\",\"さんきゃく\",\"さんこう\",\"さんさい\",\"ざんしょ\",\"さんすう\",\"さんせい\",\"さんそ\",\"さんち\",\"さんま\",\"さんみ\",\"さんらん\",\"しあい\",\"しあげ\",\"しあさって\",\"しあわせ\",\"しいく\",\"しいん\",\"しうち\",\"しえい\",\"しおけ\",\"しかい\",\"しかく\",\"じかん\",\"しごと\",\"しすう\",\"じだい\",\"したうけ\",\"したぎ\",\"したて\",\"したみ\",\"しちょう\",\"しちりん\",\"しっかり\",\"しつじ\",\"しつもん\",\"してい\",\"してき\",\"してつ\",\"じてん\",\"じどう\",\"しなぎれ\",\"しなもの\",\"しなん\",\"しねま\",\"しねん\",\"しのぐ\",\"しのぶ\",\"しはい\",\"しばかり\",\"しはつ\",\"しはらい\",\"しはん\",\"しひょう\",\"しふく\",\"じぶん\",\"しへい\",\"しほう\",\"しほん\",\"しまう\",\"しまる\",\"しみん\",\"しむける\",\"じむしょ\",\"しめい\",\"しめる\",\"しもん\",\"しゃいん\",\"しゃうん\",\"しゃおん\",\"じゃがいも\",\"しやくしょ\",\"しゃくほう\",\"しゃけん\",\"しゃこ\",\"しゃざい\",\"しゃしん\",\"しゃせん\",\"しゃそう\",\"しゃたい\",\"しゃちょう\",\"しゃっきん\",\"じゃま\",\"しゃりん\",\"しゃれい\",\"じゆう\",\"じゅうしょ\",\"しゅくはく\",\"じゅしん\",\"しゅっせき\",\"しゅみ\",\"しゅらば\",\"じゅんばん\",\"しょうかい\",\"しょくたく\",\"しょっけん\",\"しょどう\",\"しょもつ\",\"しらせる\",\"しらべる\",\"しんか\",\"しんこう\",\"じんじゃ\",\"しんせいじ\",\"しんちく\",\"しんりん\",\"すあげ\",\"すあし\",\"すあな\",\"ずあん\",\"すいえい\",\"すいか\",\"すいとう\",\"ずいぶん\",\"すいようび\",\"すうがく\",\"すうじつ\",\"すうせん\",\"すおどり\",\"すきま\",\"すくう\",\"すくない\",\"すける\",\"すごい\",\"すこし\",\"ずさん\",\"すずしい\",\"すすむ\",\"すすめる\",\"すっかり\",\"ずっしり\",\"ずっと\",\"すてき\",\"すてる\",\"すねる\",\"すのこ\",\"すはだ\",\"すばらしい\",\"ずひょう\",\"ずぶぬれ\",\"すぶり\",\"すふれ\",\"すべて\",\"すべる\",\"ずほう\",\"すぼん\",\"すまい\",\"すめし\",\"すもう\",\"すやき\",\"すらすら\",\"するめ\",\"すれちがう\",\"すろっと\",\"すわる\",\"すんぜん\",\"すんぽう\",\"せあぶら\",\"せいかつ\",\"せいげん\",\"せいじ\",\"せいよう\",\"せおう\",\"せかいかん\",\"せきにん\",\"せきむ\",\"せきゆ\",\"せきらんうん\",\"せけん\",\"せこう\",\"せすじ\",\"せたい\",\"せたけ\",\"せっかく\",\"せっきゃく\",\"ぜっく\",\"せっけん\",\"せっこつ\",\"せっさたくま\",\"せつぞく\",\"せつだん\",\"せつでん\",\"せっぱん\",\"せつび\",\"せつぶん\",\"せつめい\",\"せつりつ\",\"せなか\",\"せのび\",\"せはば\",\"せびろ\",\"せぼね\",\"せまい\",\"せまる\",\"せめる\",\"せもたれ\",\"せりふ\",\"ぜんあく\",\"せんい\",\"せんえい\",\"せんか\",\"せんきょ\",\"せんく\",\"せんげん\",\"ぜんご\",\"せんさい\",\"せんしゅ\",\"せんすい\",\"せんせい\",\"せんぞ\",\"せんたく\",\"せんちょう\",\"せんてい\",\"せんとう\",\"せんぬき\",\"せんねん\",\"せんぱい\",\"ぜんぶ\",\"ぜんぽう\",\"せんむ\",\"せんめんじょ\",\"せんもん\",\"せんやく\",\"せんゆう\",\"せんよう\",\"ぜんら\",\"ぜんりゃく\",\"せんれい\",\"せんろ\",\"そあく\",\"そいとげる\",\"そいね\",\"そうがんきょう\",\"そうき\",\"そうご\",\"そうしん\",\"そうだん\",\"そうなん\",\"そうび\",\"そうめん\",\"そうり\",\"そえもの\",\"そえん\",\"そがい\",\"そげき\",\"そこう\",\"そこそこ\",\"そざい\",\"そしな\",\"そせい\",\"そせん\",\"そそぐ\",\"そだてる\",\"そつう\",\"そつえん\",\"そっかん\",\"そつぎょう\",\"そっけつ\",\"そっこう\",\"そっせん\",\"そっと\",\"そとがわ\",\"そとづら\",\"そなえる\",\"そなた\",\"そふぼ\",\"そぼく\",\"そぼろ\",\"そまつ\",\"そまる\",\"そむく\",\"そむりえ\",\"そめる\",\"そもそも\",\"そよかぜ\",\"そらまめ\",\"そろう\",\"そんかい\",\"そんけい\",\"そんざい\",\"そんしつ\",\"そんぞく\",\"そんちょう\",\"ぞんび\",\"ぞんぶん\",\"そんみん\",\"たあい\",\"たいいん\",\"たいうん\",\"たいえき\",\"たいおう\",\"だいがく\",\"たいき\",\"たいぐう\",\"たいけん\",\"たいこ\",\"たいざい\",\"だいじょうぶ\",\"だいすき\",\"たいせつ\",\"たいそう\",\"だいたい\",\"たいちょう\",\"たいてい\",\"だいどころ\",\"たいない\",\"たいねつ\",\"たいのう\",\"たいはん\",\"だいひょう\",\"たいふう\",\"たいへん\",\"たいほ\",\"たいまつばな\",\"たいみんぐ\",\"たいむ\",\"たいめん\",\"たいやき\",\"たいよう\",\"たいら\",\"たいりょく\",\"たいる\",\"たいわん\",\"たうえ\",\"たえる\",\"たおす\",\"たおる\",\"たおれる\",\"たかい\",\"たかね\",\"たきび\",\"たくさん\",\"たこく\",\"たこやき\",\"たさい\",\"たしざん\",\"だじゃれ\",\"たすける\",\"たずさわる\",\"たそがれ\",\"たたかう\",\"たたく\",\"ただしい\",\"たたみ\",\"たちばな\",\"だっかい\",\"だっきゃく\",\"だっこ\",\"だっしゅつ\",\"だったい\",\"たてる\",\"たとえる\",\"たなばた\",\"たにん\",\"たぬき\",\"たのしみ\",\"たはつ\",\"たぶん\",\"たべる\",\"たぼう\",\"たまご\",\"たまる\",\"だむる\",\"ためいき\",\"ためす\",\"ためる\",\"たもつ\",\"たやすい\",\"たよる\",\"たらす\",\"たりきほんがん\",\"たりょう\",\"たりる\",\"たると\",\"たれる\",\"たれんと\",\"たろっと\",\"たわむれる\",\"だんあつ\",\"たんい\",\"たんおん\",\"たんか\",\"たんき\",\"たんけん\",\"たんご\",\"たんさん\",\"たんじょうび\",\"だんせい\",\"たんそく\",\"たんたい\",\"だんち\",\"たんてい\",\"たんとう\",\"だんな\",\"たんにん\",\"だんねつ\",\"たんのう\",\"たんぴん\",\"だんぼう\",\"たんまつ\",\"たんめい\",\"だんれつ\",\"だんろ\",\"だんわ\",\"ちあい\",\"ちあん\",\"ちいき\",\"ちいさい\",\"ちえん\",\"ちかい\",\"ちから\",\"ちきゅう\",\"ちきん\",\"ちけいず\",\"ちけん\",\"ちこく\",\"ちさい\",\"ちしき\",\"ちしりょう\",\"ちせい\",\"ちそう\",\"ちたい\",\"ちたん\",\"ちちおや\",\"ちつじょ\",\"ちてき\",\"ちてん\",\"ちぬき\",\"ちぬり\",\"ちのう\",\"ちひょう\",\"ちへいせん\",\"ちほう\",\"ちまた\",\"ちみつ\",\"ちみどろ\",\"ちめいど\",\"ちゃんこなべ\",\"ちゅうい\",\"ちゆりょく\",\"ちょうし\",\"ちょさくけん\",\"ちらし\",\"ちらみ\",\"ちりがみ\",\"ちりょう\",\"ちるど\",\"ちわわ\",\"ちんたい\",\"ちんもく\",\"ついか\",\"ついたち\",\"つうか\",\"つうじょう\",\"つうはん\",\"つうわ\",\"つかう\",\"つかれる\",\"つくね\",\"つくる\",\"つけね\",\"つける\",\"つごう\",\"つたえる\",\"つづく\",\"つつじ\",\"つつむ\",\"つとめる\",\"つながる\",\"つなみ\",\"つねづね\",\"つのる\",\"つぶす\",\"つまらない\",\"つまる\",\"つみき\",\"つめたい\",\"つもり\",\"つもる\",\"つよい\",\"つるぼ\",\"つるみく\",\"つわもの\",\"つわり\",\"てあし\",\"てあて\",\"てあみ\",\"ていおん\",\"ていか\",\"ていき\",\"ていけい\",\"ていこく\",\"ていさつ\",\"ていし\",\"ていせい\",\"ていたい\",\"ていど\",\"ていねい\",\"ていひょう\",\"ていへん\",\"ていぼう\",\"てうち\",\"ておくれ\",\"てきとう\",\"てくび\",\"でこぼこ\",\"てさぎょう\",\"てさげ\",\"てすり\",\"てそう\",\"てちがい\",\"てちょう\",\"てつがく\",\"てつづき\",\"でっぱ\",\"てつぼう\",\"てつや\",\"でぬかえ\",\"てぬき\",\"てぬぐい\",\"てのひら\",\"てはい\",\"てぶくろ\",\"てふだ\",\"てほどき\",\"てほん\",\"てまえ\",\"てまきずし\",\"てみじか\",\"てみやげ\",\"てらす\",\"てれび\",\"てわけ\",\"てわたし\",\"でんあつ\",\"てんいん\",\"てんかい\",\"てんき\",\"てんぐ\",\"てんけん\",\"てんごく\",\"てんさい\",\"てんし\",\"てんすう\",\"でんち\",\"てんてき\",\"てんとう\",\"てんない\",\"てんぷら\",\"てんぼうだい\",\"てんめつ\",\"てんらんかい\",\"でんりょく\",\"でんわ\",\"どあい\",\"といれ\",\"どうかん\",\"とうきゅう\",\"どうぐ\",\"とうし\",\"とうむぎ\",\"とおい\",\"とおか\",\"とおく\",\"とおす\",\"とおる\",\"とかい\",\"とかす\",\"ときおり\",\"ときどき\",\"とくい\",\"とくしゅう\",\"とくてん\",\"とくに\",\"とくべつ\",\"とけい\",\"とける\",\"とこや\",\"とさか\",\"としょかん\",\"とそう\",\"とたん\",\"とちゅう\",\"とっきゅう\",\"とっくん\",\"とつぜん\",\"とつにゅう\",\"とどける\",\"ととのえる\",\"とない\",\"となえる\",\"となり\",\"とのさま\",\"とばす\",\"どぶがわ\",\"とほう\",\"とまる\",\"とめる\",\"ともだち\",\"ともる\",\"どようび\",\"とらえる\",\"とんかつ\",\"どんぶり\",\"ないかく\",\"ないこう\",\"ないしょ\",\"ないす\",\"ないせん\",\"ないそう\",\"なおす\",\"ながい\",\"なくす\",\"なげる\",\"なこうど\",\"なさけ\",\"なたでここ\",\"なっとう\",\"なつやすみ\",\"ななおし\",\"なにごと\",\"なにもの\",\"なにわ\",\"なのか\",\"なふだ\",\"なまいき\",\"なまえ\",\"なまみ\",\"なみだ\",\"なめらか\",\"なめる\",\"なやむ\",\"ならう\",\"ならび\",\"ならぶ\",\"なれる\",\"なわとび\",\"なわばり\",\"にあう\",\"にいがた\",\"にうけ\",\"におい\",\"にかい\",\"にがて\",\"にきび\",\"にくしみ\",\"にくまん\",\"にげる\",\"にさんかたんそ\",\"にしき\",\"にせもの\",\"にちじょう\",\"にちようび\",\"にっか\",\"にっき\",\"にっけい\",\"にっこう\",\"にっさん\",\"にっしょく\",\"にっすう\",\"にっせき\",\"にってい\",\"になう\",\"にほん\",\"にまめ\",\"にもつ\",\"にやり\",\"にゅういん\",\"にりんしゃ\",\"にわとり\",\"にんい\",\"にんか\",\"にんき\",\"にんげん\",\"にんしき\",\"にんずう\",\"にんそう\",\"にんたい\",\"にんち\",\"にんてい\",\"にんにく\",\"にんぷ\",\"にんまり\",\"にんむ\",\"にんめい\",\"にんよう\",\"ぬいくぎ\",\"ぬかす\",\"ぬぐいとる\",\"ぬぐう\",\"ぬくもり\",\"ぬすむ\",\"ぬまえび\",\"ぬめり\",\"ぬらす\",\"ぬんちゃく\",\"ねあげ\",\"ねいき\",\"ねいる\",\"ねいろ\",\"ねぐせ\",\"ねくたい\",\"ねくら\",\"ねこぜ\",\"ねこむ\",\"ねさげ\",\"ねすごす\",\"ねそべる\",\"ねだん\",\"ねつい\",\"ねっしん\",\"ねつぞう\",\"ねったいぎょ\",\"ねぶそく\",\"ねふだ\",\"ねぼう\",\"ねほりはほり\",\"ねまき\",\"ねまわし\",\"ねみみ\",\"ねむい\",\"ねむたい\",\"ねもと\",\"ねらう\",\"ねわざ\",\"ねんいり\",\"ねんおし\",\"ねんかん\",\"ねんきん\",\"ねんぐ\",\"ねんざ\",\"ねんし\",\"ねんちゃく\",\"ねんど\",\"ねんぴ\",\"ねんぶつ\",\"ねんまつ\",\"ねんりょう\",\"ねんれい\",\"のいず\",\"のおづま\",\"のがす\",\"のきなみ\",\"のこぎり\",\"のこす\",\"のこる\",\"のせる\",\"のぞく\",\"のぞむ\",\"のたまう\",\"のちほど\",\"のっく\",\"のばす\",\"のはら\",\"のべる\",\"のぼる\",\"のみもの\",\"のやま\",\"のらいぬ\",\"のらねこ\",\"のりもの\",\"のりゆき\",\"のれん\",\"のんき\",\"ばあい\",\"はあく\",\"ばあさん\",\"ばいか\",\"ばいく\",\"はいけん\",\"はいご\",\"はいしん\",\"はいすい\",\"はいせん\",\"はいそう\",\"はいち\",\"ばいばい\",\"はいれつ\",\"はえる\",\"はおる\",\"はかい\",\"ばかり\",\"はかる\",\"はくしゅ\",\"はけん\",\"はこぶ\",\"はさみ\",\"はさん\",\"はしご\",\"ばしょ\",\"はしる\",\"はせる\",\"ぱそこん\",\"はそん\",\"はたん\",\"はちみつ\",\"はつおん\",\"はっかく\",\"はづき\",\"はっきり\",\"はっくつ\",\"はっけん\",\"はっこう\",\"はっさん\",\"はっしん\",\"はったつ\",\"はっちゅう\",\"はってん\",\"はっぴょう\",\"はっぽう\",\"はなす\",\"はなび\",\"はにかむ\",\"はぶらし\",\"はみがき\",\"はむかう\",\"はめつ\",\"はやい\",\"はやし\",\"はらう\",\"はろうぃん\",\"はわい\",\"はんい\",\"はんえい\",\"はんおん\",\"はんかく\",\"はんきょう\",\"ばんぐみ\",\"はんこ\",\"はんしゃ\",\"はんすう\",\"はんだん\",\"ぱんち\",\"ぱんつ\",\"はんてい\",\"はんとし\",\"はんのう\",\"はんぱ\",\"はんぶん\",\"はんぺん\",\"はんぼうき\",\"はんめい\",\"はんらん\",\"はんろん\",\"ひいき\",\"ひうん\",\"ひえる\",\"ひかく\",\"ひかり\",\"ひかる\",\"ひかん\",\"ひくい\",\"ひけつ\",\"ひこうき\",\"ひこく\",\"ひさい\",\"ひさしぶり\",\"ひさん\",\"びじゅつかん\",\"ひしょ\",\"ひそか\",\"ひそむ\",\"ひたむき\",\"ひだり\",\"ひたる\",\"ひつぎ\",\"ひっこし\",\"ひっし\",\"ひつじゅひん\",\"ひっす\",\"ひつぜん\",\"ぴったり\",\"ぴっちり\",\"ひつよう\",\"ひてい\",\"ひとごみ\",\"ひなまつり\",\"ひなん\",\"ひねる\",\"ひはん\",\"ひびく\",\"ひひょう\",\"ひほう\",\"ひまわり\",\"ひまん\",\"ひみつ\",\"ひめい\",\"ひめじし\",\"ひやけ\",\"ひやす\",\"ひよう\",\"びょうき\",\"ひらがな\",\"ひらく\",\"ひりつ\",\"ひりょう\",\"ひるま\",\"ひるやすみ\",\"ひれい\",\"ひろい\",\"ひろう\",\"ひろき\",\"ひろゆき\",\"ひんかく\",\"ひんけつ\",\"ひんこん\",\"ひんしゅ\",\"ひんそう\",\"ぴんち\",\"ひんぱん\",\"びんぼう\",\"ふあん\",\"ふいうち\",\"ふうけい\",\"ふうせん\",\"ぷうたろう\",\"ふうとう\",\"ふうふ\",\"ふえる\",\"ふおん\",\"ふかい\",\"ふきん\",\"ふくざつ\",\"ふくぶくろ\",\"ふこう\",\"ふさい\",\"ふしぎ\",\"ふじみ\",\"ふすま\",\"ふせい\",\"ふせぐ\",\"ふそく\",\"ぶたにく\",\"ふたん\",\"ふちょう\",\"ふつう\",\"ふつか\",\"ふっかつ\",\"ふっき\",\"ふっこく\",\"ぶどう\",\"ふとる\",\"ふとん\",\"ふのう\",\"ふはい\",\"ふひょう\",\"ふへん\",\"ふまん\",\"ふみん\",\"ふめつ\",\"ふめん\",\"ふよう\",\"ふりこ\",\"ふりる\",\"ふるい\",\"ふんいき\",\"ぶんがく\",\"ぶんぐ\",\"ふんしつ\",\"ぶんせき\",\"ふんそう\",\"ぶんぽう\",\"へいあん\",\"へいおん\",\"へいがい\",\"へいき\",\"へいげん\",\"へいこう\",\"へいさ\",\"へいしゃ\",\"へいせつ\",\"へいそ\",\"へいたく\",\"へいてん\",\"へいねつ\",\"へいわ\",\"へきが\",\"へこむ\",\"べにいろ\",\"べにしょうが\",\"へらす\",\"へんかん\",\"べんきょう\",\"べんごし\",\"へんさい\",\"へんたい\",\"べんり\",\"ほあん\",\"ほいく\",\"ぼうぎょ\",\"ほうこく\",\"ほうそう\",\"ほうほう\",\"ほうもん\",\"ほうりつ\",\"ほえる\",\"ほおん\",\"ほかん\",\"ほきょう\",\"ぼきん\",\"ほくろ\",\"ほけつ\",\"ほけん\",\"ほこう\",\"ほこる\",\"ほしい\",\"ほしつ\",\"ほしゅ\",\"ほしょう\",\"ほせい\",\"ほそい\",\"ほそく\",\"ほたて\",\"ほたる\",\"ぽちぶくろ\",\"ほっきょく\",\"ほっさ\",\"ほったん\",\"ほとんど\",\"ほめる\",\"ほんい\",\"ほんき\",\"ほんけ\",\"ほんしつ\",\"ほんやく\",\"まいにち\",\"まかい\",\"まかせる\",\"まがる\",\"まける\",\"まこと\",\"まさつ\",\"まじめ\",\"ますく\",\"まぜる\",\"まつり\",\"まとめ\",\"まなぶ\",\"まぬけ\",\"まねく\",\"まほう\",\"まもる\",\"まゆげ\",\"まよう\",\"まろやか\",\"まわす\",\"まわり\",\"まわる\",\"まんが\",\"まんきつ\",\"まんぞく\",\"まんなか\",\"みいら\",\"みうち\",\"みえる\",\"みがく\",\"みかた\",\"みかん\",\"みけん\",\"みこん\",\"みじかい\",\"みすい\",\"みすえる\",\"みせる\",\"みっか\",\"みつかる\",\"みつける\",\"みてい\",\"みとめる\",\"みなと\",\"みなみかさい\",\"みねらる\",\"みのう\",\"みのがす\",\"みほん\",\"みもと\",\"みやげ\",\"みらい\",\"みりょく\",\"みわく\",\"みんか\",\"みんぞく\",\"むいか\",\"むえき\",\"むえん\",\"むかい\",\"むかう\",\"むかえ\",\"むかし\",\"むぎちゃ\",\"むける\",\"むげん\",\"むさぼる\",\"むしあつい\",\"むしば\",\"むじゅん\",\"むしろ\",\"むすう\",\"むすこ\",\"むすぶ\",\"むすめ\",\"むせる\",\"むせん\",\"むちゅう\",\"むなしい\",\"むのう\",\"むやみ\",\"むよう\",\"むらさき\",\"むりょう\",\"むろん\",\"めいあん\",\"めいうん\",\"めいえん\",\"めいかく\",\"めいきょく\",\"めいさい\",\"めいし\",\"めいそう\",\"めいぶつ\",\"めいれい\",\"めいわく\",\"めぐまれる\",\"めざす\",\"めした\",\"めずらしい\",\"めだつ\",\"めまい\",\"めやす\",\"めんきょ\",\"めんせき\",\"めんどう\",\"もうしあげる\",\"もうどうけん\",\"もえる\",\"もくし\",\"もくてき\",\"もくようび\",\"もちろん\",\"もどる\",\"もらう\",\"もんく\",\"もんだい\",\"やおや\",\"やける\",\"やさい\",\"やさしい\",\"やすい\",\"やすたろう\",\"やすみ\",\"やせる\",\"やそう\",\"やたい\",\"やちん\",\"やっと\",\"やっぱり\",\"やぶる\",\"やめる\",\"ややこしい\",\"やよい\",\"やわらかい\",\"ゆうき\",\"ゆうびんきょく\",\"ゆうべ\",\"ゆうめい\",\"ゆけつ\",\"ゆしゅつ\",\"ゆせん\",\"ゆそう\",\"ゆたか\",\"ゆちゃく\",\"ゆでる\",\"ゆにゅう\",\"ゆびわ\",\"ゆらい\",\"ゆれる\",\"ようい\",\"ようか\",\"ようきゅう\",\"ようじ\",\"ようす\",\"ようちえん\",\"よかぜ\",\"よかん\",\"よきん\",\"よくせい\",\"よくぼう\",\"よけい\",\"よごれる\",\"よさん\",\"よしゅう\",\"よそう\",\"よそく\",\"よっか\",\"よてい\",\"よどがわく\",\"よねつ\",\"よやく\",\"よゆう\",\"よろこぶ\",\"よろしい\",\"らいう\",\"らくがき\",\"らくご\",\"らくさつ\",\"らくだ\",\"らしんばん\",\"らせん\",\"らぞく\",\"らたい\",\"らっか\",\"られつ\",\"りえき\",\"りかい\",\"りきさく\",\"りきせつ\",\"りくぐん\",\"りくつ\",\"りけん\",\"りこう\",\"りせい\",\"りそう\",\"りそく\",\"りてん\",\"りねん\",\"りゆう\",\"りゅうがく\",\"りよう\",\"りょうり\",\"りょかん\",\"りょくちゃ\",\"りょこう\",\"りりく\",\"りれき\",\"りろん\",\"りんご\",\"るいけい\",\"るいさい\",\"るいじ\",\"るいせき\",\"るすばん\",\"るりがわら\",\"れいかん\",\"れいぎ\",\"れいせい\",\"れいぞうこ\",\"れいとう\",\"れいぼう\",\"れきし\",\"れきだい\",\"れんあい\",\"れんけい\",\"れんこん\",\"れんさい\",\"れんしゅう\",\"れんぞく\",\"れんらく\",\"ろうか\",\"ろうご\",\"ろうじん\",\"ろうそく\",\"ろくが\",\"ろこつ\",\"ろじうら\",\"ろしゅつ\",\"ろせん\",\"ろてん\",\"ろめん\",\"ろれつ\",\"ろんぎ\",\"ろんぱ\",\"ろんぶん\",\"ろんり\",\"わかす\",\"わかめ\",\"わかやま\",\"わかれる\",\"わしつ\",\"わじまし\",\"わすれもの\",\"わらう\",\"われる\"][\"가격\",\"가끔\",\"가난\",\"가능\",\"가득\",\"가르침\",\"가뭄\",\"가방\",\"가상\",\"가슴\",\"가운데\",\"가을\",\"가이드\",\"가입\",\"가장\",\"가정\",\"가족\",\"가죽\",\"각오\",\"각자\",\"간격\",\"간부\",\"간섭\",\"간장\",\"간접\",\"간판\",\"갈등\",\"갈비\",\"갈색\",\"갈증\",\"감각\",\"감기\",\"감소\",\"감수성\",\"감자\",\"감정\",\"갑자기\",\"강남\",\"강당\",\"강도\",\"강력히\",\"강변\",\"강북\",\"강사\",\"강수량\",\"강아지\",\"강원도\",\"강의\",\"강제\",\"강조\",\"같이\",\"개구리\",\"개나리\",\"개방\",\"개별\",\"개선\",\"개성\",\"개인\",\"객관적\",\"거실\",\"거액\",\"거울\",\"거짓\",\"거품\",\"걱정\",\"건강\",\"건물\",\"건설\",\"건조\",\"건축\",\"걸음\",\"검사\",\"검토\",\"게시판\",\"게임\",\"겨울\",\"견해\",\"결과\",\"결국\",\"결론\",\"결석\",\"결승\",\"결심\",\"결정\",\"결혼\",\"경계\",\"경고\",\"경기\",\"경력\",\"경복궁\",\"경비\",\"경상도\",\"경영\",\"경우\",\"경쟁\",\"경제\",\"경주\",\"경찰\",\"경치\",\"경향\",\"경험\",\"계곡\",\"계단\",\"계란\",\"계산\",\"계속\",\"계약\",\"계절\",\"계층\",\"계획\",\"고객\",\"고구려\",\"고궁\",\"고급\",\"고등학생\",\"고무신\",\"고민\",\"고양이\",\"고장\",\"고전\",\"고집\",\"고춧가루\",\"고통\",\"고향\",\"곡식\",\"골목\",\"골짜기\",\"골프\",\"공간\",\"공개\",\"공격\",\"공군\",\"공급\",\"공기\",\"공동\",\"공무원\",\"공부\",\"공사\",\"공식\",\"공업\",\"공연\",\"공원\",\"공장\",\"공짜\",\"공책\",\"공통\",\"공포\",\"공항\",\"공휴일\",\"과목\",\"과일\",\"과장\",\"과정\",\"과학\",\"관객\",\"관계\",\"관광\",\"관념\",\"관람\",\"관련\",\"관리\",\"관습\",\"관심\",\"관점\",\"관찰\",\"광경\",\"광고\",\"광장\",\"광주\",\"괴로움\",\"굉장히\",\"교과서\",\"교문\",\"교복\",\"교실\",\"교양\",\"교육\",\"교장\",\"교직\",\"교통\",\"교환\",\"교훈\",\"구경\",\"구름\",\"구멍\",\"구별\",\"구분\",\"구석\",\"구성\",\"구속\",\"구역\",\"구입\",\"구청\",\"구체적\",\"국가\",\"국기\",\"국내\",\"국립\",\"국물\",\"국민\",\"국수\",\"국어\",\"국왕\",\"국적\",\"국제\",\"국회\",\"군대\",\"군사\",\"군인\",\"궁극적\",\"권리\",\"권위\",\"권투\",\"귀국\",\"귀신\",\"규정\",\"규칙\",\"균형\",\"그날\",\"그냥\",\"그늘\",\"그러나\",\"그룹\",\"그릇\",\"그림\",\"그제서야\",\"그토록\",\"극복\",\"극히\",\"근거\",\"근교\",\"근래\",\"근로\",\"근무\",\"근본\",\"근원\",\"근육\",\"근처\",\"글씨\",\"글자\",\"금강산\",\"금고\",\"금년\",\"금메달\",\"금액\",\"금연\",\"금요일\",\"금지\",\"긍정적\",\"기간\",\"기관\",\"기념\",\"기능\",\"기독교\",\"기둥\",\"기록\",\"기름\",\"기법\",\"기본\",\"기분\",\"기쁨\",\"기숙사\",\"기술\",\"기억\",\"기업\",\"기온\",\"기운\",\"기원\",\"기적\",\"기준\",\"기침\",\"기혼\",\"기획\",\"긴급\",\"긴장\",\"길이\",\"김밥\",\"김치\",\"김포공항\",\"깍두기\",\"깜빡\",\"깨달음\",\"깨소금\",\"껍질\",\"꼭대기\",\"꽃잎\",\"나들이\",\"나란히\",\"나머지\",\"나물\",\"나침반\",\"나흘\",\"낙엽\",\"난방\",\"날개\",\"날씨\",\"날짜\",\"남녀\",\"남대문\",\"남매\",\"남산\",\"남자\",\"남편\",\"남학생\",\"낭비\",\"낱말\",\"내년\",\"내용\",\"내일\",\"냄비\",\"냄새\",\"냇물\",\"냉동\",\"냉면\",\"냉방\",\"냉장고\",\"넥타이\",\"넷째\",\"노동\",\"노란색\",\"노력\",\"노인\",\"녹음\",\"녹차\",\"녹화\",\"논리\",\"논문\",\"논쟁\",\"놀이\",\"농구\",\"농담\",\"농민\",\"농부\",\"농업\",\"농장\",\"농촌\",\"높이\",\"눈동자\",\"눈물\",\"눈썹\",\"뉴욕\",\"느낌\",\"늑대\",\"능동적\",\"능력\",\"다방\",\"다양성\",\"다음\",\"다이어트\",\"다행\",\"단계\",\"단골\",\"단독\",\"단맛\",\"단순\",\"단어\",\"단위\",\"단점\",\"단체\",\"단추\",\"단편\",\"단풍\",\"달걀\",\"달러\",\"달력\",\"달리\",\"닭고기\",\"담당\",\"담배\",\"담요\",\"담임\",\"답변\",\"답장\",\"당근\",\"당분간\",\"당연히\",\"당장\",\"대규모\",\"대낮\",\"대단히\",\"대답\",\"대도시\",\"대략\",\"대량\",\"대륙\",\"대문\",\"대부분\",\"대신\",\"대응\",\"대장\",\"대전\",\"대접\",\"대중\",\"대책\",\"대출\",\"대충\",\"대통령\",\"대학\",\"대한민국\",\"대합실\",\"대형\",\"덩어리\",\"데이트\",\"도대체\",\"도덕\",\"도둑\",\"도망\",\"도서관\",\"도심\",\"도움\",\"도입\",\"도자기\",\"도저히\",\"도전\",\"도중\",\"도착\",\"독감\",\"독립\",\"독서\",\"독일\",\"독창적\",\"동화책\",\"뒷모습\",\"뒷산\",\"딸아이\",\"마누라\",\"마늘\",\"마당\",\"마라톤\",\"마련\",\"마무리\",\"마사지\",\"마약\",\"마요네즈\",\"마을\",\"마음\",\"마이크\",\"마중\",\"마지막\",\"마찬가지\",\"마찰\",\"마흔\",\"막걸리\",\"막내\",\"막상\",\"만남\",\"만두\",\"만세\",\"만약\",\"만일\",\"만점\",\"만족\",\"만화\",\"많이\",\"말기\",\"말씀\",\"말투\",\"맘대로\",\"망원경\",\"매년\",\"매달\",\"매력\",\"매번\",\"매스컴\",\"매일\",\"매장\",\"맥주\",\"먹이\",\"먼저\",\"먼지\",\"멀리\",\"메일\",\"며느리\",\"며칠\",\"면담\",\"멸치\",\"명단\",\"명령\",\"명예\",\"명의\",\"명절\",\"명칭\",\"명함\",\"모금\",\"모니터\",\"모델\",\"모든\",\"모범\",\"모습\",\"모양\",\"모임\",\"모조리\",\"모집\",\"모퉁이\",\"목걸이\",\"목록\",\"목사\",\"목소리\",\"목숨\",\"목적\",\"목표\",\"몰래\",\"몸매\",\"몸무게\",\"몸살\",\"몸속\",\"몸짓\",\"몸통\",\"몹시\",\"무관심\",\"무궁화\",\"무더위\",\"무덤\",\"무릎\",\"무슨\",\"무엇\",\"무역\",\"무용\",\"무조건\",\"무지개\",\"무척\",\"문구\",\"문득\",\"문법\",\"문서\",\"문제\",\"문학\",\"문화\",\"물가\",\"물건\",\"물결\",\"물고기\",\"물론\",\"물리학\",\"물음\",\"물질\",\"물체\",\"미국\",\"미디어\",\"미사일\",\"미술\",\"미역\",\"미용실\",\"미움\",\"미인\",\"미팅\",\"미혼\",\"민간\",\"민족\",\"민주\",\"믿음\",\"밀가루\",\"밀리미터\",\"밑바닥\",\"바가지\",\"바구니\",\"바나나\",\"바늘\",\"바닥\",\"바닷가\",\"바람\",\"바이러스\",\"바탕\",\"박물관\",\"박사\",\"박수\",\"반대\",\"반드시\",\"반말\",\"반발\",\"반성\",\"반응\",\"반장\",\"반죽\",\"반지\",\"반찬\",\"받침\",\"발가락\",\"발걸음\",\"발견\",\"발달\",\"발레\",\"발목\",\"발바닥\",\"발생\",\"발음\",\"발자국\",\"발전\",\"발톱\",\"발표\",\"밤하늘\",\"밥그릇\",\"밥맛\",\"밥상\",\"밥솥\",\"방금\",\"방면\",\"방문\",\"방바닥\",\"방법\",\"방송\",\"방식\",\"방안\",\"방울\",\"방지\",\"방학\",\"방해\",\"방향\",\"배경\",\"배꼽\",\"배달\",\"배드민턴\",\"백두산\",\"백색\",\"백성\",\"백인\",\"백제\",\"백화점\",\"버릇\",\"버섯\",\"버튼\",\"번개\",\"번역\",\"번지\",\"번호\",\"벌금\",\"벌레\",\"벌써\",\"범위\",\"범인\",\"범죄\",\"법률\",\"법원\",\"법적\",\"법칙\",\"베이징\",\"벨트\",\"변경\",\"변동\",\"변명\",\"변신\",\"변호사\",\"변화\",\"별도\",\"별명\",\"별일\",\"병실\",\"병아리\",\"병원\",\"보관\",\"보너스\",\"보라색\",\"보람\",\"보름\",\"보상\",\"보안\",\"보자기\",\"보장\",\"보전\",\"보존\",\"보통\",\"보편적\",\"보험\",\"복도\",\"복사\",\"복숭아\",\"복습\",\"볶음\",\"본격적\",\"본래\",\"본부\",\"본사\",\"본성\",\"본인\",\"본질\",\"볼펜\",\"봉사\",\"봉지\",\"봉투\",\"부근\",\"부끄러움\",\"부담\",\"부동산\",\"부문\",\"부분\",\"부산\",\"부상\",\"부엌\",\"부인\",\"부작용\",\"부장\",\"부정\",\"부족\",\"부지런히\",\"부친\",\"부탁\",\"부품\",\"부회장\",\"북부\",\"북한\",\"분노\",\"분량\",\"분리\",\"분명\",\"분석\",\"분야\",\"분위기\",\"분필\",\"분홍색\",\"불고기\",\"불과\",\"불교\",\"불꽃\",\"불만\",\"불법\",\"불빛\",\"불안\",\"불이익\",\"불행\",\"브랜드\",\"비극\",\"비난\",\"비닐\",\"비둘기\",\"비디오\",\"비로소\",\"비만\",\"비명\",\"비밀\",\"비바람\",\"비빔밥\",\"비상\",\"비용\",\"비율\",\"비중\",\"비타민\",\"비판\",\"빌딩\",\"빗물\",\"빗방울\",\"빗줄기\",\"빛깔\",\"빨간색\",\"빨래\",\"빨리\",\"사건\",\"사계절\",\"사나이\",\"사냥\",\"사람\",\"사랑\",\"사립\",\"사모님\",\"사물\",\"사방\",\"사상\",\"사생활\",\"사설\",\"사슴\",\"사실\",\"사업\",\"사용\",\"사월\",\"사장\",\"사전\",\"사진\",\"사촌\",\"사춘기\",\"사탕\",\"사투리\",\"사흘\",\"산길\",\"산부인과\",\"산업\",\"산책\",\"살림\",\"살인\",\"살짝\",\"삼계탕\",\"삼국\",\"삼십\",\"삼월\",\"삼촌\",\"상관\",\"상금\",\"상대\",\"상류\",\"상반기\",\"상상\",\"상식\",\"상업\",\"상인\",\"상자\",\"상점\",\"상처\",\"상추\",\"상태\",\"상표\",\"상품\",\"상황\",\"새벽\",\"색깔\",\"색연필\",\"생각\",\"생명\",\"생물\",\"생방송\",\"생산\",\"생선\",\"생신\",\"생일\",\"생활\",\"서랍\",\"서른\",\"서명\",\"서민\",\"서비스\",\"서양\",\"서울\",\"서적\",\"서점\",\"서쪽\",\"서클\",\"석사\",\"석유\",\"선거\",\"선물\",\"선배\",\"선생\",\"선수\",\"선원\",\"선장\",\"선전\",\"선택\",\"선풍기\",\"설거지\",\"설날\",\"설렁탕\",\"설명\",\"설문\",\"설사\",\"설악산\",\"설치\",\"설탕\",\"섭씨\",\"성공\",\"성당\",\"성명\",\"성별\",\"성인\",\"성장\",\"성적\",\"성질\",\"성함\",\"세금\",\"세미나\",\"세상\",\"세월\",\"세종대왕\",\"세탁\",\"센터\",\"센티미터\",\"셋째\",\"소규모\",\"소극적\",\"소금\",\"소나기\",\"소년\",\"소득\",\"소망\",\"소문\",\"소설\",\"소속\",\"소아과\",\"소용\",\"소원\",\"소음\",\"소중히\",\"소지품\",\"소질\",\"소풍\",\"소형\",\"속담\",\"속도\",\"속옷\",\"손가락\",\"손길\",\"손녀\",\"손님\",\"손등\",\"손목\",\"손뼉\",\"손실\",\"손질\",\"손톱\",\"손해\",\"솔직히\",\"솜씨\",\"송아지\",\"송이\",\"송편\",\"쇠고기\",\"쇼핑\",\"수건\",\"수년\",\"수단\",\"수돗물\",\"수동적\",\"수면\",\"수명\",\"수박\",\"수상\",\"수석\",\"수술\",\"수시로\",\"수업\",\"수염\",\"수영\",\"수입\",\"수준\",\"수집\",\"수출\",\"수컷\",\"수필\",\"수학\",\"수험생\",\"수화기\",\"숙녀\",\"숙소\",\"숙제\",\"순간\",\"순서\",\"순수\",\"순식간\",\"순위\",\"숟가락\",\"술병\",\"술집\",\"숫자\",\"스님\",\"스물\",\"스스로\",\"스승\",\"스웨터\",\"스위치\",\"스케이트\",\"스튜디오\",\"스트레스\",\"스포츠\",\"슬쩍\",\"슬픔\",\"습관\",\"습기\",\"승객\",\"승리\",\"승부\",\"승용차\",\"승진\",\"시각\",\"시간\",\"시골\",\"시금치\",\"시나리오\",\"시댁\",\"시리즈\",\"시멘트\",\"시민\",\"시부모\",\"시선\",\"시설\",\"시스템\",\"시아버지\",\"시어머니\",\"시월\",\"시인\",\"시일\",\"시작\",\"시장\",\"시절\",\"시점\",\"시중\",\"시즌\",\"시집\",\"시청\",\"시합\",\"시험\",\"식구\",\"식기\",\"식당\",\"식량\",\"식료품\",\"식물\",\"식빵\",\"식사\",\"식생활\",\"식초\",\"식탁\",\"식품\",\"신고\",\"신규\",\"신념\",\"신문\",\"신발\",\"신비\",\"신사\",\"신세\",\"신용\",\"신제품\",\"신청\",\"신체\",\"신화\",\"실감\",\"실내\",\"실력\",\"실례\",\"실망\",\"실수\",\"실습\",\"실시\",\"실장\",\"실정\",\"실질적\",\"실천\",\"실체\",\"실컷\",\"실태\",\"실패\",\"실험\",\"실현\",\"심리\",\"심부름\",\"심사\",\"심장\",\"심정\",\"심판\",\"쌍둥이\",\"씨름\",\"씨앗\",\"아가씨\",\"아나운서\",\"아드님\",\"아들\",\"아쉬움\",\"아스팔트\",\"아시아\",\"아울러\",\"아저씨\",\"아줌마\",\"아직\",\"아침\",\"아파트\",\"아프리카\",\"아픔\",\"아홉\",\"아흔\",\"악기\",\"악몽\",\"악수\",\"안개\",\"안경\",\"안과\",\"안내\",\"안녕\",\"안동\",\"안방\",\"안부\",\"안주\",\"알루미늄\",\"알코올\",\"암시\",\"암컷\",\"압력\",\"앞날\",\"앞문\",\"애인\",\"애정\",\"액수\",\"앨범\",\"야간\",\"야단\",\"야옹\",\"약간\",\"약국\",\"약속\",\"약수\",\"약점\",\"약품\",\"약혼녀\",\"양념\",\"양력\",\"양말\",\"양배추\",\"양주\",\"양파\",\"어둠\",\"어려움\",\"어른\",\"어젯밤\",\"어쨌든\",\"어쩌다가\",\"어쩐지\",\"언니\",\"언덕\",\"언론\",\"언어\",\"얼굴\",\"얼른\",\"얼음\",\"얼핏\",\"엄마\",\"업무\",\"업종\",\"업체\",\"엉덩이\",\"엉망\",\"엉터리\",\"엊그제\",\"에너지\",\"에어컨\",\"엔진\",\"여건\",\"여고생\",\"여관\",\"여군\",\"여권\",\"여대생\",\"여덟\",\"여동생\",\"여든\",\"여론\",\"여름\",\"여섯\",\"여성\",\"여왕\",\"여인\",\"여전히\",\"여직원\",\"여학생\",\"여행\",\"역사\",\"역시\",\"역할\",\"연결\",\"연구\",\"연극\",\"연기\",\"연락\",\"연설\",\"연세\",\"연속\",\"연습\",\"연애\",\"연예인\",\"연인\",\"연장\",\"연주\",\"연출\",\"연필\",\"연합\",\"연휴\",\"열기\",\"열매\",\"열쇠\",\"열심히\",\"열정\",\"열차\",\"열흘\",\"염려\",\"엽서\",\"영국\",\"영남\",\"영상\",\"영양\",\"영역\",\"영웅\",\"영원히\",\"영하\",\"영향\",\"영혼\",\"영화\",\"옆구리\",\"옆방\",\"옆집\",\"예감\",\"예금\",\"예방\",\"예산\",\"예상\",\"예선\",\"예술\",\"예습\",\"예식장\",\"예약\",\"예전\",\"예절\",\"예정\",\"예컨대\",\"옛날\",\"오늘\",\"오락\",\"오랫동안\",\"오렌지\",\"오로지\",\"오른발\",\"오븐\",\"오십\",\"오염\",\"오월\",\"오전\",\"오직\",\"오징어\",\"오페라\",\"오피스텔\",\"오히려\",\"옥상\",\"옥수수\",\"온갖\",\"온라인\",\"온몸\",\"온종일\",\"온통\",\"올가을\",\"올림픽\",\"올해\",\"옷차림\",\"와이셔츠\",\"와인\",\"완성\",\"완전\",\"왕비\",\"왕자\",\"왜냐하면\",\"왠지\",\"외갓집\",\"외국\",\"외로움\",\"외삼촌\",\"외출\",\"외침\",\"외할머니\",\"왼발\",\"왼손\",\"왼쪽\",\"요금\",\"요일\",\"요즘\",\"요청\",\"용기\",\"용서\",\"용어\",\"우산\",\"우선\",\"우승\",\"우연히\",\"우정\",\"우체국\",\"우편\",\"운동\",\"운명\",\"운반\",\"운전\",\"운행\",\"울산\",\"울음\",\"움직임\",\"웃어른\",\"웃음\",\"워낙\",\"원고\",\"원래\",\"원서\",\"원숭이\",\"원인\",\"원장\",\"원피스\",\"월급\",\"월드컵\",\"월세\",\"월요일\",\"웨이터\",\"위반\",\"위법\",\"위성\",\"위원\",\"위험\",\"위협\",\"윗사람\",\"유난히\",\"유럽\",\"유명\",\"유물\",\"유산\",\"유적\",\"유치원\",\"유학\",\"유행\",\"유형\",\"육군\",\"육상\",\"육십\",\"육체\",\"은행\",\"음력\",\"음료\",\"음반\",\"음성\",\"음식\",\"음악\",\"음주\",\"의견\",\"의논\",\"의문\",\"의복\",\"의식\",\"의심\",\"의외로\",\"의욕\",\"의원\",\"의학\",\"이것\",\"이곳\",\"이념\",\"이놈\",\"이달\",\"이대로\",\"이동\",\"이렇게\",\"이력서\",\"이론적\",\"이름\",\"이민\",\"이발소\",\"이별\",\"이불\",\"이빨\",\"이상\",\"이성\",\"이슬\",\"이야기\",\"이용\",\"이웃\",\"이월\",\"이윽고\",\"이익\",\"이전\",\"이중\",\"이튿날\",\"이틀\",\"이혼\",\"인간\",\"인격\",\"인공\",\"인구\",\"인근\",\"인기\",\"인도\",\"인류\",\"인물\",\"인생\",\"인쇄\",\"인연\",\"인원\",\"인재\",\"인종\",\"인천\",\"인체\",\"인터넷\",\"인하\",\"인형\",\"일곱\",\"일기\",\"일단\",\"일대\",\"일등\",\"일반\",\"일본\",\"일부\",\"일상\",\"일생\",\"일손\",\"일요일\",\"일월\",\"일정\",\"일종\",\"일주일\",\"일찍\",\"일체\",\"일치\",\"일행\",\"일회용\",\"임금\",\"임무\",\"입대\",\"입력\",\"입맛\",\"입사\",\"입술\",\"입시\",\"입원\",\"입장\",\"입학\",\"자가용\",\"자격\",\"자극\",\"자동\",\"자랑\",\"자부심\",\"자식\",\"자신\",\"자연\",\"자원\",\"자율\",\"자전거\",\"자정\",\"자존심\",\"자판\",\"작가\",\"작년\",\"작성\",\"작업\",\"작용\",\"작은딸\",\"작품\",\"잔디\",\"잔뜩\",\"잔치\",\"잘못\",\"잠깐\",\"잠수함\",\"잠시\",\"잠옷\",\"잠자리\",\"잡지\",\"장관\",\"장군\",\"장기간\",\"장래\",\"장례\",\"장르\",\"장마\",\"장면\",\"장모\",\"장미\",\"장비\",\"장사\",\"장소\",\"장식\",\"장애인\",\"장인\",\"장점\",\"장차\",\"장학금\",\"재능\",\"재빨리\",\"재산\",\"재생\",\"재작년\",\"재정\",\"재채기\",\"재판\",\"재학\",\"재활용\",\"저것\",\"저고리\",\"저곳\",\"저녁\",\"저런\",\"저렇게\",\"저번\",\"저울\",\"저절로\",\"저축\",\"적극\",\"적당히\",\"적성\",\"적용\",\"적응\",\"전개\",\"전공\",\"전기\",\"전달\",\"전라도\",\"전망\",\"전문\",\"전반\",\"전부\",\"전세\",\"전시\",\"전용\",\"전자\",\"전쟁\",\"전주\",\"전철\",\"전체\",\"전통\",\"전혀\",\"전후\",\"절대\",\"절망\",\"절반\",\"절약\",\"절차\",\"점검\",\"점수\",\"점심\",\"점원\",\"점점\",\"점차\",\"접근\",\"접시\",\"접촉\",\"젓가락\",\"정거장\",\"정도\",\"정류장\",\"정리\",\"정말\",\"정면\",\"정문\",\"정반대\",\"정보\",\"정부\",\"정비\",\"정상\",\"정성\",\"정오\",\"정원\",\"정장\",\"정지\",\"정치\",\"정확히\",\"제공\",\"제과점\",\"제대로\",\"제목\",\"제발\",\"제법\",\"제삿날\",\"제안\",\"제일\",\"제작\",\"제주도\",\"제출\",\"제품\",\"제한\",\"조각\",\"조건\",\"조금\",\"조깅\",\"조명\",\"조미료\",\"조상\",\"조선\",\"조용히\",\"조절\",\"조정\",\"조직\",\"존댓말\",\"존재\",\"졸업\",\"졸음\",\"종교\",\"종로\",\"종류\",\"종소리\",\"종업원\",\"종종\",\"종합\",\"좌석\",\"죄인\",\"주관적\",\"주름\",\"주말\",\"주머니\",\"주먹\",\"주문\",\"주민\",\"주방\",\"주변\",\"주식\",\"주인\",\"주일\",\"주장\",\"주전자\",\"주택\",\"준비\",\"줄거리\",\"줄기\",\"줄무늬\",\"중간\",\"중계방송\",\"중국\",\"중년\",\"중단\",\"중독\",\"중반\",\"중부\",\"중세\",\"중소기업\",\"중순\",\"중앙\",\"중요\",\"중학교\",\"즉석\",\"즉시\",\"즐거움\",\"증가\",\"증거\",\"증권\",\"증상\",\"증세\",\"지각\",\"지갑\",\"지경\",\"지극히\",\"지금\",\"지급\",\"지능\",\"지름길\",\"지리산\",\"지방\",\"지붕\",\"지식\",\"지역\",\"지우개\",\"지원\",\"지적\",\"지점\",\"지진\",\"지출\",\"직선\",\"직업\",\"직원\",\"직장\",\"진급\",\"진동\",\"진로\",\"진료\",\"진리\",\"진짜\",\"진찰\",\"진출\",\"진통\",\"진행\",\"질문\",\"질병\",\"질서\",\"짐작\",\"집단\",\"집안\",\"집중\",\"짜증\",\"찌꺼기\",\"차남\",\"차라리\",\"차량\",\"차림\",\"차별\",\"차선\",\"차츰\",\"착각\",\"찬물\",\"찬성\",\"참가\",\"참기름\",\"참새\",\"참석\",\"참여\",\"참외\",\"참조\",\"찻잔\",\"창가\",\"창고\",\"창구\",\"창문\",\"창밖\",\"창작\",\"창조\",\"채널\",\"채점\",\"책가방\",\"책방\",\"책상\",\"책임\",\"챔피언\",\"처벌\",\"처음\",\"천국\",\"천둥\",\"천장\",\"천재\",\"천천히\",\"철도\",\"철저히\",\"철학\",\"첫날\",\"첫째\",\"청년\",\"청바지\",\"청소\",\"청춘\",\"체계\",\"체력\",\"체온\",\"체육\",\"체중\",\"체험\",\"초등학생\",\"초반\",\"초밥\",\"초상화\",\"초순\",\"초여름\",\"초원\",\"초저녁\",\"초점\",\"초청\",\"초콜릿\",\"촛불\",\"총각\",\"총리\",\"총장\",\"촬영\",\"최근\",\"최상\",\"최선\",\"최신\",\"최악\",\"최종\",\"추석\",\"추억\",\"추진\",\"추천\",\"추측\",\"축구\",\"축소\",\"축제\",\"축하\",\"출근\",\"출발\",\"출산\",\"출신\",\"출연\",\"출입\",\"출장\",\"출판\",\"충격\",\"충고\",\"충돌\",\"충분히\",\"충청도\",\"취업\",\"취직\",\"취향\",\"치약\",\"친구\",\"친척\",\"칠십\",\"칠월\",\"칠판\",\"침대\",\"침묵\",\"침실\",\"칫솔\",\"칭찬\",\"카메라\",\"카운터\",\"칼국수\",\"캐릭터\",\"캠퍼스\",\"캠페인\",\"커튼\",\"컨디션\",\"컬러\",\"컴퓨터\",\"코끼리\",\"코미디\",\"콘서트\",\"콜라\",\"콤플렉스\",\"콩나물\",\"쾌감\",\"쿠데타\",\"크림\",\"큰길\",\"큰딸\",\"큰소리\",\"큰아들\",\"큰어머니\",\"큰일\",\"큰절\",\"클래식\",\"클럽\",\"킬로\",\"타입\",\"타자기\",\"탁구\",\"탁자\",\"탄생\",\"태권도\",\"태양\",\"태풍\",\"택시\",\"탤런트\",\"터널\",\"터미널\",\"테니스\",\"테스트\",\"테이블\",\"텔레비전\",\"토론\",\"토마토\",\"토요일\",\"통계\",\"통과\",\"통로\",\"통신\",\"통역\",\"통일\",\"통장\",\"통제\",\"통증\",\"통합\",\"통화\",\"퇴근\",\"퇴원\",\"퇴직금\",\"튀김\",\"트럭\",\"특급\",\"특별\",\"특성\",\"특수\",\"특징\",\"특히\",\"튼튼히\",\"티셔츠\",\"파란색\",\"파일\",\"파출소\",\"판결\",\"판단\",\"판매\",\"판사\",\"팔십\",\"팔월\",\"팝송\",\"패션\",\"팩스\",\"팩시밀리\",\"팬티\",\"퍼센트\",\"페인트\",\"편견\",\"편의\",\"편지\",\"편히\",\"평가\",\"평균\",\"평생\",\"평소\",\"평양\",\"평일\",\"평화\",\"포스터\",\"포인트\",\"포장\",\"포함\",\"표면\",\"표정\",\"표준\",\"표현\",\"품목\",\"품질\",\"풍경\",\"풍속\",\"풍습\",\"프랑스\",\"프린터\",\"플라스틱\",\"피곤\",\"피망\",\"피아노\",\"필름\",\"필수\",\"필요\",\"필자\",\"필통\",\"핑계\",\"하느님\",\"하늘\",\"하드웨어\",\"하룻밤\",\"하반기\",\"하숙집\",\"하순\",\"하여튼\",\"하지만\",\"하천\",\"하품\",\"하필\",\"학과\",\"학교\",\"학급\",\"학기\",\"학년\",\"학력\",\"학번\",\"학부모\",\"학비\",\"학생\",\"학술\",\"학습\",\"학용품\",\"학원\",\"학위\",\"학자\",\"학점\",\"한계\",\"한글\",\"한꺼번에\",\"한낮\",\"한눈\",\"한동안\",\"한때\",\"한라산\",\"한마디\",\"한문\",\"한번\",\"한복\",\"한식\",\"한여름\",\"한쪽\",\"할머니\",\"할아버지\",\"할인\",\"함께\",\"함부로\",\"합격\",\"합리적\",\"항공\",\"항구\",\"항상\",\"항의\",\"해결\",\"해군\",\"해답\",\"해당\",\"해물\",\"해석\",\"해설\",\"해수욕장\",\"해안\",\"핵심\",\"핸드백\",\"햄버거\",\"햇볕\",\"햇살\",\"행동\",\"행복\",\"행사\",\"행운\",\"행위\",\"향기\",\"향상\",\"향수\",\"허락\",\"허용\",\"헬기\",\"현관\",\"현금\",\"현대\",\"현상\",\"현실\",\"현장\",\"현재\",\"현지\",\"혈액\",\"협력\",\"형부\",\"형사\",\"형수\",\"형식\",\"형제\",\"형태\",\"형편\",\"혜택\",\"호기심\",\"호남\",\"호랑이\",\"호박\",\"호텔\",\"호흡\",\"혹시\",\"홀로\",\"홈페이지\",\"홍보\",\"홍수\",\"홍차\",\"화면\",\"화분\",\"화살\",\"화요일\",\"화장\",\"화학\",\"확보\",\"확인\",\"확장\",\"확정\",\"환갑\",\"환경\",\"환영\",\"환율\",\"환자\",\"활기\",\"활동\",\"활발히\",\"활용\",\"활짝\",\"회견\",\"회관\",\"회복\",\"회색\",\"회원\",\"회장\",\"회전\",\"횟수\",\"횡단보도\",\"효율적\",\"후반\",\"후춧가루\",\"훈련\",\"훨씬\",\"휴식\",\"휴일\",\"흉내\",\"흐름\",\"흑백\",\"흑인\",\"흔적\",\"흔히\",\"흥미\",\"흥분\",\"희곡\",\"희망\",\"희생\",\"흰색\",\"힘껏\"]{\"的\":[\"chinese_simplified\",\"chinese_traditional\"],\"一\":[\"chinese_simplified\",\"chinese_traditional\"],\"是\":[\"chinese_simplified\",\"chinese_traditional\"],\"在\":[\"chinese_simplified\",\"chinese_traditional\"],\"不\":[\"chinese_simplified\",\"chinese_traditional\"],\"了\":[\"chinese_simplified\",\"chinese_traditional\"],\"有\":[\"chinese_simplified\",\"chinese_traditional\"],\"和\":[\"chinese_simplified\",\"chinese_traditional\"],\"人\":[\"chinese_simplified\",\"chinese_traditional\"],\"这\":[\"chinese_simplified\"],\"中\":[\"chinese_simplified\",\"chinese_traditional\"],\"大\":[\"chinese_simplified\",\"chinese_traditional\"],\"为\":[\"chinese_simplified\"],\"上\":[\"chinese_simplified\",\"chinese_traditional\"],\"个\":[\"chinese_simplified\"],\"国\":[\"chinese_simplified\"],\"我\":[\"chinese_simplified\",\"chinese_traditional\"],\"以\":[\"chinese_simplified\",\"chinese_traditional\"],\"要\":[\"chinese_simplified\",\"chinese_traditional\"],\"他\":[\"chinese_simplified\",\"chinese_traditional\"],\"时\":[\"chinese_simplified\"],\"来\":[\"chinese_simplified\"],\"用\":[\"chinese_simplified\",\"chinese_traditional\"],\"们\":[\"chinese_simplified\"],\"生\":[\"chinese_simplified\",\"chinese_traditional\"],\"到\":[\"chinese_simplified\",\"chinese_traditional\"],\"作\":[\"chinese_simplified\",\"chinese_traditional\"],\"地\":[\"chinese_simplified\",\"chinese_traditional\"],\"于\":[\"chinese_simplified\"],\"出\":[\"chinese_simplified\",\"chinese_traditional\"],\"就\":[\"chinese_simplified\",\"chinese_traditional\"],\"分\":[\"chinese_simplified\",\"chinese_traditional\"],\"对\":[\"chinese_simplified\"],\"成\":[\"chinese_simplified\",\"chinese_traditional\"],\"会\":[\"chinese_simplified\"],\"可\":[\"chinese_simplified\",\"chinese_traditional\"],\"主\":[\"chinese_simplified\",\"chinese_traditional\"],\"发\":[\"chinese_simplified\"],\"年\":[\"chinese_simplified\",\"chinese_traditional\"],\"动\":[\"chinese_simplified\"],\"同\":[\"chinese_simplified\",\"chinese_traditional\"],\"工\":[\"chinese_simplified\",\"chinese_traditional\"],\"也\":[\"chinese_simplified\",\"chinese_traditional\"],\"能\":[\"chinese_simplified\",\"chinese_traditional\"],\"下\":[\"chinese_simplified\",\"chinese_traditional\"],\"过\":[\"chinese_simplified\"],\"子\":[\"chinese_simplified\",\"chinese_traditional\"],\"说\":[\"chinese_simplified\"],\"产\":[\"chinese_simplified\"],\"种\":[\"chinese_simplified\"],\"面\":[\"chinese_simplified\",\"chinese_traditional\"],\"而\":[\"chinese_simplified\",\"chinese_traditional\"],\"方\":[\"chinese_simplified\",\"chinese_traditional\"],\"后\":[\"chinese_simplified\"],\"多\":[\"chinese_simplified\",\"chinese_traditional\"],\"定\":[\"chinese_simplified\",\"chinese_traditional\"],\"行\":[\"chinese_simplified\",\"chinese_traditional\"],\"学\":[\"chinese_simplified\"],\"法\":[\"chinese_simplified\",\"chinese_traditional\"],\"所\":[\"chinese_simplified\",\"chinese_traditional\"],\"民\":[\"chinese_simplified\",\"chinese_traditional\"],\"得\":[\"chinese_simplified\",\"chinese_traditional\"],\"经\":[\"chinese_simplified\"],\"十\":[\"chinese_simplified\",\"chinese_traditional\"],\"三\":[\"chinese_simplified\",\"chinese_traditional\"],\"之\":[\"chinese_simplified\",\"chinese_traditional\"],\"进\":[\"chinese_simplified\"],\"着\":[\"chinese_simplified\"],\"等\":[\"chinese_simplified\",\"chinese_traditional\"],\"部\":[\"chinese_simplified\",\"chinese_traditional\"],\"度\":[\"chinese_simplified\",\"chinese_traditional\"],\"家\":[\"chinese_simplified\",\"chinese_traditional\"],\"电\":[\"chinese_simplified\"],\"力\":[\"chinese_simplified\",\"chinese_traditional\"],\"里\":[\"chinese_simplified\"],\"如\":[\"chinese_simplified\",\"chinese_traditional\"],\"水\":[\"chinese_simplified\",\"chinese_traditional\"],\"化\":[\"chinese_simplified\",\"chinese_traditional\"],\"高\":[\"chinese_simplified\",\"chinese_traditional\"],\"自\":[\"chinese_simplified\",\"chinese_traditional\"],\"二\":[\"chinese_simplified\",\"chinese_traditional\"],\"理\":[\"chinese_simplified\",\"chinese_traditional\"],\"起\":[\"chinese_simplified\",\"chinese_traditional\"],\"小\":[\"chinese_simplified\",\"chinese_traditional\"],\"物\":[\"chinese_simplified\",\"chinese_traditional\"],\"现\":[\"chinese_simplified\"],\"实\":[\"chinese_simplified\"],\"加\":[\"chinese_simplified\",\"chinese_traditional\"],\"量\":[\"chinese_simplified\",\"chinese_traditional\"],\"都\":[\"chinese_simplified\",\"chinese_traditional\"],\"两\":[\"chinese_simplified\"],\"体\":[\"chinese_simplified\"],\"制\":[\"chinese_simplified\",\"chinese_traditional\"],\"机\":[\"chinese_simplified\"],\"当\":[\"chinese_simplified\"],\"使\":[\"chinese_simplified\",\"chinese_traditional\"],\"点\":[\"chinese_simplified\"],\"从\":[\"chinese_simplified\"],\"业\":[\"chinese_simplified\"],\"本\":[\"chinese_simplified\",\"chinese_traditional\"],\"去\":[\"chinese_simplified\",\"chinese_traditional\"],\"把\":[\"chinese_simplified\",\"chinese_traditional\"],\"性\":[\"chinese_simplified\",\"chinese_traditional\"],\"好\":[\"chinese_simplified\",\"chinese_traditional\"],\"应\":[\"chinese_simplified\"],\"开\":[\"chinese_simplified\"],\"它\":[\"chinese_simplified\",\"chinese_traditional\"],\"合\":[\"chinese_simplified\",\"chinese_traditional\"],\"还\":[\"chinese_simplified\"],\"因\":[\"chinese_simplified\",\"chinese_traditional\"],\"由\":[\"chinese_simplified\",\"chinese_traditional\"],\"其\":[\"chinese_simplified\",\"chinese_traditional\"],\"些\":[\"chinese_simplified\",\"chinese_traditional\"],\"然\":[\"chinese_simplified\",\"chinese_traditional\"],\"前\":[\"chinese_simplified\",\"chinese_traditional\"],\"外\":[\"chinese_simplified\",\"chinese_traditional\"],\"天\":[\"chinese_simplified\",\"chinese_traditional\"],\"政\":[\"chinese_simplified\",\"chinese_traditional\"],\"四\":[\"chinese_simplified\",\"chinese_traditional\"],\"日\":[\"chinese_simplified\",\"chinese_traditional\"],\"那\":[\"chinese_simplified\",\"chinese_traditional\"],\"社\":[\"chinese_simplified\",\"chinese_traditional\"],\"义\":[\"chinese_simplified\"],\"事\":[\"chinese_simplified\",\"chinese_traditional\"],\"平\":[\"chinese_simplified\",\"chinese_traditional\"],\"形\":[\"chinese_simplified\",\"chinese_traditional\"],\"相\":[\"chinese_simplified\",\"chinese_traditional\"],\"全\":[\"chinese_simplified\",\"chinese_traditional\"],\"表\":[\"chinese_simplified\",\"chinese_traditional\"],\"间\":[\"chinese_simplified\"],\"样\":[\"chinese_simplified\"],\"与\":[\"chinese_simplified\"],\"关\":[\"chinese_simplified\"],\"各\":[\"chinese_simplified\",\"chinese_traditional\"],\"重\":[\"chinese_simplified\",\"chinese_traditional\"],\"新\":[\"chinese_simplified\",\"chinese_traditional\"],\"线\":[\"chinese_simplified\"],\"内\":[\"chinese_simplified\"],\"数\":[\"chinese_simplified\"],\"正\":[\"chinese_simplified\",\"chinese_traditional\"],\"心\":[\"chinese_simplified\",\"chinese_traditional\"],\"反\":[\"chinese_simplified\",\"chinese_traditional\"],\"你\":[\"chinese_simplified\",\"chinese_traditional\"],\"明\":[\"chinese_simplified\",\"chinese_traditional\"],\"看\":[\"chinese_simplified\",\"chinese_traditional\"],\"原\":[\"chinese_simplified\",\"chinese_traditional\"],\"又\":[\"chinese_simplified\",\"chinese_traditional\"],\"么\":[\"chinese_simplified\"],\"利\":[\"chinese_simplified\",\"chinese_traditional\"],\"比\":[\"chinese_simplified\",\"chinese_traditional\"],\"或\":[\"chinese_simplified\",\"chinese_traditional\"],\"但\":[\"chinese_simplified\",\"chinese_traditional\"],\"质\":[\"chinese_simplified\"],\"气\":[\"chinese_simplified\"],\"第\":[\"chinese_simplified\",\"chinese_traditional\"],\"向\":[\"chinese_simplified\",\"chinese_traditional\"],\"道\":[\"chinese_simplified\",\"chinese_traditional\"],\"命\":[\"chinese_simplified\",\"chinese_traditional\"],\"此\":[\"chinese_simplified\",\"chinese_traditional\"],\"变\":[\"chinese_simplified\"],\"条\":[\"chinese_simplified\"],\"只\":[\"chinese_simplified\",\"chinese_traditional\"],\"没\":[\"chinese_simplified\"],\"结\":[\"chinese_simplified\"],\"解\":[\"chinese_simplified\",\"chinese_traditional\"],\"问\":[\"chinese_simplified\"],\"意\":[\"chinese_simplified\",\"chinese_traditional\"],\"建\":[\"chinese_simplified\",\"chinese_traditional\"],\"月\":[\"chinese_simplified\",\"chinese_traditional\"],\"公\":[\"chinese_simplified\",\"chinese_traditional\"],\"无\":[\"chinese_simplified\"],\"系\":[\"chinese_simplified\",\"chinese_traditional\"],\"军\":[\"chinese_simplified\"],\"很\":[\"chinese_simplified\",\"chinese_traditional\"],\"情\":[\"chinese_simplified\",\"chinese_traditional\"],\"者\":[\"chinese_simplified\",\"chinese_traditional\"],\"最\":[\"chinese_simplified\",\"chinese_traditional\"],\"立\":[\"chinese_simplified\",\"chinese_traditional\"],\"代\":[\"chinese_simplified\",\"chinese_traditional\"],\"想\":[\"chinese_simplified\",\"chinese_traditional\"],\"已\":[\"chinese_simplified\",\"chinese_traditional\"],\"通\":[\"chinese_simplified\",\"chinese_traditional\"],\"并\":[\"chinese_simplified\"],\"提\":[\"chinese_simplified\",\"chinese_traditional\"],\"直\":[\"chinese_simplified\",\"chinese_traditional\"],\"题\":[\"chinese_simplified\"],\"党\":[\"chinese_simplified\"],\"程\":[\"chinese_simplified\",\"chinese_traditional\"],\"展\":[\"chinese_simplified\",\"chinese_traditional\"],\"五\":[\"chinese_simplified\",\"chinese_traditional\"],\"果\":[\"chinese_simplified\",\"chinese_traditional\"],\"料\":[\"chinese_simplified\",\"chinese_traditional\"],\"象\":[\"chinese_simplified\",\"chinese_traditional\"],\"员\":[\"chinese_simplified\"],\"革\":[\"chinese_simplified\",\"chinese_traditional\"],\"位\":[\"chinese_simplified\",\"chinese_traditional\"],\"入\":[\"chinese_simplified\",\"chinese_traditional\"],\"常\":[\"chinese_simplified\",\"chinese_traditional\"],\"文\":[\"chinese_simplified\",\"chinese_traditional\"],\"总\":[\"chinese_simplified\"],\"次\":[\"chinese_simplified\",\"chinese_traditional\"],\"品\":[\"chinese_simplified\",\"chinese_traditional\"],\"式\":[\"chinese_simplified\",\"chinese_traditional\"],\"活\":[\"chinese_simplified\",\"chinese_traditional\"],\"设\":[\"chinese_simplified\"],\"及\":[\"chinese_simplified\",\"chinese_traditional\"],\"管\":[\"chinese_simplified\",\"chinese_traditional\"],\"特\":[\"chinese_simplified\",\"chinese_traditional\"],\"件\":[\"chinese_simplified\",\"chinese_traditional\"],\"长\":[\"chinese_simplified\"],\"求\":[\"chinese_simplified\",\"chinese_traditional\"],\"老\":[\"chinese_simplified\",\"chinese_traditional\"],\"头\":[\"chinese_simplified\"],\"基\":[\"chinese_simplified\",\"chinese_traditional\"],\"资\":[\"chinese_simplified\"],\"边\":[\"chinese_simplified\"],\"流\":[\"chinese_simplified\",\"chinese_traditional\"],\"路\":[\"chinese_simplified\",\"chinese_traditional\"],\"级\":[\"chinese_simplified\"],\"少\":[\"chinese_simplified\",\"chinese_traditional\"],\"图\":[\"chinese_simplified\"],\"山\":[\"chinese_simplified\",\"chinese_traditional\"],\"统\":[\"chinese_simplified\"],\"接\":[\"chinese_simplified\",\"chinese_traditional\"],\"知\":[\"chinese_simplified\",\"chinese_traditional\"],\"较\":[\"chinese_simplified\"],\"将\":[\"chinese_simplified\"],\"组\":[\"chinese_simplified\"],\"见\":[\"chinese_simplified\"],\"计\":[\"chinese_simplified\"],\"别\":[\"chinese_simplified\"],\"她\":[\"chinese_simplified\",\"chinese_traditional\"],\"手\":[\"chinese_simplified\",\"chinese_traditional\"],\"角\":[\"chinese_simplified\",\"chinese_traditional\"],\"期\":[\"chinese_simplified\",\"chinese_traditional\"],\"根\":[\"chinese_simplified\",\"chinese_traditional\"],\"论\":[\"chinese_simplified\"],\"运\":[\"chinese_simplified\"],\"农\":[\"chinese_simplified\"],\"指\":[\"chinese_simplified\",\"chinese_traditional\"],\"几\":[\"chinese_simplified\"],\"九\":[\"chinese_simplified\",\"chinese_traditional\"],\"区\":[\"chinese_simplified\"],\"强\":[\"chinese_simplified\"],\"放\":[\"chinese_simplified\",\"chinese_traditional\"],\"决\":[\"chinese_simplified\"],\"西\":[\"chinese_simplified\",\"chinese_traditional\"],\"被\":[\"chinese_simplified\",\"chinese_traditional\"],\"干\":[\"chinese_simplified\"],\"做\":[\"chinese_simplified\",\"chinese_traditional\"],\"必\":[\"chinese_simplified\",\"chinese_traditional\"],\"战\":[\"chinese_simplified\"],\"先\":[\"chinese_simplified\",\"chinese_traditional\"],\"回\":[\"chinese_simplified\",\"chinese_traditional\"],\"则\":[\"chinese_simplified\"],\"任\":[\"chinese_simplified\",\"chinese_traditional\"],\"取\":[\"chinese_simplified\",\"chinese_traditional\"],\"据\":[\"chinese_simplified\"],\"处\":[\"chinese_simplified\"],\"队\":[\"chinese_simplified\"],\"南\":[\"chinese_simplified\",\"chinese_traditional\"],\"给\":[\"chinese_simplified\"],\"色\":[\"chinese_simplified\",\"chinese_traditional\"],\"光\":[\"chinese_simplified\",\"chinese_traditional\"],\"门\":[\"chinese_simplified\"],\"即\":[\"chinese_simplified\",\"chinese_traditional\"],\"保\":[\"chinese_simplified\",\"chinese_traditional\"],\"治\":[\"chinese_simplified\",\"chinese_traditional\"],\"北\":[\"chinese_simplified\",\"chinese_traditional\"],\"造\":[\"chinese_simplified\",\"chinese_traditional\"],\"百\":[\"chinese_simplified\",\"chinese_traditional\"],\"规\":[\"chinese_simplified\"],\"热\":[\"chinese_simplified\"],\"领\":[\"chinese_simplified\"],\"七\":[\"chinese_simplified\",\"chinese_traditional\"],\"海\":[\"chinese_simplified\",\"chinese_traditional\"],\"口\":[\"chinese_simplified\",\"chinese_traditional\"],\"东\":[\"chinese_simplified\"],\"导\":[\"chinese_simplified\"],\"器\":[\"chinese_simplified\",\"chinese_traditional\"],\"压\":[\"chinese_simplified\"],\"志\":[\"chinese_simplified\",\"chinese_traditional\"],\"世\":[\"chinese_simplified\",\"chinese_traditional\"],\"金\":[\"chinese_simplified\",\"chinese_traditional\"],\"增\":[\"chinese_simplified\",\"chinese_traditional\"],\"争\":[\"chinese_simplified\"],\"济\":[\"chinese_simplified\"],\"阶\":[\"chinese_simplified\"],\"油\":[\"chinese_simplified\",\"chinese_traditional\"],\"思\":[\"chinese_simplified\",\"chinese_traditional\"],\"术\":[\"chinese_simplified\"],\"极\":[\"chinese_simplified\"],\"交\":[\"chinese_simplified\",\"chinese_traditional\"],\"受\":[\"chinese_simplified\",\"chinese_traditional\"],\"联\":[\"chinese_simplified\"],\"什\":[\"chinese_simplified\",\"chinese_traditional\"],\"认\":[\"chinese_simplified\"],\"六\":[\"chinese_simplified\",\"chinese_traditional\"],\"共\":[\"chinese_simplified\",\"chinese_traditional\"],\"权\":[\"chinese_simplified\"],\"收\":[\"chinese_simplified\",\"chinese_traditional\"],\"证\":[\"chinese_simplified\"],\"改\":[\"chinese_simplified\",\"chinese_traditional\"],\"清\":[\"chinese_simplified\",\"chinese_traditional\"],\"美\":[\"chinese_simplified\",\"chinese_traditional\"],\"再\":[\"chinese_simplified\",\"chinese_traditional\"],\"采\":[\"chinese_simplified\"],\"转\":[\"chinese_simplified\"],\"更\":[\"chinese_simplified\",\"chinese_traditional\"],\"单\":[\"chinese_simplified\"],\"风\":[\"chinese_simplified\"],\"切\":[\"chinese_simplified\",\"chinese_traditional\"],\"打\":[\"chinese_simplified\",\"chinese_traditional\"],\"白\":[\"chinese_simplified\",\"chinese_traditional\"],\"教\":[\"chinese_simplified\",\"chinese_traditional\"],\"速\":[\"chinese_simplified\",\"chinese_traditional\"],\"花\":[\"chinese_simplified\",\"chinese_traditional\"],\"带\":[\"chinese_simplified\"],\"安\":[\"chinese_simplified\",\"chinese_traditional\"],\"场\":[\"chinese_simplified\"],\"身\":[\"chinese_simplified\",\"chinese_traditional\"],\"车\":[\"chinese_simplified\"],\"例\":[\"chinese_simplified\",\"chinese_traditional\"],\"真\":[\"chinese_simplified\",\"chinese_traditional\"],\"务\":[\"chinese_simplified\"],\"具\":[\"chinese_simplified\",\"chinese_traditional\"],\"万\":[\"chinese_simplified\"],\"每\":[\"chinese_simplified\",\"chinese_traditional\"],\"目\":[\"chinese_simplified\",\"chinese_traditional\"],\"至\":[\"chinese_simplified\",\"chinese_traditional\"],\"达\":[\"chinese_simplified\"],\"走\":[\"chinese_simplified\",\"chinese_traditional\"],\"积\":[\"chinese_simplified\"],\"示\":[\"chinese_simplified\",\"chinese_traditional\"],\"议\":[\"chinese_simplified\"],\"声\":[\"chinese_simplified\"],\"报\":[\"chinese_simplified\"],\"斗\":[\"chinese_simplified\"],\"完\":[\"chinese_simplified\",\"chinese_traditional\"],\"类\":[\"chinese_simplified\"],\"八\":[\"chinese_simplified\",\"chinese_traditional\"],\"离\":[\"chinese_simplified\"],\"华\":[\"chinese_simplified\"],\"名\":[\"chinese_simplified\",\"chinese_traditional\"],\"确\":[\"chinese_simplified\"],\"才\":[\"chinese_simplified\",\"chinese_traditional\"],\"科\":[\"chinese_simplified\",\"chinese_traditional\"],\"张\":[\"chinese_simplified\"],\"信\":[\"chinese_simplified\",\"chinese_traditional\"],\"马\":[\"chinese_simplified\"],\"节\":[\"chinese_simplified\"],\"话\":[\"chinese_simplified\"],\"米\":[\"chinese_simplified\",\"chinese_traditional\"],\"整\":[\"chinese_simplified\",\"chinese_traditional\"],\"空\":[\"chinese_simplified\",\"chinese_traditional\"],\"元\":[\"chinese_simplified\",\"chinese_traditional\"],\"况\":[\"chinese_simplified\"],\"今\":[\"chinese_simplified\",\"chinese_traditional\"],\"集\":[\"chinese_simplified\",\"chinese_traditional\"],\"温\":[\"chinese_simplified\"],\"传\":[\"chinese_simplified\"],\"土\":[\"chinese_simplified\",\"chinese_traditional\"],\"许\":[\"chinese_simplified\"],\"步\":[\"chinese_simplified\",\"chinese_traditional\"],\"群\":[\"chinese_simplified\",\"chinese_traditional\"],\"广\":[\"chinese_simplified\"],\"石\":[\"chinese_simplified\",\"chinese_traditional\"],\"记\":[\"chinese_simplified\"],\"需\":[\"chinese_simplified\",\"chinese_traditional\"],\"段\":[\"chinese_simplified\",\"chinese_traditional\"],\"研\":[\"chinese_simplified\",\"chinese_traditional\"],\"界\":[\"chinese_simplified\",\"chinese_traditional\"],\"拉\":[\"chinese_simplified\",\"chinese_traditional\"],\"林\":[\"chinese_simplified\",\"chinese_traditional\"],\"律\":[\"chinese_simplified\",\"chinese_traditional\"],\"叫\":[\"chinese_simplified\",\"chinese_traditional\"],\"且\":[\"chinese_simplified\",\"chinese_traditional\"],\"究\":[\"chinese_simplified\",\"chinese_traditional\"],\"观\":[\"chinese_simplified\"],\"越\":[\"chinese_simplified\",\"chinese_traditional\"],\"织\":[\"chinese_simplified\"],\"装\":[\"chinese_simplified\"],\"影\":[\"chinese_simplified\",\"chinese_traditional\"],\"算\":[\"chinese_simplified\",\"chinese_traditional\"],\"低\":[\"chinese_simplified\",\"chinese_traditional\"],\"持\":[\"chinese_simplified\",\"chinese_traditional\"],\"音\":[\"chinese_simplified\",\"chinese_traditional\"],\"众\":[\"chinese_simplified\"],\"书\":[\"chinese_simplified\"],\"布\":[\"chinese_simplified\",\"chinese_traditional\"],\"复\":[\"chinese_simplified\",\"chinese_traditional\"],\"容\":[\"chinese_simplified\",\"chinese_traditional\"],\"儿\":[\"chinese_simplified\"],\"须\":[\"chinese_simplified\"],\"际\":[\"chinese_simplified\"],\"商\":[\"chinese_simplified\",\"chinese_traditional\"],\"非\":[\"chinese_simplified\",\"chinese_traditional\"],\"验\":[\"chinese_simplified\"],\"连\":[\"chinese_simplified\"],\"断\":[\"chinese_simplified\"],\"深\":[\"chinese_simplified\",\"chinese_traditional\"],\"难\":[\"chinese_simplified\"],\"近\":[\"chinese_simplified\",\"chinese_traditional\"],\"矿\":[\"chinese_simplified\"],\"千\":[\"chinese_simplified\",\"chinese_traditional\"],\"周\":[\"chinese_simplified\"],\"委\":[\"chinese_simplified\",\"chinese_traditional\"],\"素\":[\"chinese_simplified\",\"chinese_traditional\"],\"技\":[\"chinese_simplified\",\"chinese_traditional\"],\"备\":[\"chinese_simplified\"],\"半\":[\"chinese_simplified\",\"chinese_traditional\"],\"办\":[\"chinese_simplified\"],\"青\":[\"chinese_simplified\",\"chinese_traditional\"],\"省\":[\"chinese_simplified\",\"chinese_traditional\"],\"列\":[\"chinese_simplified\",\"chinese_traditional\"],\"习\":[\"chinese_simplified\"],\"响\":[\"chinese_simplified\"],\"约\":[\"chinese_simplified\"],\"支\":[\"chinese_simplified\",\"chinese_traditional\"],\"般\":[\"chinese_simplified\",\"chinese_traditional\"],\"史\":[\"chinese_simplified\",\"chinese_traditional\"],\"感\":[\"chinese_simplified\",\"chinese_traditional\"],\"劳\":[\"chinese_simplified\"],\"便\":[\"chinese_simplified\",\"chinese_traditional\"],\"团\":[\"chinese_simplified\"],\"往\":[\"chinese_simplified\",\"chinese_traditional\"],\"酸\":[\"chinese_simplified\",\"chinese_traditional\"],\"历\":[\"chinese_simplified\"],\"市\":[\"chinese_simplified\",\"chinese_traditional\"],\"克\":[\"chinese_simplified\",\"chinese_traditional\"],\"何\":[\"chinese_simplified\",\"chinese_traditional\"],\"除\":[\"chinese_simplified\",\"chinese_traditional\"],\"消\":[\"chinese_simplified\",\"chinese_traditional\"],\"构\":[\"chinese_simplified\"],\"府\":[\"chinese_simplified\",\"chinese_traditional\"],\"称\":[\"chinese_simplified\"],\"太\":[\"chinese_simplified\",\"chinese_traditional\"],\"准\":[\"chinese_simplified\"],\"精\":[\"chinese_simplified\",\"chinese_traditional\"],\"值\":[\"chinese_simplified\",\"chinese_traditional\"],\"号\":[\"chinese_simplified\"],\"率\":[\"chinese_simplified\",\"chinese_traditional\"],\"族\":[\"chinese_simplified\",\"chinese_traditional\"],\"维\":[\"chinese_simplified\"],\"划\":[\"chinese_simplified\"],\"选\":[\"chinese_simplified\"],\"标\":[\"chinese_simplified\"],\"写\":[\"chinese_simplified\"],\"存\":[\"chinese_simplified\",\"chinese_traditional\"],\"候\":[\"chinese_simplified\",\"chinese_traditional\"],\"毛\":[\"chinese_simplified\",\"chinese_traditional\"],\"亲\":[\"chinese_simplified\"],\"快\":[\"chinese_simplified\",\"chinese_traditional\"],\"效\":[\"chinese_simplified\",\"chinese_traditional\"],\"斯\":[\"chinese_simplified\",\"chinese_traditional\"],\"院\":[\"chinese_simplified\",\"chinese_traditional\"],\"查\":[\"chinese_simplified\",\"chinese_traditional\"],\"江\":[\"chinese_simplified\",\"chinese_traditional\"],\"型\":[\"chinese_simplified\",\"chinese_traditional\"],\"眼\":[\"chinese_simplified\",\"chinese_traditional\"],\"王\":[\"chinese_simplified\",\"chinese_traditional\"],\"按\":[\"chinese_simplified\",\"chinese_traditional\"],\"格\":[\"chinese_simplified\",\"chinese_traditional\"],\"养\":[\"chinese_simplified\"],\"易\":[\"chinese_simplified\",\"chinese_traditional\"],\"置\":[\"chinese_simplified\",\"chinese_traditional\"],\"派\":[\"chinese_simplified\",\"chinese_traditional\"],\"层\":[\"chinese_simplified\"],\"片\":[\"chinese_simplified\",\"chinese_traditional\"],\"始\":[\"chinese_simplified\",\"chinese_traditional\"],\"却\":[\"chinese_simplified\"],\"专\":[\"chinese_simplified\"],\"状\":[\"chinese_simplified\"],\"育\":[\"chinese_simplified\",\"chinese_traditional\"],\"厂\":[\"chinese_simplified\"],\"京\":[\"chinese_simplified\",\"chinese_traditional\"],\"识\":[\"chinese_simplified\"],\"适\":[\"chinese_simplified\"],\"属\":[\"chinese_simplified\"],\"圆\":[\"chinese_simplified\"],\"包\":[\"chinese_simplified\",\"chinese_traditional\"],\"火\":[\"chinese_simplified\",\"chinese_traditional\"],\"住\":[\"chinese_simplified\",\"chinese_traditional\"],\"调\":[\"chinese_simplified\"],\"满\":[\"chinese_simplified\"],\"县\":[\"chinese_simplified\"],\"局\":[\"chinese_simplified\",\"chinese_traditional\"],\"照\":[\"chinese_simplified\",\"chinese_traditional\"],\"参\":[\"chinese_simplified\"],\"红\":[\"chinese_simplified\"],\"细\":[\"chinese_simplified\"],\"引\":[\"chinese_simplified\",\"chinese_traditional\"],\"听\":[\"chinese_simplified\"],\"该\":[\"chinese_simplified\"],\"铁\":[\"chinese_simplified\"],\"价\":[\"chinese_simplified\"],\"严\":[\"chinese_simplified\"],\"首\":[\"chinese_simplified\",\"chinese_traditional\"],\"底\":[\"chinese_simplified\",\"chinese_traditional\"],\"液\":[\"chinese_simplified\",\"chinese_traditional\"],\"官\":[\"chinese_simplified\",\"chinese_traditional\"],\"德\":[\"chinese_simplified\",\"chinese_traditional\"],\"随\":[\"chinese_simplified\"],\"病\":[\"chinese_simplified\",\"chinese_traditional\"],\"苏\":[\"chinese_simplified\"],\"失\":[\"chinese_simplified\",\"chinese_traditional\"],\"尔\":[\"chinese_simplified\"],\"死\":[\"chinese_simplified\",\"chinese_traditional\"],\"讲\":[\"chinese_simplified\"],\"配\":[\"chinese_simplified\",\"chinese_traditional\"],\"女\":[\"chinese_simplified\",\"chinese_traditional\"],\"黄\":[\"chinese_simplified\"],\"推\":[\"chinese_simplified\",\"chinese_traditional\"],\"显\":[\"chinese_simplified\"],\"谈\":[\"chinese_simplified\"],\"罪\":[\"chinese_simplified\",\"chinese_traditional\"],\"神\":[\"chinese_simplified\",\"chinese_traditional\"],\"艺\":[\"chinese_simplified\"],\"呢\":[\"chinese_simplified\",\"chinese_traditional\"],\"席\":[\"chinese_simplified\",\"chinese_traditional\"],\"含\":[\"chinese_simplified\",\"chinese_traditional\"],\"企\":[\"chinese_simplified\",\"chinese_traditional\"],\"望\":[\"chinese_simplified\",\"chinese_traditional\"],\"密\":[\"chinese_simplified\",\"chinese_traditional\"],\"批\":[\"chinese_simplified\",\"chinese_traditional\"],\"营\":[\"chinese_simplified\"],\"项\":[\"chinese_simplified\"],\"防\":[\"chinese_simplified\",\"chinese_traditional\"],\"举\":[\"chinese_simplified\"],\"球\":[\"chinese_simplified\",\"chinese_traditional\"],\"英\":[\"chinese_simplified\",\"chinese_traditional\"],\"氧\":[\"chinese_simplified\",\"chinese_traditional\"],\"势\":[\"chinese_simplified\"],\"告\":[\"chinese_simplified\",\"chinese_traditional\"],\"李\":[\"chinese_simplified\",\"chinese_traditional\"],\"台\":[\"chinese_simplified\",\"chinese_traditional\"],\"落\":[\"chinese_simplified\",\"chinese_traditional\"],\"木\":[\"chinese_simplified\",\"chinese_traditional\"],\"帮\":[\"chinese_simplified\"],\"轮\":[\"chinese_simplified\"],\"破\":[\"chinese_simplified\",\"chinese_traditional\"],\"亚\":[\"chinese_simplified\"],\"师\":[\"chinese_simplified\"],\"围\":[\"chinese_simplified\"],\"注\":[\"chinese_simplified\",\"chinese_traditional\"],\"远\":[\"chinese_simplified\"],\"字\":[\"chinese_simplified\",\"chinese_traditional\"],\"材\":[\"chinese_simplified\",\"chinese_traditional\"],\"排\":[\"chinese_simplified\",\"chinese_traditional\"],\"供\":[\"chinese_simplified\",\"chinese_traditional\"],\"河\":[\"chinese_simplified\",\"chinese_traditional\"],\"态\":[\"chinese_simplified\"],\"封\":[\"chinese_simplified\",\"chinese_traditional\"],\"另\":[\"chinese_simplified\",\"chinese_traditional\"],\"施\":[\"chinese_simplified\",\"chinese_traditional\"],\"减\":[\"chinese_simplified\"],\"树\":[\"chinese_simplified\"],\"溶\":[\"chinese_simplified\",\"chinese_traditional\"],\"怎\":[\"chinese_simplified\",\"chinese_traditional\"],\"止\":[\"chinese_simplified\",\"chinese_traditional\"],\"案\":[\"chinese_simplified\",\"chinese_traditional\"],\"言\":[\"chinese_simplified\",\"chinese_traditional\"],\"士\":[\"chinese_simplified\",\"chinese_traditional\"],\"均\":[\"chinese_simplified\",\"chinese_traditional\"],\"武\":[\"chinese_simplified\",\"chinese_traditional\"],\"固\":[\"chinese_simplified\",\"chinese_traditional\"],\"叶\":[\"chinese_simplified\"],\"鱼\":[\"chinese_simplified\"],\"波\":[\"chinese_simplified\",\"chinese_traditional\"],\"视\":[\"chinese_simplified\"],\"仅\":[\"chinese_simplified\"],\"费\":[\"chinese_simplified\"],\"紧\":[\"chinese_simplified\"],\"爱\":[\"chinese_simplified\"],\"左\":[\"chinese_simplified\",\"chinese_traditional\"],\"章\":[\"chinese_simplified\",\"chinese_traditional\"],\"早\":[\"chinese_simplified\",\"chinese_traditional\"],\"朝\":[\"chinese_simplified\",\"chinese_traditional\"],\"害\":[\"chinese_simplified\",\"chinese_traditional\"],\"续\":[\"chinese_simplified\"],\"轻\":[\"chinese_simplified\"],\"服\":[\"chinese_simplified\",\"chinese_traditional\"],\"试\":[\"chinese_simplified\"],\"食\":[\"chinese_simplified\",\"chinese_traditional\"],\"充\":[\"chinese_simplified\",\"chinese_traditional\"],\"兵\":[\"chinese_simplified\",\"chinese_traditional\"],\"源\":[\"chinese_simplified\",\"chinese_traditional\"],\"判\":[\"chinese_simplified\",\"chinese_traditional\"],\"护\":[\"chinese_simplified\"],\"司\":[\"chinese_simplified\",\"chinese_traditional\"],\"足\":[\"chinese_simplified\",\"chinese_traditional\"],\"某\":[\"chinese_simplified\",\"chinese_traditional\"],\"练\":[\"chinese_simplified\"],\"差\":[\"chinese_simplified\",\"chinese_traditional\"],\"致\":[\"chinese_simplified\",\"chinese_traditional\"],\"板\":[\"chinese_simplified\",\"chinese_traditional\"],\"田\":[\"chinese_simplified\",\"chinese_traditional\"],\"降\":[\"chinese_simplified\",\"chinese_traditional\"],\"黑\":[\"chinese_simplified\",\"chinese_traditional\"],\"犯\":[\"chinese_simplified\",\"chinese_traditional\"],\"负\":[\"chinese_simplified\"],\"击\":[\"chinese_simplified\"],\"范\":[\"chinese_simplified\",\"chinese_traditional\"],\"继\":[\"chinese_simplified\"],\"兴\":[\"chinese_simplified\"],\"似\":[\"chinese_simplified\",\"chinese_traditional\"],\"余\":[\"chinese_simplified\"],\"坚\":[\"chinese_simplified\"],\"曲\":[\"chinese_simplified\",\"chinese_traditional\"],\"输\":[\"chinese_simplified\"],\"修\":[\"chinese_simplified\",\"chinese_traditional\"],\"故\":[\"chinese_simplified\",\"chinese_traditional\"],\"城\":[\"chinese_simplified\",\"chinese_traditional\"],\"夫\":[\"chinese_simplified\",\"chinese_traditional\"],\"够\":[\"chinese_simplified\"],\"送\":[\"chinese_simplified\",\"chinese_traditional\"],\"笔\":[\"chinese_simplified\"],\"船\":[\"chinese_simplified\",\"chinese_traditional\"],\"占\":[\"chinese_simplified\"],\"右\":[\"chinese_simplified\",\"chinese_traditional\"],\"财\":[\"chinese_simplified\"],\"吃\":[\"chinese_simplified\",\"chinese_traditional\"],\"富\":[\"chinese_simplified\",\"chinese_traditional\"],\"春\":[\"chinese_simplified\",\"chinese_traditional\"],\"职\":[\"chinese_simplified\"],\"觉\":[\"chinese_simplified\"],\"汉\":[\"chinese_simplified\"],\"画\":[\"chinese_simplified\"],\"功\":[\"chinese_simplified\",\"chinese_traditional\"],\"巴\":[\"chinese_simplified\",\"chinese_traditional\"],\"跟\":[\"chinese_simplified\",\"chinese_traditional\"],\"虽\":[\"chinese_simplified\"],\"杂\":[\"chinese_simplified\"],\"飞\":[\"chinese_simplified\"],\"检\":[\"chinese_simplified\"],\"吸\":[\"chinese_simplified\",\"chinese_traditional\"],\"助\":[\"chinese_simplified\",\"chinese_traditional\"],\"升\":[\"chinese_simplified\"],\"阳\":[\"chinese_simplified\"],\"互\":[\"chinese_simplified\",\"chinese_traditional\"],\"初\":[\"chinese_simplified\",\"chinese_traditional\"],\"创\":[\"chinese_simplified\"],\"抗\":[\"chinese_simplified\",\"chinese_traditional\"],\"考\":[\"chinese_simplified\",\"chinese_traditional\"],\"投\":[\"chinese_simplified\",\"chinese_traditional\"],\"坏\":[\"chinese_simplified\"],\"策\":[\"chinese_simplified\",\"chinese_traditional\"],\"古\":[\"chinese_simplified\",\"chinese_traditional\"],\"径\":[\"chinese_simplified\"],\"换\":[\"chinese_simplified\"],\"未\":[\"chinese_simplified\",\"chinese_traditional\"],\"跑\":[\"chinese_simplified\",\"chinese_traditional\"],\"留\":[\"chinese_simplified\",\"chinese_traditional\"],\"钢\":[\"chinese_simplified\"],\"曾\":[\"chinese_simplified\",\"chinese_traditional\"],\"端\":[\"chinese_simplified\",\"chinese_traditional\"],\"责\":[\"chinese_simplified\"],\"站\":[\"chinese_simplified\",\"chinese_traditional\"],\"简\":[\"chinese_simplified\"],\"述\":[\"chinese_simplified\",\"chinese_traditional\"],\"钱\":[\"chinese_simplified\"],\"副\":[\"chinese_simplified\",\"chinese_traditional\"],\"尽\":[\"chinese_simplified\"],\"帝\":[\"chinese_simplified\",\"chinese_traditional\"],\"射\":[\"chinese_simplified\",\"chinese_traditional\"],\"草\":[\"chinese_simplified\",\"chinese_traditional\"],\"冲\":[\"chinese_simplified\"],\"承\":[\"chinese_simplified\",\"chinese_traditional\"],\"独\":[\"chinese_simplified\"],\"令\":[\"chinese_simplified\",\"chinese_traditional\"],\"限\":[\"chinese_simplified\",\"chinese_traditional\"],\"阿\":[\"chinese_simplified\",\"chinese_traditional\"],\"宣\":[\"chinese_simplified\",\"chinese_traditional\"],\"环\":[\"chinese_simplified\"],\"双\":[\"chinese_simplified\"],\"请\":[\"chinese_simplified\"],\"超\":[\"chinese_simplified\",\"chinese_traditional\"],\"微\":[\"chinese_simplified\",\"chinese_traditional\"],\"让\":[\"chinese_simplified\"],\"控\":[\"chinese_simplified\",\"chinese_traditional\"],\"州\":[\"chinese_simplified\",\"chinese_traditional\"],\"良\":[\"chinese_simplified\",\"chinese_traditional\"],\"轴\":[\"chinese_simplified\"],\"找\":[\"chinese_simplified\",\"chinese_traditional\"],\"否\":[\"chinese_simplified\",\"chinese_traditional\"],\"纪\":[\"chinese_simplified\"],\"益\":[\"chinese_simplified\",\"chinese_traditional\"],\"依\":[\"chinese_simplified\",\"chinese_traditional\"],\"优\":[\"chinese_simplified\"],\"顶\":[\"chinese_simplified\"],\"础\":[\"chinese_simplified\"],\"载\":[\"chinese_simplified\"],\"倒\":[\"chinese_simplified\",\"chinese_traditional\"],\"房\":[\"chinese_simplified\",\"chinese_traditional\"],\"突\":[\"chinese_simplified\",\"chinese_traditional\"],\"坐\":[\"chinese_simplified\",\"chinese_traditional\"],\"粉\":[\"chinese_simplified\",\"chinese_traditional\"],\"敌\":[\"chinese_simplified\"],\"略\":[\"chinese_simplified\",\"chinese_traditional\"],\"客\":[\"chinese_simplified\",\"chinese_traditional\"],\"袁\":[\"chinese_simplified\",\"chinese_traditional\"],\"冷\":[\"chinese_simplified\",\"chinese_traditional\"],\"胜\":[\"chinese_simplified\"],\"绝\":[\"chinese_simplified\"],\"析\":[\"chinese_simplified\",\"chinese_traditional\"],\"块\":[\"chinese_simplified\"],\"剂\":[\"chinese_simplified\"],\"测\":[\"chinese_simplified\"],\"丝\":[\"chinese_simplified\"],\"协\":[\"chinese_simplified\"],\"诉\":[\"chinese_simplified\"],\"念\":[\"chinese_simplified\",\"chinese_traditional\"],\"陈\":[\"chinese_simplified\"],\"仍\":[\"chinese_simplified\",\"chinese_traditional\"],\"罗\":[\"chinese_simplified\"],\"盐\":[\"chinese_simplified\"],\"友\":[\"chinese_simplified\",\"chinese_traditional\"],\"洋\":[\"chinese_simplified\",\"chinese_traditional\"],\"错\":[\"chinese_simplified\"],\"苦\":[\"chinese_simplified\",\"chinese_traditional\"],\"夜\":[\"chinese_simplified\",\"chinese_traditional\"],\"刑\":[\"chinese_simplified\",\"chinese_traditional\"],\"移\":[\"chinese_simplified\",\"chinese_traditional\"],\"频\":[\"chinese_simplified\"],\"逐\":[\"chinese_simplified\",\"chinese_traditional\"],\"靠\":[\"chinese_simplified\",\"chinese_traditional\"],\"混\":[\"chinese_simplified\",\"chinese_traditional\"],\"母\":[\"chinese_simplified\",\"chinese_traditional\"],\"短\":[\"chinese_simplified\",\"chinese_traditional\"],\"皮\":[\"chinese_simplified\",\"chinese_traditional\"],\"终\":[\"chinese_simplified\"],\"聚\":[\"chinese_simplified\",\"chinese_traditional\"],\"汽\":[\"chinese_simplified\",\"chinese_traditional\"],\"村\":[\"chinese_simplified\",\"chinese_traditional\"],\"云\":[\"chinese_simplified\"],\"哪\":[\"chinese_simplified\",\"chinese_traditional\"],\"既\":[\"chinese_simplified\",\"chinese_traditional\"],\"距\":[\"chinese_simplified\",\"chinese_traditional\"],\"卫\":[\"chinese_simplified\"],\"停\":[\"chinese_simplified\",\"chinese_traditional\"],\"烈\":[\"chinese_simplified\",\"chinese_traditional\"],\"央\":[\"chinese_simplified\",\"chinese_traditional\"],\"察\":[\"chinese_simplified\",\"chinese_traditional\"],\"烧\":[\"chinese_simplified\"],\"迅\":[\"chinese_simplified\",\"chinese_traditional\"],\"境\":[\"chinese_simplified\",\"chinese_traditional\"],\"若\":[\"chinese_simplified\",\"chinese_traditional\"],\"印\":[\"chinese_simplified\",\"chinese_traditional\"],\"洲\":[\"chinese_simplified\",\"chinese_traditional\"],\"刻\":[\"chinese_simplified\",\"chinese_traditional\"],\"括\":[\"chinese_simplified\",\"chinese_traditional\"],\"激\":[\"chinese_simplified\",\"chinese_traditional\"],\"孔\":[\"chinese_simplified\",\"chinese_traditional\"],\"搞\":[\"chinese_simplified\",\"chinese_traditional\"],\"甚\":[\"chinese_simplified\",\"chinese_traditional\"],\"室\":[\"chinese_simplified\",\"chinese_traditional\"],\"待\":[\"chinese_simplified\",\"chinese_traditional\"],\"核\":[\"chinese_simplified\",\"chinese_traditional\"],\"校\":[\"chinese_simplified\",\"chinese_traditional\"],\"散\":[\"chinese_simplified\",\"chinese_traditional\"],\"侵\":[\"chinese_simplified\",\"chinese_traditional\"],\"吧\":[\"chinese_simplified\",\"chinese_traditional\"],\"甲\":[\"chinese_simplified\",\"chinese_traditional\"],\"游\":[\"chinese_simplified\"],\"久\":[\"chinese_simplified\",\"chinese_traditional\"],\"菜\":[\"chinese_simplified\",\"chinese_traditional\"],\"味\":[\"chinese_simplified\",\"chinese_traditional\"],\"旧\":[\"chinese_simplified\"],\"模\":[\"chinese_simplified\",\"chinese_traditional\"],\"湖\":[\"chinese_simplified\",\"chinese_traditional\"],\"货\":[\"chinese_simplified\"],\"损\":[\"chinese_simplified\"],\"预\":[\"chinese_simplified\"],\"阻\":[\"chinese_simplified\",\"chinese_traditional\"],\"毫\":[\"chinese_simplified\",\"chinese_traditional\"],\"普\":[\"chinese_simplified\",\"chinese_traditional\"],\"稳\":[\"chinese_simplified\"],\"乙\":[\"chinese_simplified\",\"chinese_traditional\"],\"妈\":[\"chinese_simplified\"],\"植\":[\"chinese_simplified\",\"chinese_traditional\"],\"息\":[\"chinese_simplified\",\"chinese_traditional\"],\"扩\":[\"chinese_simplified\"],\"银\":[\"chinese_simplified\"],\"语\":[\"chinese_simplified\"],\"挥\":[\"chinese_simplified\"],\"酒\":[\"chinese_simplified\",\"chinese_traditional\"],\"守\":[\"chinese_simplified\",\"chinese_traditional\"],\"拿\":[\"chinese_simplified\",\"chinese_traditional\"],\"序\":[\"chinese_simplified\",\"chinese_traditional\"],\"纸\":[\"chinese_simplified\"],\"医\":[\"chinese_simplified\"],\"缺\":[\"chinese_simplified\",\"chinese_traditional\"],\"雨\":[\"chinese_simplified\",\"chinese_traditional\"],\"吗\":[\"chinese_simplified\"],\"针\":[\"chinese_simplified\"],\"刘\":[\"chinese_simplified\"],\"啊\":[\"chinese_simplified\",\"chinese_traditional\"],\"急\":[\"chinese_simplified\",\"chinese_traditional\"],\"唱\":[\"chinese_simplified\",\"chinese_traditional\"],\"误\":[\"chinese_simplified\"],\"训\":[\"chinese_simplified\"],\"愿\":[\"chinese_simplified\"],\"审\":[\"chinese_simplified\"],\"附\":[\"chinese_simplified\",\"chinese_traditional\"],\"获\":[\"chinese_simplified\"],\"茶\":[\"chinese_simplified\",\"chinese_traditional\"],\"鲜\":[\"chinese_simplified\"],\"粮\":[\"chinese_simplified\"],\"斤\":[\"chinese_simplified\",\"chinese_traditional\"],\"孩\":[\"chinese_simplified\",\"chinese_traditional\"],\"脱\":[\"chinese_simplified\"],\"硫\":[\"chinese_simplified\",\"chinese_traditional\"],\"肥\":[\"chinese_simplified\",\"chinese_traditional\"],\"善\":[\"chinese_simplified\",\"chinese_traditional\"],\"龙\":[\"chinese_simplified\"],\"演\":[\"chinese_simplified\",\"chinese_traditional\"],\"父\":[\"chinese_simplified\",\"chinese_traditional\"],\"渐\":[\"chinese_simplified\"],\"血\":[\"chinese_simplified\",\"chinese_traditional\"],\"欢\":[\"chinese_simplified\"],\"械\":[\"chinese_simplified\",\"chinese_traditional\"],\"掌\":[\"chinese_simplified\",\"chinese_traditional\"],\"歌\":[\"chinese_simplified\",\"chinese_traditional\"],\"沙\":[\"chinese_simplified\",\"chinese_traditional\"],\"刚\":[\"chinese_simplified\"],\"攻\":[\"chinese_simplified\",\"chinese_traditional\"],\"谓\":[\"chinese_simplified\"],\"盾\":[\"chinese_simplified\",\"chinese_traditional\"],\"讨\":[\"chinese_simplified\"],\"晚\":[\"chinese_simplified\",\"chinese_traditional\"],\"粒\":[\"chinese_simplified\",\"chinese_traditional\"],\"乱\":[\"chinese_simplified\"],\"燃\":[\"chinese_simplified\",\"chinese_traditional\"],\"矛\":[\"chinese_simplified\",\"chinese_traditional\"],\"乎\":[\"chinese_simplified\",\"chinese_traditional\"],\"杀\":[\"chinese_simplified\"],\"药\":[\"chinese_simplified\"],\"宁\":[\"chinese_simplified\"],\"鲁\":[\"chinese_simplified\"],\"贵\":[\"chinese_simplified\"],\"钟\":[\"chinese_simplified\"],\"煤\":[\"chinese_simplified\",\"chinese_traditional\"],\"读\":[\"chinese_simplified\"],\"班\":[\"chinese_simplified\",\"chinese_traditional\"],\"伯\":[\"chinese_simplified\",\"chinese_traditional\"],\"香\":[\"chinese_simplified\",\"chinese_traditional\"],\"介\":[\"chinese_simplified\",\"chinese_traditional\"],\"迫\":[\"chinese_simplified\",\"chinese_traditional\"],\"句\":[\"chinese_simplified\",\"chinese_traditional\"],\"丰\":[\"chinese_simplified\"],\"培\":[\"chinese_simplified\",\"chinese_traditional\"],\"握\":[\"chinese_simplified\",\"chinese_traditional\"],\"兰\":[\"chinese_simplified\"],\"担\":[\"chinese_simplified\"],\"弦\":[\"chinese_simplified\",\"chinese_traditional\"],\"蛋\":[\"chinese_simplified\",\"chinese_traditional\"],\"沉\":[\"chinese_simplified\",\"chinese_traditional\"],\"假\":[\"chinese_simplified\",\"chinese_traditional\"],\"穿\":[\"chinese_simplified\",\"chinese_traditional\"],\"执\":[\"chinese_simplified\"],\"答\":[\"chinese_simplified\",\"chinese_traditional\"],\"乐\":[\"chinese_simplified\"],\"谁\":[\"chinese_simplified\"],\"顺\":[\"chinese_simplified\"],\"烟\":[\"chinese_simplified\"],\"缩\":[\"chinese_simplified\"],\"征\":[\"chinese_simplified\"],\"脸\":[\"chinese_simplified\"],\"喜\":[\"chinese_simplified\",\"chinese_traditional\"],\"松\":[\"chinese_simplified\",\"chinese_traditional\"],\"脚\":[\"chinese_simplified\"],\"困\":[\"chinese_simplified\",\"chinese_traditional\"],\"异\":[\"chinese_simplified\"],\"免\":[\"chinese_simplified\",\"chinese_traditional\"],\"背\":[\"chinese_simplified\",\"chinese_traditional\"],\"星\":[\"chinese_simplified\",\"chinese_traditional\"],\"福\":[\"chinese_simplified\",\"chinese_traditional\"],\"买\":[\"chinese_simplified\"],\"染\":[\"chinese_simplified\",\"chinese_traditional\"],\"井\":[\"chinese_simplified\",\"chinese_traditional\"],\"概\":[\"chinese_simplified\",\"chinese_traditional\"],\"慢\":[\"chinese_simplified\",\"chinese_traditional\"],\"怕\":[\"chinese_simplified\",\"chinese_traditional\"],\"磁\":[\"chinese_simplified\",\"chinese_traditional\"],\"倍\":[\"chinese_simplified\",\"chinese_traditional\"],\"祖\":[\"chinese_simplified\",\"chinese_traditional\"],\"皇\":[\"chinese_simplified\",\"chinese_traditional\"],\"促\":[\"chinese_simplified\",\"chinese_traditional\"],\"静\":[\"chinese_simplified\"],\"补\":[\"chinese_simplified\"],\"评\":[\"chinese_simplified\"],\"翻\":[\"chinese_simplified\",\"chinese_traditional\"],\"肉\":[\"chinese_simplified\",\"chinese_traditional\"],\"践\":[\"chinese_simplified\"],\"尼\":[\"chinese_simplified\",\"chinese_traditional\"],\"衣\":[\"chinese_simplified\",\"chinese_traditional\"],\"宽\":[\"chinese_simplified\"],\"扬\":[\"chinese_simplified\"],\"棉\":[\"chinese_simplified\",\"chinese_traditional\"],\"希\":[\"chinese_simplified\",\"chinese_traditional\"],\"伤\":[\"chinese_simplified\"],\"操\":[\"chinese_simplified\",\"chinese_traditional\"],\"垂\":[\"chinese_simplified\",\"chinese_traditional\"],\"秋\":[\"chinese_simplified\",\"chinese_traditional\"],\"宜\":[\"chinese_simplified\",\"chinese_traditional\"],\"氢\":[\"chinese_simplified\"],\"套\":[\"chinese_simplified\",\"chinese_traditional\"],\"督\":[\"chinese_simplified\",\"chinese_traditional\"],\"振\":[\"chinese_simplified\",\"chinese_traditional\"],\"架\":[\"chinese_simplified\",\"chinese_traditional\"],\"亮\":[\"chinese_simplified\",\"chinese_traditional\"],\"末\":[\"chinese_simplified\",\"chinese_traditional\"],\"宪\":[\"chinese_simplified\"],\"庆\":[\"chinese_simplified\"],\"编\":[\"chinese_simplified\"],\"牛\":[\"chinese_simplified\",\"chinese_traditional\"],\"触\":[\"chinese_simplified\"],\"映\":[\"chinese_simplified\",\"chinese_traditional\"],\"雷\":[\"chinese_simplified\",\"chinese_traditional\"],\"销\":[\"chinese_simplified\"],\"诗\":[\"chinese_simplified\"],\"座\":[\"chinese_simplified\",\"chinese_traditional\"],\"居\":[\"chinese_simplified\",\"chinese_traditional\"],\"抓\":[\"chinese_simplified\",\"chinese_traditional\"],\"裂\":[\"chinese_simplified\",\"chinese_traditional\"],\"胞\":[\"chinese_simplified\",\"chinese_traditional\"],\"呼\":[\"chinese_simplified\",\"chinese_traditional\"],\"娘\":[\"chinese_simplified\",\"chinese_traditional\"],\"景\":[\"chinese_simplified\",\"chinese_traditional\"],\"威\":[\"chinese_simplified\",\"chinese_traditional\"],\"绿\":[\"chinese_simplified\"],\"晶\":[\"chinese_simplified\",\"chinese_traditional\"],\"厚\":[\"chinese_simplified\",\"chinese_traditional\"],\"盟\":[\"chinese_simplified\",\"chinese_traditional\"],\"衡\":[\"chinese_simplified\",\"chinese_traditional\"],\"鸡\":[\"chinese_simplified\"],\"孙\":[\"chinese_simplified\"],\"延\":[\"chinese_simplified\",\"chinese_traditional\"],\"危\":[\"chinese_simplified\",\"chinese_traditional\"],\"胶\":[\"chinese_simplified\"],\"屋\":[\"chinese_simplified\",\"chinese_traditional\"],\"乡\":[\"chinese_simplified\"],\"临\":[\"chinese_simplified\"],\"陆\":[\"chinese_simplified\"],\"顾\":[\"chinese_simplified\"],\"掉\":[\"chinese_simplified\",\"chinese_traditional\"],\"呀\":[\"chinese_simplified\",\"chinese_traditional\"],\"灯\":[\"chinese_simplified\"],\"岁\":[\"chinese_simplified\"],\"措\":[\"chinese_simplified\",\"chinese_traditional\"],\"束\":[\"chinese_simplified\",\"chinese_traditional\"],\"耐\":[\"chinese_simplified\",\"chinese_traditional\"],\"剧\":[\"chinese_simplified\"],\"玉\":[\"chinese_simplified\",\"chinese_traditional\"],\"赵\":[\"chinese_simplified\"],\"跳\":[\"chinese_simplified\",\"chinese_traditional\"],\"哥\":[\"chinese_simplified\",\"chinese_traditional\"],\"季\":[\"chinese_simplified\",\"chinese_traditional\"],\"课\":[\"chinese_simplified\"],\"凯\":[\"chinese_simplified\"],\"胡\":[\"chinese_simplified\",\"chinese_traditional\"],\"额\":[\"chinese_simplified\"],\"款\":[\"chinese_simplified\",\"chinese_traditional\"],\"绍\":[\"chinese_simplified\"],\"卷\":[\"chinese_simplified\",\"chinese_traditional\"],\"齐\":[\"chinese_simplified\"],\"伟\":[\"chinese_simplified\"],\"蒸\":[\"chinese_simplified\",\"chinese_traditional\"],\"殖\":[\"chinese_simplified\",\"chinese_traditional\"],\"永\":[\"chinese_simplified\",\"chinese_traditional\"],\"宗\":[\"chinese_simplified\",\"chinese_traditional\"],\"苗\":[\"chinese_simplified\",\"chinese_traditional\"],\"川\":[\"chinese_simplified\",\"chinese_traditional\"],\"炉\":[\"chinese_simplified\"],\"岩\":[\"chinese_simplified\",\"chinese_traditional\"],\"弱\":[\"chinese_simplified\",\"chinese_traditional\"],\"零\":[\"chinese_simplified\",\"chinese_traditional\"],\"杨\":[\"chinese_simplified\"],\"奏\":[\"chinese_simplified\",\"chinese_traditional\"],\"沿\":[\"chinese_simplified\",\"chinese_traditional\"],\"露\":[\"chinese_simplified\",\"chinese_traditional\"],\"杆\":[\"chinese_simplified\"],\"探\":[\"chinese_simplified\",\"chinese_traditional\"],\"滑\":[\"chinese_simplified\",\"chinese_traditional\"],\"镇\":[\"chinese_simplified\"],\"饭\":[\"chinese_simplified\"],\"浓\":[\"chinese_simplified\"],\"航\":[\"chinese_simplified\",\"chinese_traditional\"],\"怀\":[\"chinese_simplified\"],\"赶\":[\"chinese_simplified\"],\"库\":[\"chinese_simplified\"],\"夺\":[\"chinese_simplified\"],\"伊\":[\"chinese_simplified\",\"chinese_traditional\"],\"灵\":[\"chinese_simplified\"],\"税\":[\"chinese_simplified\"],\"途\":[\"chinese_simplified\",\"chinese_traditional\"],\"灭\":[\"chinese_simplified\"],\"赛\":[\"chinese_simplified\"],\"归\":[\"chinese_simplified\"],\"召\":[\"chinese_simplified\",\"chinese_traditional\"],\"鼓\":[\"chinese_simplified\",\"chinese_traditional\"],\"播\":[\"chinese_simplified\",\"chinese_traditional\"],\"盘\":[\"chinese_simplified\"],\"裁\":[\"chinese_simplified\",\"chinese_traditional\"],\"险\":[\"chinese_simplified\"],\"康\":[\"chinese_simplified\",\"chinese_traditional\"],\"唯\":[\"chinese_simplified\",\"chinese_traditional\"],\"录\":[\"chinese_simplified\"],\"菌\":[\"chinese_simplified\",\"chinese_traditional\"],\"纯\":[\"chinese_simplified\"],\"借\":[\"chinese_simplified\",\"chinese_traditional\"],\"糖\":[\"chinese_simplified\",\"chinese_traditional\"],\"盖\":[\"chinese_simplified\"],\"横\":[\"chinese_simplified\"],\"符\":[\"chinese_simplified\",\"chinese_traditional\"],\"私\":[\"chinese_simplified\",\"chinese_traditional\"],\"努\":[\"chinese_simplified\",\"chinese_traditional\"],\"堂\":[\"chinese_simplified\",\"chinese_traditional\"],\"域\":[\"chinese_simplified\",\"chinese_traditional\"],\"枪\":[\"chinese_simplified\"],\"润\":[\"chinese_simplified\"],\"幅\":[\"chinese_simplified\",\"chinese_traditional\"],\"哈\":[\"chinese_simplified\",\"chinese_traditional\"],\"竟\":[\"chinese_simplified\",\"chinese_traditional\"],\"熟\":[\"chinese_simplified\",\"chinese_traditional\"],\"虫\":[\"chinese_simplified\"],\"泽\":[\"chinese_simplified\"],\"脑\":[\"chinese_simplified\"],\"壤\":[\"chinese_simplified\",\"chinese_traditional\"],\"碳\":[\"chinese_simplified\",\"chinese_traditional\"],\"欧\":[\"chinese_simplified\"],\"遍\":[\"chinese_simplified\",\"chinese_traditional\"],\"侧\":[\"chinese_simplified\"],\"寨\":[\"chinese_simplified\",\"chinese_traditional\"],\"敢\":[\"chinese_simplified\",\"chinese_traditional\"],\"彻\":[\"chinese_simplified\"],\"虑\":[\"chinese_simplified\"],\"斜\":[\"chinese_simplified\",\"chinese_traditional\"],\"薄\":[\"chinese_simplified\",\"chinese_traditional\"],\"庭\":[\"chinese_simplified\",\"chinese_traditional\"],\"纳\":[\"chinese_simplified\"],\"弹\":[\"chinese_simplified\"],\"饲\":[\"chinese_simplified\"],\"伸\":[\"chinese_simplified\",\"chinese_traditional\"],\"折\":[\"chinese_simplified\",\"chinese_traditional\"],\"麦\":[\"chinese_simplified\"],\"湿\":[\"chinese_simplified\"],\"暗\":[\"chinese_simplified\",\"chinese_traditional\"],\"荷\":[\"chinese_simplified\",\"chinese_traditional\"],\"瓦\":[\"chinese_simplified\",\"chinese_traditional\"],\"塞\":[\"chinese_simplified\",\"chinese_traditional\"],\"床\":[\"chinese_simplified\",\"chinese_traditional\"],\"筑\":[\"chinese_simplified\"],\"恶\":[\"chinese_simplified\"],\"户\":[\"chinese_simplified\"],\"访\":[\"chinese_simplified\"],\"塔\":[\"chinese_simplified\",\"chinese_traditional\"],\"奇\":[\"chinese_simplified\",\"chinese_traditional\"],\"透\":[\"chinese_simplified\",\"chinese_traditional\"],\"梁\":[\"chinese_simplified\",\"chinese_traditional\"],\"刀\":[\"chinese_simplified\",\"chinese_traditional\"],\"旋\":[\"chinese_simplified\",\"chinese_traditional\"],\"迹\":[\"chinese_simplified\"],\"卡\":[\"chinese_simplified\",\"chinese_traditional\"],\"氯\":[\"chinese_simplified\",\"chinese_traditional\"],\"遇\":[\"chinese_simplified\",\"chinese_traditional\"],\"份\":[\"chinese_simplified\",\"chinese_traditional\"],\"毒\":[\"chinese_simplified\",\"chinese_traditional\"],\"泥\":[\"chinese_simplified\",\"chinese_traditional\"],\"退\":[\"chinese_simplified\",\"chinese_traditional\"],\"洗\":[\"chinese_simplified\",\"chinese_traditional\"],\"摆\":[\"chinese_simplified\"],\"灰\":[\"chinese_simplified\",\"chinese_traditional\"],\"彩\":[\"chinese_simplified\",\"chinese_traditional\"],\"卖\":[\"chinese_simplified\"],\"耗\":[\"chinese_simplified\",\"chinese_traditional\"],\"夏\":[\"chinese_simplified\",\"chinese_traditional\"],\"择\":[\"chinese_simplified\"],\"忙\":[\"chinese_simplified\",\"chinese_traditional\"],\"铜\":[\"chinese_simplified\"],\"献\":[\"chinese_simplified\"],\"硬\":[\"chinese_simplified\",\"chinese_traditional\"],\"予\":[\"chinese_simplified\",\"chinese_traditional\"],\"繁\":[\"chinese_simplified\",\"chinese_traditional\"],\"圈\":[\"chinese_simplified\",\"chinese_traditional\"],\"雪\":[\"chinese_simplified\",\"chinese_traditional\"],\"函\":[\"chinese_simplified\",\"chinese_traditional\"],\"亦\":[\"chinese_simplified\",\"chinese_traditional\"],\"抽\":[\"chinese_simplified\",\"chinese_traditional\"],\"篇\":[\"chinese_simplified\",\"chinese_traditional\"],\"阵\":[\"chinese_simplified\"],\"阴\":[\"chinese_simplified\"],\"丁\":[\"chinese_simplified\",\"chinese_traditional\"],\"尺\":[\"chinese_simplified\",\"chinese_traditional\"],\"追\":[\"chinese_simplified\",\"chinese_traditional\"],\"堆\":[\"chinese_simplified\",\"chinese_traditional\"],\"雄\":[\"chinese_simplified\",\"chinese_traditional\"],\"迎\":[\"chinese_simplified\",\"chinese_traditional\"],\"泛\":[\"chinese_simplified\",\"chinese_traditional\"],\"爸\":[\"chinese_simplified\",\"chinese_traditional\"],\"楼\":[\"chinese_simplified\"],\"避\":[\"chinese_simplified\",\"chinese_traditional\"],\"谋\":[\"chinese_simplified\"],\"吨\":[\"chinese_simplified\"],\"野\":[\"chinese_simplified\",\"chinese_traditional\"],\"猪\":[\"chinese_simplified\"],\"旗\":[\"chinese_simplified\",\"chinese_traditional\"],\"累\":[\"chinese_simplified\",\"chinese_traditional\"],\"偏\":[\"chinese_simplified\",\"chinese_traditional\"],\"典\":[\"chinese_simplified\",\"chinese_traditional\"],\"馆\":[\"chinese_simplified\"],\"索\":[\"chinese_simplified\",\"chinese_traditional\"],\"秦\":[\"chinese_simplified\",\"chinese_traditional\"],\"脂\":[\"chinese_simplified\",\"chinese_traditional\"],\"潮\":[\"chinese_simplified\",\"chinese_traditional\"],\"爷\":[\"chinese_simplified\"],\"豆\":[\"chinese_simplified\",\"chinese_traditional\"],\"忽\":[\"chinese_simplified\",\"chinese_traditional\"],\"托\":[\"chinese_simplified\",\"chinese_traditional\"],\"惊\":[\"chinese_simplified\"],\"塑\":[\"chinese_simplified\",\"chinese_traditional\"],\"遗\":[\"chinese_simplified\"],\"愈\":[\"chinese_simplified\",\"chinese_traditional\"],\"朱\":[\"chinese_simplified\",\"chinese_traditional\"],\"替\":[\"chinese_simplified\",\"chinese_traditional\"],\"纤\":[\"chinese_simplified\"],\"粗\":[\"chinese_simplified\",\"chinese_traditional\"],\"倾\":[\"chinese_simplified\"],\"尚\":[\"chinese_simplified\",\"chinese_traditional\"],\"痛\":[\"chinese_simplified\",\"chinese_traditional\"],\"楚\":[\"chinese_simplified\",\"chinese_traditional\"],\"谢\":[\"chinese_simplified\"],\"奋\":[\"chinese_simplified\"],\"购\":[\"chinese_simplified\"],\"磨\":[\"chinese_simplified\",\"chinese_traditional\"],\"君\":[\"chinese_simplified\",\"chinese_traditional\"],\"池\":[\"chinese_simplified\",\"chinese_traditional\"],\"旁\":[\"chinese_simplified\",\"chinese_traditional\"],\"碎\":[\"chinese_simplified\",\"chinese_traditional\"],\"骨\":[\"chinese_simplified\",\"chinese_traditional\"],\"监\":[\"chinese_simplified\"],\"捕\":[\"chinese_simplified\",\"chinese_traditional\"],\"弟\":[\"chinese_simplified\",\"chinese_traditional\"],\"暴\":[\"chinese_simplified\",\"chinese_traditional\"],\"割\":[\"chinese_simplified\",\"chinese_traditional\"],\"贯\":[\"chinese_simplified\"],\"殊\":[\"chinese_simplified\",\"chinese_traditional\"],\"释\":[\"chinese_simplified\"],\"词\":[\"chinese_simplified\"],\"亡\":[\"chinese_simplified\",\"chinese_traditional\"],\"壁\":[\"chinese_simplified\",\"chinese_traditional\"],\"顿\":[\"chinese_simplified\"],\"宝\":[\"chinese_simplified\"],\"午\":[\"chinese_simplified\",\"chinese_traditional\"],\"尘\":[\"chinese_simplified\"],\"闻\":[\"chinese_simplified\"],\"揭\":[\"chinese_simplified\",\"chinese_traditional\"],\"炮\":[\"chinese_simplified\",\"chinese_traditional\"],\"残\":[\"chinese_simplified\"],\"冬\":[\"chinese_simplified\",\"chinese_traditional\"],\"桥\":[\"chinese_simplified\"],\"妇\":[\"chinese_simplified\"],\"警\":[\"chinese_simplified\",\"chinese_traditional\"],\"综\":[\"chinese_simplified\"],\"招\":[\"chinese_simplified\",\"chinese_traditional\"],\"吴\":[\"chinese_simplified\"],\"付\":[\"chinese_simplified\",\"chinese_traditional\"],\"浮\":[\"chinese_simplified\",\"chinese_traditional\"],\"遭\":[\"chinese_simplified\",\"chinese_traditional\"],\"徐\":[\"chinese_simplified\",\"chinese_traditional\"],\"您\":[\"chinese_simplified\",\"chinese_traditional\"],\"摇\":[\"chinese_simplified\"],\"谷\":[\"chinese_simplified\",\"chinese_traditional\"],\"赞\":[\"chinese_simplified\"],\"箱\":[\"chinese_simplified\",\"chinese_traditional\"],\"隔\":[\"chinese_simplified\",\"chinese_traditional\"],\"订\":[\"chinese_simplified\"],\"男\":[\"chinese_simplified\",\"chinese_traditional\"],\"吹\":[\"chinese_simplified\",\"chinese_traditional\"],\"园\":[\"chinese_simplified\"],\"纷\":[\"chinese_simplified\"],\"唐\":[\"chinese_simplified\",\"chinese_traditional\"],\"败\":[\"chinese_simplified\"],\"宋\":[\"chinese_simplified\",\"chinese_traditional\"],\"玻\":[\"chinese_simplified\",\"chinese_traditional\"],\"巨\":[\"chinese_simplified\",\"chinese_traditional\"],\"耕\":[\"chinese_simplified\",\"chinese_traditional\"],\"坦\":[\"chinese_simplified\",\"chinese_traditional\"],\"荣\":[\"chinese_simplified\"],\"闭\":[\"chinese_simplified\"],\"湾\":[\"chinese_simplified\"],\"键\":[\"chinese_simplified\"],\"凡\":[\"chinese_simplified\",\"chinese_traditional\"],\"驻\":[\"chinese_simplified\"],\"锅\":[\"chinese_simplified\"],\"救\":[\"chinese_simplified\",\"chinese_traditional\"],\"恩\":[\"chinese_simplified\",\"chinese_traditional\"],\"剥\":[\"chinese_simplified\"],\"凝\":[\"chinese_simplified\",\"chinese_traditional\"],\"碱\":[\"chinese_simplified\"],\"齿\":[\"chinese_simplified\"],\"截\":[\"chinese_simplified\",\"chinese_traditional\"],\"炼\":[\"chinese_simplified\"],\"麻\":[\"chinese_simplified\",\"chinese_traditional\"],\"纺\":[\"chinese_simplified\"],\"禁\":[\"chinese_simplified\",\"chinese_traditional\"],\"废\":[\"chinese_simplified\"],\"盛\":[\"chinese_simplified\",\"chinese_traditional\"],\"版\":[\"chinese_simplified\",\"chinese_traditional\"],\"缓\":[\"chinese_simplified\"],\"净\":[\"chinese_simplified\"],\"睛\":[\"chinese_simplified\",\"chinese_traditional\"],\"昌\":[\"chinese_simplified\",\"chinese_traditional\"],\"婚\":[\"chinese_simplified\",\"chinese_traditional\"],\"涉\":[\"chinese_simplified\",\"chinese_traditional\"],\"筒\":[\"chinese_simplified\",\"chinese_traditional\"],\"嘴\":[\"chinese_simplified\",\"chinese_traditional\"],\"插\":[\"chinese_simplified\",\"chinese_traditional\"],\"岸\":[\"chinese_simplified\",\"chinese_traditional\"],\"朗\":[\"chinese_simplified\",\"chinese_traditional\"],\"庄\":[\"chinese_simplified\"],\"街\":[\"chinese_simplified\",\"chinese_traditional\"],\"藏\":[\"chinese_simplified\",\"chinese_traditional\"],\"姑\":[\"chinese_simplified\",\"chinese_traditional\"],\"贸\":[\"chinese_simplified\"],\"腐\":[\"chinese_simplified\",\"chinese_traditional\"],\"奴\":[\"chinese_simplified\",\"chinese_traditional\"],\"啦\":[\"chinese_simplified\",\"chinese_traditional\"],\"惯\":[\"chinese_simplified\"],\"乘\":[\"chinese_simplified\",\"chinese_traditional\"],\"伙\":[\"chinese_simplified\"],\"恢\":[\"chinese_simplified\",\"chinese_traditional\"],\"匀\":[\"chinese_simplified\"],\"纱\":[\"chinese_simplified\"],\"扎\":[\"chinese_simplified\",\"chinese_traditional\"],\"辩\":[\"chinese_simplified\"],\"耳\":[\"chinese_simplified\",\"chinese_traditional\"],\"彪\":[\"chinese_simplified\",\"chinese_traditional\"],\"臣\":[\"chinese_simplified\",\"chinese_traditional\"],\"亿\":[\"chinese_simplified\"],\"璃\":[\"chinese_simplified\",\"chinese_traditional\"],\"抵\":[\"chinese_simplified\",\"chinese_traditional\"],\"脉\":[\"chinese_simplified\"],\"秀\":[\"chinese_simplified\",\"chinese_traditional\"],\"萨\":[\"chinese_simplified\"],\"俄\":[\"chinese_simplified\",\"chinese_traditional\"],\"网\":[\"chinese_simplified\"],\"舞\":[\"chinese_simplified\",\"chinese_traditional\"],\"店\":[\"chinese_simplified\",\"chinese_traditional\"],\"喷\":[\"chinese_simplified\"],\"纵\":[\"chinese_simplified\"],\"寸\":[\"chinese_simplified\",\"chinese_traditional\"],\"汗\":[\"chinese_simplified\",\"chinese_traditional\"],\"挂\":[\"chinese_simplified\"],\"洪\":[\"chinese_simplified\",\"chinese_traditional\"],\"贺\":[\"chinese_simplified\"],\"闪\":[\"chinese_simplified\"],\"柬\":[\"chinese_simplified\",\"chinese_traditional\"],\"爆\":[\"chinese_simplified\",\"chinese_traditional\"],\"烯\":[\"chinese_simplified\",\"chinese_traditional\"],\"津\":[\"chinese_simplified\",\"chinese_traditional\"],\"稻\":[\"chinese_simplified\",\"chinese_traditional\"],\"墙\":[\"chinese_simplified\"],\"软\":[\"chinese_simplified\"],\"勇\":[\"chinese_simplified\",\"chinese_traditional\"],\"像\":[\"chinese_simplified\",\"chinese_traditional\"],\"滚\":[\"chinese_simplified\"],\"厘\":[\"chinese_simplified\",\"chinese_traditional\"],\"蒙\":[\"chinese_simplified\",\"chinese_traditional\"],\"芳\":[\"chinese_simplified\",\"chinese_traditional\"],\"肯\":[\"chinese_simplified\",\"chinese_traditional\"],\"坡\":[\"chinese_simplified\",\"chinese_traditional\"],\"柱\":[\"chinese_simplified\",\"chinese_traditional\"],\"荡\":[\"chinese_simplified\"],\"腿\":[\"chinese_simplified\",\"chinese_traditional\"],\"仪\":[\"chinese_simplified\"],\"旅\":[\"chinese_simplified\",\"chinese_traditional\"],\"尾\":[\"chinese_simplified\",\"chinese_traditional\"],\"轧\":[\"chinese_simplified\"],\"冰\":[\"chinese_simplified\",\"chinese_traditional\"],\"贡\":[\"chinese_simplified\"],\"登\":[\"chinese_simplified\",\"chinese_traditional\"],\"黎\":[\"chinese_simplified\",\"chinese_traditional\"],\"削\":[\"chinese_simplified\",\"chinese_traditional\"],\"钻\":[\"chinese_simplified\"],\"勒\":[\"chinese_simplified\",\"chinese_traditional\"],\"逃\":[\"chinese_simplified\",\"chinese_traditional\"],\"障\":[\"chinese_simplified\",\"chinese_traditional\"],\"氨\":[\"chinese_simplified\",\"chinese_traditional\"],\"郭\":[\"chinese_simplified\",\"chinese_traditional\"],\"峰\":[\"chinese_simplified\",\"chinese_traditional\"],\"币\":[\"chinese_simplified\"],\"港\":[\"chinese_simplified\",\"chinese_traditional\"],\"伏\":[\"chinese_simplified\",\"chinese_traditional\"],\"轨\":[\"chinese_simplified\"],\"亩\":[\"chinese_simplified\"],\"毕\":[\"chinese_simplified\"],\"擦\":[\"chinese_simplified\",\"chinese_traditional\"],\"莫\":[\"chinese_simplified\",\"chinese_traditional\"],\"刺\":[\"chinese_simplified\",\"chinese_traditional\"],\"浪\":[\"chinese_simplified\",\"chinese_traditional\"],\"秘\":[\"chinese_simplified\",\"chinese_traditional\"],\"援\":[\"chinese_simplified\",\"chinese_traditional\"],\"株\":[\"chinese_simplified\",\"chinese_traditional\"],\"健\":[\"chinese_simplified\",\"chinese_traditional\"],\"售\":[\"chinese_simplified\",\"chinese_traditional\"],\"股\":[\"chinese_simplified\",\"chinese_traditional\"],\"岛\":[\"chinese_simplified\"],\"甘\":[\"chinese_simplified\",\"chinese_traditional\"],\"泡\":[\"chinese_simplified\",\"chinese_traditional\"],\"睡\":[\"chinese_simplified\",\"chinese_traditional\"],\"童\":[\"chinese_simplified\",\"chinese_traditional\"],\"铸\":[\"chinese_simplified\"],\"汤\":[\"chinese_simplified\"],\"阀\":[\"chinese_simplified\"],\"休\":[\"chinese_simplified\",\"chinese_traditional\"],\"汇\":[\"chinese_simplified\"],\"舍\":[\"chinese_simplified\",\"chinese_traditional\"],\"牧\":[\"chinese_simplified\",\"chinese_traditional\"],\"绕\":[\"chinese_simplified\"],\"炸\":[\"chinese_simplified\",\"chinese_traditional\"],\"哲\":[\"chinese_simplified\",\"chinese_traditional\"],\"磷\":[\"chinese_simplified\",\"chinese_traditional\"],\"绩\":[\"chinese_simplified\"],\"朋\":[\"chinese_simplified\",\"chinese_traditional\"],\"淡\":[\"chinese_simplified\",\"chinese_traditional\"],\"尖\":[\"chinese_simplified\",\"chinese_traditional\"],\"启\":[\"chinese_simplified\"],\"陷\":[\"chinese_simplified\",\"chinese_traditional\"],\"柴\":[\"chinese_simplified\",\"chinese_traditional\"],\"呈\":[\"chinese_simplified\",\"chinese_traditional\"],\"徒\":[\"chinese_simplified\",\"chinese_traditional\"],\"颜\":[\"chinese_simplified\"],\"泪\":[\"chinese_simplified\"],\"稍\":[\"chinese_simplified\",\"chinese_traditional\"],\"忘\":[\"chinese_simplified\",\"chinese_traditional\"],\"泵\":[\"chinese_simplified\",\"chinese_traditional\"],\"蓝\":[\"chinese_simplified\"],\"拖\":[\"chinese_simplified\",\"chinese_traditional\"],\"洞\":[\"chinese_simplified\",\"chinese_traditional\"],\"授\":[\"chinese_simplified\",\"chinese_traditional\"],\"镜\":[\"chinese_simplified\"],\"辛\":[\"chinese_simplified\",\"chinese_traditional\"],\"壮\":[\"chinese_simplified\"],\"锋\":[\"chinese_simplified\"],\"贫\":[\"chinese_simplified\"],\"虚\":[\"chinese_simplified\"],\"弯\":[\"chinese_simplified\"],\"摩\":[\"chinese_simplified\",\"chinese_traditional\"],\"泰\":[\"chinese_simplified\",\"chinese_traditional\"],\"幼\":[\"chinese_simplified\",\"chinese_traditional\"],\"廷\":[\"chinese_simplified\",\"chinese_traditional\"],\"尊\":[\"chinese_simplified\",\"chinese_traditional\"],\"窗\":[\"chinese_simplified\",\"chinese_traditional\"],\"纲\":[\"chinese_simplified\"],\"弄\":[\"chinese_simplified\",\"chinese_traditional\"],\"隶\":[\"chinese_simplified\"],\"疑\":[\"chinese_simplified\",\"chinese_traditional\"],\"氏\":[\"chinese_simplified\",\"chinese_traditional\"],\"宫\":[\"chinese_simplified\"],\"姐\":[\"chinese_simplified\",\"chinese_traditional\"],\"震\":[\"chinese_simplified\",\"chinese_traditional\"],\"瑞\":[\"chinese_simplified\",\"chinese_traditional\"],\"怪\":[\"chinese_simplified\",\"chinese_traditional\"],\"尤\":[\"chinese_simplified\",\"chinese_traditional\"],\"琴\":[\"chinese_simplified\",\"chinese_traditional\"],\"循\":[\"chinese_simplified\",\"chinese_traditional\"],\"描\":[\"chinese_simplified\",\"chinese_traditional\"],\"膜\":[\"chinese_simplified\",\"chinese_traditional\"],\"违\":[\"chinese_simplified\"],\"夹\":[\"chinese_simplified\"],\"腰\":[\"chinese_simplified\",\"chinese_traditional\"],\"缘\":[\"chinese_simplified\"],\"珠\":[\"chinese_simplified\",\"chinese_traditional\"],\"穷\":[\"chinese_simplified\"],\"森\":[\"chinese_simplified\",\"chinese_traditional\"],\"枝\":[\"chinese_simplified\",\"chinese_traditional\"],\"竹\":[\"chinese_simplified\",\"chinese_traditional\"],\"沟\":[\"chinese_simplified\"],\"催\":[\"chinese_simplified\",\"chinese_traditional\"],\"绳\":[\"chinese_simplified\"],\"忆\":[\"chinese_simplified\"],\"邦\":[\"chinese_simplified\",\"chinese_traditional\"],\"剩\":[\"chinese_simplified\",\"chinese_traditional\"],\"幸\":[\"chinese_simplified\",\"chinese_traditional\"],\"浆\":[\"chinese_simplified\"],\"栏\":[\"chinese_simplified\"],\"拥\":[\"chinese_simplified\"],\"牙\":[\"chinese_simplified\",\"chinese_traditional\"],\"贮\":[\"chinese_simplified\"],\"礼\":[\"chinese_simplified\"],\"滤\":[\"chinese_simplified\"],\"钠\":[\"chinese_simplified\"],\"纹\":[\"chinese_simplified\"],\"罢\":[\"chinese_simplified\"],\"拍\":[\"chinese_simplified\",\"chinese_traditional\"],\"咱\":[\"chinese_simplified\",\"chinese_traditional\"],\"喊\":[\"chinese_simplified\",\"chinese_traditional\"],\"袖\":[\"chinese_simplified\",\"chinese_traditional\"],\"埃\":[\"chinese_simplified\",\"chinese_traditional\"],\"勤\":[\"chinese_simplified\",\"chinese_traditional\"],\"罚\":[\"chinese_simplified\"],\"焦\":[\"chinese_simplified\",\"chinese_traditional\"],\"潜\":[\"chinese_simplified\"],\"伍\":[\"chinese_simplified\",\"chinese_traditional\"],\"墨\":[\"chinese_simplified\",\"chinese_traditional\"],\"欲\":[\"chinese_simplified\",\"chinese_traditional\"],\"缝\":[\"chinese_simplified\"],\"姓\":[\"chinese_simplified\",\"chinese_traditional\"],\"刊\":[\"chinese_simplified\",\"chinese_traditional\"],\"饱\":[\"chinese_simplified\"],\"仿\":[\"chinese_simplified\",\"chinese_traditional\"],\"奖\":[\"chinese_simplified\"],\"铝\":[\"chinese_simplified\"],\"鬼\":[\"chinese_simplified\",\"chinese_traditional\"],\"丽\":[\"chinese_simplified\"],\"跨\":[\"chinese_simplified\",\"chinese_traditional\"],\"默\":[\"chinese_simplified\",\"chinese_traditional\"],\"挖\":[\"chinese_simplified\",\"chinese_traditional\"],\"链\":[\"chinese_simplified\"],\"扫\":[\"chinese_simplified\"],\"喝\":[\"chinese_simplified\",\"chinese_traditional\"],\"袋\":[\"chinese_simplified\",\"chinese_traditional\"],\"炭\":[\"chinese_simplified\",\"chinese_traditional\"],\"污\":[\"chinese_simplified\",\"chinese_traditional\"],\"幕\":[\"chinese_simplified\",\"chinese_traditional\"],\"诸\":[\"chinese_simplified\"],\"弧\":[\"chinese_simplified\",\"chinese_traditional\"],\"励\":[\"chinese_simplified\"],\"梅\":[\"chinese_simplified\",\"chinese_traditional\"],\"奶\":[\"chinese_simplified\",\"chinese_traditional\"],\"洁\":[\"chinese_simplified\"],\"灾\":[\"chinese_simplified\"],\"舟\":[\"chinese_simplified\",\"chinese_traditional\"],\"鉴\":[\"chinese_simplified\"],\"苯\":[\"chinese_simplified\",\"chinese_traditional\"],\"讼\":[\"chinese_simplified\"],\"抱\":[\"chinese_simplified\",\"chinese_traditional\"],\"毁\":[\"chinese_simplified\"],\"懂\":[\"chinese_simplified\",\"chinese_traditional\"],\"寒\":[\"chinese_simplified\",\"chinese_traditional\"],\"智\":[\"chinese_simplified\",\"chinese_traditional\"],\"埔\":[\"chinese_simplified\",\"chinese_traditional\"],\"寄\":[\"chinese_simplified\",\"chinese_traditional\"],\"届\":[\"chinese_simplified\"],\"跃\":[\"chinese_simplified\"],\"渡\":[\"chinese_simplified\",\"chinese_traditional\"],\"挑\":[\"chinese_simplified\",\"chinese_traditional\"],\"丹\":[\"chinese_simplified\",\"chinese_traditional\"],\"艰\":[\"chinese_simplified\"],\"贝\":[\"chinese_simplified\"],\"碰\":[\"chinese_simplified\",\"chinese_traditional\"],\"拔\":[\"chinese_simplified\",\"chinese_traditional\"],\"爹\":[\"chinese_simplified\",\"chinese_traditional\"],\"戴\":[\"chinese_simplified\",\"chinese_traditional\"],\"码\":[\"chinese_simplified\"],\"梦\":[\"chinese_simplified\"],\"芽\":[\"chinese_simplified\",\"chinese_traditional\"],\"熔\":[\"chinese_simplified\",\"chinese_traditional\"],\"赤\":[\"chinese_simplified\",\"chinese_traditional\"],\"渔\":[\"chinese_simplified\"],\"哭\":[\"chinese_simplified\",\"chinese_traditional\"],\"敬\":[\"chinese_simplified\",\"chinese_traditional\"],\"颗\":[\"chinese_simplified\"],\"奔\":[\"chinese_simplified\",\"chinese_traditional\"],\"铅\":[\"chinese_simplified\"],\"仲\":[\"chinese_simplified\",\"chinese_traditional\"],\"虎\":[\"chinese_simplified\",\"chinese_traditional\"],\"稀\":[\"chinese_simplified\",\"chinese_traditional\"],\"妹\":[\"chinese_simplified\",\"chinese_traditional\"],\"乏\":[\"chinese_simplified\",\"chinese_traditional\"],\"珍\":[\"chinese_simplified\",\"chinese_traditional\"],\"申\":[\"chinese_simplified\",\"chinese_traditional\"],\"桌\":[\"chinese_simplified\",\"chinese_traditional\"],\"遵\":[\"chinese_simplified\",\"chinese_traditional\"],\"允\":[\"chinese_simplified\",\"chinese_traditional\"],\"隆\":[\"chinese_simplified\",\"chinese_traditional\"],\"螺\":[\"chinese_simplified\",\"chinese_traditional\"],\"仓\":[\"chinese_simplified\"],\"魏\":[\"chinese_simplified\",\"chinese_traditional\"],\"锐\":[\"chinese_simplified\"],\"晓\":[\"chinese_simplified\"],\"氮\":[\"chinese_simplified\",\"chinese_traditional\"],\"兼\":[\"chinese_simplified\",\"chinese_traditional\"],\"隐\":[\"chinese_simplified\"],\"碍\":[\"chinese_simplified\"],\"赫\":[\"chinese_simplified\",\"chinese_traditional\"],\"拨\":[\"chinese_simplified\"],\"忠\":[\"chinese_simplified\",\"chinese_traditional\"],\"肃\":[\"chinese_simplified\"],\"缸\":[\"chinese_simplified\",\"chinese_traditional\"],\"牵\":[\"chinese_simplified\"],\"抢\":[\"chinese_simplified\"],\"博\":[\"chinese_simplified\",\"chinese_traditional\"],\"巧\":[\"chinese_simplified\",\"chinese_traditional\"],\"壳\":[\"chinese_simplified\"],\"兄\":[\"chinese_simplified\",\"chinese_traditional\"],\"杜\":[\"chinese_simplified\",\"chinese_traditional\"],\"讯\":[\"chinese_simplified\"],\"诚\":[\"chinese_simplified\"],\"碧\":[\"chinese_simplified\",\"chinese_traditional\"],\"祥\":[\"chinese_simplified\",\"chinese_traditional\"],\"柯\":[\"chinese_simplified\",\"chinese_traditional\"],\"页\":[\"chinese_simplified\"],\"巡\":[\"chinese_simplified\",\"chinese_traditional\"],\"矩\":[\"chinese_simplified\",\"chinese_traditional\"],\"悲\":[\"chinese_simplified\",\"chinese_traditional\"],\"灌\":[\"chinese_simplified\",\"chinese_traditional\"],\"龄\":[\"chinese_simplified\"],\"伦\":[\"chinese_simplified\"],\"票\":[\"chinese_simplified\",\"chinese_traditional\"],\"寻\":[\"chinese_simplified\"],\"桂\":[\"chinese_simplified\",\"chinese_traditional\"],\"铺\":[\"chinese_simplified\"],\"圣\":[\"chinese_simplified\"],\"恐\":[\"chinese_simplified\",\"chinese_traditional\"],\"恰\":[\"chinese_simplified\",\"chinese_traditional\"],\"郑\":[\"chinese_simplified\"],\"趣\":[\"chinese_simplified\",\"chinese_traditional\"],\"抬\":[\"chinese_simplified\",\"chinese_traditional\"],\"荒\":[\"chinese_simplified\",\"chinese_traditional\"],\"腾\":[\"chinese_simplified\"],\"贴\":[\"chinese_simplified\"],\"柔\":[\"chinese_simplified\",\"chinese_traditional\"],\"滴\":[\"chinese_simplified\",\"chinese_traditional\"],\"猛\":[\"chinese_simplified\",\"chinese_traditional\"],\"阔\":[\"chinese_simplified\"],\"辆\":[\"chinese_simplified\"],\"妻\":[\"chinese_simplified\",\"chinese_traditional\"],\"填\":[\"chinese_simplified\",\"chinese_traditional\"],\"撤\":[\"chinese_simplified\",\"chinese_traditional\"],\"储\":[\"chinese_simplified\"],\"签\":[\"chinese_simplified\"],\"闹\":[\"chinese_simplified\"],\"扰\":[\"chinese_simplified\"],\"紫\":[\"chinese_simplified\",\"chinese_traditional\"],\"砂\":[\"chinese_simplified\",\"chinese_traditional\"],\"递\":[\"chinese_simplified\"],\"戏\":[\"chinese_simplified\"],\"吊\":[\"chinese_simplified\",\"chinese_traditional\"],\"陶\":[\"chinese_simplified\",\"chinese_traditional\"],\"伐\":[\"chinese_simplified\",\"chinese_traditional\"],\"喂\":[\"chinese_simplified\"],\"疗\":[\"chinese_simplified\"],\"瓶\":[\"chinese_simplified\",\"chinese_traditional\"],\"婆\":[\"chinese_simplified\",\"chinese_traditional\"],\"抚\":[\"chinese_simplified\"],\"臂\":[\"chinese_simplified\",\"chinese_traditional\"],\"摸\":[\"chinese_simplified\",\"chinese_traditional\"],\"忍\":[\"chinese_simplified\",\"chinese_traditional\"],\"虾\":[\"chinese_simplified\"],\"蜡\":[\"chinese_simplified\"],\"邻\":[\"chinese_simplified\"],\"胸\":[\"chinese_simplified\",\"chinese_traditional\"],\"巩\":[\"chinese_simplified\"],\"挤\":[\"chinese_simplified\"],\"偶\":[\"chinese_simplified\",\"chinese_traditional\"],\"弃\":[\"chinese_simplified\"],\"槽\":[\"chinese_simplified\",\"chinese_traditional\"],\"劲\":[\"chinese_simplified\"],\"乳\":[\"chinese_simplified\",\"chinese_traditional\"],\"邓\":[\"chinese_simplified\"],\"吉\":[\"chinese_simplified\",\"chinese_traditional\"],\"仁\":[\"chinese_simplified\",\"chinese_traditional\"],\"烂\":[\"chinese_simplified\"],\"砖\":[\"chinese_simplified\"],\"租\":[\"chinese_simplified\",\"chinese_traditional\"],\"乌\":[\"chinese_simplified\"],\"舰\":[\"chinese_simplified\"],\"伴\":[\"chinese_simplified\",\"chinese_traditional\"],\"瓜\":[\"chinese_simplified\",\"chinese_traditional\"],\"浅\":[\"chinese_simplified\"],\"丙\":[\"chinese_simplified\",\"chinese_traditional\"],\"暂\":[\"chinese_simplified\"],\"燥\":[\"chinese_simplified\",\"chinese_traditional\"],\"橡\":[\"chinese_simplified\",\"chinese_traditional\"],\"柳\":[\"chinese_simplified\",\"chinese_traditional\"],\"迷\":[\"chinese_simplified\",\"chinese_traditional\"],\"暖\":[\"chinese_simplified\",\"chinese_traditional\"],\"牌\":[\"chinese_simplified\",\"chinese_traditional\"],\"秧\":[\"chinese_simplified\",\"chinese_traditional\"],\"胆\":[\"chinese_simplified\"],\"详\":[\"chinese_simplified\"],\"簧\":[\"chinese_simplified\",\"chinese_traditional\"],\"踏\":[\"chinese_simplified\",\"chinese_traditional\"],\"瓷\":[\"chinese_simplified\",\"chinese_traditional\"],\"谱\":[\"chinese_simplified\"],\"呆\":[\"chinese_simplified\",\"chinese_traditional\"],\"宾\":[\"chinese_simplified\"],\"糊\":[\"chinese_simplified\",\"chinese_traditional\"],\"洛\":[\"chinese_simplified\",\"chinese_traditional\"],\"辉\":[\"chinese_simplified\"],\"愤\":[\"chinese_simplified\"],\"竞\":[\"chinese_simplified\"],\"隙\":[\"chinese_simplified\",\"chinese_traditional\"],\"怒\":[\"chinese_simplified\",\"chinese_traditional\"],\"粘\":[\"chinese_simplified\",\"chinese_traditional\"],\"乃\":[\"chinese_simplified\",\"chinese_traditional\"],\"绪\":[\"chinese_simplified\"],\"肩\":[\"chinese_simplified\",\"chinese_traditional\"],\"籍\":[\"chinese_simplified\",\"chinese_traditional\"],\"敏\":[\"chinese_simplified\",\"chinese_traditional\"],\"涂\":[\"chinese_simplified\"],\"熙\":[\"chinese_simplified\",\"chinese_traditional\"],\"皆\":[\"chinese_simplified\",\"chinese_traditional\"],\"侦\":[\"chinese_simplified\"],\"悬\":[\"chinese_simplified\"],\"掘\":[\"chinese_simplified\",\"chinese_traditional\"],\"享\":[\"chinese_simplified\",\"chinese_traditional\"],\"纠\":[\"chinese_simplified\"],\"醒\":[\"chinese_simplified\",\"chinese_traditional\"],\"狂\":[\"chinese_simplified\",\"chinese_traditional\"],\"锁\":[\"chinese_simplified\"],\"淀\":[\"chinese_simplified\",\"chinese_traditional\"],\"恨\":[\"chinese_simplified\",\"chinese_traditional\"],\"牲\":[\"chinese_simplified\",\"chinese_traditional\"],\"霸\":[\"chinese_simplified\",\"chinese_traditional\"],\"爬\":[\"chinese_simplified\",\"chinese_traditional\"],\"赏\":[\"chinese_simplified\"],\"逆\":[\"chinese_simplified\",\"chinese_traditional\"],\"玩\":[\"chinese_simplified\",\"chinese_traditional\"],\"陵\":[\"chinese_simplified\",\"chinese_traditional\"],\"祝\":[\"chinese_simplified\",\"chinese_traditional\"],\"秒\":[\"chinese_simplified\",\"chinese_traditional\"],\"浙\":[\"chinese_simplified\",\"chinese_traditional\"],\"貌\":[\"chinese_simplified\",\"chinese_traditional\"],\"役\":[\"chinese_simplified\",\"chinese_traditional\"],\"彼\":[\"chinese_simplified\",\"chinese_traditional\"],\"悉\":[\"chinese_simplified\",\"chinese_traditional\"],\"鸭\":[\"chinese_simplified\"],\"趋\":[\"chinese_simplified\"],\"凤\":[\"chinese_simplified\"],\"晨\":[\"chinese_simplified\",\"chinese_traditional\"],\"畜\":[\"chinese_simplified\",\"chinese_traditional\"],\"辈\":[\"chinese_simplified\"],\"秩\":[\"chinese_simplified\",\"chinese_traditional\"],\"卵\":[\"chinese_simplified\",\"chinese_traditional\"],\"署\":[\"chinese_simplified\",\"chinese_traditional\"],\"梯\":[\"chinese_simplified\",\"chinese_traditional\"],\"炎\":[\"chinese_simplified\",\"chinese_traditional\"],\"滩\":[\"chinese_simplified\"],\"棋\":[\"chinese_simplified\",\"chinese_traditional\"],\"驱\":[\"chinese_simplified\"],\"筛\":[\"chinese_simplified\"],\"峡\":[\"chinese_simplified\"],\"冒\":[\"chinese_simplified\",\"chinese_traditional\"],\"啥\":[\"chinese_simplified\",\"chinese_traditional\"],\"寿\":[\"chinese_simplified\"],\"译\":[\"chinese_simplified\"],\"浸\":[\"chinese_simplified\",\"chinese_traditional\"],\"泉\":[\"chinese_simplified\",\"chinese_traditional\"],\"帽\":[\"chinese_simplified\",\"chinese_traditional\"],\"迟\":[\"chinese_simplified\"],\"硅\":[\"chinese_simplified\"],\"疆\":[\"chinese_simplified\",\"chinese_traditional\"],\"贷\":[\"chinese_simplified\"],\"漏\":[\"chinese_simplified\",\"chinese_traditional\"],\"稿\":[\"chinese_simplified\",\"chinese_traditional\"],\"冠\":[\"chinese_simplified\",\"chinese_traditional\"],\"嫩\":[\"chinese_simplified\",\"chinese_traditional\"],\"胁\":[\"chinese_simplified\"],\"芯\":[\"chinese_simplified\",\"chinese_traditional\"],\"牢\":[\"chinese_simplified\",\"chinese_traditional\"],\"叛\":[\"chinese_simplified\",\"chinese_traditional\"],\"蚀\":[\"chinese_simplified\"],\"奥\":[\"chinese_simplified\"],\"鸣\":[\"chinese_simplified\"],\"岭\":[\"chinese_simplified\"],\"羊\":[\"chinese_simplified\",\"chinese_traditional\"],\"凭\":[\"chinese_simplified\"],\"串\":[\"chinese_simplified\",\"chinese_traditional\"],\"塘\":[\"chinese_simplified\",\"chinese_traditional\"],\"绘\":[\"chinese_simplified\"],\"酵\":[\"chinese_simplified\",\"chinese_traditional\"],\"融\":[\"chinese_simplified\",\"chinese_traditional\"],\"盆\":[\"chinese_simplified\",\"chinese_traditional\"],\"锡\":[\"chinese_simplified\"],\"庙\":[\"chinese_simplified\"],\"筹\":[\"chinese_simplified\"],\"冻\":[\"chinese_simplified\"],\"辅\":[\"chinese_simplified\"],\"摄\":[\"chinese_simplified\"],\"袭\":[\"chinese_simplified\"],\"筋\":[\"chinese_simplified\",\"chinese_traditional\"],\"拒\":[\"chinese_simplified\",\"chinese_traditional\"],\"僚\":[\"chinese_simplified\",\"chinese_traditional\"],\"旱\":[\"chinese_simplified\",\"chinese_traditional\"],\"钾\":[\"chinese_simplified\"],\"鸟\":[\"chinese_simplified\"],\"漆\":[\"chinese_simplified\",\"chinese_traditional\"],\"沈\":[\"chinese_simplified\",\"chinese_traditional\"],\"眉\":[\"chinese_simplified\",\"chinese_traditional\"],\"疏\":[\"chinese_simplified\",\"chinese_traditional\"],\"添\":[\"chinese_simplified\",\"chinese_traditional\"],\"棒\":[\"chinese_simplified\",\"chinese_traditional\"],\"穗\":[\"chinese_simplified\",\"chinese_traditional\"],\"硝\":[\"chinese_simplified\",\"chinese_traditional\"],\"韩\":[\"chinese_simplified\"],\"逼\":[\"chinese_simplified\",\"chinese_traditional\"],\"扭\":[\"chinese_simplified\",\"chinese_traditional\"],\"侨\":[\"chinese_simplified\"],\"凉\":[\"chinese_simplified\"],\"挺\":[\"chinese_simplified\",\"chinese_traditional\"],\"碗\":[\"chinese_simplified\",\"chinese_traditional\"],\"栽\":[\"chinese_simplified\",\"chinese_traditional\"],\"炒\":[\"chinese_simplified\",\"chinese_traditional\"],\"杯\":[\"chinese_simplified\",\"chinese_traditional\"],\"患\":[\"chinese_simplified\",\"chinese_traditional\"],\"馏\":[\"chinese_simplified\"],\"劝\":[\"chinese_simplified\"],\"豪\":[\"chinese_simplified\",\"chinese_traditional\"],\"辽\":[\"chinese_simplified\"],\"勃\":[\"chinese_simplified\",\"chinese_traditional\"],\"鸿\":[\"chinese_simplified\"],\"旦\":[\"chinese_simplified\",\"chinese_traditional\"],\"吏\":[\"chinese_simplified\",\"chinese_traditional\"],\"拜\":[\"chinese_simplified\",\"chinese_traditional\"],\"狗\":[\"chinese_simplified\",\"chinese_traditional\"],\"埋\":[\"chinese_simplified\",\"chinese_traditional\"],\"辊\":[\"chinese_simplified\"],\"掩\":[\"chinese_simplified\",\"chinese_traditional\"],\"饮\":[\"chinese_simplified\"],\"搬\":[\"chinese_simplified\",\"chinese_traditional\"],\"骂\":[\"chinese_simplified\"],\"辞\":[\"chinese_simplified\"],\"勾\":[\"chinese_simplified\",\"chinese_traditional\"],\"扣\":[\"chinese_simplified\",\"chinese_traditional\"],\"估\":[\"chinese_simplified\",\"chinese_traditional\"],\"蒋\":[\"chinese_simplified\"],\"绒\":[\"chinese_simplified\"],\"雾\":[\"chinese_simplified\"],\"丈\":[\"chinese_simplified\",\"chinese_traditional\"],\"朵\":[\"chinese_simplified\",\"chinese_traditional\"],\"姆\":[\"chinese_simplified\",\"chinese_traditional\"],\"拟\":[\"chinese_simplified\"],\"宇\":[\"chinese_simplified\",\"chinese_traditional\"],\"辑\":[\"chinese_simplified\"],\"陕\":[\"chinese_simplified\"],\"雕\":[\"chinese_simplified\",\"chinese_traditional\"],\"偿\":[\"chinese_simplified\"],\"蓄\":[\"chinese_simplified\",\"chinese_traditional\"],\"崇\":[\"chinese_simplified\",\"chinese_traditional\"],\"剪\":[\"chinese_simplified\",\"chinese_traditional\"],\"倡\":[\"chinese_simplified\",\"chinese_traditional\"],\"厅\":[\"chinese_simplified\"],\"咬\":[\"chinese_simplified\",\"chinese_traditional\"],\"驶\":[\"chinese_simplified\"],\"薯\":[\"chinese_simplified\",\"chinese_traditional\"],\"刷\":[\"chinese_simplified\",\"chinese_traditional\"],\"斥\":[\"chinese_simplified\",\"chinese_traditional\"],\"番\":[\"chinese_simplified\",\"chinese_traditional\"],\"赋\":[\"chinese_simplified\"],\"奉\":[\"chinese_simplified\",\"chinese_traditional\"],\"佛\":[\"chinese_simplified\",\"chinese_traditional\"],\"浇\":[\"chinese_simplified\"],\"漫\":[\"chinese_simplified\",\"chinese_traditional\"],\"曼\":[\"chinese_simplified\",\"chinese_traditional\"],\"扇\":[\"chinese_simplified\",\"chinese_traditional\"],\"钙\":[\"chinese_simplified\"],\"桃\":[\"chinese_simplified\",\"chinese_traditional\"],\"扶\":[\"chinese_simplified\",\"chinese_traditional\"],\"仔\":[\"chinese_simplified\",\"chinese_traditional\"],\"返\":[\"chinese_simplified\",\"chinese_traditional\"],\"俗\":[\"chinese_simplified\",\"chinese_traditional\"],\"亏\":[\"chinese_simplified\"],\"腔\":[\"chinese_simplified\",\"chinese_traditional\"],\"鞋\":[\"chinese_simplified\",\"chinese_traditional\"],\"棱\":[\"chinese_simplified\",\"chinese_traditional\"],\"覆\":[\"chinese_simplified\",\"chinese_traditional\"],\"框\":[\"chinese_simplified\",\"chinese_traditional\"],\"悄\":[\"chinese_simplified\",\"chinese_traditional\"],\"叔\":[\"chinese_simplified\",\"chinese_traditional\"],\"撞\":[\"chinese_simplified\",\"chinese_traditional\"],\"骗\":[\"chinese_simplified\"],\"勘\":[\"chinese_simplified\",\"chinese_traditional\"],\"旺\":[\"chinese_simplified\",\"chinese_traditional\"],\"沸\":[\"chinese_simplified\",\"chinese_traditional\"],\"孤\":[\"chinese_simplified\",\"chinese_traditional\"],\"吐\":[\"chinese_simplified\",\"chinese_traditional\"],\"孟\":[\"chinese_simplified\",\"chinese_traditional\"],\"渠\":[\"chinese_simplified\",\"chinese_traditional\"],\"屈\":[\"chinese_simplified\",\"chinese_traditional\"],\"疾\":[\"chinese_simplified\",\"chinese_traditional\"],\"妙\":[\"chinese_simplified\",\"chinese_traditional\"],\"惜\":[\"chinese_simplified\",\"chinese_traditional\"],\"仰\":[\"chinese_simplified\",\"chinese_traditional\"],\"狠\":[\"chinese_simplified\",\"chinese_traditional\"],\"胀\":[\"chinese_simplified\"],\"谐\":[\"chinese_simplified\"],\"抛\":[\"chinese_simplified\"],\"霉\":[\"chinese_simplified\"],\"桑\":[\"chinese_simplified\",\"chinese_traditional\"],\"岗\":[\"chinese_simplified\"],\"嘛\":[\"chinese_simplified\",\"chinese_traditional\"],\"衰\":[\"chinese_simplified\",\"chinese_traditional\"],\"盗\":[\"chinese_simplified\"],\"渗\":[\"chinese_simplified\"],\"脏\":[\"chinese_simplified\"],\"赖\":[\"chinese_simplified\"],\"涌\":[\"chinese_simplified\"],\"甜\":[\"chinese_simplified\",\"chinese_traditional\"],\"曹\":[\"chinese_simplified\",\"chinese_traditional\"],\"阅\":[\"chinese_simplified\"],\"肌\":[\"chinese_simplified\",\"chinese_traditional\"],\"哩\":[\"chinese_simplified\",\"chinese_traditional\"],\"厉\":[\"chinese_simplified\"],\"烃\":[\"chinese_simplified\"],\"纬\":[\"chinese_simplified\"],\"毅\":[\"chinese_simplified\",\"chinese_traditional\"],\"昨\":[\"chinese_simplified\",\"chinese_traditional\"],\"伪\":[\"chinese_simplified\"],\"症\":[\"chinese_simplified\",\"chinese_traditional\"],\"煮\":[\"chinese_simplified\",\"chinese_traditional\"],\"叹\":[\"chinese_simplified\"],\"钉\":[\"chinese_simplified\"],\"搭\":[\"chinese_simplified\",\"chinese_traditional\"],\"茎\":[\"chinese_simplified\"],\"笼\":[\"chinese_simplified\"],\"酷\":[\"chinese_simplified\",\"chinese_traditional\"],\"偷\":[\"chinese_simplified\",\"chinese_traditional\"],\"弓\":[\"chinese_simplified\",\"chinese_traditional\"],\"锥\":[\"chinese_simplified\"],\"恒\":[\"chinese_simplified\"],\"杰\":[\"chinese_simplified\"],\"坑\":[\"chinese_simplified\",\"chinese_traditional\"],\"鼻\":[\"chinese_simplified\",\"chinese_traditional\"],\"翼\":[\"chinese_simplified\",\"chinese_traditional\"],\"纶\":[\"chinese_simplified\"],\"叙\":[\"chinese_simplified\"],\"狱\":[\"chinese_simplified\"],\"逮\":[\"chinese_simplified\",\"chinese_traditional\"],\"罐\":[\"chinese_simplified\",\"chinese_traditional\"],\"络\":[\"chinese_simplified\"],\"棚\":[\"chinese_simplified\",\"chinese_traditional\"],\"抑\":[\"chinese_simplified\",\"chinese_traditional\"],\"膨\":[\"chinese_simplified\",\"chinese_traditional\"],\"蔬\":[\"chinese_simplified\",\"chinese_traditional\"],\"寺\":[\"chinese_simplified\",\"chinese_traditional\"],\"骤\":[\"chinese_simplified\"],\"穆\":[\"chinese_simplified\",\"chinese_traditional\"],\"冶\":[\"chinese_simplified\",\"chinese_traditional\"],\"枯\":[\"chinese_simplified\",\"chinese_traditional\"],\"册\":[\"chinese_simplified\"],\"尸\":[\"chinese_simplified\"],\"凸\":[\"chinese_simplified\",\"chinese_traditional\"],\"绅\":[\"chinese_simplified\"],\"坯\":[\"chinese_simplified\",\"chinese_traditional\"],\"牺\":[\"chinese_simplified\"],\"焰\":[\"chinese_simplified\",\"chinese_traditional\"],\"轰\":[\"chinese_simplified\"],\"欣\":[\"chinese_simplified\",\"chinese_traditional\"],\"晋\":[\"chinese_simplified\"],\"瘦\":[\"chinese_simplified\",\"chinese_traditional\"],\"御\":[\"chinese_simplified\"],\"锭\":[\"chinese_simplified\"],\"锦\":[\"chinese_simplified\"],\"丧\":[\"chinese_simplified\"],\"旬\":[\"chinese_simplified\",\"chinese_traditional\"],\"锻\":[\"chinese_simplified\"],\"垄\":[\"chinese_simplified\"],\"搜\":[\"chinese_simplified\",\"chinese_traditional\"],\"扑\":[\"chinese_simplified\"],\"邀\":[\"chinese_simplified\",\"chinese_traditional\"],\"亭\":[\"chinese_simplified\",\"chinese_traditional\"],\"酯\":[\"chinese_simplified\",\"chinese_traditional\"],\"迈\":[\"chinese_simplified\"],\"舒\":[\"chinese_simplified\",\"chinese_traditional\"],\"脆\":[\"chinese_simplified\",\"chinese_traditional\"],\"酶\":[\"chinese_simplified\",\"chinese_traditional\"],\"闲\":[\"chinese_simplified\"],\"忧\":[\"chinese_simplified\"],\"酚\":[\"chinese_simplified\",\"chinese_traditional\"],\"顽\":[\"chinese_simplified\"],\"羽\":[\"chinese_simplified\",\"chinese_traditional\"],\"涨\":[\"chinese_simplified\"],\"卸\":[\"chinese_simplified\",\"chinese_traditional\"],\"仗\":[\"chinese_simplified\",\"chinese_traditional\"],\"陪\":[\"chinese_simplified\",\"chinese_traditional\"],\"辟\":[\"chinese_simplified\"],\"惩\":[\"chinese_simplified\"],\"杭\":[\"chinese_simplified\",\"chinese_traditional\"],\"姚\":[\"chinese_simplified\",\"chinese_traditional\"],\"肚\":[\"chinese_simplified\",\"chinese_traditional\"],\"捉\":[\"chinese_simplified\",\"chinese_traditional\"],\"飘\":[\"chinese_simplified\"],\"漂\":[\"chinese_simplified\",\"chinese_traditional\"],\"昆\":[\"chinese_simplified\",\"chinese_traditional\"],\"欺\":[\"chinese_simplified\",\"chinese_traditional\"],\"吾\":[\"chinese_simplified\",\"chinese_traditional\"],\"郎\":[\"chinese_simplified\",\"chinese_traditional\"],\"烷\":[\"chinese_simplified\",\"chinese_traditional\"],\"汁\":[\"chinese_simplified\",\"chinese_traditional\"],\"呵\":[\"chinese_simplified\",\"chinese_traditional\"],\"饰\":[\"chinese_simplified\"],\"萧\":[\"chinese_simplified\"],\"雅\":[\"chinese_simplified\",\"chinese_traditional\"],\"邮\":[\"chinese_simplified\"],\"迁\":[\"chinese_simplified\"],\"燕\":[\"chinese_simplified\",\"chinese_traditional\"],\"撒\":[\"chinese_simplified\",\"chinese_traditional\"],\"姻\":[\"chinese_simplified\",\"chinese_traditional\"],\"赴\":[\"chinese_simplified\",\"chinese_traditional\"],\"宴\":[\"chinese_simplified\",\"chinese_traditional\"],\"烦\":[\"chinese_simplified\"],\"债\":[\"chinese_simplified\"],\"帐\":[\"chinese_simplified\"],\"斑\":[\"chinese_simplified\",\"chinese_traditional\"],\"铃\":[\"chinese_simplified\"],\"旨\":[\"chinese_simplified\",\"chinese_traditional\"],\"醇\":[\"chinese_simplified\",\"chinese_traditional\"],\"董\":[\"chinese_simplified\",\"chinese_traditional\"],\"饼\":[\"chinese_simplified\"],\"雏\":[\"chinese_simplified\"],\"姿\":[\"chinese_simplified\",\"chinese_traditional\"],\"拌\":[\"chinese_simplified\",\"chinese_traditional\"],\"傅\":[\"chinese_simplified\",\"chinese_traditional\"],\"腹\":[\"chinese_simplified\",\"chinese_traditional\"],\"妥\":[\"chinese_simplified\",\"chinese_traditional\"],\"揉\":[\"chinese_simplified\",\"chinese_traditional\"],\"贤\":[\"chinese_simplified\"],\"拆\":[\"chinese_simplified\",\"chinese_traditional\"],\"歪\":[\"chinese_simplified\",\"chinese_traditional\"],\"葡\":[\"chinese_simplified\",\"chinese_traditional\"],\"胺\":[\"chinese_simplified\",\"chinese_traditional\"],\"丢\":[\"chinese_simplified\"],\"浩\":[\"chinese_simplified\",\"chinese_traditional\"],\"徽\":[\"chinese_simplified\",\"chinese_traditional\"],\"昂\":[\"chinese_simplified\",\"chinese_traditional\"],\"垫\":[\"chinese_simplified\"],\"挡\":[\"chinese_simplified\"],\"览\":[\"chinese_simplified\"],\"贪\":[\"chinese_simplified\"],\"慰\":[\"chinese_simplified\",\"chinese_traditional\"],\"缴\":[\"chinese_simplified\"],\"汪\":[\"chinese_simplified\",\"chinese_traditional\"],\"慌\":[\"chinese_simplified\",\"chinese_traditional\"],\"冯\":[\"chinese_simplified\"],\"诺\":[\"chinese_simplified\"],\"姜\":[\"chinese_simplified\",\"chinese_traditional\"],\"谊\":[\"chinese_simplified\"],\"凶\":[\"chinese_simplified\"],\"劣\":[\"chinese_simplified\",\"chinese_traditional\"],\"诬\":[\"chinese_simplified\"],\"耀\":[\"chinese_simplified\",\"chinese_traditional\"],\"昏\":[\"chinese_simplified\",\"chinese_traditional\"],\"躺\":[\"chinese_simplified\",\"chinese_traditional\"],\"盈\":[\"chinese_simplified\",\"chinese_traditional\"],\"骑\":[\"chinese_simplified\"],\"乔\":[\"chinese_simplified\"],\"溪\":[\"chinese_simplified\",\"chinese_traditional\"],\"丛\":[\"chinese_simplified\"],\"卢\":[\"chinese_simplified\"],\"抹\":[\"chinese_simplified\",\"chinese_traditional\"],\"闷\":[\"chinese_simplified\"],\"咨\":[\"chinese_simplified\"],\"刮\":[\"chinese_simplified\",\"chinese_traditional\"],\"驾\":[\"chinese_simplified\"],\"缆\":[\"chinese_simplified\"],\"悟\":[\"chinese_simplified\",\"chinese_traditional\"],\"摘\":[\"chinese_simplified\",\"chinese_traditional\"],\"铒\":[\"chinese_simplified\"],\"掷\":[\"chinese_simplified\"],\"颇\":[\"chinese_simplified\"],\"幻\":[\"chinese_simplified\",\"chinese_traditional\"],\"柄\":[\"chinese_simplified\",\"chinese_traditional\"],\"惠\":[\"chinese_simplified\",\"chinese_traditional\"],\"惨\":[\"chinese_simplified\"],\"佳\":[\"chinese_simplified\",\"chinese_traditional\"],\"仇\":[\"chinese_simplified\",\"chinese_traditional\"],\"腊\":[\"chinese_simplified\"],\"窝\":[\"chinese_simplified\"],\"涤\":[\"chinese_simplified\"],\"剑\":[\"chinese_simplified\"],\"瞧\":[\"chinese_simplified\",\"chinese_traditional\"],\"堡\":[\"chinese_simplified\",\"chinese_traditional\"],\"泼\":[\"chinese_simplified\"],\"葱\":[\"chinese_simplified\"],\"罩\":[\"chinese_simplified\",\"chinese_traditional\"],\"霍\":[\"chinese_simplified\",\"chinese_traditional\"],\"捞\":[\"chinese_simplified\"],\"胎\":[\"chinese_simplified\",\"chinese_traditional\"],\"苍\":[\"chinese_simplified\"],\"滨\":[\"chinese_simplified\"],\"俩\":[\"chinese_simplified\"],\"捅\":[\"chinese_simplified\",\"chinese_traditional\"],\"湘\":[\"chinese_simplified\",\"chinese_traditional\"],\"砍\":[\"chinese_simplified\",\"chinese_traditional\"],\"霞\":[\"chinese_simplified\",\"chinese_traditional\"],\"邵\":[\"chinese_simplified\",\"chinese_traditional\"],\"萄\":[\"chinese_simplified\",\"chinese_traditional\"],\"疯\":[\"chinese_simplified\"],\"淮\":[\"chinese_simplified\",\"chinese_traditional\"],\"遂\":[\"chinese_simplified\",\"chinese_traditional\"],\"熊\":[\"chinese_simplified\",\"chinese_traditional\"],\"粪\":[\"chinese_simplified\"],\"烘\":[\"chinese_simplified\",\"chinese_traditional\"],\"宿\":[\"chinese_simplified\",\"chinese_traditional\"],\"档\":[\"chinese_simplified\"],\"戈\":[\"chinese_simplified\",\"chinese_traditional\"],\"驳\":[\"chinese_simplified\"],\"嫂\":[\"chinese_simplified\",\"chinese_traditional\"],\"裕\":[\"chinese_simplified\",\"chinese_traditional\"],\"徙\":[\"chinese_simplified\",\"chinese_traditional\"],\"箭\":[\"chinese_simplified\",\"chinese_traditional\"],\"捐\":[\"chinese_simplified\",\"chinese_traditional\"],\"肠\":[\"chinese_simplified\"],\"撑\":[\"chinese_simplified\"],\"晒\":[\"chinese_simplified\"],\"辨\":[\"chinese_simplified\",\"chinese_traditional\"],\"殿\":[\"chinese_simplified\",\"chinese_traditional\"],\"莲\":[\"chinese_simplified\"],\"摊\":[\"chinese_simplified\"],\"搅\":[\"chinese_simplified\"],\"酱\":[\"chinese_simplified\"],\"屏\":[\"chinese_simplified\",\"chinese_traditional\"],\"疫\":[\"chinese_simplified\",\"chinese_traditional\"],\"哀\":[\"chinese_simplified\",\"chinese_traditional\"],\"蔡\":[\"chinese_simplified\",\"chinese_traditional\"],\"堵\":[\"chinese_simplified\",\"chinese_traditional\"],\"沫\":[\"chinese_simplified\",\"chinese_traditional\"],\"皱\":[\"chinese_simplified\"],\"畅\":[\"chinese_simplified\"],\"叠\":[\"chinese_simplified\"],\"阁\":[\"chinese_simplified\"],\"莱\":[\"chinese_simplified\"],\"敲\":[\"chinese_simplified\",\"chinese_traditional\"],\"辖\":[\"chinese_simplified\"],\"钩\":[\"chinese_simplified\"],\"痕\":[\"chinese_simplified\",\"chinese_traditional\"],\"坝\":[\"chinese_simplified\"],\"巷\":[\"chinese_simplified\",\"chinese_traditional\"],\"饿\":[\"chinese_simplified\"],\"祸\":[\"chinese_simplified\"],\"丘\":[\"chinese_simplified\",\"chinese_traditional\"],\"玄\":[\"chinese_simplified\",\"chinese_traditional\"],\"溜\":[\"chinese_simplified\",\"chinese_traditional\"],\"曰\":[\"chinese_simplified\",\"chinese_traditional\"],\"逻\":[\"chinese_simplified\"],\"彭\":[\"chinese_simplified\",\"chinese_traditional\"],\"尝\":[\"chinese_simplified\"],\"卿\":[\"chinese_simplified\",\"chinese_traditional\"],\"妨\":[\"chinese_simplified\",\"chinese_traditional\"],\"艇\":[\"chinese_simplified\",\"chinese_traditional\"],\"吞\":[\"chinese_simplified\",\"chinese_traditional\"],\"韦\":[\"chinese_simplified\"],\"怨\":[\"chinese_simplified\",\"chinese_traditional\"],\"矮\":[\"chinese_simplified\",\"chinese_traditional\"],\"歇\":[\"chinese_simplified\",\"chinese_traditional\"],\"這\":[\"chinese_traditional\"],\"為\":[\"chinese_traditional\"],\"個\":[\"chinese_traditional\"],\"國\":[\"chinese_traditional\"],\"時\":[\"chinese_traditional\"],\"來\":[\"chinese_traditional\"],\"們\":[\"chinese_traditional\"],\"於\":[\"chinese_traditional\"],\"對\":[\"chinese_traditional\"],\"會\":[\"chinese_traditional\"],\"發\":[\"chinese_traditional\"],\"動\":[\"chinese_traditional\"],\"過\":[\"chinese_traditional\"],\"說\":[\"chinese_traditional\"],\"產\":[\"chinese_traditional\"],\"種\":[\"chinese_traditional\"],\"後\":[\"chinese_traditional\"],\"學\":[\"chinese_traditional\"],\"經\":[\"chinese_traditional\"],\"進\":[\"chinese_traditional\"],\"著\":[\"chinese_traditional\"],\"電\":[\"chinese_traditional\"],\"裡\":[\"chinese_traditional\"],\"現\":[\"chinese_traditional\"],\"實\":[\"chinese_traditional\"],\"兩\":[\"chinese_traditional\"],\"體\":[\"chinese_traditional\"],\"機\":[\"chinese_traditional\"],\"當\":[\"chinese_traditional\"],\"點\":[\"chinese_traditional\"],\"從\":[\"chinese_traditional\"],\"業\":[\"chinese_traditional\"],\"應\":[\"chinese_traditional\"],\"開\":[\"chinese_traditional\"],\"還\":[\"chinese_traditional\"],\"義\":[\"chinese_traditional\"],\"間\":[\"chinese_traditional\"],\"樣\":[\"chinese_traditional\"],\"與\":[\"chinese_traditional\"],\"關\":[\"chinese_traditional\"],\"線\":[\"chinese_traditional\"],\"內\":[\"chinese_traditional\"],\"數\":[\"chinese_traditional\"],\"麼\":[\"chinese_traditional\"],\"質\":[\"chinese_traditional\"],\"氣\":[\"chinese_traditional\"],\"變\":[\"chinese_traditional\"],\"條\":[\"chinese_traditional\"],\"沒\":[\"chinese_traditional\"],\"結\":[\"chinese_traditional\"],\"問\":[\"chinese_traditional\"],\"無\":[\"chinese_traditional\"],\"軍\":[\"chinese_traditional\"],\"並\":[\"chinese_traditional\"],\"題\":[\"chinese_traditional\"],\"黨\":[\"chinese_traditional\"],\"員\":[\"chinese_traditional\"],\"總\":[\"chinese_traditional\"],\"設\":[\"chinese_traditional\"],\"長\":[\"chinese_traditional\"],\"頭\":[\"chinese_traditional\"],\"資\":[\"chinese_traditional\"],\"邊\":[\"chinese_traditional\"],\"級\":[\"chinese_traditional\"],\"圖\":[\"chinese_traditional\"],\"統\":[\"chinese_traditional\"],\"較\":[\"chinese_traditional\"],\"將\":[\"chinese_traditional\"],\"組\":[\"chinese_traditional\"],\"見\":[\"chinese_traditional\"],\"計\":[\"chinese_traditional\"],\"別\":[\"chinese_traditional\"],\"論\":[\"chinese_traditional\"],\"運\":[\"chinese_traditional\"],\"農\":[\"chinese_traditional\"],\"幾\":[\"chinese_traditional\"],\"區\":[\"chinese_traditional\"],\"強\":[\"chinese_traditional\"],\"決\":[\"chinese_traditional\"],\"幹\":[\"chinese_traditional\"],\"戰\":[\"chinese_traditional\"],\"則\":[\"chinese_traditional\"],\"據\":[\"chinese_traditional\"],\"處\":[\"chinese_traditional\"],\"隊\":[\"chinese_traditional\"],\"給\":[\"chinese_traditional\"],\"門\":[\"chinese_traditional\"],\"規\":[\"chinese_traditional\"],\"熱\":[\"chinese_traditional\"],\"領\":[\"chinese_traditional\"],\"東\":[\"chinese_traditional\"],\"導\":[\"chinese_traditional\"],\"壓\":[\"chinese_traditional\"],\"爭\":[\"chinese_traditional\"],\"濟\":[\"chinese_traditional\"],\"階\":[\"chinese_traditional\"],\"術\":[\"chinese_traditional\"],\"極\":[\"chinese_traditional\"],\"聯\":[\"chinese_traditional\"],\"認\":[\"chinese_traditional\"],\"權\":[\"chinese_traditional\"],\"證\":[\"chinese_traditional\"],\"採\":[\"chinese_traditional\"],\"轉\":[\"chinese_traditional\"],\"單\":[\"chinese_traditional\"],\"風\":[\"chinese_traditional\"],\"帶\":[\"chinese_traditional\"],\"場\":[\"chinese_traditional\"],\"車\":[\"chinese_traditional\"],\"務\":[\"chinese_traditional\"],\"萬\":[\"chinese_traditional\"],\"達\":[\"chinese_traditional\"],\"積\":[\"chinese_traditional\"],\"議\":[\"chinese_traditional\"],\"聲\":[\"chinese_traditional\"],\"報\":[\"chinese_traditional\"],\"鬥\":[\"chinese_traditional\"],\"類\":[\"chinese_traditional\"],\"離\":[\"chinese_traditional\"],\"華\":[\"chinese_traditional\"],\"確\":[\"chinese_traditional\"],\"張\":[\"chinese_traditional\"],\"馬\":[\"chinese_traditional\"],\"節\":[\"chinese_traditional\"],\"話\":[\"chinese_traditional\"],\"況\":[\"chinese_traditional\"],\"溫\":[\"chinese_traditional\"],\"傳\":[\"chinese_traditional\"],\"許\":[\"chinese_traditional\"],\"廣\":[\"chinese_traditional\"],\"記\":[\"chinese_traditional\"],\"觀\":[\"chinese_traditional\"],\"織\":[\"chinese_traditional\"],\"裝\":[\"chinese_traditional\"],\"眾\":[\"chinese_traditional\"],\"書\":[\"chinese_traditional\"],\"兒\":[\"chinese_traditional\"],\"須\":[\"chinese_traditional\"],\"際\":[\"chinese_traditional\"],\"驗\":[\"chinese_traditional\"],\"連\":[\"chinese_traditional\"],\"斷\":[\"chinese_traditional\"],\"難\":[\"chinese_traditional\"],\"礦\":[\"chinese_traditional\"],\"週\":[\"chinese_traditional\"],\"備\":[\"chinese_traditional\"],\"辦\":[\"chinese_traditional\"],\"習\":[\"chinese_traditional\"],\"響\":[\"chinese_traditional\"],\"約\":[\"chinese_traditional\"],\"勞\":[\"chinese_traditional\"],\"團\":[\"chinese_traditional\"],\"歷\":[\"chinese_traditional\"],\"構\":[\"chinese_traditional\"],\"稱\":[\"chinese_traditional\"],\"準\":[\"chinese_traditional\"],\"號\":[\"chinese_traditional\"],\"維\":[\"chinese_traditional\"],\"劃\":[\"chinese_traditional\"],\"選\":[\"chinese_traditional\"],\"標\":[\"chinese_traditional\"],\"寫\":[\"chinese_traditional\"],\"親\":[\"chinese_traditional\"],\"養\":[\"chinese_traditional\"],\"層\":[\"chinese_traditional\"],\"卻\":[\"chinese_traditional\"],\"專\":[\"chinese_traditional\"],\"狀\":[\"chinese_traditional\"],\"廠\":[\"chinese_traditional\"],\"識\":[\"chinese_traditional\"],\"適\":[\"chinese_traditional\"],\"屬\":[\"chinese_traditional\"],\"圓\":[\"chinese_traditional\"],\"調\":[\"chinese_traditional\"],\"滿\":[\"chinese_traditional\"],\"縣\":[\"chinese_traditional\"],\"參\":[\"chinese_traditional\"],\"紅\":[\"chinese_traditional\"],\"細\":[\"chinese_traditional\"],\"聽\":[\"chinese_traditional\"],\"該\":[\"chinese_traditional\"],\"鐵\":[\"chinese_traditional\"],\"價\":[\"chinese_traditional\"],\"嚴\":[\"chinese_traditional\"],\"隨\":[\"chinese_traditional\"],\"蘇\":[\"chinese_traditional\"],\"爾\":[\"chinese_traditional\"],\"講\":[\"chinese_traditional\"],\"黃\":[\"chinese_traditional\"],\"顯\":[\"chinese_traditional\"],\"談\":[\"chinese_traditional\"],\"藝\":[\"chinese_traditional\"],\"營\":[\"chinese_traditional\"],\"項\":[\"chinese_traditional\"],\"舉\":[\"chinese_traditional\"],\"勢\":[\"chinese_traditional\"],\"幫\":[\"chinese_traditional\"],\"輪\":[\"chinese_traditional\"],\"亞\":[\"chinese_traditional\"],\"師\":[\"chinese_traditional\"],\"圍\":[\"chinese_traditional\"],\"遠\":[\"chinese_traditional\"],\"態\":[\"chinese_traditional\"],\"減\":[\"chinese_traditional\"],\"樹\":[\"chinese_traditional\"],\"葉\":[\"chinese_traditional\"],\"魚\":[\"chinese_traditional\"],\"視\":[\"chinese_traditional\"],\"僅\":[\"chinese_traditional\"],\"費\":[\"chinese_traditional\"],\"緊\":[\"chinese_traditional\"],\"愛\":[\"chinese_traditional\"],\"續\":[\"chinese_traditional\"],\"輕\":[\"chinese_traditional\"],\"試\":[\"chinese_traditional\"],\"護\":[\"chinese_traditional\"],\"練\":[\"chinese_traditional\"],\"負\":[\"chinese_traditional\"],\"擊\":[\"chinese_traditional\"],\"繼\":[\"chinese_traditional\"],\"興\":[\"chinese_traditional\"],\"餘\":[\"chinese_traditional\"],\"堅\":[\"chinese_traditional\"],\"輸\":[\"chinese_traditional\"],\"夠\":[\"chinese_traditional\"],\"筆\":[\"chinese_traditional\"],\"佔\":[\"chinese_traditional\"],\"財\":[\"chinese_traditional\"],\"職\":[\"chinese_traditional\"],\"覺\":[\"chinese_traditional\"],\"漢\":[\"chinese_traditional\"],\"畫\":[\"chinese_traditional\"],\"雖\":[\"chinese_traditional\"],\"雜\":[\"chinese_traditional\"],\"飛\":[\"chinese_traditional\"],\"檢\":[\"chinese_traditional\"],\"昇\":[\"chinese_traditional\"],\"陽\":[\"chinese_traditional\"],\"創\":[\"chinese_traditional\"],\"壞\":[\"chinese_traditional\"],\"徑\":[\"chinese_traditional\"],\"換\":[\"chinese_traditional\"],\"鋼\":[\"chinese_traditional\"],\"責\":[\"chinese_traditional\"],\"簡\":[\"chinese_traditional\"],\"錢\":[\"chinese_traditional\"],\"盡\":[\"chinese_traditional\"],\"衝\":[\"chinese_traditional\"],\"獨\":[\"chinese_traditional\"],\"環\":[\"chinese_traditional\"],\"雙\":[\"chinese_traditional\"],\"請\":[\"chinese_traditional\"],\"讓\":[\"chinese_traditional\"],\"軸\":[\"chinese_traditional\"],\"紀\":[\"chinese_traditional\"],\"優\":[\"chinese_traditional\"],\"頂\":[\"chinese_traditional\"],\"礎\":[\"chinese_traditional\"],\"載\":[\"chinese_traditional\"],\"敵\":[\"chinese_traditional\"],\"勝\":[\"chinese_traditional\"],\"絕\":[\"chinese_traditional\"],\"塊\":[\"chinese_traditional\"],\"劑\":[\"chinese_traditional\"],\"測\":[\"chinese_traditional\"],\"絲\":[\"chinese_traditional\"],\"協\":[\"chinese_traditional\"],\"訴\":[\"chinese_traditional\"],\"陳\":[\"chinese_traditional\"],\"羅\":[\"chinese_traditional\"],\"鹽\":[\"chinese_traditional\"],\"錯\":[\"chinese_traditional\"],\"頻\":[\"chinese_traditional\"],\"終\":[\"chinese_traditional\"],\"雲\":[\"chinese_traditional\"],\"衛\":[\"chinese_traditional\"],\"燒\":[\"chinese_traditional\"],\"遊\":[\"chinese_traditional\"],\"舊\":[\"chinese_traditional\"],\"貨\":[\"chinese_traditional\"],\"損\":[\"chinese_traditional\"],\"預\":[\"chinese_traditional\"],\"穩\":[\"chinese_traditional\"],\"媽\":[\"chinese_traditional\"],\"擴\":[\"chinese_traditional\"],\"銀\":[\"chinese_traditional\"],\"語\":[\"chinese_traditional\"],\"揮\":[\"chinese_traditional\"],\"紙\":[\"chinese_traditional\"],\"醫\":[\"chinese_traditional\"],\"嗎\":[\"chinese_traditional\"],\"針\":[\"chinese_traditional\"],\"劉\":[\"chinese_traditional\"],\"誤\":[\"chinese_traditional\"],\"訓\":[\"chinese_traditional\"],\"願\":[\"chinese_traditional\"],\"審\":[\"chinese_traditional\"],\"獲\":[\"chinese_traditional\"],\"鮮\":[\"chinese_traditional\"],\"糧\":[\"chinese_traditional\"],\"脫\":[\"chinese_traditional\"],\"龍\":[\"chinese_traditional\"],\"漸\":[\"chinese_traditional\"],\"歡\":[\"chinese_traditional\"],\"剛\":[\"chinese_traditional\"],\"謂\":[\"chinese_traditional\"],\"討\":[\"chinese_traditional\"],\"亂\":[\"chinese_traditional\"],\"殺\":[\"chinese_traditional\"],\"藥\":[\"chinese_traditional\"],\"寧\":[\"chinese_traditional\"],\"魯\":[\"chinese_traditional\"],\"貴\":[\"chinese_traditional\"],\"鐘\":[\"chinese_traditional\"],\"讀\":[\"chinese_traditional\"],\"豐\":[\"chinese_traditional\"],\"蘭\":[\"chinese_traditional\"],\"擔\":[\"chinese_traditional\"],\"執\":[\"chinese_traditional\"],\"樂\":[\"chinese_traditional\"],\"誰\":[\"chinese_traditional\"],\"順\":[\"chinese_traditional\"],\"煙\":[\"chinese_traditional\"],\"縮\":[\"chinese_traditional\"],\"徵\":[\"chinese_traditional\"],\"臉\":[\"chinese_traditional\"],\"腳\":[\"chinese_traditional\"],\"異\":[\"chinese_traditional\"],\"買\":[\"chinese_traditional\"],\"靜\":[\"chinese_traditional\"],\"補\":[\"chinese_traditional\"],\"評\":[\"chinese_traditional\"],\"踐\":[\"chinese_traditional\"],\"寬\":[\"chinese_traditional\"],\"揚\":[\"chinese_traditional\"],\"傷\":[\"chinese_traditional\"],\"氫\":[\"chinese_traditional\"],\"憲\":[\"chinese_traditional\"],\"慶\":[\"chinese_traditional\"],\"編\":[\"chinese_traditional\"],\"觸\":[\"chinese_traditional\"],\"銷\":[\"chinese_traditional\"],\"詩\":[\"chinese_traditional\"],\"綠\":[\"chinese_traditional\"],\"雞\":[\"chinese_traditional\"],\"孫\":[\"chinese_traditional\"],\"膠\":[\"chinese_traditional\"],\"鄉\":[\"chinese_traditional\"],\"臨\":[\"chinese_traditional\"],\"陸\":[\"chinese_traditional\"],\"顧\":[\"chinese_traditional\"],\"燈\":[\"chinese_traditional\"],\"歲\":[\"chinese_traditional\"],\"劇\":[\"chinese_traditional\"],\"趙\":[\"chinese_traditional\"],\"課\":[\"chinese_traditional\"],\"凱\":[\"chinese_traditional\"],\"額\":[\"chinese_traditional\"],\"紹\":[\"chinese_traditional\"],\"齊\":[\"chinese_traditional\"],\"偉\":[\"chinese_traditional\"],\"爐\":[\"chinese_traditional\"],\"楊\":[\"chinese_traditional\"],\"桿\":[\"chinese_traditional\"],\"鎮\":[\"chinese_traditional\"],\"飯\":[\"chinese_traditional\"],\"濃\":[\"chinese_traditional\"],\"懷\":[\"chinese_traditional\"],\"趕\":[\"chinese_traditional\"],\"庫\":[\"chinese_traditional\"],\"奪\":[\"chinese_traditional\"],\"靈\":[\"chinese_traditional\"],\"稅\":[\"chinese_traditional\"],\"滅\":[\"chinese_traditional\"],\"賽\":[\"chinese_traditional\"],\"歸\":[\"chinese_traditional\"],\"盤\":[\"chinese_traditional\"],\"險\":[\"chinese_traditional\"],\"錄\":[\"chinese_traditional\"],\"純\":[\"chinese_traditional\"],\"蓋\":[\"chinese_traditional\"],\"橫\":[\"chinese_traditional\"],\"槍\":[\"chinese_traditional\"],\"潤\":[\"chinese_traditional\"],\"蟲\":[\"chinese_traditional\"],\"澤\":[\"chinese_traditional\"],\"腦\":[\"chinese_traditional\"],\"歐\":[\"chinese_traditional\"],\"側\":[\"chinese_traditional\"],\"徹\":[\"chinese_traditional\"],\"慮\":[\"chinese_traditional\"],\"納\":[\"chinese_traditional\"],\"彈\":[\"chinese_traditional\"],\"飼\":[\"chinese_traditional\"],\"麥\":[\"chinese_traditional\"],\"濕\":[\"chinese_traditional\"],\"築\":[\"chinese_traditional\"],\"惡\":[\"chinese_traditional\"],\"戶\":[\"chinese_traditional\"],\"訪\":[\"chinese_traditional\"],\"跡\":[\"chinese_traditional\"],\"擺\":[\"chinese_traditional\"],\"賣\":[\"chinese_traditional\"],\"擇\":[\"chinese_traditional\"],\"銅\":[\"chinese_traditional\"],\"獻\":[\"chinese_traditional\"],\"陣\":[\"chinese_traditional\"],\"陰\":[\"chinese_traditional\"],\"樓\":[\"chinese_traditional\"],\"謀\":[\"chinese_traditional\"],\"噸\":[\"chinese_traditional\"],\"豬\":[\"chinese_traditional\"],\"館\":[\"chinese_traditional\"],\"爺\":[\"chinese_traditional\"],\"驚\":[\"chinese_traditional\"],\"遺\":[\"chinese_traditional\"],\"纖\":[\"chinese_traditional\"],\"傾\":[\"chinese_traditional\"],\"謝\":[\"chinese_traditional\"],\"奮\":[\"chinese_traditional\"],\"購\":[\"chinese_traditional\"],\"監\":[\"chinese_traditional\"],\"貫\":[\"chinese_traditional\"],\"釋\":[\"chinese_traditional\"],\"詞\":[\"chinese_traditional\"],\"頓\":[\"chinese_traditional\"],\"寶\":[\"chinese_traditional\"],\"塵\":[\"chinese_traditional\"],\"聞\":[\"chinese_traditional\"],\"殘\":[\"chinese_traditional\"],\"橋\":[\"chinese_traditional\"],\"婦\":[\"chinese_traditional\"],\"綜\":[\"chinese_traditional\"],\"吳\":[\"chinese_traditional\"],\"搖\":[\"chinese_traditional\"],\"贊\":[\"chinese_traditional\"],\"訂\":[\"chinese_traditional\"],\"園\":[\"chinese_traditional\"],\"紛\":[\"chinese_traditional\"],\"敗\":[\"chinese_traditional\"],\"榮\":[\"chinese_traditional\"],\"閉\":[\"chinese_traditional\"],\"灣\":[\"chinese_traditional\"],\"鍵\":[\"chinese_traditional\"],\"駐\":[\"chinese_traditional\"],\"鍋\":[\"chinese_traditional\"],\"剝\":[\"chinese_traditional\"],\"鹼\":[\"chinese_traditional\"],\"齒\":[\"chinese_traditional\"],\"煉\":[\"chinese_traditional\"],\"紡\":[\"chinese_traditional\"],\"廢\":[\"chinese_traditional\"],\"緩\":[\"chinese_traditional\"],\"淨\":[\"chinese_traditional\"],\"莊\":[\"chinese_traditional\"],\"貿\":[\"chinese_traditional\"],\"慣\":[\"chinese_traditional\"],\"夥\":[\"chinese_traditional\"],\"勻\":[\"chinese_traditional\"],\"紗\":[\"chinese_traditional\"],\"辯\":[\"chinese_traditional\"],\"億\":[\"chinese_traditional\"],\"脈\":[\"chinese_traditional\"],\"薩\":[\"chinese_traditional\"],\"網\":[\"chinese_traditional\"],\"噴\":[\"chinese_traditional\"],\"縱\":[\"chinese_traditional\"],\"掛\":[\"chinese_traditional\"],\"賀\":[\"chinese_traditional\"],\"閃\":[\"chinese_traditional\"],\"牆\":[\"chinese_traditional\"],\"軟\":[\"chinese_traditional\"],\"滾\":[\"chinese_traditional\"],\"盪\":[\"chinese_traditional\"],\"儀\":[\"chinese_traditional\"],\"軋\":[\"chinese_traditional\"],\"貢\":[\"chinese_traditional\"],\"鑽\":[\"chinese_traditional\"],\"幣\":[\"chinese_traditional\"],\"軌\":[\"chinese_traditional\"],\"畝\":[\"chinese_traditional\"],\"畢\":[\"chinese_traditional\"],\"島\":[\"chinese_traditional\"],\"鑄\":[\"chinese_traditional\"],\"湯\":[\"chinese_traditional\"],\"閥\":[\"chinese_traditional\"],\"匯\":[\"chinese_traditional\"],\"繞\":[\"chinese_traditional\"],\"績\":[\"chinese_traditional\"],\"啟\":[\"chinese_traditional\"],\"顏\":[\"chinese_traditional\"],\"淚\":[\"chinese_traditional\"],\"藍\":[\"chinese_traditional\"],\"鏡\":[\"chinese_traditional\"],\"壯\":[\"chinese_traditional\"],\"鋒\":[\"chinese_traditional\"],\"貧\":[\"chinese_traditional\"],\"虛\":[\"chinese_traditional\"],\"彎\":[\"chinese_traditional\"],\"綱\":[\"chinese_traditional\"],\"隸\":[\"chinese_traditional\"],\"宮\":[\"chinese_traditional\"],\"違\":[\"chinese_traditional\"],\"夾\":[\"chinese_traditional\"],\"緣\":[\"chinese_traditional\"],\"窮\":[\"chinese_traditional\"],\"溝\":[\"chinese_traditional\"],\"繩\":[\"chinese_traditional\"],\"憶\":[\"chinese_traditional\"],\"漿\":[\"chinese_traditional\"],\"欄\":[\"chinese_traditional\"],\"擁\":[\"chinese_traditional\"],\"貯\":[\"chinese_traditional\"],\"禮\":[\"chinese_traditional\"],\"濾\":[\"chinese_traditional\"],\"鈉\":[\"chinese_traditional\"],\"紋\":[\"chinese_traditional\"],\"罷\":[\"chinese_traditional\"],\"罰\":[\"chinese_traditional\"],\"潛\":[\"chinese_traditional\"],\"縫\":[\"chinese_traditional\"],\"飽\":[\"chinese_traditional\"],\"獎\":[\"chinese_traditional\"],\"鋁\":[\"chinese_traditional\"],\"麗\":[\"chinese_traditional\"],\"鏈\":[\"chinese_traditional\"],\"掃\":[\"chinese_traditional\"],\"諸\":[\"chinese_traditional\"],\"勵\":[\"chinese_traditional\"],\"潔\":[\"chinese_traditional\"],\"災\":[\"chinese_traditional\"],\"鑑\":[\"chinese_traditional\"],\"訟\":[\"chinese_traditional\"],\"毀\":[\"chinese_traditional\"],\"屆\":[\"chinese_traditional\"],\"躍\":[\"chinese_traditional\"],\"艱\":[\"chinese_traditional\"],\"貝\":[\"chinese_traditional\"],\"碼\":[\"chinese_traditional\"],\"夢\":[\"chinese_traditional\"],\"漁\":[\"chinese_traditional\"],\"顆\":[\"chinese_traditional\"],\"鉛\":[\"chinese_traditional\"],\"倉\":[\"chinese_traditional\"],\"銳\":[\"chinese_traditional\"],\"曉\":[\"chinese_traditional\"],\"隱\":[\"chinese_traditional\"],\"礙\":[\"chinese_traditional\"],\"撥\":[\"chinese_traditional\"],\"肅\":[\"chinese_traditional\"],\"牽\":[\"chinese_traditional\"],\"搶\":[\"chinese_traditional\"],\"殼\":[\"chinese_traditional\"],\"訊\":[\"chinese_traditional\"],\"誠\":[\"chinese_traditional\"],\"頁\":[\"chinese_traditional\"],\"齡\":[\"chinese_traditional\"],\"倫\":[\"chinese_traditional\"],\"尋\":[\"chinese_traditional\"],\"鋪\":[\"chinese_traditional\"],\"聖\":[\"chinese_traditional\"],\"鄭\":[\"chinese_traditional\"],\"騰\":[\"chinese_traditional\"],\"貼\":[\"chinese_traditional\"],\"闊\":[\"chinese_traditional\"],\"輛\":[\"chinese_traditional\"],\"儲\":[\"chinese_traditional\"],\"簽\":[\"chinese_traditional\"],\"鬧\":[\"chinese_traditional\"],\"擾\":[\"chinese_traditional\"],\"遞\":[\"chinese_traditional\"],\"戲\":[\"chinese_traditional\"],\"餵\":[\"chinese_traditional\"],\"療\":[\"chinese_traditional\"],\"撫\":[\"chinese_traditional\"],\"蝦\":[\"chinese_traditional\"],\"蠟\":[\"chinese_traditional\"],\"鄰\":[\"chinese_traditional\"],\"鞏\":[\"chinese_traditional\"],\"擠\":[\"chinese_traditional\"],\"棄\":[\"chinese_traditional\"],\"勁\":[\"chinese_traditional\"],\"鄧\":[\"chinese_traditional\"],\"爛\":[\"chinese_traditional\"],\"磚\":[\"chinese_traditional\"],\"烏\":[\"chinese_traditional\"],\"艦\":[\"chinese_traditional\"],\"淺\":[\"chinese_traditional\"],\"暫\":[\"chinese_traditional\"],\"膽\":[\"chinese_traditional\"],\"詳\":[\"chinese_traditional\"],\"譜\":[\"chinese_traditional\"],\"賓\":[\"chinese_traditional\"],\"輝\":[\"chinese_traditional\"],\"憤\":[\"chinese_traditional\"],\"競\":[\"chinese_traditional\"],\"緒\":[\"chinese_traditional\"],\"塗\":[\"chinese_traditional\"],\"偵\":[\"chinese_traditional\"],\"懸\":[\"chinese_traditional\"],\"糾\":[\"chinese_traditional\"],\"鎖\":[\"chinese_traditional\"],\"賞\":[\"chinese_traditional\"],\"鴨\":[\"chinese_traditional\"],\"趨\":[\"chinese_traditional\"],\"鳳\":[\"chinese_traditional\"],\"輩\":[\"chinese_traditional\"],\"灘\":[\"chinese_traditional\"],\"驅\":[\"chinese_traditional\"],\"篩\":[\"chinese_traditional\"],\"峽\":[\"chinese_traditional\"],\"壽\":[\"chinese_traditional\"],\"譯\":[\"chinese_traditional\"],\"遲\":[\"chinese_traditional\"],\"矽\":[\"chinese_traditional\"],\"貸\":[\"chinese_traditional\"],\"脅\":[\"chinese_traditional\"],\"蝕\":[\"chinese_traditional\"],\"奧\":[\"chinese_traditional\"],\"鳴\":[\"chinese_traditional\"],\"嶺\":[\"chinese_traditional\"],\"憑\":[\"chinese_traditional\"],\"繪\":[\"chinese_traditional\"],\"錫\":[\"chinese_traditional\"],\"廟\":[\"chinese_traditional\"],\"籌\":[\"chinese_traditional\"],\"凍\":[\"chinese_traditional\"],\"輔\":[\"chinese_traditional\"],\"攝\":[\"chinese_traditional\"],\"襲\":[\"chinese_traditional\"],\"鉀\":[\"chinese_traditional\"],\"鳥\":[\"chinese_traditional\"],\"韓\":[\"chinese_traditional\"],\"僑\":[\"chinese_traditional\"],\"涼\":[\"chinese_traditional\"],\"餾\":[\"chinese_traditional\"],\"勸\":[\"chinese_traditional\"],\"遼\":[\"chinese_traditional\"],\"鴻\":[\"chinese_traditional\"],\"輥\":[\"chinese_traditional\"],\"飲\":[\"chinese_traditional\"],\"罵\":[\"chinese_traditional\"],\"辭\":[\"chinese_traditional\"],\"蔣\":[\"chinese_traditional\"],\"絨\":[\"chinese_traditional\"],\"霧\":[\"chinese_traditional\"],\"擬\":[\"chinese_traditional\"],\"輯\":[\"chinese_traditional\"],\"陝\":[\"chinese_traditional\"],\"償\":[\"chinese_traditional\"],\"廳\":[\"chinese_traditional\"],\"駛\":[\"chinese_traditional\"],\"賦\":[\"chinese_traditional\"],\"澆\":[\"chinese_traditional\"],\"鈣\":[\"chinese_traditional\"],\"虧\":[\"chinese_traditional\"],\"騙\":[\"chinese_traditional\"],\"脹\":[\"chinese_traditional\"],\"諧\":[\"chinese_traditional\"],\"拋\":[\"chinese_traditional\"],\"黴\":[\"chinese_traditional\"],\"崗\":[\"chinese_traditional\"],\"盜\":[\"chinese_traditional\"],\"滲\":[\"chinese_traditional\"],\"臟\":[\"chinese_traditional\"],\"賴\":[\"chinese_traditional\"],\"湧\":[\"chinese_traditional\"],\"閱\":[\"chinese_traditional\"],\"厲\":[\"chinese_traditional\"],\"烴\":[\"chinese_traditional\"],\"緯\":[\"chinese_traditional\"],\"偽\":[\"chinese_traditional\"],\"嘆\":[\"chinese_traditional\"],\"釘\":[\"chinese_traditional\"],\"莖\":[\"chinese_traditional\"],\"籠\":[\"chinese_traditional\"],\"錐\":[\"chinese_traditional\"],\"恆\":[\"chinese_traditional\"],\"傑\":[\"chinese_traditional\"],\"綸\":[\"chinese_traditional\"],\"敘\":[\"chinese_traditional\"],\"獄\":[\"chinese_traditional\"],\"絡\":[\"chinese_traditional\"],\"驟\":[\"chinese_traditional\"],\"冊\":[\"chinese_traditional\"],\"屍\":[\"chinese_traditional\"],\"紳\":[\"chinese_traditional\"],\"犧\":[\"chinese_traditional\"],\"轟\":[\"chinese_traditional\"],\"晉\":[\"chinese_traditional\"],\"禦\":[\"chinese_traditional\"],\"錠\":[\"chinese_traditional\"],\"錦\":[\"chinese_traditional\"],\"喪\":[\"chinese_traditional\"],\"鍛\":[\"chinese_traditional\"],\"壟\":[\"chinese_traditional\"],\"撲\":[\"chinese_traditional\"],\"邁\":[\"chinese_traditional\"],\"閒\":[\"chinese_traditional\"],\"憂\":[\"chinese_traditional\"],\"頑\":[\"chinese_traditional\"],\"漲\":[\"chinese_traditional\"],\"闢\":[\"chinese_traditional\"],\"懲\":[\"chinese_traditional\"],\"飄\":[\"chinese_traditional\"],\"飾\":[\"chinese_traditional\"],\"蕭\":[\"chinese_traditional\"],\"郵\":[\"chinese_traditional\"],\"遷\":[\"chinese_traditional\"],\"煩\":[\"chinese_traditional\"],\"債\":[\"chinese_traditional\"],\"帳\":[\"chinese_traditional\"],\"鈴\":[\"chinese_traditional\"],\"餅\":[\"chinese_traditional\"],\"雛\":[\"chinese_traditional\"],\"賢\":[\"chinese_traditional\"],\"丟\":[\"chinese_traditional\"],\"墊\":[\"chinese_traditional\"],\"擋\":[\"chinese_traditional\"],\"覽\":[\"chinese_traditional\"],\"貪\":[\"chinese_traditional\"],\"繳\":[\"chinese_traditional\"],\"馮\":[\"chinese_traditional\"],\"諾\":[\"chinese_traditional\"],\"誼\":[\"chinese_traditional\"],\"兇\":[\"chinese_traditional\"],\"誣\":[\"chinese_traditional\"],\"騎\":[\"chinese_traditional\"],\"喬\":[\"chinese_traditional\"],\"叢\":[\"chinese_traditional\"],\"盧\":[\"chinese_traditional\"],\"悶\":[\"chinese_traditional\"],\"諮\":[\"chinese_traditional\"],\"駕\":[\"chinese_traditional\"],\"纜\":[\"chinese_traditional\"],\"鉺\":[\"chinese_traditional\"],\"擲\":[\"chinese_traditional\"],\"頗\":[\"chinese_traditional\"],\"慘\":[\"chinese_traditional\"],\"臘\":[\"chinese_traditional\"],\"窩\":[\"chinese_traditional\"],\"滌\":[\"chinese_traditional\"],\"劍\":[\"chinese_traditional\"],\"潑\":[\"chinese_traditional\"],\"蔥\":[\"chinese_traditional\"],\"撈\":[\"chinese_traditional\"],\"蒼\":[\"chinese_traditional\"],\"濱\":[\"chinese_traditional\"],\"倆\":[\"chinese_traditional\"],\"瘋\":[\"chinese_traditional\"],\"糞\":[\"chinese_traditional\"],\"檔\":[\"chinese_traditional\"],\"駁\":[\"chinese_traditional\"],\"腸\":[\"chinese_traditional\"],\"撐\":[\"chinese_traditional\"],\"曬\":[\"chinese_traditional\"],\"蓮\":[\"chinese_traditional\"],\"攤\":[\"chinese_traditional\"],\"攪\":[\"chinese_traditional\"],\"醬\":[\"chinese_traditional\"],\"皺\":[\"chinese_traditional\"],\"暢\":[\"chinese_traditional\"],\"疊\":[\"chinese_traditional\"],\"閣\":[\"chinese_traditional\"],\"萊\":[\"chinese_traditional\"],\"轄\":[\"chinese_traditional\"],\"鉤\":[\"chinese_traditional\"],\"壩\":[\"chinese_traditional\"],\"餓\":[\"chinese_traditional\"],\"禍\":[\"chinese_traditional\"],\"邏\":[\"chinese_traditional\"],\"嘗\":[\"chinese_traditional\"],\"韋\":[\"chinese_traditional\"],\"abdikace\":[\"czech\"],\"abeceda\":[\"czech\"],\"adresa\":[\"czech\"],\"agrese\":[\"czech\"],\"akce\":[\"czech\"],\"aktovka\":[\"czech\"],\"alej\":[\"czech\"],\"alkohol\":[\"czech\"],\"amputace\":[\"czech\"],\"ananas\":[\"czech\"],\"andulka\":[\"czech\"],\"anekdota\":[\"czech\"],\"anketa\":[\"czech\"],\"antika\":[\"czech\"],\"anulovat\":[\"czech\"],\"archa\":[\"czech\"],\"arogance\":[\"czech\"],\"asfalt\":[\"czech\",\"turkish\"],\"asistent\":[\"czech\"],\"aspirace\":[\"czech\"],\"astma\":[\"czech\"],\"astronom\":[\"czech\"],\"atlas\":[\"czech\"],\"atletika\":[\"czech\"],\"atol\":[\"czech\"],\"autobus\":[\"czech\"],\"azyl\":[\"czech\"],\"babka\":[\"czech\"],\"bachor\":[\"czech\"],\"bacil\":[\"czech\"],\"baculka\":[\"czech\"],\"badatel\":[\"czech\"],\"bageta\":[\"czech\"],\"bagr\":[\"czech\"],\"bahno\":[\"czech\"],\"bakterie\":[\"czech\"],\"balada\":[\"czech\"],\"baletka\":[\"czech\"],\"balkon\":[\"czech\"],\"balonek\":[\"czech\"],\"balvan\":[\"czech\"],\"balza\":[\"czech\"],\"bambus\":[\"czech\"],\"bankomat\":[\"czech\"],\"barbar\":[\"czech\"],\"baret\":[\"czech\"],\"barman\":[\"czech\"],\"baroko\":[\"czech\"],\"barva\":[\"czech\"],\"baterka\":[\"czech\"],\"batoh\":[\"czech\"],\"bavlna\":[\"czech\"],\"bazalka\":[\"czech\"],\"bazilika\":[\"czech\"],\"bazuka\":[\"czech\"],\"bedna\":[\"czech\"],\"beran\":[\"czech\"],\"beseda\":[\"czech\"],\"bestie\":[\"czech\"],\"beton\":[\"czech\",\"turkish\"],\"bezinka\":[\"czech\"],\"bezmoc\":[\"czech\"],\"beztak\":[\"czech\"],\"bicykl\":[\"czech\"],\"bidlo\":[\"czech\"],\"biftek\":[\"czech\",\"turkish\"],\"bikiny\":[\"czech\"],\"bilance\":[\"czech\"],\"biograf\":[\"czech\"],\"biolog\":[\"czech\"],\"bitva\":[\"czech\"],\"bizon\":[\"czech\"],\"blahobyt\":[\"czech\"],\"blatouch\":[\"czech\"],\"blecha\":[\"czech\"],\"bledule\":[\"czech\"],\"blesk\":[\"czech\"],\"blikat\":[\"czech\"],\"blizna\":[\"czech\"],\"blokovat\":[\"czech\"],\"bloudit\":[\"czech\"],\"blud\":[\"czech\"],\"bobek\":[\"czech\"],\"bobr\":[\"czech\"],\"bodlina\":[\"czech\"],\"bodnout\":[\"czech\"],\"bohatost\":[\"czech\"],\"bojkot\":[\"czech\"],\"bojovat\":[\"czech\"],\"bokorys\":[\"czech\"],\"bolest\":[\"czech\"],\"borec\":[\"czech\"],\"borovice\":[\"czech\"],\"bota\":[\"czech\"],\"boubel\":[\"czech\"],\"bouchat\":[\"czech\"],\"bouda\":[\"czech\"],\"boule\":[\"czech\"],\"bourat\":[\"czech\"],\"boxer\":[\"czech\"],\"bradavka\":[\"czech\"],\"brambora\":[\"czech\"],\"branka\":[\"czech\"],\"bratr\":[\"czech\"],\"brepta\":[\"czech\"],\"briketa\":[\"czech\"],\"brko\":[\"czech\"],\"brloh\":[\"czech\"],\"bronz\":[\"czech\"],\"broskev\":[\"czech\"],\"brunetka\":[\"czech\"],\"brusinka\":[\"czech\"],\"brzda\":[\"czech\"],\"brzy\":[\"czech\"],\"bublina\":[\"czech\"],\"bubnovat\":[\"czech\"],\"buchta\":[\"czech\"],\"buditel\":[\"czech\"],\"budka\":[\"czech\"],\"budova\":[\"czech\"],\"bufet\":[\"czech\"],\"bujarost\":[\"czech\"],\"bukvice\":[\"czech\"],\"buldok\":[\"czech\"],\"bulva\":[\"czech\"],\"bunda\":[\"czech\"],\"bunkr\":[\"czech\"],\"burza\":[\"czech\"],\"butik\":[\"czech\",\"turkish\"],\"buvol\":[\"czech\"],\"buzola\":[\"czech\"],\"bydlet\":[\"czech\"],\"bylina\":[\"czech\"],\"bytovka\":[\"czech\"],\"bzukot\":[\"czech\"],\"capart\":[\"czech\"],\"carevna\":[\"czech\"],\"cedr\":[\"czech\"],\"cedule\":[\"czech\"],\"cejch\":[\"czech\"],\"cejn\":[\"czech\"],\"cela\":[\"czech\"],\"celer\":[\"czech\"],\"celkem\":[\"czech\"],\"celnice\":[\"czech\"],\"cenina\":[\"czech\"],\"cennost\":[\"czech\"],\"cenovka\":[\"czech\"],\"centrum\":[\"czech\"],\"cenzor\":[\"czech\"],\"cestopis\":[\"czech\"],\"cetka\":[\"czech\"],\"chalupa\":[\"czech\"],\"chapadlo\":[\"czech\"],\"charita\":[\"czech\"],\"chata\":[\"czech\"],\"chechtat\":[\"czech\"],\"chemie\":[\"czech\"],\"chichot\":[\"czech\"],\"chirurg\":[\"czech\"],\"chlad\":[\"czech\"],\"chleba\":[\"czech\"],\"chlubit\":[\"czech\"],\"chmel\":[\"czech\"],\"chmura\":[\"czech\"],\"chobot\":[\"czech\"],\"chochol\":[\"czech\"],\"chodba\":[\"czech\"],\"cholera\":[\"czech\"],\"chomout\":[\"czech\"],\"chopit\":[\"czech\"],\"choroba\":[\"czech\"],\"chov\":[\"czech\"],\"chrapot\":[\"czech\"],\"chrlit\":[\"czech\"],\"chrt\":[\"czech\"],\"chrup\":[\"czech\"],\"chtivost\":[\"czech\"],\"chudina\":[\"czech\"],\"chutnat\":[\"czech\"],\"chvat\":[\"czech\"],\"chvilka\":[\"czech\"],\"chvost\":[\"czech\"],\"chyba\":[\"czech\"],\"chystat\":[\"czech\"],\"chytit\":[\"czech\"],\"cibule\":[\"czech\"],\"cigareta\":[\"czech\"],\"cihelna\":[\"czech\"],\"cihla\":[\"czech\"],\"cinkot\":[\"czech\"],\"cirkus\":[\"czech\"],\"cisterna\":[\"czech\"],\"citace\":[\"czech\"],\"citrus\":[\"czech\"],\"cizinec\":[\"czech\"],\"cizost\":[\"czech\"],\"clona\":[\"czech\"],\"cokoliv\":[\"czech\"],\"couvat\":[\"czech\"],\"ctitel\":[\"czech\"],\"ctnost\":[\"czech\"],\"cudnost\":[\"czech\"],\"cuketa\":[\"czech\"],\"cukr\":[\"czech\"],\"cupot\":[\"czech\"],\"cvaknout\":[\"czech\"],\"cval\":[\"czech\"],\"cvik\":[\"czech\"],\"cvrkot\":[\"czech\"],\"cyklista\":[\"czech\"],\"daleko\":[\"czech\"],\"dareba\":[\"czech\"],\"datel\":[\"czech\"],\"datum\":[\"czech\"],\"dcera\":[\"czech\"],\"debata\":[\"czech\"],\"dechovka\":[\"czech\"],\"decibel\":[\"czech\"],\"deficit\":[\"czech\"],\"deflace\":[\"czech\"],\"dekl\":[\"czech\"],\"dekret\":[\"czech\"],\"demokrat\":[\"czech\"],\"deprese\":[\"czech\"],\"derby\":[\"czech\"],\"deska\":[\"czech\"],\"detektiv\":[\"czech\"],\"dikobraz\":[\"czech\"],\"diktovat\":[\"czech\"],\"dioda\":[\"czech\"],\"diplom\":[\"czech\"],\"disk\":[\"czech\",\"turkish\"],\"displej\":[\"czech\"],\"divadlo\":[\"czech\"],\"divoch\":[\"czech\"],\"dlaha\":[\"czech\"],\"dlouho\":[\"czech\"],\"dluhopis\":[\"czech\"],\"dnes\":[\"czech\"],\"dobro\":[\"czech\"],\"dobytek\":[\"czech\"],\"docent\":[\"czech\"],\"dochutit\":[\"czech\"],\"dodnes\":[\"czech\"],\"dohled\":[\"czech\"],\"dohoda\":[\"czech\"],\"dohra\":[\"czech\"],\"dojem\":[\"czech\"],\"dojnice\":[\"czech\"],\"doklad\":[\"czech\"],\"dokola\":[\"czech\"],\"doktor\":[\"czech\",\"turkish\"],\"dokument\":[\"czech\"],\"dolar\":[\"czech\"],\"doleva\":[\"czech\"],\"dolina\":[\"czech\"],\"doma\":[\"czech\"],\"dominant\":[\"czech\"],\"domluvit\":[\"czech\"],\"domov\":[\"czech\"],\"donutit\":[\"czech\"],\"dopad\":[\"czech\"],\"dopis\":[\"czech\"],\"doplnit\":[\"czech\"],\"doposud\":[\"czech\"],\"doprovod\":[\"czech\"],\"dopustit\":[\"czech\"],\"dorazit\":[\"czech\"],\"dorost\":[\"czech\"],\"dort\":[\"czech\"],\"dosah\":[\"czech\"],\"doslov\":[\"czech\"],\"dostatek\":[\"czech\"],\"dosud\":[\"czech\"],\"dosyta\":[\"czech\"],\"dotaz\":[\"czech\"],\"dotek\":[\"czech\"],\"dotknout\":[\"czech\"],\"doufat\":[\"czech\"],\"doutnat\":[\"czech\"],\"dovozce\":[\"czech\"],\"dozadu\":[\"czech\"],\"doznat\":[\"czech\"],\"dozorce\":[\"czech\"],\"drahota\":[\"czech\"],\"drak\":[\"czech\"],\"dramatik\":[\"czech\"],\"dravec\":[\"czech\"],\"draze\":[\"czech\"],\"drdol\":[\"czech\"],\"drobnost\":[\"czech\"],\"drogerie\":[\"czech\"],\"drozd\":[\"czech\"],\"drsnost\":[\"czech\"],\"drtit\":[\"czech\"],\"drzost\":[\"czech\"],\"duben\":[\"czech\"],\"duchovno\":[\"czech\"],\"dudek\":[\"czech\"],\"duha\":[\"czech\"],\"duhovka\":[\"czech\"],\"dusit\":[\"czech\"],\"dusno\":[\"czech\"],\"dutost\":[\"czech\"],\"dvojice\":[\"czech\"],\"dvorec\":[\"czech\"],\"dynamit\":[\"czech\"],\"ekolog\":[\"czech\"],\"ekonomie\":[\"czech\"],\"elektron\":[\"czech\"],\"elipsa\":[\"czech\"],\"email\":[\"czech\"],\"emise\":[\"czech\"],\"emoce\":[\"czech\"],\"empatie\":[\"czech\"],\"epizoda\":[\"czech\"],\"epocha\":[\"czech\"],\"epopej\":[\"czech\"],\"epos\":[\"czech\"],\"esej\":[\"czech\"],\"esence\":[\"czech\"],\"eskorta\":[\"czech\"],\"eskymo\":[\"czech\"],\"etiketa\":[\"czech\"],\"euforie\":[\"czech\"],\"evoluce\":[\"czech\"],\"exekuce\":[\"czech\"],\"exkurze\":[\"czech\"],\"expedice\":[\"czech\"],\"exploze\":[\"czech\"],\"export\":[\"czech\"],\"extrakt\":[\"czech\"],\"facka\":[\"czech\"],\"fajfka\":[\"czech\"],\"fakulta\":[\"czech\"],\"fanatik\":[\"czech\",\"turkish\"],\"fantazie\":[\"czech\"],\"farmacie\":[\"czech\"],\"favorit\":[\"czech\"],\"fazole\":[\"czech\"],\"federace\":[\"czech\"],\"fejeton\":[\"czech\"],\"fenka\":[\"czech\"],\"fialka\":[\"czech\"],\"figurant\":[\"czech\"],\"filozof\":[\"czech\"],\"filtr\":[\"czech\"],\"finance\":[\"czech\"],\"finta\":[\"czech\"],\"fixace\":[\"czech\"],\"fjord\":[\"czech\"],\"flanel\":[\"czech\"],\"flirt\":[\"czech\"],\"flotila\":[\"czech\"],\"fond\":[\"czech\"],\"fosfor\":[\"czech\"],\"fotbal\":[\"czech\"],\"fotka\":[\"czech\"],\"foton\":[\"czech\"],\"frakce\":[\"czech\"],\"freska\":[\"czech\"],\"fronta\":[\"czech\"],\"fukar\":[\"czech\"],\"funkce\":[\"czech\"],\"fyzika\":[\"czech\"],\"galeje\":[\"czech\"],\"garant\":[\"czech\"],\"genetika\":[\"czech\"],\"geolog\":[\"czech\"],\"gilotina\":[\"czech\"],\"glazura\":[\"czech\"],\"glejt\":[\"czech\"],\"golem\":[\"czech\"],\"golfista\":[\"czech\"],\"gotika\":[\"czech\"],\"graf\":[\"czech\"],\"gramofon\":[\"czech\"],\"granule\":[\"czech\"],\"grep\":[\"czech\"],\"gril\":[\"czech\"],\"grog\":[\"czech\"],\"groteska\":[\"czech\"],\"guma\":[\"czech\"],\"hadice\":[\"czech\"],\"hadr\":[\"czech\"],\"hala\":[\"czech\"],\"halenka\":[\"czech\"],\"hanba\":[\"czech\"],\"hanopis\":[\"czech\"],\"harfa\":[\"czech\"],\"harpuna\":[\"czech\"],\"havran\":[\"czech\"],\"hebkost\":[\"czech\"],\"hejkal\":[\"czech\"],\"hejno\":[\"czech\"],\"hejtman\":[\"czech\"],\"hektar\":[\"czech\",\"turkish\"],\"helma\":[\"czech\"],\"hematom\":[\"czech\"],\"herec\":[\"czech\"],\"herna\":[\"czech\"],\"heslo\":[\"czech\"],\"hezky\":[\"czech\"],\"historik\":[\"czech\"],\"hladovka\":[\"czech\"],\"hlasivky\":[\"czech\"],\"hlava\":[\"czech\"],\"hledat\":[\"czech\"],\"hlen\":[\"czech\"],\"hlodavec\":[\"czech\"],\"hloh\":[\"czech\"],\"hloupost\":[\"czech\"],\"hltat\":[\"czech\"],\"hlubina\":[\"czech\"],\"hluchota\":[\"czech\"],\"hmat\":[\"czech\"],\"hmota\":[\"czech\"],\"hmyz\":[\"czech\"],\"hnis\":[\"czech\"],\"hnojivo\":[\"czech\"],\"hnout\":[\"czech\"],\"hoblina\":[\"czech\"],\"hoboj\":[\"czech\"],\"hoch\":[\"czech\"],\"hodiny\":[\"czech\"],\"hodlat\":[\"czech\"],\"hodnota\":[\"czech\"],\"hodovat\":[\"czech\"],\"hojnost\":[\"czech\"],\"hokej\":[\"czech\"],\"holinka\":[\"czech\"],\"holka\":[\"czech\"],\"holub\":[\"czech\"],\"homole\":[\"czech\"],\"honitba\":[\"czech\"],\"honorace\":[\"czech\"],\"horal\":[\"czech\"],\"horda\":[\"czech\"],\"horizont\":[\"czech\"],\"horko\":[\"czech\"],\"horlivec\":[\"czech\"],\"hormon\":[\"czech\",\"turkish\"],\"hornina\":[\"czech\"],\"horoskop\":[\"czech\"],\"horstvo\":[\"czech\"],\"hospoda\":[\"czech\"],\"hostina\":[\"czech\"],\"hotovost\":[\"czech\"],\"houba\":[\"czech\"],\"houf\":[\"czech\"],\"houpat\":[\"czech\"],\"houska\":[\"czech\"],\"hovor\":[\"czech\"],\"hradba\":[\"czech\"],\"hranice\":[\"czech\"],\"hravost\":[\"czech\"],\"hrazda\":[\"czech\"],\"hrbolek\":[\"czech\"],\"hrdina\":[\"czech\"],\"hrdlo\":[\"czech\"],\"hrdost\":[\"czech\"],\"hrnek\":[\"czech\"],\"hrobka\":[\"czech\"],\"hromada\":[\"czech\"],\"hrot\":[\"czech\"],\"hrouda\":[\"czech\"],\"hrozen\":[\"czech\"],\"hrstka\":[\"czech\"],\"hrubost\":[\"czech\"],\"hryzat\":[\"czech\"],\"hubenost\":[\"czech\"],\"hubnout\":[\"czech\"],\"hudba\":[\"czech\"],\"hukot\":[\"czech\"],\"humr\":[\"czech\"],\"husita\":[\"czech\"],\"hustota\":[\"czech\"],\"hvozd\":[\"czech\"],\"hybnost\":[\"czech\"],\"hydrant\":[\"czech\"],\"hygiena\":[\"czech\"],\"hymna\":[\"czech\"],\"hysterik\":[\"czech\"],\"idylka\":[\"czech\"],\"ihned\":[\"czech\"],\"ikona\":[\"czech\"],\"iluze\":[\"czech\"],\"imunita\":[\"czech\"],\"infekce\":[\"czech\"],\"inflace\":[\"czech\"],\"inkaso\":[\"czech\"],\"inovace\":[\"czech\"],\"inspekce\":[\"czech\"],\"internet\":[\"czech\"],\"invalida\":[\"czech\"],\"investor\":[\"czech\"],\"inzerce\":[\"czech\"],\"ironie\":[\"czech\"],\"jablko\":[\"czech\"],\"jachta\":[\"czech\"],\"jahoda\":[\"czech\"],\"jakmile\":[\"czech\"],\"jakost\":[\"czech\"],\"jalovec\":[\"czech\"],\"jantar\":[\"czech\"],\"jarmark\":[\"czech\"],\"jaro\":[\"czech\"],\"jasan\":[\"czech\"],\"jasno\":[\"czech\"],\"jatka\":[\"czech\"],\"javor\":[\"czech\"],\"jazyk\":[\"czech\"],\"jedinec\":[\"czech\"],\"jedle\":[\"czech\"],\"jednatel\":[\"czech\"],\"jehlan\":[\"czech\"],\"jekot\":[\"czech\"],\"jelen\":[\"czech\"],\"jelito\":[\"czech\"],\"jemnost\":[\"czech\"],\"jenom\":[\"czech\"],\"jepice\":[\"czech\"],\"jeseter\":[\"czech\"],\"jevit\":[\"czech\"],\"jezdec\":[\"czech\"],\"jezero\":[\"czech\"],\"jinak\":[\"czech\"],\"jindy\":[\"czech\"],\"jinoch\":[\"czech\"],\"jiskra\":[\"czech\"],\"jistota\":[\"czech\"],\"jitrnice\":[\"czech\"],\"jizva\":[\"czech\"],\"jmenovat\":[\"czech\"],\"jogurt\":[\"czech\"],\"jurta\":[\"czech\"],\"kabaret\":[\"czech\"],\"kabel\":[\"czech\"],\"kabinet\":[\"czech\"],\"kachna\":[\"czech\"],\"kadet\":[\"czech\"],\"kadidlo\":[\"czech\"],\"kahan\":[\"czech\"],\"kajak\":[\"czech\"],\"kajuta\":[\"czech\"],\"kakao\":[\"czech\"],\"kaktus\":[\"czech\"],\"kalamita\":[\"czech\"],\"kalhoty\":[\"czech\"],\"kalibr\":[\"czech\"],\"kalnost\":[\"czech\"],\"kamera\":[\"czech\"],\"kamkoliv\":[\"czech\"],\"kamna\":[\"czech\"],\"kanibal\":[\"czech\"],\"kanoe\":[\"czech\"],\"kantor\":[\"czech\"],\"kapalina\":[\"czech\"],\"kapela\":[\"czech\"],\"kapitola\":[\"czech\"],\"kapka\":[\"czech\"],\"kaple\":[\"czech\"],\"kapota\":[\"czech\"],\"kapr\":[\"czech\"],\"kapusta\":[\"czech\"],\"kapybara\":[\"czech\"],\"karamel\":[\"czech\"],\"karotka\":[\"czech\"],\"karton\":[\"czech\"],\"kasa\":[\"czech\"],\"katalog\":[\"czech\"],\"katedra\":[\"czech\"],\"kauce\":[\"czech\"],\"kauza\":[\"czech\"],\"kavalec\":[\"czech\"],\"kazajka\":[\"czech\"],\"kazeta\":[\"czech\"],\"kazivost\":[\"czech\"],\"kdekoliv\":[\"czech\"],\"kdesi\":[\"czech\"],\"kedluben\":[\"czech\"],\"kemp\":[\"czech\"],\"keramika\":[\"czech\"],\"kino\":[\"czech\"],\"klacek\":[\"czech\"],\"kladivo\":[\"czech\"],\"klam\":[\"czech\"],\"klapot\":[\"czech\"],\"klasika\":[\"czech\"],\"klaun\":[\"czech\"],\"klec\":[\"czech\"],\"klenba\":[\"czech\"],\"klepat\":[\"czech\"],\"klesnout\":[\"czech\"],\"klid\":[\"czech\"],\"klima\":[\"czech\"],\"klisna\":[\"czech\"],\"klobouk\":[\"czech\"],\"klokan\":[\"czech\"],\"klopa\":[\"czech\"],\"kloub\":[\"czech\"],\"klubovna\":[\"czech\"],\"klusat\":[\"czech\"],\"kluzkost\":[\"czech\"],\"kmen\":[\"czech\"],\"kmitat\":[\"czech\"],\"kmotr\":[\"czech\"],\"kniha\":[\"czech\"],\"knot\":[\"czech\"],\"koalice\":[\"czech\"],\"koberec\":[\"czech\"],\"kobka\":[\"czech\"],\"kobliha\":[\"czech\"],\"kobyla\":[\"czech\"],\"kocour\":[\"czech\"],\"kohout\":[\"czech\"],\"kojenec\":[\"czech\"],\"kokos\":[\"czech\"],\"koktejl\":[\"czech\"],\"kolaps\":[\"czech\"],\"koleda\":[\"czech\"],\"kolize\":[\"czech\"],\"kolo\":[\"czech\"],\"komando\":[\"czech\"],\"kometa\":[\"czech\"],\"komik\":[\"czech\"],\"komnata\":[\"czech\"],\"komora\":[\"czech\"],\"kompas\":[\"czech\"],\"komunita\":[\"czech\"],\"konat\":[\"czech\"],\"koncept\":[\"czech\"],\"kondice\":[\"czech\"],\"konec\":[\"czech\"],\"konfese\":[\"czech\"],\"kongres\":[\"czech\"],\"konina\":[\"czech\"],\"konkurs\":[\"czech\"],\"kontakt\":[\"czech\"],\"konzerva\":[\"czech\"],\"kopanec\":[\"czech\"],\"kopie\":[\"czech\"],\"kopnout\":[\"czech\"],\"koprovka\":[\"czech\"],\"korbel\":[\"czech\"],\"korektor\":[\"czech\"],\"kormidlo\":[\"czech\"],\"koroptev\":[\"czech\"],\"korpus\":[\"czech\"],\"koruna\":[\"czech\"],\"koryto\":[\"czech\"],\"korzet\":[\"czech\"],\"kosatec\":[\"czech\"],\"kostka\":[\"czech\"],\"kotel\":[\"czech\"],\"kotleta\":[\"czech\"],\"kotoul\":[\"czech\"],\"koukat\":[\"czech\"],\"koupelna\":[\"czech\"],\"kousek\":[\"czech\"],\"kouzlo\":[\"czech\"],\"kovboj\":[\"czech\"],\"koza\":[\"czech\"],\"kozoroh\":[\"czech\"],\"krabice\":[\"czech\"],\"krach\":[\"czech\"],\"krajina\":[\"czech\"],\"kralovat\":[\"czech\"],\"krasopis\":[\"czech\"],\"kravata\":[\"czech\"],\"kredit\":[\"czech\"],\"krejcar\":[\"czech\"],\"kresba\":[\"czech\"],\"kreveta\":[\"czech\"],\"kriket\":[\"czech\"],\"kritik\":[\"czech\"],\"krize\":[\"czech\"],\"krkavec\":[\"czech\"],\"krmelec\":[\"czech\"],\"krmivo\":[\"czech\"],\"krocan\":[\"czech\"],\"krok\":[\"czech\"],\"kronika\":[\"czech\"],\"kropit\":[\"czech\"],\"kroupa\":[\"czech\"],\"krovka\":[\"czech\"],\"krtek\":[\"czech\"],\"kruhadlo\":[\"czech\"],\"krupice\":[\"czech\"],\"krutost\":[\"czech\"],\"krvinka\":[\"czech\"],\"krychle\":[\"czech\"],\"krypta\":[\"czech\"],\"krystal\":[\"czech\"],\"kryt\":[\"czech\"],\"kudlanka\":[\"czech\"],\"kufr\":[\"czech\"],\"kujnost\":[\"czech\"],\"kukla\":[\"czech\"],\"kulajda\":[\"czech\"],\"kulich\":[\"czech\"],\"kulka\":[\"czech\"],\"kulomet\":[\"czech\"],\"kultura\":[\"czech\"],\"kuna\":[\"czech\"],\"kupodivu\":[\"czech\"],\"kurt\":[\"czech\"],\"kurzor\":[\"czech\"],\"kutil\":[\"czech\"],\"kvalita\":[\"czech\"],\"kvasinka\":[\"czech\"],\"kvestor\":[\"czech\"],\"kynolog\":[\"czech\"],\"kyselina\":[\"czech\"],\"kytara\":[\"czech\"],\"kytice\":[\"czech\"],\"kytka\":[\"czech\"],\"kytovec\":[\"czech\"],\"kyvadlo\":[\"czech\"],\"labrador\":[\"czech\"],\"lachtan\":[\"czech\"],\"ladnost\":[\"czech\"],\"laik\":[\"czech\"],\"lakomec\":[\"czech\"],\"lamela\":[\"czech\"],\"lampa\":[\"czech\"],\"lanovka\":[\"czech\"],\"lasice\":[\"czech\"],\"laso\":[\"czech\"],\"lastura\":[\"czech\"],\"latinka\":[\"czech\"],\"lavina\":[\"czech\"],\"lebka\":[\"czech\"],\"leckdy\":[\"czech\"],\"leden\":[\"czech\"],\"lednice\":[\"czech\"],\"ledovka\":[\"czech\"],\"ledvina\":[\"czech\"],\"legenda\":[\"czech\"],\"legie\":[\"czech\"],\"legrace\":[\"czech\"],\"lehce\":[\"czech\"],\"lehkost\":[\"czech\"],\"lehnout\":[\"czech\"],\"lektvar\":[\"czech\"],\"lenochod\":[\"czech\"],\"lentilka\":[\"czech\"],\"lepenka\":[\"czech\"],\"lepidlo\":[\"czech\"],\"letadlo\":[\"czech\"],\"letec\":[\"czech\"],\"letmo\":[\"czech\"],\"letokruh\":[\"czech\"],\"levhart\":[\"czech\"],\"levitace\":[\"czech\"],\"levobok\":[\"czech\"],\"libra\":[\"czech\"],\"lichotka\":[\"czech\"],\"lidojed\":[\"czech\"],\"lidskost\":[\"czech\"],\"lihovina\":[\"czech\"],\"lijavec\":[\"czech\"],\"lilek\":[\"czech\"],\"limetka\":[\"czech\"],\"linie\":[\"czech\"],\"linka\":[\"czech\"],\"linoleum\":[\"czech\"],\"listopad\":[\"czech\"],\"litina\":[\"czech\"],\"litovat\":[\"czech\"],\"lobista\":[\"czech\"],\"lodivod\":[\"czech\"],\"logika\":[\"czech\"],\"logoped\":[\"czech\"],\"lokalita\":[\"czech\"],\"loket\":[\"czech\"],\"lomcovat\":[\"czech\"],\"lopata\":[\"czech\"],\"lopuch\":[\"czech\"],\"lord\":[\"czech\"],\"losos\":[\"czech\"],\"lotr\":[\"czech\"],\"loudal\":[\"czech\"],\"louh\":[\"czech\"],\"louka\":[\"czech\"],\"louskat\":[\"czech\"],\"lovec\":[\"czech\"],\"lstivost\":[\"czech\"],\"lucerna\":[\"czech\"],\"lucifer\":[\"czech\"],\"lump\":[\"czech\"],\"lusk\":[\"czech\"],\"lustrace\":[\"czech\"],\"lvice\":[\"czech\"],\"lyra\":[\"czech\"],\"lyrika\":[\"czech\"],\"lysina\":[\"czech\"],\"madam\":[\"czech\"],\"madlo\":[\"czech\"],\"magistr\":[\"czech\"],\"mahagon\":[\"czech\"],\"majetek\":[\"czech\"],\"majitel\":[\"czech\"],\"majorita\":[\"czech\"],\"makak\":[\"czech\"],\"makovice\":[\"czech\"],\"makrela\":[\"czech\"],\"malba\":[\"czech\"],\"malina\":[\"czech\"],\"malovat\":[\"czech\"],\"malvice\":[\"czech\"],\"maminka\":[\"czech\"],\"mandle\":[\"czech\"],\"manko\":[\"czech\"],\"marnost\":[\"czech\"],\"masakr\":[\"czech\"],\"maskot\":[\"czech\"],\"masopust\":[\"czech\"],\"matice\":[\"czech\"],\"matrika\":[\"czech\"],\"maturita\":[\"czech\"],\"mazanec\":[\"czech\"],\"mazivo\":[\"czech\"],\"mazlit\":[\"czech\"],\"mazurka\":[\"czech\"],\"mdloba\":[\"czech\"],\"mechanik\":[\"czech\"],\"meditace\":[\"czech\"],\"medovina\":[\"czech\"],\"melasa\":[\"czech\"],\"meloun\":[\"czech\"],\"mentolka\":[\"czech\"],\"metla\":[\"czech\"],\"metoda\":[\"czech\"],\"metr\":[\"czech\"],\"mezera\":[\"czech\"],\"migrace\":[\"czech\"],\"mihnout\":[\"czech\"],\"mihule\":[\"czech\"],\"mikina\":[\"czech\"],\"mikrofon\":[\"czech\",\"turkish\"],\"milenec\":[\"czech\"],\"milimetr\":[\"czech\"],\"milost\":[\"czech\"],\"mimika\":[\"czech\"],\"mincovna\":[\"czech\"],\"minibar\":[\"czech\"],\"minomet\":[\"czech\"],\"minulost\":[\"czech\"],\"miska\":[\"czech\"],\"mistr\":[\"czech\"],\"mixovat\":[\"czech\"],\"mladost\":[\"czech\"],\"mlha\":[\"czech\"],\"mlhovina\":[\"czech\"],\"mlok\":[\"czech\"],\"mlsat\":[\"czech\"],\"mluvit\":[\"czech\"],\"mnich\":[\"czech\"],\"mnohem\":[\"czech\"],\"mobil\":[\"czech\"],\"mocnost\":[\"czech\"],\"modelka\":[\"czech\"],\"modlitba\":[\"czech\"],\"mohyla\":[\"czech\"],\"mokro\":[\"czech\"],\"molekula\":[\"czech\"],\"momentka\":[\"czech\"],\"monarcha\":[\"czech\"],\"monokl\":[\"czech\"],\"monstrum\":[\"czech\"],\"montovat\":[\"czech\"],\"monzun\":[\"czech\"],\"mosaz\":[\"czech\"],\"moskyt\":[\"czech\"],\"most\":[\"czech\"],\"motivace\":[\"czech\"],\"motorka\":[\"czech\"],\"motyka\":[\"czech\"],\"moucha\":[\"czech\"],\"moudrost\":[\"czech\"],\"mozaika\":[\"czech\"],\"mozek\":[\"czech\"],\"mozol\":[\"czech\"],\"mramor\":[\"czech\"],\"mravenec\":[\"czech\"],\"mrkev\":[\"czech\"],\"mrtvola\":[\"czech\"],\"mrzet\":[\"czech\"],\"mrzutost\":[\"czech\"],\"mstitel\":[\"czech\"],\"mudrc\":[\"czech\"],\"muflon\":[\"czech\"],\"mulat\":[\"czech\"],\"mumie\":[\"czech\"],\"munice\":[\"czech\"],\"muset\":[\"czech\"],\"mutace\":[\"czech\"],\"muzeum\":[\"czech\"],\"muzikant\":[\"czech\"],\"myslivec\":[\"czech\"],\"mzda\":[\"czech\"],\"nabourat\":[\"czech\"],\"nachytat\":[\"czech\"],\"nadace\":[\"czech\"],\"nadbytek\":[\"czech\"],\"nadhoz\":[\"czech\"],\"nadobro\":[\"czech\"],\"nadpis\":[\"czech\"],\"nahlas\":[\"czech\"],\"nahnat\":[\"czech\"],\"nahodile\":[\"czech\"],\"nahradit\":[\"czech\"],\"naivita\":[\"czech\"],\"najednou\":[\"czech\"],\"najisto\":[\"czech\"],\"najmout\":[\"czech\"],\"naklonit\":[\"czech\"],\"nakonec\":[\"czech\"],\"nakrmit\":[\"czech\"],\"nalevo\":[\"czech\"],\"namazat\":[\"czech\"],\"namluvit\":[\"czech\"],\"nanometr\":[\"czech\"],\"naoko\":[\"czech\"],\"naopak\":[\"czech\"],\"naostro\":[\"czech\"],\"napadat\":[\"czech\"],\"napevno\":[\"czech\"],\"naplnit\":[\"czech\"],\"napnout\":[\"czech\"],\"naposled\":[\"czech\"],\"naprosto\":[\"czech\"],\"narodit\":[\"czech\"],\"naruby\":[\"czech\"],\"narychlo\":[\"czech\"],\"nasadit\":[\"czech\"],\"nasekat\":[\"czech\"],\"naslepo\":[\"czech\"],\"nastat\":[\"czech\"],\"natolik\":[\"czech\"],\"navenek\":[\"czech\"],\"navrch\":[\"czech\"],\"navzdory\":[\"czech\"],\"nazvat\":[\"czech\"],\"nebe\":[\"czech\"],\"nechat\":[\"czech\"],\"necky\":[\"czech\"],\"nedaleko\":[\"czech\"],\"nedbat\":[\"czech\"],\"neduh\":[\"czech\"],\"negace\":[\"czech\"],\"nehet\":[\"czech\"],\"nehoda\":[\"czech\"],\"nejen\":[\"czech\"],\"nejprve\":[\"czech\"],\"neklid\":[\"czech\"],\"nelibost\":[\"czech\"],\"nemilost\":[\"czech\"],\"nemoc\":[\"czech\"],\"neochota\":[\"czech\"],\"neonka\":[\"czech\"],\"nepokoj\":[\"czech\"],\"nerost\":[\"czech\"],\"nerv\":[\"czech\"],\"nesmysl\":[\"czech\"],\"nesoulad\":[\"czech\"],\"netvor\":[\"czech\"],\"neuron\":[\"czech\"],\"nevina\":[\"czech\"],\"nezvykle\":[\"czech\"],\"nicota\":[\"czech\"],\"nijak\":[\"czech\"],\"nikam\":[\"czech\"],\"nikdy\":[\"czech\"],\"nikl\":[\"czech\"],\"nikterak\":[\"czech\"],\"nitro\":[\"czech\"],\"nocleh\":[\"czech\"],\"nohavice\":[\"czech\"],\"nominace\":[\"czech\"],\"nora\":[\"czech\"],\"norek\":[\"czech\"],\"nositel\":[\"czech\"],\"nosnost\":[\"czech\"],\"nouze\":[\"czech\"],\"noviny\":[\"czech\"],\"novota\":[\"czech\"],\"nozdra\":[\"czech\"],\"nuda\":[\"czech\"],\"nudle\":[\"czech\"],\"nuget\":[\"czech\"],\"nutit\":[\"czech\"],\"nutnost\":[\"czech\"],\"nutrie\":[\"czech\"],\"nymfa\":[\"czech\"],\"obal\":[\"czech\"],\"obarvit\":[\"czech\"],\"obava\":[\"czech\"],\"obdiv\":[\"czech\"],\"obec\":[\"czech\"],\"obehnat\":[\"czech\"],\"obejmout\":[\"czech\"],\"obezita\":[\"czech\"],\"obhajoba\":[\"czech\"],\"obilnice\":[\"czech\"],\"objasnit\":[\"czech\"],\"objekt\":[\"czech\"],\"obklopit\":[\"czech\"],\"oblast\":[\"czech\"],\"oblek\":[\"czech\"],\"obliba\":[\"czech\"],\"obloha\":[\"czech\"],\"obluda\":[\"czech\"],\"obnos\":[\"czech\"],\"obohatit\":[\"czech\"],\"obojek\":[\"czech\"],\"obout\":[\"czech\"],\"obrazec\":[\"czech\"],\"obrna\":[\"czech\"],\"obruba\":[\"czech\"],\"obrys\":[\"czech\"],\"obsah\":[\"czech\"],\"obsluha\":[\"czech\"],\"obstarat\":[\"czech\"],\"obuv\":[\"czech\"],\"obvaz\":[\"czech\"],\"obvinit\":[\"czech\"],\"obvod\":[\"czech\"],\"obvykle\":[\"czech\"],\"obyvatel\":[\"czech\"],\"obzor\":[\"czech\"],\"ocas\":[\"czech\"],\"ocel\":[\"czech\"],\"ocenit\":[\"czech\"],\"ochladit\":[\"czech\"],\"ochota\":[\"czech\"],\"ochrana\":[\"czech\"],\"ocitnout\":[\"czech\"],\"odboj\":[\"czech\"],\"odbyt\":[\"czech\"],\"odchod\":[\"czech\"],\"odcizit\":[\"czech\"],\"odebrat\":[\"czech\"],\"odeslat\":[\"czech\"],\"odevzdat\":[\"czech\"],\"odezva\":[\"czech\"],\"odhadce\":[\"czech\"],\"odhodit\":[\"czech\"],\"odjet\":[\"czech\"],\"odjinud\":[\"czech\"],\"odkaz\":[\"czech\"],\"odkoupit\":[\"czech\"],\"odliv\":[\"czech\"],\"odluka\":[\"czech\"],\"odmlka\":[\"czech\"],\"odolnost\":[\"czech\"],\"odpad\":[\"czech\"],\"odpis\":[\"czech\"],\"odplout\":[\"czech\"],\"odpor\":[\"czech\"],\"odpustit\":[\"czech\"],\"odpykat\":[\"czech\"],\"odrazka\":[\"czech\"],\"odsoudit\":[\"czech\"],\"odstup\":[\"czech\"],\"odsun\":[\"czech\"],\"odtok\":[\"czech\"],\"odtud\":[\"czech\"],\"odvaha\":[\"czech\"],\"odveta\":[\"czech\"],\"odvolat\":[\"czech\"],\"odvracet\":[\"czech\"],\"odznak\":[\"czech\"],\"ofina\":[\"czech\"],\"ofsajd\":[\"czech\"],\"ohlas\":[\"czech\"],\"ohnisko\":[\"czech\"],\"ohrada\":[\"czech\"],\"ohrozit\":[\"czech\"],\"ohryzek\":[\"czech\"],\"okap\":[\"czech\"],\"okenice\":[\"czech\"],\"oklika\":[\"czech\"],\"okno\":[\"czech\"],\"okouzlit\":[\"czech\"],\"okovy\":[\"czech\"],\"okrasa\":[\"czech\"],\"okres\":[\"czech\"],\"okrsek\":[\"czech\"],\"okruh\":[\"czech\"],\"okupant\":[\"czech\"],\"okurka\":[\"czech\"],\"okusit\":[\"czech\"],\"olejnina\":[\"czech\"],\"olizovat\":[\"czech\"],\"omak\":[\"czech\"],\"omeleta\":[\"czech\"],\"omezit\":[\"czech\"],\"omladina\":[\"czech\"],\"omlouvat\":[\"czech\"],\"omluva\":[\"czech\"],\"omyl\":[\"czech\"],\"onehdy\":[\"czech\"],\"opakovat\":[\"czech\"],\"opasek\":[\"czech\"],\"operace\":[\"czech\"],\"opice\":[\"czech\"],\"opilost\":[\"czech\"],\"opisovat\":[\"czech\"],\"opora\":[\"czech\"],\"opozice\":[\"czech\"],\"opravdu\":[\"czech\"],\"oproti\":[\"czech\"],\"orbital\":[\"czech\"],\"orchestr\":[\"czech\"],\"orgie\":[\"czech\"],\"orlice\":[\"czech\"],\"orloj\":[\"czech\"],\"ortel\":[\"czech\"],\"osada\":[\"czech\"],\"oschnout\":[\"czech\"],\"osika\":[\"czech\"],\"osivo\":[\"czech\"],\"oslava\":[\"czech\"],\"oslepit\":[\"czech\"],\"oslnit\":[\"czech\"],\"oslovit\":[\"czech\"],\"osnova\":[\"czech\"],\"osoba\":[\"czech\"],\"osolit\":[\"czech\"],\"ospalec\":[\"czech\"],\"osten\":[\"czech\"],\"ostraha\":[\"czech\"],\"ostuda\":[\"czech\"],\"ostych\":[\"czech\"],\"osvojit\":[\"czech\"],\"oteplit\":[\"czech\"],\"otisk\":[\"czech\"],\"otop\":[\"czech\"],\"otrhat\":[\"czech\"],\"otrlost\":[\"czech\"],\"otrok\":[\"czech\"],\"otruby\":[\"czech\"],\"otvor\":[\"czech\"],\"ovanout\":[\"czech\"],\"ovar\":[\"czech\"],\"oves\":[\"czech\"],\"ovlivnit\":[\"czech\"],\"ovoce\":[\"czech\"],\"oxid\":[\"czech\"],\"ozdoba\":[\"czech\"],\"pachatel\":[\"czech\"],\"pacient\":[\"czech\"],\"padouch\":[\"czech\"],\"pahorek\":[\"czech\"],\"pakt\":[\"czech\"],\"palanda\":[\"czech\"],\"palec\":[\"czech\"],\"palivo\":[\"czech\"],\"paluba\":[\"czech\"],\"pamflet\":[\"czech\"],\"pamlsek\":[\"czech\"],\"panenka\":[\"czech\"],\"panika\":[\"czech\"],\"panna\":[\"czech\"],\"panovat\":[\"czech\"],\"panstvo\":[\"czech\"],\"pantofle\":[\"czech\"],\"paprika\":[\"czech\"],\"parketa\":[\"czech\"],\"parodie\":[\"czech\"],\"parta\":[\"czech\"],\"paruka\":[\"czech\"],\"paryba\":[\"czech\"],\"paseka\":[\"czech\"],\"pasivita\":[\"czech\"],\"pastelka\":[\"czech\"],\"patent\":[\"czech\"],\"patrona\":[\"czech\"],\"pavouk\":[\"czech\"],\"pazneht\":[\"czech\"],\"pazourek\":[\"czech\"],\"pecka\":[\"czech\"],\"pedagog\":[\"czech\"],\"pejsek\":[\"czech\"],\"peklo\":[\"czech\"],\"peloton\":[\"czech\"],\"penalta\":[\"czech\"],\"pendrek\":[\"czech\"],\"penze\":[\"czech\"],\"periskop\":[\"czech\"],\"pero\":[\"czech\"],\"pestrost\":[\"czech\"],\"petarda\":[\"czech\"],\"petice\":[\"czech\"],\"petrolej\":[\"czech\"],\"pevnina\":[\"czech\"],\"pexeso\":[\"czech\"],\"pianista\":[\"czech\"],\"piha\":[\"czech\"],\"pijavice\":[\"czech\"],\"pikle\":[\"czech\"],\"piknik\":[\"czech\",\"turkish\"],\"pilina\":[\"czech\"],\"pilnost\":[\"czech\"],\"pilulka\":[\"czech\"],\"pinzeta\":[\"czech\"],\"pipeta\":[\"czech\"],\"pisatel\":[\"czech\"],\"pistole\":[\"czech\"],\"pitevna\":[\"czech\"],\"pivnice\":[\"czech\"],\"pivovar\":[\"czech\"],\"placenta\":[\"czech\"],\"plakat\":[\"czech\"],\"plamen\":[\"czech\"],\"planeta\":[\"czech\"],\"plastika\":[\"czech\"],\"platit\":[\"czech\"],\"plavidlo\":[\"czech\"],\"plaz\":[\"czech\"],\"plech\":[\"czech\"],\"plemeno\":[\"czech\"],\"plenta\":[\"czech\"],\"ples\":[\"czech\"],\"pletivo\":[\"czech\"],\"plevel\":[\"czech\"],\"plivat\":[\"czech\"],\"plnit\":[\"czech\"],\"plno\":[\"czech\"],\"plocha\":[\"czech\"],\"plodina\":[\"czech\"],\"plomba\":[\"czech\"],\"plout\":[\"czech\"],\"pluk\":[\"czech\"],\"plyn\":[\"czech\"],\"pobavit\":[\"czech\"],\"pobyt\":[\"czech\"],\"pochod\":[\"czech\"],\"pocit\":[\"czech\"],\"poctivec\":[\"czech\"],\"podat\":[\"czech\"],\"podcenit\":[\"czech\"],\"podepsat\":[\"czech\"],\"podhled\":[\"czech\"],\"podivit\":[\"czech\"],\"podklad\":[\"czech\"],\"podmanit\":[\"czech\"],\"podnik\":[\"czech\"],\"podoba\":[\"czech\"],\"podpora\":[\"czech\"],\"podraz\":[\"czech\"],\"podstata\":[\"czech\"],\"podvod\":[\"czech\"],\"podzim\":[\"czech\"],\"poezie\":[\"czech\"],\"pohanka\":[\"czech\"],\"pohnutka\":[\"czech\"],\"pohovor\":[\"czech\"],\"pohroma\":[\"czech\"],\"pohyb\":[\"czech\"],\"pointa\":[\"czech\"],\"pojistka\":[\"czech\"],\"pojmout\":[\"czech\"],\"pokazit\":[\"czech\"],\"pokles\":[\"czech\"],\"pokoj\":[\"czech\"],\"pokrok\":[\"czech\"],\"pokuta\":[\"czech\"],\"pokyn\":[\"czech\"],\"poledne\":[\"czech\"],\"polibek\":[\"czech\"],\"polknout\":[\"czech\"],\"poloha\":[\"czech\"],\"polynom\":[\"czech\"],\"pomalu\":[\"czech\"],\"pominout\":[\"czech\"],\"pomlka\":[\"czech\"],\"pomoc\":[\"czech\"],\"pomsta\":[\"czech\"],\"pomyslet\":[\"czech\"],\"ponechat\":[\"czech\"],\"ponorka\":[\"czech\"],\"ponurost\":[\"czech\"],\"popadat\":[\"czech\"],\"popel\":[\"czech\"],\"popisek\":[\"czech\"],\"poplach\":[\"czech\"],\"poprosit\":[\"czech\"],\"popsat\":[\"czech\"],\"popud\":[\"czech\"],\"poradce\":[\"czech\"],\"porce\":[\"czech\"],\"porod\":[\"czech\"],\"porucha\":[\"czech\"],\"poryv\":[\"czech\"],\"posadit\":[\"czech\"],\"posed\":[\"czech\"],\"posila\":[\"czech\"],\"poskok\":[\"czech\"],\"poslanec\":[\"czech\"],\"posoudit\":[\"czech\"],\"pospolu\":[\"czech\"],\"postava\":[\"czech\"],\"posudek\":[\"czech\"],\"posyp\":[\"czech\"],\"potah\":[\"czech\"],\"potkan\":[\"czech\"],\"potlesk\":[\"czech\"],\"potomek\":[\"czech\"],\"potrava\":[\"czech\"],\"potupa\":[\"czech\"],\"potvora\":[\"czech\"],\"poukaz\":[\"czech\"],\"pouto\":[\"czech\"],\"pouzdro\":[\"czech\"],\"povaha\":[\"czech\"],\"povidla\":[\"czech\"],\"povlak\":[\"czech\"],\"povoz\":[\"czech\"],\"povrch\":[\"czech\"],\"povstat\":[\"czech\"],\"povyk\":[\"czech\"],\"povzdech\":[\"czech\"],\"pozdrav\":[\"czech\"],\"pozemek\":[\"czech\"],\"poznatek\":[\"czech\"],\"pozor\":[\"czech\"],\"pozvat\":[\"czech\"],\"pracovat\":[\"czech\"],\"prahory\":[\"czech\"],\"praktika\":[\"czech\"],\"prales\":[\"czech\"],\"praotec\":[\"czech\"],\"praporek\":[\"czech\"],\"prase\":[\"czech\"],\"pravda\":[\"czech\"],\"princip\":[\"czech\"],\"prkno\":[\"czech\"],\"probudit\":[\"czech\"],\"procento\":[\"czech\"],\"prodej\":[\"czech\"],\"profese\":[\"czech\"],\"prohra\":[\"czech\"],\"projekt\":[\"czech\"],\"prolomit\":[\"czech\"],\"promile\":[\"czech\"],\"pronikat\":[\"czech\"],\"propad\":[\"czech\"],\"prorok\":[\"czech\"],\"prosba\":[\"czech\"],\"proton\":[\"czech\"],\"proutek\":[\"czech\"],\"provaz\":[\"czech\"],\"prskavka\":[\"czech\"],\"prsten\":[\"czech\"],\"prudkost\":[\"czech\"],\"prut\":[\"czech\"],\"prvek\":[\"czech\"],\"prvohory\":[\"czech\"],\"psanec\":[\"czech\"],\"psovod\":[\"czech\"],\"pstruh\":[\"czech\"],\"ptactvo\":[\"czech\"],\"puberta\":[\"czech\"],\"puch\":[\"czech\"],\"pudl\":[\"czech\"],\"pukavec\":[\"czech\"],\"puklina\":[\"czech\"],\"pukrle\":[\"czech\"],\"pult\":[\"czech\"],\"pumpa\":[\"czech\"],\"punc\":[\"czech\"],\"pupen\":[\"czech\"],\"pusa\":[\"czech\"],\"pusinka\":[\"czech\"],\"pustina\":[\"czech\"],\"putovat\":[\"czech\"],\"putyka\":[\"czech\"],\"pyramida\":[\"czech\"],\"pysk\":[\"czech\"],\"pytel\":[\"czech\"],\"racek\":[\"czech\"],\"rachot\":[\"czech\"],\"radiace\":[\"czech\"],\"radnice\":[\"czech\"],\"radon\":[\"czech\"],\"raft\":[\"czech\"],\"ragby\":[\"czech\"],\"raketa\":[\"czech\"],\"rakovina\":[\"czech\"],\"rameno\":[\"czech\"],\"rampouch\":[\"czech\"],\"rande\":[\"czech\"],\"rarach\":[\"czech\"],\"rarita\":[\"czech\"],\"rasovna\":[\"czech\"],\"rastr\":[\"czech\"],\"ratolest\":[\"czech\"],\"razance\":[\"czech\"],\"razidlo\":[\"czech\"],\"reagovat\":[\"czech\"],\"reakce\":[\"czech\"],\"recept\":[\"czech\"],\"redaktor\":[\"czech\"],\"referent\":[\"czech\"],\"reflex\":[\"czech\"],\"rejnok\":[\"czech\"],\"reklama\":[\"czech\"],\"rekord\":[\"czech\"],\"rekrut\":[\"czech\"],\"rektor\":[\"czech\"],\"reputace\":[\"czech\"],\"revize\":[\"czech\",\"turkish\"],\"revma\":[\"czech\"],\"revolver\":[\"czech\"],\"rezerva\":[\"czech\"],\"riskovat\":[\"czech\"],\"riziko\":[\"czech\"],\"robotika\":[\"czech\"],\"rodokmen\":[\"czech\"],\"rohovka\":[\"czech\"],\"rokle\":[\"czech\"],\"rokoko\":[\"czech\"],\"romaneto\":[\"czech\"],\"ropovod\":[\"czech\"],\"ropucha\":[\"czech\"],\"rorejs\":[\"czech\"],\"rosol\":[\"czech\"],\"rostlina\":[\"czech\"],\"rotmistr\":[\"czech\"],\"rotoped\":[\"czech\"],\"rotunda\":[\"czech\"],\"roubenka\":[\"czech\"],\"roucho\":[\"czech\"],\"roup\":[\"czech\"],\"roura\":[\"czech\"],\"rovina\":[\"czech\"],\"rovnice\":[\"czech\"],\"rozbor\":[\"czech\"],\"rozchod\":[\"czech\"],\"rozdat\":[\"czech\"],\"rozeznat\":[\"czech\"],\"rozhodce\":[\"czech\"],\"rozinka\":[\"czech\"],\"rozjezd\":[\"czech\"],\"rozkaz\":[\"czech\"],\"rozloha\":[\"czech\"],\"rozmar\":[\"czech\"],\"rozpad\":[\"czech\"],\"rozruch\":[\"czech\"],\"rozsah\":[\"czech\"],\"roztok\":[\"czech\"],\"rozum\":[\"czech\"],\"rozvod\":[\"czech\"],\"rubrika\":[\"czech\"],\"ruchadlo\":[\"czech\"],\"rukavice\":[\"czech\"],\"rukopis\":[\"czech\"],\"ryba\":[\"czech\"],\"rybolov\":[\"czech\"],\"rychlost\":[\"czech\"],\"rydlo\":[\"czech\"],\"rypadlo\":[\"czech\"],\"rytina\":[\"czech\"],\"ryzost\":[\"czech\"],\"sadista\":[\"czech\"],\"sahat\":[\"czech\"],\"sako\":[\"czech\"],\"samec\":[\"czech\"],\"samizdat\":[\"czech\"],\"samota\":[\"czech\"],\"sanitka\":[\"czech\"],\"sardinka\":[\"czech\"],\"sasanka\":[\"czech\"],\"satelit\":[\"czech\"],\"sazba\":[\"czech\"],\"sazenice\":[\"czech\"],\"sbor\":[\"czech\"],\"schovat\":[\"czech\"],\"sebranka\":[\"czech\"],\"secese\":[\"czech\"],\"sedadlo\":[\"czech\"],\"sediment\":[\"czech\"],\"sedlo\":[\"czech\"],\"sehnat\":[\"czech\"],\"sejmout\":[\"czech\"],\"sekera\":[\"czech\"],\"sekta\":[\"czech\"],\"sekunda\":[\"czech\"],\"sekvoje\":[\"czech\"],\"semeno\":[\"czech\"],\"seno\":[\"czech\"],\"servis\":[\"czech\",\"turkish\"],\"sesadit\":[\"czech\"],\"seshora\":[\"czech\"],\"seskok\":[\"czech\"],\"seslat\":[\"czech\"],\"sestra\":[\"czech\"],\"sesuv\":[\"czech\"],\"sesypat\":[\"czech\"],\"setba\":[\"czech\"],\"setina\":[\"czech\"],\"setkat\":[\"czech\"],\"setnout\":[\"czech\"],\"setrvat\":[\"czech\"],\"sever\":[\"czech\"],\"seznam\":[\"czech\"],\"shoda\":[\"czech\"],\"shrnout\":[\"czech\"],\"sifon\":[\"czech\"],\"silnice\":[\"czech\"],\"sirka\":[\"czech\"],\"sirotek\":[\"czech\"],\"sirup\":[\"czech\"],\"situace\":[\"czech\"],\"skafandr\":[\"czech\"],\"skalisko\":[\"czech\"],\"skanzen\":[\"czech\"],\"skaut\":[\"czech\"],\"skeptik\":[\"czech\"],\"skica\":[\"czech\"],\"skladba\":[\"czech\"],\"sklenice\":[\"czech\"],\"sklo\":[\"czech\"],\"skluz\":[\"czech\"],\"skoba\":[\"czech\"],\"skokan\":[\"czech\"],\"skoro\":[\"czech\"],\"skripta\":[\"czech\"],\"skrz\":[\"czech\"],\"skupina\":[\"czech\"],\"skvost\":[\"czech\"],\"skvrna\":[\"czech\"],\"slabika\":[\"czech\"],\"sladidlo\":[\"czech\"],\"slanina\":[\"czech\"],\"slast\":[\"czech\"],\"slavnost\":[\"czech\"],\"sledovat\":[\"czech\"],\"slepec\":[\"czech\"],\"sleva\":[\"czech\"],\"slezina\":[\"czech\"],\"slib\":[\"czech\"],\"slina\":[\"czech\"],\"sliznice\":[\"czech\"],\"slon\":[\"czech\"],\"sloupek\":[\"czech\"],\"slovo\":[\"czech\"],\"sluch\":[\"czech\"],\"sluha\":[\"czech\"],\"slunce\":[\"czech\"],\"slupka\":[\"czech\"],\"slza\":[\"czech\"],\"smaragd\":[\"czech\"],\"smetana\":[\"czech\"],\"smilstvo\":[\"czech\"],\"smlouva\":[\"czech\"],\"smog\":[\"czech\"],\"smrad\":[\"czech\"],\"smrk\":[\"czech\"],\"smrtka\":[\"czech\"],\"smutek\":[\"czech\"],\"smysl\":[\"czech\"],\"snad\":[\"czech\"],\"snaha\":[\"czech\"],\"snob\":[\"czech\"],\"sobota\":[\"czech\"],\"socha\":[\"czech\"],\"sodovka\":[\"czech\"],\"sokol\":[\"czech\"],\"sopka\":[\"czech\"],\"sotva\":[\"czech\"],\"souboj\":[\"czech\"],\"soucit\":[\"czech\"],\"soudce\":[\"czech\"],\"souhlas\":[\"czech\"],\"soulad\":[\"czech\"],\"soumrak\":[\"czech\"],\"souprava\":[\"czech\"],\"soused\":[\"czech\"],\"soutok\":[\"czech\"],\"souviset\":[\"czech\"],\"spalovna\":[\"czech\"],\"spasitel\":[\"czech\"],\"spis\":[\"czech\"],\"splav\":[\"czech\"],\"spodek\":[\"czech\"],\"spojenec\":[\"czech\"],\"spolu\":[\"czech\"],\"sponzor\":[\"czech\"],\"spornost\":[\"czech\"],\"spousta\":[\"czech\"],\"sprcha\":[\"czech\"],\"spustit\":[\"czech\"],\"sranda\":[\"czech\"],\"sraz\":[\"czech\"],\"srdce\":[\"czech\"],\"srna\":[\"czech\"],\"srnec\":[\"czech\"],\"srovnat\":[\"czech\"],\"srpen\":[\"czech\"],\"srst\":[\"czech\"],\"srub\":[\"czech\"],\"stanice\":[\"czech\"],\"starosta\":[\"czech\"],\"statika\":[\"czech\"],\"stavba\":[\"czech\"],\"stehno\":[\"czech\"],\"stezka\":[\"czech\"],\"stodola\":[\"czech\"],\"stolek\":[\"czech\"],\"stopa\":[\"czech\"],\"storno\":[\"czech\"],\"stoupat\":[\"czech\"],\"strach\":[\"czech\"],\"stres\":[\"czech\"],\"strhnout\":[\"czech\"],\"strom\":[\"czech\"],\"struna\":[\"czech\"],\"studna\":[\"czech\"],\"stupnice\":[\"czech\"],\"stvol\":[\"czech\"],\"styk\":[\"czech\"],\"subjekt\":[\"czech\"],\"subtropy\":[\"czech\"],\"suchar\":[\"czech\"],\"sudost\":[\"czech\"],\"sukno\":[\"czech\"],\"sundat\":[\"czech\"],\"sunout\":[\"czech\"],\"surikata\":[\"czech\"],\"surovina\":[\"czech\"],\"svah\":[\"czech\"],\"svalstvo\":[\"czech\"],\"svetr\":[\"czech\"],\"svatba\":[\"czech\"],\"svazek\":[\"czech\"],\"svisle\":[\"czech\"],\"svitek\":[\"czech\"],\"svoboda\":[\"czech\"],\"svodidlo\":[\"czech\"],\"svorka\":[\"czech\"],\"svrab\":[\"czech\"],\"sykavka\":[\"czech\"],\"sykot\":[\"czech\"],\"synek\":[\"czech\"],\"synovec\":[\"czech\"],\"sypat\":[\"czech\"],\"sypkost\":[\"czech\"],\"syrovost\":[\"czech\"],\"sysel\":[\"czech\"],\"sytost\":[\"czech\"],\"tabletka\":[\"czech\"],\"tabule\":[\"czech\"],\"tahoun\":[\"czech\"],\"tajemno\":[\"czech\"],\"tajfun\":[\"czech\"],\"tajga\":[\"czech\"],\"tajit\":[\"czech\"],\"tajnost\":[\"czech\"],\"taktika\":[\"czech\"],\"tamhle\":[\"czech\"],\"tampon\":[\"czech\",\"turkish\"],\"tancovat\":[\"czech\"],\"tanec\":[\"czech\"],\"tanker\":[\"czech\"],\"tapeta\":[\"czech\"],\"tavenina\":[\"czech\"],\"tazatel\":[\"czech\"],\"technika\":[\"czech\"],\"tehdy\":[\"czech\"],\"tekutina\":[\"czech\"],\"telefon\":[\"czech\"],\"temnota\":[\"czech\"],\"tendence\":[\"czech\"],\"tenista\":[\"czech\"],\"tenor\":[\"czech\"],\"teplota\":[\"czech\"],\"tepna\":[\"czech\"],\"teprve\":[\"czech\"],\"terapie\":[\"czech\"],\"termoska\":[\"czech\"],\"textil\":[\"czech\"],\"ticho\":[\"czech\"],\"tiskopis\":[\"czech\"],\"titulek\":[\"czech\"],\"tkadlec\":[\"czech\"],\"tkanina\":[\"czech\"],\"tlapka\":[\"czech\"],\"tleskat\":[\"czech\"],\"tlukot\":[\"czech\"],\"tlupa\":[\"czech\"],\"tmel\":[\"czech\"],\"toaleta\":[\"czech\"],\"topinka\":[\"czech\"],\"topol\":[\"czech\"],\"torzo\":[\"czech\"],\"touha\":[\"czech\"],\"toulec\":[\"czech\"],\"tradice\":[\"czech\"],\"traktor\":[\"czech\"],\"tramp\":[\"czech\"],\"trasa\":[\"czech\"],\"traverza\":[\"czech\"],\"trefit\":[\"czech\"],\"trest\":[\"czech\"],\"trezor\":[\"czech\"],\"trhavina\":[\"czech\"],\"trhlina\":[\"czech\"],\"trochu\":[\"czech\"],\"trojice\":[\"czech\"],\"troska\":[\"czech\"],\"trouba\":[\"czech\"],\"trpce\":[\"czech\"],\"trpitel\":[\"czech\"],\"trpkost\":[\"czech\"],\"trubec\":[\"czech\"],\"truchlit\":[\"czech\"],\"truhlice\":[\"czech\"],\"trus\":[\"czech\"],\"trvat\":[\"czech\"],\"tudy\":[\"czech\"],\"tuhnout\":[\"czech\"],\"tuhost\":[\"czech\"],\"tundra\":[\"czech\"],\"turista\":[\"czech\"],\"turnaj\":[\"czech\"],\"tuzemsko\":[\"czech\"],\"tvaroh\":[\"czech\"],\"tvorba\":[\"czech\"],\"tvrdost\":[\"czech\"],\"tvrz\":[\"czech\"],\"tygr\":[\"czech\"],\"tykev\":[\"czech\"],\"ubohost\":[\"czech\"],\"uboze\":[\"czech\"],\"ubrat\":[\"czech\"],\"ubrousek\":[\"czech\"],\"ubrus\":[\"czech\"],\"ubytovna\":[\"czech\"],\"ucho\":[\"czech\"],\"uctivost\":[\"czech\"],\"udivit\":[\"czech\"],\"uhradit\":[\"czech\"],\"ujednat\":[\"czech\"],\"ujistit\":[\"czech\"],\"ujmout\":[\"czech\"],\"ukazatel\":[\"czech\"],\"uklidnit\":[\"czech\"],\"uklonit\":[\"czech\"],\"ukotvit\":[\"czech\"],\"ukrojit\":[\"czech\"],\"ulice\":[\"czech\"],\"ulita\":[\"czech\"],\"ulovit\":[\"czech\"],\"umyvadlo\":[\"czech\"],\"unavit\":[\"czech\"],\"uniforma\":[\"czech\"],\"uniknout\":[\"czech\"],\"upadnout\":[\"czech\"],\"uplatnit\":[\"czech\"],\"uplynout\":[\"czech\"],\"upoutat\":[\"czech\"],\"upravit\":[\"czech\"],\"uran\":[\"czech\"],\"urazit\":[\"czech\"],\"usednout\":[\"czech\"],\"usilovat\":[\"czech\"],\"usmrtit\":[\"czech\"],\"usnadnit\":[\"czech\"],\"usnout\":[\"czech\"],\"usoudit\":[\"czech\"],\"ustlat\":[\"czech\"],\"ustrnout\":[\"czech\"],\"utahovat\":[\"czech\"],\"utkat\":[\"czech\"],\"utlumit\":[\"czech\"],\"utonout\":[\"czech\"],\"utopenec\":[\"czech\"],\"utrousit\":[\"czech\"],\"uvalit\":[\"czech\"],\"uvolnit\":[\"czech\"],\"uvozovka\":[\"czech\"],\"uzdravit\":[\"czech\"],\"uzel\":[\"czech\"],\"uzenina\":[\"czech\"],\"uzlina\":[\"czech\"],\"uznat\":[\"czech\"],\"vagon\":[\"czech\",\"turkish\"],\"valcha\":[\"czech\"],\"valoun\":[\"czech\"],\"vana\":[\"czech\"],\"vandal\":[\"czech\"],\"vanilka\":[\"czech\"],\"varan\":[\"czech\"],\"varhany\":[\"czech\"],\"varovat\":[\"czech\"],\"vcelku\":[\"czech\"],\"vchod\":[\"czech\"],\"vdova\":[\"czech\"],\"vedro\":[\"czech\"],\"vegetace\":[\"czech\"],\"vejce\":[\"czech\"],\"velbloud\":[\"czech\"],\"veletrh\":[\"czech\"],\"velitel\":[\"czech\"],\"velmoc\":[\"czech\"],\"velryba\":[\"czech\"],\"venkov\":[\"czech\"],\"veranda\":[\"czech\"],\"verze\":[\"czech\"],\"veselka\":[\"czech\"],\"veskrze\":[\"czech\"],\"vesnice\":[\"czech\"],\"vespodu\":[\"czech\"],\"vesta\":[\"czech\"],\"veterina\":[\"czech\"],\"veverka\":[\"czech\"],\"vibrace\":[\"czech\"],\"vichr\":[\"czech\"],\"videohra\":[\"czech\"],\"vidina\":[\"czech\"],\"vidle\":[\"czech\"],\"vila\":[\"czech\"],\"vinice\":[\"czech\"],\"viset\":[\"czech\"],\"vitalita\":[\"czech\"],\"vize\":[\"czech\"],\"vizitka\":[\"czech\"],\"vjezd\":[\"czech\"],\"vklad\":[\"czech\"],\"vkus\":[\"czech\"],\"vlajka\":[\"czech\"],\"vlak\":[\"czech\"],\"vlasec\":[\"czech\"],\"vlevo\":[\"czech\"],\"vlhkost\":[\"czech\"],\"vliv\":[\"czech\"],\"vlnovka\":[\"czech\"],\"vloupat\":[\"czech\"],\"vnucovat\":[\"czech\"],\"vnuk\":[\"czech\"],\"voda\":[\"czech\"],\"vodivost\":[\"czech\"],\"vodoznak\":[\"czech\"],\"vodstvo\":[\"czech\"],\"vojensky\":[\"czech\"],\"vojna\":[\"czech\"],\"vojsko\":[\"czech\"],\"volant\":[\"czech\"],\"volba\":[\"czech\"],\"volit\":[\"czech\"],\"volno\":[\"czech\"],\"voskovka\":[\"czech\"],\"vozidlo\":[\"czech\"],\"vozovna\":[\"czech\"],\"vpravo\":[\"czech\"],\"vrabec\":[\"czech\"],\"vracet\":[\"czech\"],\"vrah\":[\"czech\"],\"vrata\":[\"czech\"],\"vrba\":[\"czech\"],\"vrcholek\":[\"czech\"],\"vrhat\":[\"czech\"],\"vrstva\":[\"czech\"],\"vrtule\":[\"czech\"],\"vsadit\":[\"czech\"],\"vstoupit\":[\"czech\"],\"vstup\":[\"czech\"],\"vtip\":[\"czech\"],\"vybavit\":[\"czech\"],\"vybrat\":[\"czech\"],\"vychovat\":[\"czech\"],\"vydat\":[\"czech\"],\"vydra\":[\"czech\"],\"vyfotit\":[\"czech\"],\"vyhledat\":[\"czech\"],\"vyhnout\":[\"czech\"],\"vyhodit\":[\"czech\"],\"vyhradit\":[\"czech\"],\"vyhubit\":[\"czech\"],\"vyjasnit\":[\"czech\"],\"vyjet\":[\"czech\"],\"vyjmout\":[\"czech\"],\"vyklopit\":[\"czech\"],\"vykonat\":[\"czech\"],\"vylekat\":[\"czech\"],\"vymazat\":[\"czech\"],\"vymezit\":[\"czech\"],\"vymizet\":[\"czech\"],\"vymyslet\":[\"czech\"],\"vynechat\":[\"czech\"],\"vynikat\":[\"czech\"],\"vynutit\":[\"czech\"],\"vypadat\":[\"czech\"],\"vyplatit\":[\"czech\"],\"vypravit\":[\"czech\"],\"vypustit\":[\"czech\"],\"vyrazit\":[\"czech\"],\"vyrovnat\":[\"czech\"],\"vyrvat\":[\"czech\"],\"vyslovit\":[\"czech\"],\"vysoko\":[\"czech\"],\"vystavit\":[\"czech\"],\"vysunout\":[\"czech\"],\"vysypat\":[\"czech\"],\"vytasit\":[\"czech\"],\"vytesat\":[\"czech\"],\"vytratit\":[\"czech\"],\"vyvinout\":[\"czech\"],\"vyvolat\":[\"czech\"],\"vyvrhel\":[\"czech\"],\"vyzdobit\":[\"czech\"],\"vyznat\":[\"czech\"],\"vzadu\":[\"czech\"],\"vzbudit\":[\"czech\"],\"vzchopit\":[\"czech\"],\"vzdor\":[\"czech\"],\"vzduch\":[\"czech\"],\"vzdychat\":[\"czech\"],\"vzestup\":[\"czech\"],\"vzhledem\":[\"czech\"],\"vzkaz\":[\"czech\"],\"vzlykat\":[\"czech\"],\"vznik\":[\"czech\"],\"vzorek\":[\"czech\"],\"vzpoura\":[\"czech\"],\"vztah\":[\"czech\"],\"vztek\":[\"czech\"],\"xylofon\":[\"czech\"],\"zabrat\":[\"czech\"],\"zabydlet\":[\"czech\"],\"zachovat\":[\"czech\"],\"zadarmo\":[\"czech\"],\"zadusit\":[\"czech\"],\"zafoukat\":[\"czech\"],\"zahltit\":[\"czech\"],\"zahodit\":[\"czech\"],\"zahrada\":[\"czech\"],\"zahynout\":[\"czech\"],\"zajatec\":[\"czech\"],\"zajet\":[\"czech\"],\"zajistit\":[\"czech\"],\"zaklepat\":[\"czech\"],\"zakoupit\":[\"czech\"],\"zalepit\":[\"czech\"],\"zamezit\":[\"czech\"],\"zamotat\":[\"czech\"],\"zamyslet\":[\"czech\"],\"zanechat\":[\"czech\"],\"zanikat\":[\"czech\"],\"zaplatit\":[\"czech\"],\"zapojit\":[\"czech\"],\"zapsat\":[\"czech\"],\"zarazit\":[\"czech\"],\"zastavit\":[\"czech\"],\"zasunout\":[\"czech\"],\"zatajit\":[\"czech\"],\"zatemnit\":[\"czech\"],\"zatknout\":[\"czech\"],\"zaujmout\":[\"czech\"],\"zavalit\":[\"czech\"],\"zavelet\":[\"czech\"],\"zavinit\":[\"czech\"],\"zavolat\":[\"czech\"],\"zavrtat\":[\"czech\"],\"zazvonit\":[\"czech\"],\"zbavit\":[\"czech\"],\"zbrusu\":[\"czech\"],\"zbudovat\":[\"czech\"],\"zbytek\":[\"czech\"],\"zdaleka\":[\"czech\"],\"zdarma\":[\"czech\"],\"zdatnost\":[\"czech\"],\"zdivo\":[\"czech\"],\"zdobit\":[\"czech\"],\"zdroj\":[\"czech\"],\"zdvih\":[\"czech\"],\"zdymadlo\":[\"czech\"],\"zelenina\":[\"czech\"],\"zeman\":[\"czech\"],\"zemina\":[\"czech\"],\"zeptat\":[\"czech\"],\"zezadu\":[\"czech\"],\"zezdola\":[\"czech\"],\"zhatit\":[\"czech\"],\"zhltnout\":[\"czech\"],\"zhluboka\":[\"czech\"],\"zhotovit\":[\"czech\"],\"zhruba\":[\"czech\"],\"zima\":[\"czech\"],\"zimnice\":[\"czech\"],\"zjemnit\":[\"czech\"],\"zklamat\":[\"czech\"],\"zkoumat\":[\"czech\"],\"zkratka\":[\"czech\"],\"zkumavka\":[\"czech\"],\"zlato\":[\"czech\"],\"zlehka\":[\"czech\"],\"zloba\":[\"czech\"],\"zlom\":[\"czech\"],\"zlost\":[\"czech\"],\"zlozvyk\":[\"czech\"],\"zmapovat\":[\"czech\"],\"zmar\":[\"czech\"],\"zmatek\":[\"czech\"],\"zmije\":[\"czech\"],\"zmizet\":[\"czech\"],\"zmocnit\":[\"czech\"],\"zmodrat\":[\"czech\"],\"zmrzlina\":[\"czech\"],\"zmutovat\":[\"czech\"],\"znak\":[\"czech\"],\"znalost\":[\"czech\"],\"znamenat\":[\"czech\"],\"znovu\":[\"czech\"],\"zobrazit\":[\"czech\"],\"zotavit\":[\"czech\"],\"zoubek\":[\"czech\"],\"zoufale\":[\"czech\"],\"zplodit\":[\"czech\"],\"zpomalit\":[\"czech\"],\"zprava\":[\"czech\"],\"zprostit\":[\"czech\"],\"zprudka\":[\"czech\"],\"zprvu\":[\"czech\"],\"zrada\":[\"czech\"],\"zranit\":[\"czech\"],\"zrcadlo\":[\"czech\"],\"zrnitost\":[\"czech\"],\"zrno\":[\"czech\"],\"zrovna\":[\"czech\"],\"zrychlit\":[\"czech\"],\"zrzavost\":[\"czech\"],\"zticha\":[\"czech\"],\"ztratit\":[\"czech\"],\"zubovina\":[\"czech\"],\"zubr\":[\"czech\"],\"zvednout\":[\"czech\"],\"zvenku\":[\"czech\"],\"zvesela\":[\"czech\"],\"zvon\":[\"czech\"],\"zvrat\":[\"czech\"],\"zvukovod\":[\"czech\"],\"zvyk\":[\"czech\"],\"abandon\":[\"english\",\"french\"],\"ability\":[\"english\"],\"able\":[\"english\"],\"about\":[\"english\"],\"above\":[\"english\"],\"absent\":[\"english\"],\"absorb\":[\"english\"],\"abstract\":[\"english\"],\"absurd\":[\"english\"],\"abuse\":[\"english\"],\"access\":[\"english\"],\"accident\":[\"english\"],\"account\":[\"english\"],\"accuse\":[\"english\"],\"achieve\":[\"english\"],\"acid\":[\"english\"],\"acoustic\":[\"english\"],\"acquire\":[\"english\"],\"across\":[\"english\"],\"act\":[\"english\"],\"action\":[\"english\"],\"actor\":[\"english\"],\"actress\":[\"english\"],\"actual\":[\"english\"],\"adapt\":[\"english\"],\"add\":[\"english\"],\"addict\":[\"english\"],\"address\":[\"english\"],\"adjust\":[\"english\"],\"admit\":[\"english\"],\"adult\":[\"english\"],\"advance\":[\"english\"],\"advice\":[\"english\"],\"aerobic\":[\"english\"],\"affair\":[\"english\"],\"afford\":[\"english\"],\"afraid\":[\"english\"],\"again\":[\"english\"],\"age\":[\"english\"],\"agent\":[\"english\"],\"agree\":[\"english\"],\"ahead\":[\"english\"],\"aim\":[\"english\"],\"air\":[\"english\"],\"airport\":[\"english\"],\"aisle\":[\"english\"],\"alarm\":[\"english\"],\"album\":[\"english\"],\"alcohol\":[\"english\"],\"alert\":[\"english\"],\"alien\":[\"english\"],\"all\":[\"english\"],\"alley\":[\"english\"],\"allow\":[\"english\"],\"almost\":[\"english\"],\"alone\":[\"english\"],\"alpha\":[\"english\"],\"already\":[\"english\"],\"also\":[\"english\"],\"alter\":[\"english\"],\"always\":[\"english\"],\"amateur\":[\"english\",\"french\"],\"amazing\":[\"english\"],\"among\":[\"english\"],\"amount\":[\"english\"],\"amused\":[\"english\"],\"analyst\":[\"english\"],\"anchor\":[\"english\"],\"ancient\":[\"english\"],\"anger\":[\"english\"],\"angle\":[\"english\",\"french\"],\"angry\":[\"english\"],\"animal\":[\"english\",\"french\"],\"ankle\":[\"english\"],\"announce\":[\"english\"],\"annual\":[\"english\"],\"another\":[\"english\"],\"answer\":[\"english\"],\"antenna\":[\"english\"],\"antique\":[\"english\"],\"anxiety\":[\"english\"],\"any\":[\"english\"],\"apart\":[\"english\"],\"apology\":[\"english\"],\"appear\":[\"english\"],\"apple\":[\"english\"],\"approve\":[\"english\"],\"april\":[\"english\"],\"arch\":[\"english\"],\"arctic\":[\"english\"],\"area\":[\"english\"],\"arena\":[\"english\",\"turkish\"],\"argue\":[\"english\"],\"arm\":[\"english\"],\"armed\":[\"english\"],\"armor\":[\"english\"],\"army\":[\"english\"],\"around\":[\"english\"],\"arrange\":[\"english\"],\"arrest\":[\"english\"],\"arrive\":[\"english\"],\"arrow\":[\"english\"],\"art\":[\"english\"],\"artefact\":[\"english\"],\"artist\":[\"english\",\"turkish\"],\"artwork\":[\"english\"],\"ask\":[\"english\"],\"aspect\":[\"english\",\"french\"],\"assault\":[\"english\"],\"asset\":[\"english\"],\"assist\":[\"english\"],\"assume\":[\"english\"],\"asthma\":[\"english\"],\"athlete\":[\"english\"],\"atom\":[\"english\",\"turkish\"],\"attack\":[\"english\"],\"attend\":[\"english\"],\"attitude\":[\"english\"],\"attract\":[\"english\"],\"auction\":[\"english\"],\"audit\":[\"english\"],\"august\":[\"english\"],\"aunt\":[\"english\"],\"author\":[\"english\"],\"auto\":[\"english\"],\"autumn\":[\"english\"],\"average\":[\"english\"],\"avocado\":[\"english\"],\"avoid\":[\"english\"],\"awake\":[\"english\"],\"aware\":[\"english\"],\"away\":[\"english\"],\"awesome\":[\"english\"],\"awful\":[\"english\"],\"awkward\":[\"english\"],\"axis\":[\"english\"],\"baby\":[\"english\"],\"bachelor\":[\"english\"],\"bacon\":[\"english\"],\"badge\":[\"english\",\"french\"],\"bag\":[\"english\"],\"balance\":[\"english\"],\"balcony\":[\"english\"],\"ball\":[\"english\"],\"bamboo\":[\"english\"],\"banana\":[\"english\"],\"banner\":[\"english\"],\"bar\":[\"english\"],\"barely\":[\"english\"],\"bargain\":[\"english\"],\"barrel\":[\"english\"],\"base\":[\"english\"],\"basic\":[\"english\"],\"basket\":[\"english\"],\"battle\":[\"english\"],\"beach\":[\"english\"],\"bean\":[\"english\"],\"beauty\":[\"english\"],\"because\":[\"english\"],\"become\":[\"english\"],\"beef\":[\"english\"],\"before\":[\"english\"],\"begin\":[\"english\"],\"behave\":[\"english\"],\"behind\":[\"english\"],\"believe\":[\"english\"],\"below\":[\"english\"],\"belt\":[\"english\"],\"bench\":[\"english\"],\"benefit\":[\"english\"],\"best\":[\"english\"],\"betray\":[\"english\"],\"better\":[\"english\"],\"between\":[\"english\"],\"beyond\":[\"english\"],\"bicycle\":[\"english\",\"french\"],\"bid\":[\"english\"],\"bike\":[\"english\"],\"bind\":[\"english\"],\"biology\":[\"english\"],\"bird\":[\"english\"],\"birth\":[\"english\"],\"bitter\":[\"english\"],\"black\":[\"english\"],\"blade\":[\"english\"],\"blame\":[\"english\"],\"blanket\":[\"english\"],\"blast\":[\"english\"],\"bleak\":[\"english\"],\"bless\":[\"english\"],\"blind\":[\"english\"],\"blood\":[\"english\"],\"blossom\":[\"english\"],\"blouse\":[\"english\"],\"blue\":[\"english\"],\"blur\":[\"english\"],\"blush\":[\"english\"],\"board\":[\"english\"],\"boat\":[\"english\"],\"body\":[\"english\"],\"boil\":[\"english\"],\"bomb\":[\"english\"],\"bone\":[\"english\"],\"bonus\":[\"english\",\"french\"],\"book\":[\"english\"],\"boost\":[\"english\"],\"border\":[\"english\"],\"boring\":[\"english\"],\"borrow\":[\"english\"],\"boss\":[\"english\"],\"bottom\":[\"english\"],\"bounce\":[\"english\"],\"box\":[\"english\"],\"boy\":[\"english\"],\"bracket\":[\"english\"],\"brain\":[\"english\"],\"brand\":[\"english\"],\"brass\":[\"english\"],\"brave\":[\"english\",\"french\"],\"bread\":[\"english\"],\"breeze\":[\"english\"],\"brick\":[\"english\"],\"bridge\":[\"english\"],\"brief\":[\"english\"],\"bright\":[\"english\"],\"bring\":[\"english\"],\"brisk\":[\"english\"],\"broccoli\":[\"english\"],\"broken\":[\"english\"],\"bronze\":[\"english\"],\"broom\":[\"english\"],\"brother\":[\"english\"],\"brown\":[\"english\"],\"brush\":[\"english\"],\"bubble\":[\"english\"],\"buddy\":[\"english\"],\"budget\":[\"english\"],\"buffalo\":[\"english\"],\"build\":[\"english\"],\"bulb\":[\"english\"],\"bulk\":[\"english\"],\"bullet\":[\"english\"],\"bundle\":[\"english\"],\"bunker\":[\"english\"],\"burden\":[\"english\"],\"burger\":[\"english\"],\"burst\":[\"english\"],\"bus\":[\"english\"],\"business\":[\"english\"],\"busy\":[\"english\"],\"butter\":[\"english\"],\"buyer\":[\"english\"],\"buzz\":[\"english\"],\"cabbage\":[\"english\"],\"cabin\":[\"english\"],\"cable\":[\"english\"],\"cactus\":[\"english\"],\"cage\":[\"english\"],\"cake\":[\"english\"],\"call\":[\"english\"],\"calm\":[\"english\"],\"camera\":[\"english\"],\"camp\":[\"english\"],\"can\":[\"english\"],\"canal\":[\"english\",\"french\"],\"cancel\":[\"english\"],\"candy\":[\"english\"],\"cannon\":[\"english\"],\"canoe\":[\"english\"],\"canvas\":[\"english\"],\"canyon\":[\"english\"],\"capable\":[\"english\",\"french\"],\"capital\":[\"english\"],\"captain\":[\"english\"],\"car\":[\"english\"],\"carbon\":[\"english\"],\"card\":[\"english\"],\"cargo\":[\"english\"],\"carpet\":[\"english\"],\"carry\":[\"english\"],\"cart\":[\"english\"],\"case\":[\"english\"],\"cash\":[\"english\"],\"casino\":[\"english\"],\"castle\":[\"english\"],\"casual\":[\"english\"],\"cat\":[\"english\"],\"catalog\":[\"english\"],\"catch\":[\"english\"],\"category\":[\"english\"],\"cattle\":[\"english\"],\"caught\":[\"english\"],\"cause\":[\"english\"],\"caution\":[\"english\",\"french\"],\"cave\":[\"english\"],\"ceiling\":[\"english\"],\"celery\":[\"english\"],\"cement\":[\"english\"],\"census\":[\"english\"],\"century\":[\"english\"],\"cereal\":[\"english\"],\"certain\":[\"english\"],\"chair\":[\"english\"],\"chalk\":[\"english\"],\"champion\":[\"english\"],\"change\":[\"english\"],\"chaos\":[\"english\"],\"chapter\":[\"english\"],\"charge\":[\"english\"],\"chase\":[\"english\"],\"chat\":[\"english\"],\"cheap\":[\"english\"],\"check\":[\"english\"],\"cheese\":[\"english\"],\"chef\":[\"english\"],\"cherry\":[\"english\"],\"chest\":[\"english\"],\"chicken\":[\"english\"],\"chief\":[\"english\"],\"child\":[\"english\"],\"chimney\":[\"english\"],\"choice\":[\"english\"],\"choose\":[\"english\"],\"chronic\":[\"english\"],\"chuckle\":[\"english\"],\"chunk\":[\"english\"],\"churn\":[\"english\"],\"cigar\":[\"english\"],\"cinnamon\":[\"english\"],\"circle\":[\"english\"],\"citizen\":[\"english\"],\"city\":[\"english\"],\"civil\":[\"english\",\"french\"],\"claim\":[\"english\"],\"clap\":[\"english\"],\"clarify\":[\"english\"],\"claw\":[\"english\"],\"clay\":[\"english\"],\"clean\":[\"english\"],\"clerk\":[\"english\"],\"clever\":[\"english\"],\"click\":[\"english\"],\"client\":[\"english\",\"french\"],\"cliff\":[\"english\"],\"climb\":[\"english\"],\"clinic\":[\"english\"],\"clip\":[\"english\"],\"clock\":[\"english\"],\"clog\":[\"english\"],\"close\":[\"english\"],\"cloth\":[\"english\"],\"cloud\":[\"english\"],\"clown\":[\"english\"],\"club\":[\"english\"],\"clump\":[\"english\"],\"cluster\":[\"english\"],\"clutch\":[\"english\"],\"coach\":[\"english\"],\"coast\":[\"english\"],\"coconut\":[\"english\"],\"code\":[\"english\"],\"coffee\":[\"english\"],\"coil\":[\"english\"],\"coin\":[\"english\"],\"collect\":[\"english\"],\"color\":[\"english\"],\"column\":[\"english\"],\"combine\":[\"english\"],\"come\":[\"english\"],\"comfort\":[\"english\"],\"comic\":[\"english\"],\"common\":[\"english\"],\"company\":[\"english\"],\"concert\":[\"english\",\"french\"],\"conduct\":[\"english\"],\"confirm\":[\"english\"],\"congress\":[\"english\"],\"connect\":[\"english\"],\"consider\":[\"english\"],\"control\":[\"english\"],\"convince\":[\"english\"],\"cook\":[\"english\"],\"cool\":[\"english\"],\"copper\":[\"english\"],\"copy\":[\"english\"],\"coral\":[\"english\"],\"core\":[\"english\"],\"corn\":[\"english\"],\"correct\":[\"english\",\"french\"],\"cost\":[\"english\"],\"cotton\":[\"english\"],\"couch\":[\"english\"],\"country\":[\"english\"],\"couple\":[\"english\"],\"course\":[\"english\"],\"cousin\":[\"english\"],\"cover\":[\"english\"],\"coyote\":[\"english\",\"french\"],\"crack\":[\"english\"],\"cradle\":[\"english\"],\"craft\":[\"english\"],\"cram\":[\"english\"],\"crane\":[\"english\"],\"crash\":[\"english\"],\"crater\":[\"english\"],\"crawl\":[\"english\"],\"crazy\":[\"english\"],\"cream\":[\"english\"],\"credit\":[\"english\"],\"creek\":[\"english\"],\"crew\":[\"english\"],\"cricket\":[\"english\"],\"crime\":[\"english\"],\"crisp\":[\"english\"],\"critic\":[\"english\"],\"crop\":[\"english\"],\"cross\":[\"english\"],\"crouch\":[\"english\"],\"crowd\":[\"english\"],\"crucial\":[\"english\",\"french\"],\"cruel\":[\"english\",\"french\"],\"cruise\":[\"english\"],\"crumble\":[\"english\"],\"crunch\":[\"english\"],\"crush\":[\"english\"],\"cry\":[\"english\"],\"crystal\":[\"english\"],\"cube\":[\"english\"],\"culture\":[\"english\"],\"cup\":[\"english\"],\"cupboard\":[\"english\"],\"curious\":[\"english\"],\"current\":[\"english\"],\"curtain\":[\"english\"],\"curve\":[\"english\"],\"cushion\":[\"english\"],\"custom\":[\"english\"],\"cute\":[\"english\"],\"cycle\":[\"english\",\"french\"],\"dad\":[\"english\"],\"damage\":[\"english\"],\"damp\":[\"english\"],\"dance\":[\"english\"],\"danger\":[\"english\",\"french\"],\"daring\":[\"english\"],\"dash\":[\"english\"],\"daughter\":[\"english\"],\"dawn\":[\"english\"],\"day\":[\"english\"],\"deal\":[\"english\"],\"debate\":[\"english\"],\"debris\":[\"english\"],\"decade\":[\"english\"],\"december\":[\"english\"],\"decide\":[\"english\"],\"decline\":[\"english\"],\"decorate\":[\"english\"],\"decrease\":[\"english\"],\"deer\":[\"english\"],\"defense\":[\"english\"],\"define\":[\"english\"],\"defy\":[\"english\"],\"degree\":[\"english\"],\"delay\":[\"english\"],\"deliver\":[\"english\"],\"demand\":[\"english\"],\"demise\":[\"english\"],\"denial\":[\"english\"],\"dentist\":[\"english\"],\"deny\":[\"english\"],\"depart\":[\"english\"],\"depend\":[\"english\"],\"deposit\":[\"english\"],\"depth\":[\"english\"],\"deputy\":[\"english\"],\"derive\":[\"english\"],\"describe\":[\"english\"],\"desert\":[\"english\"],\"design\":[\"english\"],\"desk\":[\"english\"],\"despair\":[\"english\"],\"destroy\":[\"english\"],\"detail\":[\"english\"],\"detect\":[\"english\"],\"develop\":[\"english\"],\"device\":[\"english\"],\"devote\":[\"english\"],\"diagram\":[\"english\"],\"dial\":[\"english\"],\"diamond\":[\"english\"],\"diary\":[\"english\"],\"dice\":[\"english\"],\"diesel\":[\"english\"],\"diet\":[\"english\"],\"differ\":[\"english\"],\"digital\":[\"english\",\"french\"],\"dignity\":[\"english\"],\"dilemma\":[\"english\"],\"dinner\":[\"english\"],\"dinosaur\":[\"english\"],\"direct\":[\"english\"],\"dirt\":[\"english\"],\"disagree\":[\"english\"],\"discover\":[\"english\"],\"disease\":[\"english\"],\"dish\":[\"english\"],\"dismiss\":[\"english\"],\"disorder\":[\"english\"],\"display\":[\"english\"],\"distance\":[\"english\",\"french\"],\"divert\":[\"english\"],\"divide\":[\"english\"],\"divorce\":[\"english\"],\"dizzy\":[\"english\"],\"doctor\":[\"english\"],\"document\":[\"english\"],\"dog\":[\"english\"],\"doll\":[\"english\"],\"dolphin\":[\"english\"],\"domain\":[\"english\"],\"donate\":[\"english\"],\"donkey\":[\"english\"],\"donor\":[\"english\"],\"door\":[\"english\"],\"dose\":[\"english\"],\"double\":[\"english\",\"french\"],\"dove\":[\"english\"],\"draft\":[\"english\"],\"dragon\":[\"english\",\"french\"],\"drama\":[\"english\"],\"drastic\":[\"english\"],\"draw\":[\"english\"],\"dream\":[\"english\"],\"dress\":[\"english\"],\"drift\":[\"english\"],\"drill\":[\"english\"],\"drink\":[\"english\"],\"drip\":[\"english\"],\"drive\":[\"english\"],\"drop\":[\"english\"],\"drum\":[\"english\"],\"dry\":[\"english\"],\"duck\":[\"english\"],\"dumb\":[\"english\"],\"dune\":[\"english\"],\"during\":[\"english\"],\"dust\":[\"english\"],\"dutch\":[\"english\"],\"duty\":[\"english\"],\"dwarf\":[\"english\"],\"dynamic\":[\"english\"],\"eager\":[\"english\"],\"eagle\":[\"english\"],\"early\":[\"english\"],\"earn\":[\"english\"],\"earth\":[\"english\"],\"easily\":[\"english\"],\"east\":[\"english\"],\"easy\":[\"english\"],\"echo\":[\"english\"],\"ecology\":[\"english\"],\"economy\":[\"english\"],\"edge\":[\"english\"],\"edit\":[\"english\"],\"educate\":[\"english\"],\"effort\":[\"english\",\"french\"],\"egg\":[\"english\"],\"eight\":[\"english\"],\"either\":[\"english\"],\"elbow\":[\"english\"],\"elder\":[\"english\"],\"electric\":[\"english\"],\"elegant\":[\"english\"],\"element\":[\"english\"],\"elephant\":[\"english\"],\"elevator\":[\"english\"],\"elite\":[\"english\"],\"else\":[\"english\"],\"embark\":[\"english\"],\"embody\":[\"english\"],\"embrace\":[\"english\"],\"emerge\":[\"english\"],\"emotion\":[\"english\"],\"employ\":[\"english\"],\"empower\":[\"english\"],\"empty\":[\"english\"],\"enable\":[\"english\"],\"enact\":[\"english\"],\"end\":[\"english\"],\"endless\":[\"english\"],\"endorse\":[\"english\"],\"enemy\":[\"english\"],\"energy\":[\"english\"],\"enforce\":[\"english\"],\"engage\":[\"english\"],\"engine\":[\"english\"],\"enhance\":[\"english\"],\"enjoy\":[\"english\"],\"enlist\":[\"english\"],\"enough\":[\"english\"],\"enrich\":[\"english\"],\"enroll\":[\"english\"],\"ensure\":[\"english\"],\"enter\":[\"english\"],\"entire\":[\"english\"],\"entry\":[\"english\"],\"envelope\":[\"english\"],\"episode\":[\"english\"],\"equal\":[\"english\"],\"equip\":[\"english\"],\"era\":[\"english\"],\"erase\":[\"english\"],\"erode\":[\"english\"],\"erosion\":[\"english\"],\"error\":[\"english\"],\"erupt\":[\"english\"],\"escape\":[\"english\"],\"essay\":[\"english\"],\"essence\":[\"english\",\"french\"],\"estate\":[\"english\"],\"eternal\":[\"english\"],\"ethics\":[\"english\"],\"evidence\":[\"english\"],\"evil\":[\"english\"],\"evoke\":[\"english\"],\"evolve\":[\"english\"],\"exact\":[\"english\",\"french\"],\"example\":[\"english\"],\"excess\":[\"english\"],\"exchange\":[\"english\"],\"excite\":[\"english\"],\"exclude\":[\"english\"],\"excuse\":[\"english\",\"french\"],\"execute\":[\"english\"],\"exercise\":[\"english\"],\"exhaust\":[\"english\"],\"exhibit\":[\"english\"],\"exile\":[\"english\"],\"exist\":[\"english\"],\"exit\":[\"english\"],\"exotic\":[\"english\"],\"expand\":[\"english\"],\"expect\":[\"english\"],\"expire\":[\"english\"],\"explain\":[\"english\"],\"expose\":[\"english\"],\"express\":[\"english\"],\"extend\":[\"english\"],\"extra\":[\"english\"],\"eye\":[\"english\"],\"eyebrow\":[\"english\"],\"fabric\":[\"english\"],\"face\":[\"english\"],\"faculty\":[\"english\"],\"fade\":[\"english\"],\"faint\":[\"english\"],\"faith\":[\"english\"],\"fall\":[\"english\"],\"false\":[\"english\"],\"fame\":[\"english\"],\"family\":[\"english\"],\"famous\":[\"english\"],\"fan\":[\"english\"],\"fancy\":[\"english\"],\"fantasy\":[\"english\"],\"farm\":[\"english\"],\"fashion\":[\"english\"],\"fat\":[\"english\"],\"fatal\":[\"english\",\"french\"],\"father\":[\"english\"],\"fatigue\":[\"english\",\"french\"],\"fault\":[\"english\"],\"favorite\":[\"english\"],\"feature\":[\"english\"],\"february\":[\"english\"],\"federal\":[\"english\",\"turkish\"],\"fee\":[\"english\"],\"feed\":[\"english\"],\"feel\":[\"english\"],\"female\":[\"english\"],\"fence\":[\"english\"],\"festival\":[\"english\",\"french\",\"turkish\"],\"fetch\":[\"english\"],\"fever\":[\"english\"],\"few\":[\"english\"],\"fiber\":[\"english\"],\"fiction\":[\"english\"],\"field\":[\"english\"],\"figure\":[\"english\",\"french\"],\"file\":[\"english\"],\"film\":[\"english\"],\"filter\":[\"english\"],\"final\":[\"english\"],\"find\":[\"english\"],\"fine\":[\"english\"],\"finger\":[\"english\"],\"finish\":[\"english\"],\"fire\":[\"english\"],\"firm\":[\"english\"],\"first\":[\"english\"],\"fiscal\":[\"english\"],\"fish\":[\"english\"],\"fit\":[\"english\"],\"fitness\":[\"english\"],\"fix\":[\"english\"],\"flag\":[\"english\"],\"flame\":[\"english\"],\"flash\":[\"english\"],\"flat\":[\"english\"],\"flavor\":[\"english\"],\"flee\":[\"english\"],\"flight\":[\"english\"],\"flip\":[\"english\"],\"float\":[\"english\"],\"flock\":[\"english\"],\"floor\":[\"english\"],\"flower\":[\"english\"],\"fluid\":[\"english\"],\"flush\":[\"english\"],\"fly\":[\"english\"],\"foam\":[\"english\"],\"focus\":[\"english\"],\"fog\":[\"english\"],\"foil\":[\"english\"],\"fold\":[\"english\"],\"follow\":[\"english\"],\"food\":[\"english\"],\"foot\":[\"english\"],\"force\":[\"english\"],\"forest\":[\"english\"],\"forget\":[\"english\"],\"fork\":[\"english\"],\"fortune\":[\"english\",\"french\"],\"forum\":[\"english\"],\"forward\":[\"english\"],\"fossil\":[\"english\"],\"foster\":[\"english\"],\"found\":[\"english\"],\"fox\":[\"english\"],\"fragile\":[\"english\",\"french\"],\"frame\":[\"english\"],\"frequent\":[\"english\"],\"fresh\":[\"english\"],\"friend\":[\"english\"],\"fringe\":[\"english\"],\"frog\":[\"english\"],\"front\":[\"english\"],\"frost\":[\"english\"],\"frown\":[\"english\"],\"frozen\":[\"english\"],\"fruit\":[\"english\",\"french\"],\"fuel\":[\"english\"],\"fun\":[\"english\"],\"funny\":[\"english\"],\"furnace\":[\"english\"],\"fury\":[\"english\"],\"future\":[\"english\"],\"gadget\":[\"english\"],\"gain\":[\"english\"],\"galaxy\":[\"english\"],\"gallery\":[\"english\"],\"game\":[\"english\"],\"gap\":[\"english\"],\"garage\":[\"english\"],\"garbage\":[\"english\"],\"garden\":[\"english\"],\"garlic\":[\"english\"],\"garment\":[\"english\"],\"gas\":[\"english\"],\"gasp\":[\"english\"],\"gate\":[\"english\"],\"gather\":[\"english\"],\"gauge\":[\"english\"],\"gaze\":[\"english\"],\"general\":[\"english\"],\"genius\":[\"english\"],\"genre\":[\"english\"],\"gentle\":[\"english\"],\"genuine\":[\"english\"],\"gesture\":[\"english\"],\"ghost\":[\"english\"],\"giant\":[\"english\"],\"gift\":[\"english\"],\"giggle\":[\"english\"],\"ginger\":[\"english\"],\"giraffe\":[\"english\"],\"girl\":[\"english\"],\"give\":[\"english\"],\"glad\":[\"english\"],\"glance\":[\"english\"],\"glare\":[\"english\"],\"glass\":[\"english\"],\"glide\":[\"english\"],\"glimpse\":[\"english\"],\"globe\":[\"english\",\"french\"],\"gloom\":[\"english\"],\"glory\":[\"english\"],\"glove\":[\"english\"],\"glow\":[\"english\"],\"glue\":[\"english\"],\"goat\":[\"english\"],\"goddess\":[\"english\"],\"gold\":[\"english\"],\"good\":[\"english\"],\"goose\":[\"english\"],\"gorilla\":[\"english\"],\"gospel\":[\"english\"],\"gossip\":[\"english\"],\"govern\":[\"english\"],\"gown\":[\"english\"],\"grab\":[\"english\"],\"grace\":[\"english\"],\"grain\":[\"english\"],\"grant\":[\"english\"],\"grape\":[\"english\"],\"grass\":[\"english\"],\"gravity\":[\"english\"],\"great\":[\"english\"],\"green\":[\"english\"],\"grid\":[\"english\"],\"grief\":[\"english\"],\"grit\":[\"english\"],\"grocery\":[\"english\"],\"group\":[\"english\"],\"grow\":[\"english\"],\"grunt\":[\"english\"],\"guard\":[\"english\"],\"guess\":[\"english\"],\"guide\":[\"english\",\"french\"],\"guilt\":[\"english\"],\"guitar\":[\"english\"],\"gun\":[\"english\"],\"gym\":[\"english\"],\"habit\":[\"english\"],\"hair\":[\"english\"],\"half\":[\"english\"],\"hammer\":[\"english\"],\"hamster\":[\"english\"],\"hand\":[\"english\"],\"happy\":[\"english\"],\"harbor\":[\"english\"],\"hard\":[\"english\"],\"harsh\":[\"english\"],\"harvest\":[\"english\"],\"hat\":[\"english\"],\"have\":[\"english\"],\"hawk\":[\"english\"],\"hazard\":[\"english\"],\"head\":[\"english\"],\"health\":[\"english\"],\"heart\":[\"english\"],\"heavy\":[\"english\"],\"hedgehog\":[\"english\"],\"height\":[\"english\"],\"hello\":[\"english\"],\"helmet\":[\"english\"],\"help\":[\"english\"],\"hen\":[\"english\"],\"hero\":[\"english\"],\"hidden\":[\"english\"],\"high\":[\"english\"],\"hill\":[\"english\"],\"hint\":[\"english\"],\"hip\":[\"english\"],\"hire\":[\"english\"],\"history\":[\"english\"],\"hobby\":[\"english\"],\"hockey\":[\"english\"],\"hold\":[\"english\"],\"hole\":[\"english\"],\"holiday\":[\"english\"],\"hollow\":[\"english\"],\"home\":[\"english\"],\"honey\":[\"english\"],\"hood\":[\"english\"],\"hope\":[\"english\"],\"horn\":[\"english\"],\"horror\":[\"english\"],\"horse\":[\"english\"],\"hospital\":[\"english\"],\"host\":[\"english\"],\"hotel\":[\"english\"],\"hour\":[\"english\"],\"hover\":[\"english\"],\"hub\":[\"english\"],\"huge\":[\"english\"],\"human\":[\"english\"],\"humble\":[\"english\",\"french\"],\"humor\":[\"english\"],\"hundred\":[\"english\"],\"hungry\":[\"english\"],\"hunt\":[\"english\"],\"hurdle\":[\"english\"],\"hurry\":[\"english\"],\"hurt\":[\"english\"],\"husband\":[\"english\"],\"hybrid\":[\"english\"],\"ice\":[\"english\"],\"icon\":[\"english\"],\"idea\":[\"english\"],\"identify\":[\"english\"],\"idle\":[\"english\"],\"ignore\":[\"english\"],\"ill\":[\"english\"],\"illegal\":[\"english\"],\"illness\":[\"english\"],\"image\":[\"english\",\"french\"],\"imitate\":[\"english\"],\"immense\":[\"english\",\"french\"],\"immune\":[\"english\"],\"impact\":[\"english\",\"french\"],\"impose\":[\"english\"],\"improve\":[\"english\"],\"impulse\":[\"english\"],\"inch\":[\"english\"],\"include\":[\"english\"],\"income\":[\"english\"],\"increase\":[\"english\"],\"index\":[\"english\"],\"indicate\":[\"english\"],\"indoor\":[\"english\"],\"industry\":[\"english\"],\"infant\":[\"english\"],\"inflict\":[\"english\"],\"inform\":[\"english\"],\"inhale\":[\"english\"],\"inherit\":[\"english\"],\"initial\":[\"english\"],\"inject\":[\"english\"],\"injury\":[\"english\"],\"inmate\":[\"english\"],\"inner\":[\"english\"],\"innocent\":[\"english\",\"french\"],\"input\":[\"english\"],\"inquiry\":[\"english\"],\"insane\":[\"english\"],\"insect\":[\"english\"],\"inside\":[\"english\"],\"inspire\":[\"english\"],\"install\":[\"english\"],\"intact\":[\"english\",\"french\"],\"interest\":[\"english\"],\"into\":[\"english\"],\"invest\":[\"english\"],\"invite\":[\"english\"],\"involve\":[\"english\"],\"iron\":[\"english\"],\"island\":[\"english\"],\"isolate\":[\"english\"],\"issue\":[\"english\"],\"item\":[\"english\"],\"ivory\":[\"english\"],\"jacket\":[\"english\"],\"jaguar\":[\"english\",\"french\"],\"jar\":[\"english\"],\"jazz\":[\"english\"],\"jealous\":[\"english\"],\"jeans\":[\"english\"],\"jelly\":[\"english\"],\"jewel\":[\"english\"],\"job\":[\"english\"],\"join\":[\"english\"],\"joke\":[\"english\"],\"journey\":[\"english\"],\"joy\":[\"english\"],\"judge\":[\"english\"],\"juice\":[\"english\"],\"jump\":[\"english\"],\"jungle\":[\"english\"],\"junior\":[\"english\",\"french\"],\"junk\":[\"english\"],\"just\":[\"english\"],\"kangaroo\":[\"english\"],\"keen\":[\"english\"],\"keep\":[\"english\"],\"ketchup\":[\"english\"],\"key\":[\"english\"],\"kick\":[\"english\"],\"kid\":[\"english\"],\"kidney\":[\"english\"],\"kind\":[\"english\"],\"kingdom\":[\"english\"],\"kiss\":[\"english\"],\"kit\":[\"english\"],\"kitchen\":[\"english\"],\"kite\":[\"english\"],\"kitten\":[\"english\"],\"kiwi\":[\"english\"],\"knee\":[\"english\"],\"knife\":[\"english\"],\"knock\":[\"english\"],\"know\":[\"english\"],\"lab\":[\"english\"],\"label\":[\"english\",\"french\"],\"labor\":[\"english\"],\"ladder\":[\"english\"],\"lady\":[\"english\"],\"lake\":[\"english\"],\"lamp\":[\"english\"],\"language\":[\"english\"],\"laptop\":[\"english\"],\"large\":[\"english\"],\"later\":[\"english\"],\"latin\":[\"english\"],\"laugh\":[\"english\"],\"laundry\":[\"english\"],\"lava\":[\"english\"],\"law\":[\"english\"],\"lawn\":[\"english\"],\"lawsuit\":[\"english\"],\"layer\":[\"english\"],\"lazy\":[\"english\"],\"leader\":[\"english\"],\"leaf\":[\"english\"],\"learn\":[\"english\"],\"leave\":[\"english\"],\"lecture\":[\"english\",\"french\"],\"left\":[\"english\"],\"leg\":[\"english\"],\"legal\":[\"english\"],\"legend\":[\"english\"],\"leisure\":[\"english\"],\"lemon\":[\"english\"],\"lend\":[\"english\"],\"length\":[\"english\"],\"lens\":[\"english\"],\"leopard\":[\"english\"],\"lesson\":[\"english\"],\"letter\":[\"english\"],\"level\":[\"english\"],\"liar\":[\"english\"],\"liberty\":[\"english\"],\"library\":[\"english\"],\"license\":[\"english\"],\"life\":[\"english\"],\"lift\":[\"english\"],\"light\":[\"english\"],\"like\":[\"english\"],\"limb\":[\"english\"],\"limit\":[\"english\"],\"link\":[\"english\"],\"lion\":[\"english\"],\"liquid\":[\"english\"],\"list\":[\"english\"],\"little\":[\"english\"],\"live\":[\"english\"],\"lizard\":[\"english\"],\"load\":[\"english\"],\"loan\":[\"english\"],\"lobster\":[\"english\"],\"local\":[\"english\"],\"lock\":[\"english\"],\"logic\":[\"english\"],\"lonely\":[\"english\"],\"long\":[\"english\"],\"loop\":[\"english\"],\"lottery\":[\"english\"],\"loud\":[\"english\"],\"lounge\":[\"english\"],\"love\":[\"english\"],\"loyal\":[\"english\",\"french\"],\"lucky\":[\"english\"],\"luggage\":[\"english\"],\"lumber\":[\"english\"],\"lunar\":[\"english\"],\"lunch\":[\"english\"],\"luxury\":[\"english\"],\"lyrics\":[\"english\"],\"machine\":[\"english\",\"french\"],\"mad\":[\"english\"],\"magic\":[\"english\"],\"magnet\":[\"english\"],\"maid\":[\"english\"],\"mail\":[\"english\"],\"main\":[\"english\"],\"major\":[\"english\"],\"make\":[\"english\"],\"mammal\":[\"english\"],\"man\":[\"english\"],\"manage\":[\"english\"],\"mandate\":[\"english\"],\"mango\":[\"english\"],\"mansion\":[\"english\"],\"manual\":[\"english\"],\"maple\":[\"english\"],\"marble\":[\"english\"],\"march\":[\"english\"],\"margin\":[\"english\"],\"marine\":[\"english\"],\"market\":[\"english\",\"turkish\"],\"marriage\":[\"english\"],\"mask\":[\"english\"],\"mass\":[\"english\"],\"master\":[\"english\"],\"match\":[\"english\"],\"material\":[\"english\"],\"math\":[\"english\"],\"matrix\":[\"english\"],\"matter\":[\"english\"],\"maximum\":[\"english\"],\"maze\":[\"english\"],\"meadow\":[\"english\"],\"mean\":[\"english\"],\"measure\":[\"english\"],\"meat\":[\"english\"],\"mechanic\":[\"english\"],\"medal\":[\"english\"],\"media\":[\"english\"],\"melody\":[\"english\"],\"melt\":[\"english\"],\"member\":[\"english\"],\"memory\":[\"english\"],\"mention\":[\"english\"],\"menu\":[\"english\"],\"mercy\":[\"english\"],\"merge\":[\"english\"],\"merit\":[\"english\"],\"merry\":[\"english\"],\"mesh\":[\"english\"],\"message\":[\"english\"],\"metal\":[\"english\"],\"method\":[\"english\"],\"middle\":[\"english\"],\"midnight\":[\"english\"],\"milk\":[\"english\"],\"million\":[\"english\",\"french\"],\"mimic\":[\"english\"],\"mind\":[\"english\"],\"minimum\":[\"english\"],\"minor\":[\"english\"],\"minute\":[\"english\",\"french\"],\"miracle\":[\"english\",\"french\"],\"mirror\":[\"english\"],\"misery\":[\"english\"],\"miss\":[\"english\"],\"mistake\":[\"english\"],\"mix\":[\"english\"],\"mixed\":[\"english\"],\"mixture\":[\"english\"],\"mobile\":[\"english\",\"french\"],\"model\":[\"english\",\"turkish\"],\"modify\":[\"english\"],\"mom\":[\"english\"],\"moment\":[\"english\"],\"monitor\":[\"english\"],\"monkey\":[\"english\"],\"monster\":[\"english\"],\"month\":[\"english\"],\"moon\":[\"english\"],\"moral\":[\"english\"],\"more\":[\"english\"],\"morning\":[\"english\"],\"mosquito\":[\"english\"],\"mother\":[\"english\"],\"motion\":[\"english\"],\"motor\":[\"english\",\"turkish\"],\"mountain\":[\"english\"],\"mouse\":[\"english\"],\"move\":[\"english\"],\"movie\":[\"english\"],\"much\":[\"english\"],\"muffin\":[\"english\"],\"mule\":[\"english\"],\"multiply\":[\"english\"],\"muscle\":[\"english\",\"french\"],\"museum\":[\"english\"],\"mushroom\":[\"english\"],\"music\":[\"english\"],\"must\":[\"english\"],\"mutual\":[\"english\"],\"myself\":[\"english\"],\"mystery\":[\"english\"],\"myth\":[\"english\"],\"naive\":[\"english\"],\"name\":[\"english\"],\"napkin\":[\"english\"],\"narrow\":[\"english\"],\"nasty\":[\"english\"],\"nation\":[\"english\",\"french\"],\"nature\":[\"english\",\"french\"],\"near\":[\"english\"],\"neck\":[\"english\"],\"need\":[\"english\"],\"negative\":[\"english\"],\"neglect\":[\"english\"],\"neither\":[\"english\"],\"nephew\":[\"english\"],\"nerve\":[\"english\"],\"nest\":[\"english\"],\"net\":[\"english\"],\"network\":[\"english\"],\"neutral\":[\"english\"],\"never\":[\"english\"],\"news\":[\"english\"],\"next\":[\"english\"],\"nice\":[\"english\"],\"night\":[\"english\"],\"noble\":[\"english\",\"french\"],\"noise\":[\"english\"],\"nominee\":[\"english\"],\"noodle\":[\"english\"],\"normal\":[\"english\",\"turkish\"],\"north\":[\"english\"],\"nose\":[\"english\"],\"notable\":[\"english\",\"french\"],\"note\":[\"english\"],\"nothing\":[\"english\"],\"notice\":[\"english\"],\"novel\":[\"english\"],\"now\":[\"english\"],\"nuclear\":[\"english\"],\"number\":[\"english\"],\"nurse\":[\"english\"],\"nut\":[\"english\"],\"oak\":[\"english\"],\"obey\":[\"english\"],\"object\":[\"english\"],\"oblige\":[\"english\"],\"obscure\":[\"english\"],\"observe\":[\"english\"],\"obtain\":[\"english\"],\"obvious\":[\"english\"],\"occur\":[\"english\"],\"ocean\":[\"english\"],\"october\":[\"english\"],\"odor\":[\"english\"],\"off\":[\"english\"],\"offer\":[\"english\"],\"office\":[\"english\"],\"often\":[\"english\"],\"oil\":[\"english\"],\"okay\":[\"english\"],\"old\":[\"english\"],\"olive\":[\"english\"],\"olympic\":[\"english\"],\"omit\":[\"english\"],\"once\":[\"english\"],\"one\":[\"english\"],\"onion\":[\"english\"],\"online\":[\"english\"],\"only\":[\"english\"],\"open\":[\"english\"],\"opera\":[\"english\",\"turkish\"],\"opinion\":[\"english\",\"french\"],\"oppose\":[\"english\"],\"option\":[\"english\"],\"orange\":[\"english\",\"french\"],\"orbit\":[\"english\"],\"orchard\":[\"english\"],\"order\":[\"english\"],\"ordinary\":[\"english\"],\"organ\":[\"english\"],\"orient\":[\"english\"],\"original\":[\"english\"],\"orphan\":[\"english\"],\"ostrich\":[\"english\"],\"other\":[\"english\"],\"outdoor\":[\"english\"],\"outer\":[\"english\"],\"output\":[\"english\"],\"outside\":[\"english\"],\"oval\":[\"english\"],\"oven\":[\"english\"],\"over\":[\"english\"],\"own\":[\"english\"],\"owner\":[\"english\"],\"oxygen\":[\"english\"],\"oyster\":[\"english\"],\"ozone\":[\"english\",\"french\"],\"pact\":[\"english\"],\"paddle\":[\"english\"],\"page\":[\"english\"],\"pair\":[\"english\"],\"palace\":[\"english\",\"french\"],\"palm\":[\"english\"],\"panda\":[\"english\",\"french\",\"turkish\"],\"panel\":[\"english\",\"turkish\"],\"panic\":[\"english\"],\"panther\":[\"english\"],\"paper\":[\"english\"],\"parade\":[\"english\"],\"parent\":[\"english\"],\"park\":[\"english\"],\"parrot\":[\"english\"],\"party\":[\"english\"],\"pass\":[\"english\"],\"patch\":[\"english\"],\"path\":[\"english\"],\"patient\":[\"english\"],\"patrol\":[\"english\"],\"pattern\":[\"english\"],\"pause\":[\"english\"],\"pave\":[\"english\"],\"payment\":[\"english\"],\"peace\":[\"english\"],\"peanut\":[\"english\"],\"pear\":[\"english\"],\"peasant\":[\"english\"],\"pelican\":[\"english\"],\"pen\":[\"english\"],\"penalty\":[\"english\"],\"pencil\":[\"english\"],\"people\":[\"english\"],\"pepper\":[\"english\"],\"perfect\":[\"english\"],\"permit\":[\"english\"],\"person\":[\"english\"],\"pet\":[\"english\"],\"phone\":[\"english\"],\"photo\":[\"english\"],\"phrase\":[\"english\",\"french\"],\"physical\":[\"english\"],\"piano\":[\"english\",\"french\"],\"picnic\":[\"english\"],\"picture\":[\"english\"],\"piece\":[\"english\"],\"pig\":[\"english\"],\"pigeon\":[\"english\"],\"pill\":[\"english\"],\"pilot\":[\"english\",\"turkish\"],\"pink\":[\"english\"],\"pioneer\":[\"english\"],\"pipe\":[\"english\"],\"pistol\":[\"english\"],\"pitch\":[\"english\"],\"pizza\":[\"english\",\"french\"],\"place\":[\"english\"],\"planet\":[\"english\"],\"plastic\":[\"english\"],\"plate\":[\"english\"],\"play\":[\"english\"],\"please\":[\"english\"],\"pledge\":[\"english\"],\"pluck\":[\"english\"],\"plug\":[\"english\"],\"plunge\":[\"english\"],\"poem\":[\"english\"],\"poet\":[\"english\"],\"point\":[\"english\"],\"polar\":[\"english\"],\"pole\":[\"english\"],\"police\":[\"english\"],\"pond\":[\"english\"],\"pony\":[\"english\"],\"pool\":[\"english\"],\"popular\":[\"english\"],\"portion\":[\"english\"],\"position\":[\"english\",\"french\"],\"possible\":[\"english\"],\"post\":[\"english\"],\"potato\":[\"english\"],\"pottery\":[\"english\"],\"poverty\":[\"english\"],\"powder\":[\"english\"],\"power\":[\"english\"],\"practice\":[\"english\"],\"praise\":[\"english\"],\"predict\":[\"english\"],\"prefer\":[\"english\"],\"prepare\":[\"english\"],\"present\":[\"english\"],\"pretty\":[\"english\"],\"prevent\":[\"english\"],\"price\":[\"english\"],\"pride\":[\"english\"],\"primary\":[\"english\"],\"print\":[\"english\"],\"priority\":[\"english\"],\"prison\":[\"english\",\"french\"],\"private\":[\"english\"],\"prize\":[\"english\"],\"problem\":[\"english\",\"turkish\"],\"process\":[\"english\"],\"produce\":[\"english\"],\"profit\":[\"english\"],\"program\":[\"english\",\"turkish\"],\"project\":[\"english\"],\"promote\":[\"english\"],\"proof\":[\"english\"],\"property\":[\"english\"],\"prosper\":[\"english\"],\"protect\":[\"english\"],\"proud\":[\"english\"],\"provide\":[\"english\"],\"public\":[\"english\",\"french\"],\"pudding\":[\"english\"],\"pull\":[\"english\"],\"pulp\":[\"english\"],\"pulse\":[\"english\"],\"pumpkin\":[\"english\"],\"punch\":[\"english\"],\"pupil\":[\"english\"],\"puppy\":[\"english\"],\"purchase\":[\"english\"],\"purity\":[\"english\"],\"purpose\":[\"english\"],\"purse\":[\"english\"],\"push\":[\"english\"],\"put\":[\"english\"],\"puzzle\":[\"english\",\"french\"],\"pyramid\":[\"english\"],\"quality\":[\"english\"],\"quantum\":[\"english\"],\"quarter\":[\"english\"],\"question\":[\"english\",\"french\"],\"quick\":[\"english\"],\"quit\":[\"english\"],\"quiz\":[\"english\"],\"quote\":[\"english\"],\"rabbit\":[\"english\"],\"raccoon\":[\"english\"],\"race\":[\"english\"],\"rack\":[\"english\"],\"radar\":[\"english\",\"turkish\"],\"radio\":[\"english\"],\"rail\":[\"english\"],\"rain\":[\"english\"],\"raise\":[\"english\"],\"rally\":[\"english\"],\"ramp\":[\"english\"],\"ranch\":[\"english\"],\"random\":[\"english\"],\"range\":[\"english\"],\"rapid\":[\"english\"],\"rare\":[\"english\"],\"rate\":[\"english\"],\"rather\":[\"english\"],\"raven\":[\"english\"],\"raw\":[\"english\"],\"razor\":[\"english\"],\"ready\":[\"english\"],\"real\":[\"english\"],\"reason\":[\"english\"],\"rebel\":[\"english\"],\"rebuild\":[\"english\"],\"recall\":[\"english\"],\"receive\":[\"english\"],\"recipe\":[\"english\"],\"record\":[\"english\"],\"recycle\":[\"english\"],\"reduce\":[\"english\"],\"reflect\":[\"english\"],\"reform\":[\"english\",\"turkish\"],\"refuse\":[\"english\"],\"region\":[\"english\"],\"regret\":[\"english\"],\"regular\":[\"english\"],\"reject\":[\"english\"],\"relax\":[\"english\"],\"release\":[\"english\"],\"relief\":[\"english\",\"french\"],\"rely\":[\"english\"],\"remain\":[\"english\"],\"remember\":[\"english\"],\"remind\":[\"english\"],\"remove\":[\"english\"],\"render\":[\"english\"],\"renew\":[\"english\"],\"rent\":[\"english\"],\"reopen\":[\"english\"],\"repair\":[\"english\"],\"repeat\":[\"english\"],\"replace\":[\"english\"],\"report\":[\"english\"],\"require\":[\"english\"],\"rescue\":[\"english\"],\"resemble\":[\"english\"],\"resist\":[\"english\"],\"resource\":[\"english\"],\"response\":[\"english\"],\"result\":[\"english\"],\"retire\":[\"english\"],\"retreat\":[\"english\"],\"return\":[\"english\"],\"reunion\":[\"english\"],\"reveal\":[\"english\"],\"review\":[\"english\"],\"reward\":[\"english\"],\"rhythm\":[\"english\"],\"rib\":[\"english\"],\"ribbon\":[\"english\"],\"rice\":[\"english\"],\"rich\":[\"english\"],\"ride\":[\"english\"],\"ridge\":[\"english\"],\"rifle\":[\"english\"],\"right\":[\"english\"],\"rigid\":[\"english\"],\"ring\":[\"english\"],\"riot\":[\"english\"],\"ripple\":[\"english\"],\"risk\":[\"english\"],\"ritual\":[\"english\"],\"rival\":[\"english\",\"french\"],\"river\":[\"english\"],\"road\":[\"english\"],\"roast\":[\"english\"],\"robot\":[\"english\",\"turkish\"],\"robust\":[\"english\"],\"rocket\":[\"english\"],\"romance\":[\"english\",\"french\"],\"roof\":[\"english\"],\"rookie\":[\"english\"],\"room\":[\"english\"],\"rose\":[\"english\"],\"rotate\":[\"english\"],\"rough\":[\"english\"],\"round\":[\"english\"],\"route\":[\"english\"],\"royal\":[\"english\"],\"rubber\":[\"english\"],\"rude\":[\"english\"],\"rug\":[\"english\"],\"rule\":[\"english\"],\"run\":[\"english\"],\"runway\":[\"english\"],\"rural\":[\"english\"],\"sad\":[\"english\"],\"saddle\":[\"english\"],\"sadness\":[\"english\"],\"safe\":[\"english\"],\"sail\":[\"english\"],\"salad\":[\"english\"],\"salmon\":[\"english\"],\"salon\":[\"english\",\"french\",\"turkish\"],\"salt\":[\"english\"],\"salute\":[\"english\"],\"same\":[\"english\"],\"sample\":[\"english\"],\"sand\":[\"english\"],\"satisfy\":[\"english\"],\"satoshi\":[\"english\"],\"sauce\":[\"english\"],\"sausage\":[\"english\"],\"save\":[\"english\"],\"say\":[\"english\"],\"scale\":[\"english\"],\"scan\":[\"english\"],\"scare\":[\"english\"],\"scatter\":[\"english\"],\"scene\":[\"english\"],\"scheme\":[\"english\"],\"school\":[\"english\"],\"science\":[\"english\",\"french\"],\"scissors\":[\"english\"],\"scorpion\":[\"english\"],\"scout\":[\"english\"],\"scrap\":[\"english\"],\"screen\":[\"english\"],\"script\":[\"english\"],\"scrub\":[\"english\"],\"sea\":[\"english\"],\"search\":[\"english\"],\"season\":[\"english\"],\"seat\":[\"english\"],\"second\":[\"english\"],\"secret\":[\"english\"],\"section\":[\"english\"],\"security\":[\"english\"],\"seed\":[\"english\"],\"seek\":[\"english\"],\"segment\":[\"english\"],\"select\":[\"english\"],\"sell\":[\"english\"],\"seminar\":[\"english\"],\"senior\":[\"english\"],\"sense\":[\"english\"],\"sentence\":[\"english\",\"french\"],\"series\":[\"english\"],\"service\":[\"english\",\"french\"],\"session\":[\"english\"],\"settle\":[\"english\"],\"setup\":[\"english\"],\"seven\":[\"english\"],\"shadow\":[\"english\"],\"shaft\":[\"english\"],\"shallow\":[\"english\"],\"share\":[\"english\"],\"shed\":[\"english\"],\"shell\":[\"english\"],\"sheriff\":[\"english\"],\"shield\":[\"english\"],\"shift\":[\"english\"],\"shine\":[\"english\"],\"ship\":[\"english\"],\"shiver\":[\"english\"],\"shock\":[\"english\"],\"shoe\":[\"english\"],\"shoot\":[\"english\"],\"shop\":[\"english\"],\"short\":[\"english\"],\"shoulder\":[\"english\"],\"shove\":[\"english\"],\"shrimp\":[\"english\"],\"shrug\":[\"english\"],\"shuffle\":[\"english\"],\"shy\":[\"english\"],\"sibling\":[\"english\"],\"sick\":[\"english\"],\"side\":[\"english\"],\"siege\":[\"english\"],\"sight\":[\"english\"],\"sign\":[\"english\"],\"silent\":[\"english\"],\"silk\":[\"english\"],\"silly\":[\"english\"],\"silver\":[\"english\"],\"similar\":[\"english\"],\"simple\":[\"english\",\"french\"],\"since\":[\"english\"],\"sing\":[\"english\"],\"siren\":[\"english\"],\"sister\":[\"english\"],\"situate\":[\"english\"],\"six\":[\"english\"],\"size\":[\"english\"],\"skate\":[\"english\"],\"sketch\":[\"english\"],\"ski\":[\"english\"],\"skill\":[\"english\"],\"skin\":[\"english\"],\"skirt\":[\"english\"],\"skull\":[\"english\"],\"slab\":[\"english\"],\"slam\":[\"english\"],\"sleep\":[\"english\"],\"slender\":[\"english\"],\"slice\":[\"english\"],\"slide\":[\"english\"],\"slight\":[\"english\"],\"slim\":[\"english\"],\"slogan\":[\"english\",\"turkish\"],\"slot\":[\"english\"],\"slow\":[\"english\"],\"slush\":[\"english\"],\"small\":[\"english\"],\"smart\":[\"english\"],\"smile\":[\"english\"],\"smoke\":[\"english\"],\"smooth\":[\"english\"],\"snack\":[\"english\"],\"snake\":[\"english\"],\"snap\":[\"english\"],\"sniff\":[\"english\"],\"snow\":[\"english\"],\"soap\":[\"english\"],\"soccer\":[\"english\"],\"social\":[\"english\",\"french\"],\"sock\":[\"english\"],\"soda\":[\"english\"],\"soft\":[\"english\"],\"solar\":[\"english\"],\"soldier\":[\"english\"],\"solid\":[\"english\"],\"solution\":[\"english\"],\"solve\":[\"english\"],\"someone\":[\"english\"],\"song\":[\"english\"],\"soon\":[\"english\"],\"sorry\":[\"english\"],\"sort\":[\"english\"],\"soul\":[\"english\"],\"sound\":[\"english\"],\"soup\":[\"english\"],\"source\":[\"english\",\"french\"],\"south\":[\"english\"],\"space\":[\"english\"],\"spare\":[\"english\"],\"spatial\":[\"english\",\"french\"],\"spawn\":[\"english\"],\"speak\":[\"english\"],\"special\":[\"english\"],\"speed\":[\"english\"],\"spell\":[\"english\"],\"spend\":[\"english\"],\"sphere\":[\"english\"],\"spice\":[\"english\"],\"spider\":[\"english\"],\"spike\":[\"english\"],\"spin\":[\"english\"],\"spirit\":[\"english\"],\"split\":[\"english\"],\"spoil\":[\"english\"],\"sponsor\":[\"english\",\"turkish\"],\"spoon\":[\"english\"],\"sport\":[\"english\"],\"spot\":[\"english\"],\"spray\":[\"english\"],\"spread\":[\"english\"],\"spring\":[\"english\"],\"spy\":[\"english\"],\"square\":[\"english\"],\"squeeze\":[\"english\"],\"squirrel\":[\"english\"],\"stable\":[\"english\",\"french\"],\"stadium\":[\"english\"],\"staff\":[\"english\"],\"stage\":[\"english\"],\"stairs\":[\"english\"],\"stamp\":[\"english\"],\"stand\":[\"english\"],\"start\":[\"english\"],\"state\":[\"english\"],\"stay\":[\"english\"],\"steak\":[\"english\"],\"steel\":[\"english\"],\"stem\":[\"english\"],\"step\":[\"english\"],\"stereo\":[\"english\"],\"stick\":[\"english\"],\"still\":[\"english\"],\"sting\":[\"english\"],\"stock\":[\"english\"],\"stomach\":[\"english\"],\"stone\":[\"english\"],\"stool\":[\"english\"],\"story\":[\"english\"],\"stove\":[\"english\"],\"strategy\":[\"english\"],\"street\":[\"english\"],\"strike\":[\"english\"],\"strong\":[\"english\"],\"struggle\":[\"english\"],\"student\":[\"english\"],\"stuff\":[\"english\"],\"stumble\":[\"english\"],\"style\":[\"english\"],\"subject\":[\"english\"],\"submit\":[\"english\"],\"subway\":[\"english\"],\"success\":[\"english\"],\"such\":[\"english\"],\"sudden\":[\"english\"],\"suffer\":[\"english\"],\"sugar\":[\"english\"],\"suggest\":[\"english\"],\"suit\":[\"english\"],\"summer\":[\"english\"],\"sun\":[\"english\"],\"sunny\":[\"english\"],\"sunset\":[\"english\"],\"super\":[\"english\"],\"supply\":[\"english\"],\"supreme\":[\"english\"],\"sure\":[\"english\"],\"surface\":[\"english\",\"french\"],\"surge\":[\"english\"],\"surprise\":[\"english\",\"french\"],\"surround\":[\"english\"],\"survey\":[\"english\"],\"suspect\":[\"english\",\"french\"],\"sustain\":[\"english\"],\"swallow\":[\"english\"],\"swamp\":[\"english\"],\"swap\":[\"english\"],\"swarm\":[\"english\"],\"swear\":[\"english\"],\"sweet\":[\"english\"],\"swift\":[\"english\"],\"swim\":[\"english\"],\"swing\":[\"english\"],\"switch\":[\"english\"],\"sword\":[\"english\"],\"symbol\":[\"english\"],\"symptom\":[\"english\"],\"syrup\":[\"english\"],\"system\":[\"english\"],\"table\":[\"english\"],\"tackle\":[\"english\"],\"tag\":[\"english\"],\"tail\":[\"english\"],\"talent\":[\"english\",\"french\"],\"talk\":[\"english\"],\"tank\":[\"english\"],\"tape\":[\"english\"],\"target\":[\"english\"],\"task\":[\"english\"],\"taste\":[\"english\"],\"tattoo\":[\"english\"],\"taxi\":[\"english\"],\"teach\":[\"english\"],\"team\":[\"english\"],\"tell\":[\"english\"],\"ten\":[\"english\"],\"tenant\":[\"english\"],\"tennis\":[\"english\"],\"tent\":[\"english\"],\"term\":[\"english\"],\"test\":[\"english\"],\"text\":[\"english\"],\"thank\":[\"english\"],\"that\":[\"english\"],\"theme\":[\"english\"],\"then\":[\"english\"],\"theory\":[\"english\"],\"there\":[\"english\"],\"they\":[\"english\"],\"thing\":[\"english\"],\"this\":[\"english\"],\"thought\":[\"english\"],\"three\":[\"english\"],\"thrive\":[\"english\"],\"throw\":[\"english\"],\"thumb\":[\"english\"],\"thunder\":[\"english\"],\"ticket\":[\"english\"],\"tide\":[\"english\"],\"tiger\":[\"english\"],\"tilt\":[\"english\"],\"timber\":[\"english\"],\"time\":[\"english\"],\"tiny\":[\"english\"],\"tip\":[\"english\"],\"tired\":[\"english\"],\"tissue\":[\"english\"],\"title\":[\"english\"],\"toast\":[\"english\"],\"tobacco\":[\"english\"],\"today\":[\"english\"],\"toddler\":[\"english\"],\"toe\":[\"english\"],\"together\":[\"english\"],\"toilet\":[\"english\"],\"token\":[\"english\"],\"tomato\":[\"english\"],\"tomorrow\":[\"english\"],\"tone\":[\"english\"],\"tongue\":[\"english\"],\"tonight\":[\"english\"],\"tool\":[\"english\"],\"tooth\":[\"english\"],\"top\":[\"english\"],\"topic\":[\"english\"],\"topple\":[\"english\"],\"torch\":[\"english\"],\"tornado\":[\"english\"],\"tortoise\":[\"english\"],\"toss\":[\"english\"],\"total\":[\"english\"],\"tourist\":[\"english\"],\"toward\":[\"english\"],\"tower\":[\"english\"],\"town\":[\"english\"],\"toy\":[\"english\"],\"track\":[\"english\"],\"trade\":[\"english\"],\"traffic\":[\"english\"],\"tragic\":[\"english\"],\"train\":[\"english\",\"french\"],\"transfer\":[\"english\",\"turkish\"],\"trap\":[\"english\"],\"trash\":[\"english\"],\"travel\":[\"english\"],\"tray\":[\"english\"],\"treat\":[\"english\"],\"tree\":[\"english\"],\"trend\":[\"english\"],\"trial\":[\"english\"],\"tribe\":[\"english\"],\"trick\":[\"english\"],\"trigger\":[\"english\"],\"trim\":[\"english\"],\"trip\":[\"english\"],\"trophy\":[\"english\"],\"trouble\":[\"english\"],\"truck\":[\"english\"],\"true\":[\"english\"],\"truly\":[\"english\"],\"trumpet\":[\"english\"],\"trust\":[\"english\"],\"truth\":[\"english\"],\"try\":[\"english\"],\"tube\":[\"english\"],\"tuition\":[\"english\"],\"tumble\":[\"english\"],\"tuna\":[\"english\"],\"tunnel\":[\"english\",\"french\"],\"turkey\":[\"english\"],\"turn\":[\"english\"],\"turtle\":[\"english\"],\"twelve\":[\"english\"],\"twenty\":[\"english\"],\"twice\":[\"english\"],\"twin\":[\"english\"],\"twist\":[\"english\"],\"two\":[\"english\"],\"type\":[\"english\"],\"typical\":[\"english\"],\"ugly\":[\"english\"],\"umbrella\":[\"english\"],\"unable\":[\"english\"],\"unaware\":[\"english\"],\"uncle\":[\"english\"],\"uncover\":[\"english\"],\"under\":[\"english\"],\"undo\":[\"english\"],\"unfair\":[\"english\"],\"unfold\":[\"english\"],\"unhappy\":[\"english\"],\"uniform\":[\"english\"],\"unique\":[\"english\",\"french\"],\"unit\":[\"english\"],\"universe\":[\"english\"],\"unknown\":[\"english\"],\"unlock\":[\"english\"],\"until\":[\"english\"],\"unusual\":[\"english\"],\"unveil\":[\"english\"],\"update\":[\"english\"],\"upgrade\":[\"english\"],\"uphold\":[\"english\"],\"upon\":[\"english\"],\"upper\":[\"english\"],\"upset\":[\"english\"],\"urban\":[\"english\"],\"urge\":[\"english\"],\"usage\":[\"english\",\"french\"],\"use\":[\"english\"],\"used\":[\"english\"],\"useful\":[\"english\"],\"useless\":[\"english\"],\"usual\":[\"english\"],\"utility\":[\"english\"],\"vacant\":[\"english\"],\"vacuum\":[\"english\"],\"vague\":[\"english\",\"french\"],\"valid\":[\"english\"],\"valley\":[\"english\"],\"valve\":[\"english\",\"french\"],\"van\":[\"english\"],\"vanish\":[\"english\"],\"vapor\":[\"english\"],\"various\":[\"english\"],\"vast\":[\"english\"],\"vault\":[\"english\"],\"vehicle\":[\"english\"],\"velvet\":[\"english\"],\"vendor\":[\"english\"],\"venture\":[\"english\"],\"venue\":[\"english\"],\"verb\":[\"english\"],\"verify\":[\"english\"],\"version\":[\"english\"],\"very\":[\"english\"],\"vessel\":[\"english\"],\"veteran\":[\"english\"],\"viable\":[\"english\"],\"vibrant\":[\"english\"],\"vicious\":[\"english\"],\"victory\":[\"english\"],\"video\":[\"english\"],\"view\":[\"english\"],\"village\":[\"english\",\"french\"],\"vintage\":[\"english\"],\"violin\":[\"english\"],\"virtual\":[\"english\"],\"virus\":[\"english\",\"french\"],\"visa\":[\"english\"],\"visit\":[\"english\"],\"visual\":[\"english\"],\"vital\":[\"english\",\"french\"],\"vivid\":[\"english\"],\"vocal\":[\"english\"],\"voice\":[\"english\"],\"void\":[\"english\"],\"volcano\":[\"english\"],\"volume\":[\"english\",\"french\"],\"vote\":[\"english\"],\"voyage\":[\"english\",\"french\"],\"wage\":[\"english\"],\"wagon\":[\"english\",\"french\"],\"wait\":[\"english\"],\"walk\":[\"english\"],\"wall\":[\"english\"],\"walnut\":[\"english\"],\"want\":[\"english\"],\"warfare\":[\"english\"],\"warm\":[\"english\"],\"warrior\":[\"english\"],\"wash\":[\"english\"],\"wasp\":[\"english\"],\"waste\":[\"english\"],\"water\":[\"english\"],\"wave\":[\"english\"],\"way\":[\"english\"],\"wealth\":[\"english\"],\"weapon\":[\"english\"],\"wear\":[\"english\"],\"weasel\":[\"english\"],\"weather\":[\"english\"],\"web\":[\"english\"],\"wedding\":[\"english\"],\"weekend\":[\"english\"],\"weird\":[\"english\"],\"welcome\":[\"english\"],\"west\":[\"english\"],\"wet\":[\"english\"],\"whale\":[\"english\"],\"what\":[\"english\"],\"wheat\":[\"english\"],\"wheel\":[\"english\"],\"when\":[\"english\"],\"where\":[\"english\"],\"whip\":[\"english\"],\"whisper\":[\"english\"],\"wide\":[\"english\"],\"width\":[\"english\"],\"wife\":[\"english\"],\"wild\":[\"english\"],\"will\":[\"english\"],\"win\":[\"english\"],\"window\":[\"english\"],\"wine\":[\"english\"],\"wing\":[\"english\"],\"wink\":[\"english\"],\"winner\":[\"english\"],\"winter\":[\"english\"],\"wire\":[\"english\"],\"wisdom\":[\"english\"],\"wise\":[\"english\"],\"wish\":[\"english\"],\"witness\":[\"english\"],\"wolf\":[\"english\"],\"woman\":[\"english\"],\"wonder\":[\"english\"],\"wood\":[\"english\"],\"wool\":[\"english\"],\"word\":[\"english\"],\"work\":[\"english\"],\"world\":[\"english\"],\"worry\":[\"english\"],\"worth\":[\"english\"],\"wrap\":[\"english\"],\"wreck\":[\"english\"],\"wrestle\":[\"english\"],\"wrist\":[\"english\"],\"write\":[\"english\"],\"wrong\":[\"english\"],\"yard\":[\"english\"],\"year\":[\"english\"],\"yellow\":[\"english\"],\"you\":[\"english\"],\"young\":[\"english\"],\"youth\":[\"english\"],\"zebra\":[\"english\"],\"zero\":[\"english\"],\"zone\":[\"english\"],\"zoo\":[\"english\"],\"abaisser\":[\"french\"],\"abdiquer\":[\"french\"],\"abeille\":[\"french\"],\"abolir\":[\"french\"],\"aborder\":[\"french\"],\"aboutir\":[\"french\"],\"aboyer\":[\"french\"],\"abrasif\":[\"french\"],\"abreuver\":[\"french\"],\"abriter\":[\"french\"],\"abroger\":[\"french\"],\"abrupt\":[\"french\"],\"absence\":[\"french\"],\"absolu\":[\"french\"],\"absurde\":[\"french\"],\"abusif\":[\"french\"],\"abyssal\":[\"french\"],\"académie\":[\"french\"],\"acajou\":[\"french\"],\"acarien\":[\"french\"],\"accabler\":[\"french\"],\"accepter\":[\"french\"],\"acclamer\":[\"french\"],\"accolade\":[\"french\"],\"accroche\":[\"french\"],\"accuser\":[\"french\"],\"acerbe\":[\"french\"],\"achat\":[\"french\"],\"acheter\":[\"french\"],\"aciduler\":[\"french\"],\"acier\":[\"french\"],\"acompte\":[\"french\"],\"acquérir\":[\"french\"],\"acronyme\":[\"french\"],\"acteur\":[\"french\"],\"actif\":[\"french\"],\"actuel\":[\"french\"],\"adepte\":[\"french\"],\"adéquat\":[\"french\"],\"adhésif\":[\"french\"],\"adjectif\":[\"french\"],\"adjuger\":[\"french\"],\"admettre\":[\"french\"],\"admirer\":[\"french\"],\"adopter\":[\"french\"],\"adorer\":[\"french\"],\"adoucir\":[\"french\"],\"adresse\":[\"french\"],\"adroit\":[\"french\"],\"adulte\":[\"french\"],\"adverbe\":[\"french\"],\"aérer\":[\"french\"],\"aéronef\":[\"french\"],\"affaire\":[\"french\"],\"affecter\":[\"french\"],\"affiche\":[\"french\"],\"affreux\":[\"french\"],\"affubler\":[\"french\"],\"agacer\":[\"french\"],\"agencer\":[\"french\"],\"agile\":[\"french\"],\"agiter\":[\"french\"],\"agrafer\":[\"french\"],\"agréable\":[\"french\"],\"agrume\":[\"french\"],\"aider\":[\"french\"],\"aiguille\":[\"french\"],\"ailier\":[\"french\"],\"aimable\":[\"french\"],\"aisance\":[\"french\"],\"ajouter\":[\"french\"],\"ajuster\":[\"french\"],\"alarmer\":[\"french\"],\"alchimie\":[\"french\"],\"alerte\":[\"french\"],\"algèbre\":[\"french\"],\"algue\":[\"french\"],\"aliéner\":[\"french\"],\"aliment\":[\"french\"],\"alléger\":[\"french\"],\"alliage\":[\"french\"],\"allouer\":[\"french\"],\"allumer\":[\"french\"],\"alourdir\":[\"french\"],\"alpaga\":[\"french\"],\"altesse\":[\"french\"],\"alvéole\":[\"french\"],\"ambigu\":[\"french\"],\"ambre\":[\"french\"],\"aménager\":[\"french\"],\"amertume\":[\"french\"],\"amidon\":[\"french\"],\"amiral\":[\"french\"],\"amorcer\":[\"french\"],\"amour\":[\"french\"],\"amovible\":[\"french\"],\"amphibie\":[\"french\"],\"ampleur\":[\"french\"],\"amusant\":[\"french\"],\"analyse\":[\"french\"],\"anaphore\":[\"french\"],\"anarchie\":[\"french\"],\"anatomie\":[\"french\"],\"ancien\":[\"french\"],\"anéantir\":[\"french\"],\"angoisse\":[\"french\"],\"anguleux\":[\"french\"],\"annexer\":[\"french\"],\"annonce\":[\"french\"],\"annuel\":[\"french\"],\"anodin\":[\"french\"],\"anomalie\":[\"french\"],\"anonyme\":[\"french\"],\"anormal\":[\"french\"],\"antenne\":[\"french\"],\"antidote\":[\"french\"],\"anxieux\":[\"french\"],\"apaiser\":[\"french\"],\"apéritif\":[\"french\"],\"aplanir\":[\"french\"],\"apologie\":[\"french\"],\"appareil\":[\"french\"],\"appeler\":[\"french\"],\"apporter\":[\"french\"],\"appuyer\":[\"french\"],\"aquarium\":[\"french\"],\"aqueduc\":[\"french\"],\"arbitre\":[\"french\"],\"arbuste\":[\"french\"],\"ardeur\":[\"french\"],\"ardoise\":[\"french\"],\"argent\":[\"french\"],\"arlequin\":[\"french\"],\"armature\":[\"french\"],\"armement\":[\"french\"],\"armoire\":[\"french\"],\"armure\":[\"french\"],\"arpenter\":[\"french\"],\"arracher\":[\"french\"],\"arriver\":[\"french\"],\"arroser\":[\"french\"],\"arsenic\":[\"french\"],\"artériel\":[\"french\"],\"article\":[\"french\"],\"asphalte\":[\"french\"],\"aspirer\":[\"french\"],\"assaut\":[\"french\"],\"asservir\":[\"french\"],\"assiette\":[\"french\"],\"associer\":[\"french\"],\"assurer\":[\"french\"],\"asticot\":[\"french\"],\"astre\":[\"french\"],\"astuce\":[\"french\"],\"atelier\":[\"french\"],\"atome\":[\"french\"],\"atrium\":[\"french\"],\"atroce\":[\"french\"],\"attaque\":[\"french\"],\"attentif\":[\"french\"],\"attirer\":[\"french\"],\"attraper\":[\"french\"],\"aubaine\":[\"french\"],\"auberge\":[\"french\"],\"audace\":[\"french\"],\"audible\":[\"french\"],\"augurer\":[\"french\"],\"aurore\":[\"french\"],\"automne\":[\"french\"],\"autruche\":[\"french\"],\"avaler\":[\"french\"],\"avancer\":[\"french\"],\"avarice\":[\"french\"],\"avenir\":[\"french\"],\"averse\":[\"french\"],\"aveugle\":[\"french\"],\"aviateur\":[\"french\"],\"avide\":[\"french\"],\"avion\":[\"french\"],\"aviser\":[\"french\"],\"avoine\":[\"french\"],\"avouer\":[\"french\"],\"avril\":[\"french\"],\"axial\":[\"french\"],\"axiome\":[\"french\"],\"bafouer\":[\"french\"],\"bagage\":[\"french\"],\"baguette\":[\"french\"],\"baignade\":[\"french\"],\"balancer\":[\"french\"],\"balcon\":[\"french\"],\"baleine\":[\"french\"],\"balisage\":[\"french\"],\"bambin\":[\"french\"],\"bancaire\":[\"french\"],\"bandage\":[\"french\"],\"banlieue\":[\"french\"],\"bannière\":[\"french\"],\"banquier\":[\"french\"],\"barbier\":[\"french\"],\"baril\":[\"french\"],\"baron\":[\"french\"],\"barque\":[\"french\"],\"barrage\":[\"french\"],\"bassin\":[\"french\"],\"bastion\":[\"french\"],\"bataille\":[\"french\"],\"bateau\":[\"french\"],\"batterie\":[\"french\"],\"baudrier\":[\"french\"],\"bavarder\":[\"french\"],\"belette\":[\"french\"],\"bélier\":[\"french\"],\"belote\":[\"french\"],\"bénéfice\":[\"french\"],\"berceau\":[\"french\"],\"berger\":[\"french\"],\"berline\":[\"french\"],\"bermuda\":[\"french\",\"turkish\"],\"besace\":[\"french\"],\"besogne\":[\"french\"],\"bétail\":[\"french\"],\"beurre\":[\"french\"],\"biberon\":[\"french\"],\"bidule\":[\"french\"],\"bijou\":[\"french\"],\"bilan\":[\"french\"],\"bilingue\":[\"french\"],\"billard\":[\"french\"],\"binaire\":[\"french\"],\"biologie\":[\"french\"],\"biopsie\":[\"french\"],\"biotype\":[\"french\"],\"biscuit\":[\"french\"],\"bison\":[\"french\"],\"bistouri\":[\"french\"],\"bitume\":[\"french\"],\"bizarre\":[\"french\"],\"blafard\":[\"french\"],\"blague\":[\"french\"],\"blanchir\":[\"french\"],\"blessant\":[\"french\"],\"blinder\":[\"french\"],\"blond\":[\"french\"],\"bloquer\":[\"french\"],\"blouson\":[\"french\"],\"bobard\":[\"french\"],\"bobine\":[\"french\"],\"boire\":[\"french\"],\"boiser\":[\"french\"],\"bolide\":[\"french\"],\"bonbon\":[\"french\"],\"bondir\":[\"french\"],\"bonheur\":[\"french\"],\"bonifier\":[\"french\"],\"bordure\":[\"french\"],\"borne\":[\"french\"],\"botte\":[\"french\"],\"boucle\":[\"french\"],\"boueux\":[\"french\"],\"bougie\":[\"french\"],\"boulon\":[\"french\"],\"bouquin\":[\"french\"],\"bourse\":[\"french\"],\"boussole\":[\"french\"],\"boutique\":[\"french\"],\"boxeur\":[\"french\"],\"branche\":[\"french\"],\"brasier\":[\"french\"],\"brebis\":[\"french\"],\"brèche\":[\"french\"],\"breuvage\":[\"french\"],\"bricoler\":[\"french\"],\"brigade\":[\"french\"],\"brillant\":[\"french\"],\"brioche\":[\"french\"],\"brique\":[\"french\"],\"brochure\":[\"french\"],\"broder\":[\"french\"],\"bronzer\":[\"french\"],\"brousse\":[\"french\"],\"broyeur\":[\"french\"],\"brume\":[\"french\"],\"brusque\":[\"french\"],\"brutal\":[\"french\"],\"bruyant\":[\"french\"],\"buffle\":[\"french\"],\"buisson\":[\"french\"],\"bulletin\":[\"french\"],\"bureau\":[\"french\"],\"burin\":[\"french\"],\"bustier\":[\"french\"],\"butiner\":[\"french\"],\"butoir\":[\"french\"],\"buvable\":[\"french\"],\"buvette\":[\"french\"],\"cabanon\":[\"french\"],\"cabine\":[\"french\"],\"cachette\":[\"french\"],\"cadeau\":[\"french\"],\"cadre\":[\"french\"],\"caféine\":[\"french\"],\"caillou\":[\"french\"],\"caisson\":[\"french\"],\"calculer\":[\"french\"],\"calepin\":[\"french\"],\"calibre\":[\"french\"],\"calmer\":[\"french\"],\"calomnie\":[\"french\"],\"calvaire\":[\"french\"],\"camarade\":[\"french\"],\"caméra\":[\"french\"],\"camion\":[\"french\"],\"campagne\":[\"french\"],\"caneton\":[\"french\"],\"canon\":[\"french\"],\"cantine\":[\"french\"],\"canular\":[\"french\"],\"caporal\":[\"french\"],\"caprice\":[\"french\"],\"capsule\":[\"french\"],\"capter\":[\"french\"],\"capuche\":[\"french\"],\"carabine\":[\"french\"],\"carbone\":[\"french\"],\"caresser\":[\"french\"],\"caribou\":[\"french\"],\"carnage\":[\"french\"],\"carotte\":[\"french\"],\"carreau\":[\"french\"],\"carton\":[\"french\"],\"cascade\":[\"french\"],\"casier\":[\"french\"],\"casque\":[\"french\"],\"cassure\":[\"french\"],\"causer\":[\"french\"],\"cavalier\":[\"french\"],\"caverne\":[\"french\"],\"caviar\":[\"french\"],\"cédille\":[\"french\"],\"ceinture\":[\"french\"],\"céleste\":[\"french\"],\"cellule\":[\"french\"],\"cendrier\":[\"french\"],\"censurer\":[\"french\"],\"central\":[\"french\"],\"cercle\":[\"french\"],\"cérébral\":[\"french\"],\"cerise\":[\"french\"],\"cerner\":[\"french\"],\"cerveau\":[\"french\"],\"cesser\":[\"french\"],\"chagrin\":[\"french\"],\"chaise\":[\"french\"],\"chaleur\":[\"french\"],\"chambre\":[\"french\"],\"chance\":[\"french\"],\"chapitre\":[\"french\"],\"charbon\":[\"french\"],\"chasseur\":[\"french\"],\"chaton\":[\"french\"],\"chausson\":[\"french\"],\"chavirer\":[\"french\"],\"chemise\":[\"french\"],\"chenille\":[\"french\"],\"chéquier\":[\"french\"],\"chercher\":[\"french\"],\"cheval\":[\"french\"],\"chien\":[\"french\"],\"chiffre\":[\"french\"],\"chignon\":[\"french\"],\"chimère\":[\"french\"],\"chiot\":[\"french\"],\"chlorure\":[\"french\"],\"chocolat\":[\"french\"],\"choisir\":[\"french\"],\"chose\":[\"french\"],\"chouette\":[\"french\"],\"chrome\":[\"french\"],\"chute\":[\"french\"],\"cigare\":[\"french\"],\"cigogne\":[\"french\"],\"cimenter\":[\"french\"],\"cinéma\":[\"french\"],\"cintrer\":[\"french\"],\"circuler\":[\"french\"],\"cirer\":[\"french\"],\"cirque\":[\"french\"],\"citerne\":[\"french\"],\"citoyen\":[\"french\"],\"citron\":[\"french\"],\"clairon\":[\"french\"],\"clameur\":[\"french\"],\"claquer\":[\"french\"],\"classe\":[\"french\"],\"clavier\":[\"french\"],\"cligner\":[\"french\"],\"climat\":[\"french\"],\"clivage\":[\"french\"],\"cloche\":[\"french\"],\"clonage\":[\"french\"],\"cloporte\":[\"french\"],\"cobalt\":[\"french\"],\"cobra\":[\"french\"],\"cocasse\":[\"french\"],\"cocotier\":[\"french\"],\"coder\":[\"french\"],\"codifier\":[\"french\"],\"coffre\":[\"french\"],\"cogner\":[\"french\"],\"cohésion\":[\"french\"],\"coiffer\":[\"french\"],\"coincer\":[\"french\"],\"colère\":[\"french\"],\"colibri\":[\"french\"],\"colline\":[\"french\"],\"colmater\":[\"french\"],\"colonel\":[\"french\"],\"combat\":[\"french\"],\"comédie\":[\"french\"],\"commande\":[\"french\"],\"compact\":[\"french\"],\"conduire\":[\"french\"],\"confier\":[\"french\"],\"congeler\":[\"french\"],\"connoter\":[\"french\"],\"consonne\":[\"french\"],\"contact\":[\"french\"],\"convexe\":[\"french\"],\"copain\":[\"french\"],\"copie\":[\"french\"],\"corail\":[\"french\"],\"corbeau\":[\"french\"],\"cordage\":[\"french\"],\"corniche\":[\"french\"],\"corpus\":[\"french\"],\"cortège\":[\"french\"],\"cosmique\":[\"french\"],\"costume\":[\"french\"],\"coton\":[\"french\"],\"coude\":[\"french\"],\"coupure\":[\"french\"],\"courage\":[\"french\"],\"couteau\":[\"french\"],\"couvrir\":[\"french\"],\"crabe\":[\"french\"],\"crainte\":[\"french\"],\"cravate\":[\"french\"],\"crayon\":[\"french\"],\"créature\":[\"french\"],\"créditer\":[\"french\"],\"crémeux\":[\"french\"],\"creuser\":[\"french\"],\"crevette\":[\"french\"],\"cribler\":[\"french\"],\"crier\":[\"french\"],\"cristal\":[\"french\"],\"critère\":[\"french\"],\"croire\":[\"french\"],\"croquer\":[\"french\"],\"crotale\":[\"french\"],\"crypter\":[\"french\"],\"cubique\":[\"french\"],\"cueillir\":[\"french\"],\"cuillère\":[\"french\"],\"cuisine\":[\"french\"],\"cuivre\":[\"french\"],\"culminer\":[\"french\"],\"cultiver\":[\"french\"],\"cumuler\":[\"french\"],\"cupide\":[\"french\"],\"curatif\":[\"french\"],\"curseur\":[\"french\"],\"cyanure\":[\"french\"],\"cylindre\":[\"french\"],\"cynique\":[\"french\"],\"daigner\":[\"french\"],\"damier\":[\"french\"],\"danseur\":[\"french\"],\"dauphin\":[\"french\"],\"débattre\":[\"french\"],\"débiter\":[\"french\"],\"déborder\":[\"french\"],\"débrider\":[\"french\"],\"débutant\":[\"french\"],\"décaler\":[\"french\"],\"décembre\":[\"french\"],\"déchirer\":[\"french\"],\"décider\":[\"french\"],\"déclarer\":[\"french\"],\"décorer\":[\"french\"],\"décrire\":[\"french\"],\"décupler\":[\"french\"],\"dédale\":[\"french\"],\"déductif\":[\"french\"],\"déesse\":[\"french\"],\"défensif\":[\"french\"],\"défiler\":[\"french\"],\"défrayer\":[\"french\"],\"dégager\":[\"french\"],\"dégivrer\":[\"french\"],\"déglutir\":[\"french\"],\"dégrafer\":[\"french\"],\"déjeuner\":[\"french\"],\"délice\":[\"french\"],\"déloger\":[\"french\"],\"demander\":[\"french\"],\"demeurer\":[\"french\"],\"démolir\":[\"french\"],\"dénicher\":[\"french\"],\"dénouer\":[\"french\"],\"dentelle\":[\"french\"],\"dénuder\":[\"french\"],\"départ\":[\"french\"],\"dépenser\":[\"french\"],\"déphaser\":[\"french\"],\"déplacer\":[\"french\"],\"déposer\":[\"french\"],\"déranger\":[\"french\"],\"dérober\":[\"french\"],\"désastre\":[\"french\"],\"descente\":[\"french\"],\"désert\":[\"french\"],\"désigner\":[\"french\"],\"désobéir\":[\"french\"],\"dessiner\":[\"french\"],\"destrier\":[\"french\"],\"détacher\":[\"french\"],\"détester\":[\"french\"],\"détourer\":[\"french\"],\"détresse\":[\"french\"],\"devancer\":[\"french\"],\"devenir\":[\"french\"],\"deviner\":[\"french\"],\"devoir\":[\"french\"],\"diable\":[\"french\"],\"dialogue\":[\"french\"],\"diamant\":[\"french\"],\"dicter\":[\"french\"],\"différer\":[\"french\"],\"digérer\":[\"french\"],\"digne\":[\"french\"],\"diluer\":[\"french\"],\"dimanche\":[\"french\"],\"diminuer\":[\"french\"],\"dioxyde\":[\"french\"],\"directif\":[\"french\"],\"diriger\":[\"french\"],\"discuter\":[\"french\"],\"disposer\":[\"french\"],\"dissiper\":[\"french\"],\"divertir\":[\"french\"],\"diviser\":[\"french\"],\"docile\":[\"french\"],\"docteur\":[\"french\"],\"dogme\":[\"french\"],\"doigt\":[\"french\"],\"domaine\":[\"french\"],\"domicile\":[\"french\"],\"dompter\":[\"french\"],\"donateur\":[\"french\"],\"donjon\":[\"french\"],\"donner\":[\"french\"],\"dopamine\":[\"french\"],\"dortoir\":[\"french\"],\"dorure\":[\"french\"],\"dosage\":[\"french\"],\"doseur\":[\"french\"],\"dossier\":[\"french\"],\"dotation\":[\"french\"],\"douanier\":[\"french\"],\"douceur\":[\"french\"],\"douter\":[\"french\"],\"doyen\":[\"french\"],\"draper\":[\"french\"],\"dresser\":[\"french\"],\"dribbler\":[\"french\"],\"droiture\":[\"french\"],\"duperie\":[\"french\"],\"duplexe\":[\"french\"],\"durable\":[\"french\"],\"durcir\":[\"french\"],\"dynastie\":[\"french\"],\"éblouir\":[\"french\"],\"écarter\":[\"french\"],\"écharpe\":[\"french\"],\"échelle\":[\"french\"],\"éclairer\":[\"french\"],\"éclipse\":[\"french\"],\"éclore\":[\"french\"],\"écluse\":[\"french\"],\"école\":[\"french\"],\"économie\":[\"french\"],\"écorce\":[\"french\"],\"écouter\":[\"french\"],\"écraser\":[\"french\"],\"écrémer\":[\"french\"],\"écrivain\":[\"french\"],\"écrou\":[\"french\"],\"écume\":[\"french\"],\"écureuil\":[\"french\"],\"édifier\":[\"french\"],\"éduquer\":[\"french\"],\"effacer\":[\"french\"],\"effectif\":[\"french\"],\"effigie\":[\"french\"],\"effrayer\":[\"french\"],\"effusion\":[\"french\"],\"égaliser\":[\"french\"],\"égarer\":[\"french\"],\"éjecter\":[\"french\"],\"élaborer\":[\"french\"],\"élargir\":[\"french\"],\"électron\":[\"french\"],\"élégant\":[\"french\"],\"éléphant\":[\"french\"],\"élève\":[\"french\"],\"éligible\":[\"french\"],\"élitisme\":[\"french\"],\"éloge\":[\"french\"],\"élucider\":[\"french\"],\"éluder\":[\"french\"],\"emballer\":[\"french\"],\"embellir\":[\"french\"],\"embryon\":[\"french\"],\"émeraude\":[\"french\"],\"émission\":[\"french\"],\"emmener\":[\"french\"],\"émotion\":[\"french\"],\"émouvoir\":[\"french\"],\"empereur\":[\"french\"],\"employer\":[\"french\"],\"emporter\":[\"french\"],\"emprise\":[\"french\"],\"émulsion\":[\"french\"],\"encadrer\":[\"french\"],\"enchère\":[\"french\"],\"enclave\":[\"french\"],\"encoche\":[\"french\"],\"endiguer\":[\"french\"],\"endosser\":[\"french\"],\"endroit\":[\"french\"],\"enduire\":[\"french\"],\"énergie\":[\"french\"],\"enfance\":[\"french\"],\"enfermer\":[\"french\"],\"enfouir\":[\"french\"],\"engager\":[\"french\"],\"engin\":[\"french\",\"turkish\"],\"englober\":[\"french\"],\"énigme\":[\"french\"],\"enjamber\":[\"french\"],\"enjeu\":[\"french\"],\"enlever\":[\"french\"],\"ennemi\":[\"french\"],\"ennuyeux\":[\"french\"],\"enrichir\":[\"french\"],\"enrobage\":[\"french\"],\"enseigne\":[\"french\"],\"entasser\":[\"french\"],\"entendre\":[\"french\"],\"entier\":[\"french\"],\"entourer\":[\"french\"],\"entraver\":[\"french\"],\"énumérer\":[\"french\"],\"envahir\":[\"french\"],\"enviable\":[\"french\"],\"envoyer\":[\"french\"],\"enzyme\":[\"french\"],\"éolien\":[\"french\"],\"épaissir\":[\"french\"],\"épargne\":[\"french\"],\"épatant\":[\"french\"],\"épaule\":[\"french\"],\"épicerie\":[\"french\"],\"épidémie\":[\"french\"],\"épier\":[\"french\"],\"épilogue\":[\"french\"],\"épine\":[\"french\"],\"épisode\":[\"french\"],\"épitaphe\":[\"french\"],\"époque\":[\"french\"],\"épreuve\":[\"french\"],\"éprouver\":[\"french\"],\"épuisant\":[\"french\"],\"équerre\":[\"french\"],\"équipe\":[\"french\"],\"ériger\":[\"french\"],\"érosion\":[\"french\"],\"erreur\":[\"french\"],\"éruption\":[\"french\"],\"escalier\":[\"french\"],\"espadon\":[\"french\"],\"espèce\":[\"french\"],\"espiègle\":[\"french\"],\"espoir\":[\"french\"],\"esprit\":[\"french\"],\"esquiver\":[\"french\"],\"essayer\":[\"french\"],\"essieu\":[\"french\"],\"essorer\":[\"french\"],\"estime\":[\"french\"],\"estomac\":[\"french\"],\"estrade\":[\"french\"],\"étagère\":[\"french\"],\"étaler\":[\"french\"],\"étanche\":[\"french\"],\"étatique\":[\"french\"],\"éteindre\":[\"french\"],\"étendoir\":[\"french\"],\"éternel\":[\"french\"],\"éthanol\":[\"french\"],\"éthique\":[\"french\"],\"ethnie\":[\"french\"],\"étirer\":[\"french\"],\"étoffer\":[\"french\"],\"étoile\":[\"french\"],\"étonnant\":[\"french\"],\"étourdir\":[\"french\"],\"étrange\":[\"french\"],\"étroit\":[\"french\"],\"étude\":[\"french\"],\"euphorie\":[\"french\"],\"évaluer\":[\"french\"],\"évasion\":[\"french\"],\"éventail\":[\"french\"],\"évidence\":[\"french\"],\"éviter\":[\"french\"],\"évolutif\":[\"french\"],\"évoquer\":[\"french\"],\"exagérer\":[\"french\"],\"exaucer\":[\"french\"],\"exceller\":[\"french\"],\"excitant\":[\"french\"],\"exclusif\":[\"french\"],\"exécuter\":[\"french\"],\"exemple\":[\"french\"],\"exercer\":[\"french\"],\"exhaler\":[\"french\"],\"exhorter\":[\"french\"],\"exigence\":[\"french\"],\"exiler\":[\"french\"],\"exister\":[\"french\"],\"exotique\":[\"french\"],\"expédier\":[\"french\"],\"explorer\":[\"french\"],\"exposer\":[\"french\"],\"exprimer\":[\"french\"],\"exquis\":[\"french\"],\"extensif\":[\"french\"],\"extraire\":[\"french\"],\"exulter\":[\"french\"],\"fable\":[\"french\"],\"fabuleux\":[\"french\"],\"facette\":[\"french\"],\"facile\":[\"french\"],\"facture\":[\"french\"],\"faiblir\":[\"french\"],\"falaise\":[\"french\"],\"fameux\":[\"french\"],\"famille\":[\"french\"],\"farceur\":[\"french\"],\"farfelu\":[\"french\"],\"farine\":[\"french\"],\"farouche\":[\"french\"],\"fasciner\":[\"french\"],\"faucon\":[\"french\"],\"fautif\":[\"french\"],\"faveur\":[\"french\"],\"favori\":[\"french\",\"turkish\"],\"fébrile\":[\"french\"],\"féconder\":[\"french\"],\"fédérer\":[\"french\"],\"félin\":[\"french\"],\"femme\":[\"french\"],\"fémur\":[\"french\"],\"fendoir\":[\"french\"],\"féodal\":[\"french\"],\"fermer\":[\"french\"],\"féroce\":[\"french\"],\"ferveur\":[\"french\"],\"feuille\":[\"french\"],\"feutre\":[\"french\"],\"février\":[\"french\"],\"fiasco\":[\"french\"],\"ficeler\":[\"french\"],\"fictif\":[\"french\"],\"fidèle\":[\"french\"],\"filature\":[\"french\"],\"filetage\":[\"french\"],\"filière\":[\"french\"],\"filleul\":[\"french\"],\"filmer\":[\"french\"],\"filou\":[\"french\"],\"filtrer\":[\"french\"],\"financer\":[\"french\"],\"finir\":[\"french\"],\"fiole\":[\"french\"],\"firme\":[\"french\"],\"fissure\":[\"french\"],\"fixer\":[\"french\"],\"flairer\":[\"french\"],\"flamme\":[\"french\"],\"flasque\":[\"french\"],\"flatteur\":[\"french\"],\"fléau\":[\"french\"],\"flèche\":[\"french\"],\"fleur\":[\"french\"],\"flexion\":[\"french\"],\"flocon\":[\"french\"],\"flore\":[\"french\"],\"fluctuer\":[\"french\"],\"fluide\":[\"french\"],\"fluvial\":[\"french\"],\"folie\":[\"french\"],\"fonderie\":[\"french\"],\"fongible\":[\"french\"],\"fontaine\":[\"french\"],\"forcer\":[\"french\"],\"forgeron\":[\"french\"],\"formuler\":[\"french\"],\"fossile\":[\"french\"],\"foudre\":[\"french\"],\"fougère\":[\"french\"],\"fouiller\":[\"french\"],\"foulure\":[\"french\"],\"fourmi\":[\"french\"],\"fraise\":[\"french\"],\"franchir\":[\"french\"],\"frapper\":[\"french\"],\"frayeur\":[\"french\"],\"frégate\":[\"french\"],\"freiner\":[\"french\"],\"frelon\":[\"french\"],\"frémir\":[\"french\"],\"frénésie\":[\"french\"],\"frère\":[\"french\"],\"friable\":[\"french\"],\"friction\":[\"french\"],\"frisson\":[\"french\"],\"frivole\":[\"french\"],\"froid\":[\"french\"],\"fromage\":[\"french\"],\"frontal\":[\"french\"],\"frotter\":[\"french\"],\"fugitif\":[\"french\"],\"fuite\":[\"french\"],\"fureur\":[\"french\"],\"furieux\":[\"french\"],\"furtif\":[\"french\"],\"fusion\":[\"french\"],\"futur\":[\"french\"],\"gagner\":[\"french\"],\"galaxie\":[\"french\"],\"galerie\":[\"french\"],\"gambader\":[\"french\"],\"garantir\":[\"french\"],\"gardien\":[\"french\"],\"garnir\":[\"french\"],\"garrigue\":[\"french\"],\"gazelle\":[\"french\"],\"gazon\":[\"french\"],\"géant\":[\"french\"],\"gélatine\":[\"french\"],\"gélule\":[\"french\"],\"gendarme\":[\"french\"],\"général\":[\"french\"],\"génie\":[\"french\"],\"genou\":[\"french\"],\"gentil\":[\"french\"],\"géologie\":[\"french\"],\"géomètre\":[\"french\"],\"géranium\":[\"french\"],\"germe\":[\"french\"],\"gestuel\":[\"french\"],\"geyser\":[\"french\"],\"gibier\":[\"french\"],\"gicler\":[\"french\"],\"girafe\":[\"french\"],\"givre\":[\"french\"],\"glace\":[\"french\"],\"glaive\":[\"french\"],\"glisser\":[\"french\"],\"gloire\":[\"french\"],\"glorieux\":[\"french\"],\"golfeur\":[\"french\"],\"gomme\":[\"french\"],\"gonfler\":[\"french\"],\"gorge\":[\"french\"],\"gorille\":[\"french\"],\"goudron\":[\"french\"],\"gouffre\":[\"french\"],\"goulot\":[\"french\"],\"goupille\":[\"french\"],\"gourmand\":[\"french\"],\"goutte\":[\"french\"],\"graduel\":[\"french\"],\"graffiti\":[\"french\"],\"graine\":[\"french\"],\"grand\":[\"french\"],\"grappin\":[\"french\"],\"gratuit\":[\"french\"],\"gravir\":[\"french\"],\"grenat\":[\"french\"],\"griffure\":[\"french\"],\"griller\":[\"french\"],\"grimper\":[\"french\"],\"grogner\":[\"french\"],\"gronder\":[\"french\"],\"grotte\":[\"french\"],\"groupe\":[\"french\"],\"gruger\":[\"french\"],\"grutier\":[\"french\"],\"gruyère\":[\"french\"],\"guépard\":[\"french\"],\"guerrier\":[\"french\"],\"guimauve\":[\"french\"],\"guitare\":[\"french\"],\"gustatif\":[\"french\"],\"gymnaste\":[\"french\"],\"gyrostat\":[\"french\"],\"habitude\":[\"french\"],\"hachoir\":[\"french\"],\"halte\":[\"french\"],\"hameau\":[\"french\"],\"hangar\":[\"french\",\"turkish\"],\"hanneton\":[\"french\"],\"haricot\":[\"french\"],\"harmonie\":[\"french\"],\"harpon\":[\"french\"],\"hasard\":[\"french\"],\"hélium\":[\"french\"],\"hématome\":[\"french\"],\"herbe\":[\"french\"],\"hérisson\":[\"french\"],\"hermine\":[\"french\"],\"héron\":[\"french\"],\"hésiter\":[\"french\"],\"heureux\":[\"french\"],\"hiberner\":[\"french\"],\"hibou\":[\"french\"],\"hilarant\":[\"french\"],\"histoire\":[\"french\"],\"hiver\":[\"french\"],\"homard\":[\"french\"],\"hommage\":[\"french\"],\"homogène\":[\"french\"],\"honneur\":[\"french\"],\"honorer\":[\"french\"],\"honteux\":[\"french\"],\"horde\":[\"french\"],\"horizon\":[\"french\"],\"horloge\":[\"french\"],\"hormone\":[\"french\"],\"horrible\":[\"french\"],\"houleux\":[\"french\"],\"housse\":[\"french\"],\"hublot\":[\"french\"],\"huileux\":[\"french\"],\"humain\":[\"french\"],\"humide\":[\"french\"],\"humour\":[\"french\"],\"hurler\":[\"french\"],\"hydromel\":[\"french\"],\"hygiène\":[\"french\"],\"hymne\":[\"french\"],\"hypnose\":[\"french\"],\"idylle\":[\"french\"],\"ignorer\":[\"french\"],\"iguane\":[\"french\"],\"illicite\":[\"french\"],\"illusion\":[\"french\"],\"imbiber\":[\"french\"],\"imiter\":[\"french\"],\"immobile\":[\"french\"],\"immuable\":[\"french\"],\"impérial\":[\"french\"],\"implorer\":[\"french\"],\"imposer\":[\"french\"],\"imprimer\":[\"french\"],\"imputer\":[\"french\"],\"incarner\":[\"french\"],\"incendie\":[\"french\"],\"incident\":[\"french\"],\"incliner\":[\"french\"],\"incolore\":[\"french\"],\"indexer\":[\"french\"],\"indice\":[\"french\"],\"inductif\":[\"french\"],\"inédit\":[\"french\"],\"ineptie\":[\"french\"],\"inexact\":[\"french\"],\"infini\":[\"french\"],\"infliger\":[\"french\"],\"informer\":[\"french\"],\"infusion\":[\"french\"],\"ingérer\":[\"french\"],\"inhaler\":[\"french\"],\"inhiber\":[\"french\"],\"injecter\":[\"french\"],\"injure\":[\"french\"],\"inoculer\":[\"french\"],\"inonder\":[\"french\"],\"inscrire\":[\"french\"],\"insecte\":[\"french\"],\"insigne\":[\"french\"],\"insolite\":[\"french\"],\"inspirer\":[\"french\"],\"instinct\":[\"french\"],\"insulter\":[\"french\"],\"intense\":[\"french\"],\"intime\":[\"french\"],\"intrigue\":[\"french\"],\"intuitif\":[\"french\"],\"inutile\":[\"french\"],\"invasion\":[\"french\"],\"inventer\":[\"french\"],\"inviter\":[\"french\"],\"invoquer\":[\"french\"],\"ironique\":[\"french\"],\"irradier\":[\"french\"],\"irréel\":[\"french\"],\"irriter\":[\"french\"],\"isoler\":[\"french\"],\"ivoire\":[\"french\"],\"ivresse\":[\"french\"],\"jaillir\":[\"french\"],\"jambe\":[\"french\"],\"janvier\":[\"french\"],\"jardin\":[\"french\"],\"jauger\":[\"french\"],\"jaune\":[\"french\"],\"javelot\":[\"french\"],\"jetable\":[\"french\"],\"jeton\":[\"french\"],\"jeudi\":[\"french\"],\"jeunesse\":[\"french\"],\"joindre\":[\"french\"],\"joncher\":[\"french\"],\"jongler\":[\"french\"],\"joueur\":[\"french\"],\"jouissif\":[\"french\"],\"journal\":[\"french\"],\"jovial\":[\"french\"],\"joyau\":[\"french\"],\"joyeux\":[\"french\"],\"jubiler\":[\"french\"],\"jugement\":[\"french\"],\"jupon\":[\"french\"],\"juriste\":[\"french\"],\"justice\":[\"french\"],\"juteux\":[\"french\"],\"juvénile\":[\"french\"],\"kayak\":[\"french\"],\"kimono\":[\"french\"],\"kiosque\":[\"french\"],\"labial\":[\"french\"],\"labourer\":[\"french\"],\"lacérer\":[\"french\"],\"lactose\":[\"french\"],\"lagune\":[\"french\"],\"laine\":[\"french\"],\"laisser\":[\"french\"],\"laitier\":[\"french\"],\"lambeau\":[\"french\"],\"lamelle\":[\"french\"],\"lampe\":[\"french\"],\"lanceur\":[\"french\"],\"langage\":[\"french\"],\"lanterne\":[\"french\"],\"lapin\":[\"french\"],\"largeur\":[\"french\"],\"larme\":[\"french\"],\"laurier\":[\"french\"],\"lavabo\":[\"french\"],\"lavoir\":[\"french\"],\"légal\":[\"french\"],\"léger\":[\"french\"],\"légume\":[\"french\"],\"lessive\":[\"french\"],\"lettre\":[\"french\"],\"levier\":[\"french\"],\"lexique\":[\"french\"],\"lézard\":[\"french\"],\"liasse\":[\"french\"],\"libérer\":[\"french\"],\"libre\":[\"french\"],\"licence\":[\"french\"],\"licorne\":[\"french\"],\"liège\":[\"french\"],\"lièvre\":[\"french\"],\"ligature\":[\"french\"],\"ligoter\":[\"french\"],\"ligue\":[\"french\"],\"limer\":[\"french\"],\"limite\":[\"french\"],\"limonade\":[\"french\"],\"limpide\":[\"french\"],\"linéaire\":[\"french\"],\"lingot\":[\"french\"],\"lionceau\":[\"french\"],\"liquide\":[\"french\"],\"lisière\":[\"french\"],\"lister\":[\"french\"],\"lithium\":[\"french\"],\"litige\":[\"french\"],\"littoral\":[\"french\"],\"livreur\":[\"french\"],\"logique\":[\"french\"],\"lointain\":[\"french\"],\"loisir\":[\"french\"],\"lombric\":[\"french\"],\"loterie\":[\"french\"],\"louer\":[\"french\"],\"lourd\":[\"french\"],\"loutre\":[\"french\"],\"louve\":[\"french\"],\"lubie\":[\"french\"],\"lucide\":[\"french\"],\"lucratif\":[\"french\"],\"lueur\":[\"french\"],\"lugubre\":[\"french\"],\"luisant\":[\"french\"],\"lumière\":[\"french\"],\"lunaire\":[\"french\"],\"lundi\":[\"french\"],\"luron\":[\"french\"],\"lutter\":[\"french\"],\"luxueux\":[\"french\"],\"magasin\":[\"french\"],\"magenta\":[\"french\"],\"magique\":[\"french\"],\"maigre\":[\"french\"],\"maillon\":[\"french\"],\"maintien\":[\"french\"],\"mairie\":[\"french\"],\"maison\":[\"french\"],\"majorer\":[\"french\"],\"malaxer\":[\"french\"],\"maléfice\":[\"french\"],\"malheur\":[\"french\"],\"malice\":[\"french\"],\"mallette\":[\"french\"],\"mammouth\":[\"french\"],\"mandater\":[\"french\"],\"maniable\":[\"french\"],\"manquant\":[\"french\"],\"manteau\":[\"french\"],\"manuel\":[\"french\"],\"marathon\":[\"french\"],\"marbre\":[\"french\"],\"marchand\":[\"french\"],\"mardi\":[\"french\"],\"maritime\":[\"french\"],\"marqueur\":[\"french\"],\"marron\":[\"french\"],\"marteler\":[\"french\"],\"mascotte\":[\"french\"],\"massif\":[\"french\"],\"matériel\":[\"french\"],\"matière\":[\"french\"],\"matraque\":[\"french\"],\"maudire\":[\"french\"],\"maussade\":[\"french\"],\"mauve\":[\"french\"],\"maximal\":[\"french\"],\"méchant\":[\"french\"],\"méconnu\":[\"french\"],\"médaille\":[\"french\"],\"médecin\":[\"french\"],\"méditer\":[\"french\"],\"méduse\":[\"french\"],\"meilleur\":[\"french\"],\"mélange\":[\"french\"],\"mélodie\":[\"french\"],\"membre\":[\"french\"],\"mémoire\":[\"french\"],\"menacer\":[\"french\"],\"mener\":[\"french\"],\"menhir\":[\"french\"],\"mensonge\":[\"french\"],\"mentor\":[\"french\"],\"mercredi\":[\"french\"],\"mérite\":[\"french\"],\"merle\":[\"french\"],\"messager\":[\"french\"],\"mesure\":[\"french\"],\"métal\":[\"french\"],\"météore\":[\"french\"],\"méthode\":[\"french\"],\"métier\":[\"french\"],\"meuble\":[\"french\"],\"miauler\":[\"french\"],\"microbe\":[\"french\"],\"miette\":[\"french\"],\"mignon\":[\"french\"],\"migrer\":[\"french\"],\"milieu\":[\"french\"],\"mimique\":[\"french\"],\"mince\":[\"french\"],\"minéral\":[\"french\"],\"minimal\":[\"french\"],\"minorer\":[\"french\"],\"miroiter\":[\"french\"],\"missile\":[\"french\"],\"mixte\":[\"french\"],\"moderne\":[\"french\"],\"moelleux\":[\"french\"],\"mondial\":[\"french\"],\"moniteur\":[\"french\"],\"monnaie\":[\"french\"],\"monotone\":[\"french\"],\"monstre\":[\"french\"],\"montagne\":[\"french\"],\"monument\":[\"french\"],\"moqueur\":[\"french\"],\"morceau\":[\"french\"],\"morsure\":[\"french\"],\"mortier\":[\"french\"],\"moteur\":[\"french\"],\"motif\":[\"french\"],\"mouche\":[\"french\"],\"moufle\":[\"french\"],\"moulin\":[\"french\"],\"mousson\":[\"french\"],\"mouton\":[\"french\"],\"mouvant\":[\"french\"],\"multiple\":[\"french\"],\"munition\":[\"french\"],\"muraille\":[\"french\"],\"murène\":[\"french\"],\"murmure\":[\"french\"],\"muséum\":[\"french\"],\"musicien\":[\"french\"],\"mutation\":[\"french\"],\"muter\":[\"french\"],\"mutuel\":[\"french\"],\"myriade\":[\"french\"],\"myrtille\":[\"french\"],\"mystère\":[\"french\"],\"mythique\":[\"french\"],\"nageur\":[\"french\"],\"nappe\":[\"french\"],\"narquois\":[\"french\"],\"narrer\":[\"french\"],\"natation\":[\"french\"],\"naufrage\":[\"french\"],\"nautique\":[\"french\"],\"navire\":[\"french\"],\"nébuleux\":[\"french\"],\"nectar\":[\"french\"],\"néfaste\":[\"french\"],\"négation\":[\"french\"],\"négliger\":[\"french\"],\"négocier\":[\"french\"],\"neige\":[\"french\"],\"nerveux\":[\"french\"],\"nettoyer\":[\"french\"],\"neurone\":[\"french\"],\"neutron\":[\"french\"],\"neveu\":[\"french\"],\"niche\":[\"french\"],\"nickel\":[\"french\"],\"nitrate\":[\"french\"],\"niveau\":[\"french\"],\"nocif\":[\"french\"],\"nocturne\":[\"french\"],\"noirceur\":[\"french\"],\"noisette\":[\"french\"],\"nomade\":[\"french\"],\"nombreux\":[\"french\"],\"nommer\":[\"french\"],\"normatif\":[\"french\"],\"notifier\":[\"french\"],\"notoire\":[\"french\"],\"nourrir\":[\"french\"],\"nouveau\":[\"french\"],\"novateur\":[\"french\"],\"novembre\":[\"french\"],\"novice\":[\"french\"],\"nuage\":[\"french\"],\"nuancer\":[\"french\"],\"nuire\":[\"french\"],\"nuisible\":[\"french\"],\"numéro\":[\"french\"],\"nuptial\":[\"french\"],\"nuque\":[\"french\"],\"nutritif\":[\"french\"],\"obéir\":[\"french\"],\"objectif\":[\"french\"],\"obliger\":[\"french\"],\"obscur\":[\"french\"],\"observer\":[\"french\"],\"obstacle\":[\"french\"],\"obtenir\":[\"french\"],\"obturer\":[\"french\"],\"occasion\":[\"french\"],\"occuper\":[\"french\"],\"océan\":[\"french\"],\"octobre\":[\"french\"],\"octroyer\":[\"french\"],\"octupler\":[\"french\"],\"oculaire\":[\"french\"],\"odeur\":[\"french\"],\"odorant\":[\"french\"],\"offenser\":[\"french\"],\"officier\":[\"french\"],\"offrir\":[\"french\"],\"ogive\":[\"french\"],\"oiseau\":[\"french\"],\"oisillon\":[\"french\"],\"olfactif\":[\"french\"],\"olivier\":[\"french\"],\"ombrage\":[\"french\"],\"omettre\":[\"french\"],\"onctueux\":[\"french\"],\"onduler\":[\"french\"],\"onéreux\":[\"french\"],\"onirique\":[\"french\"],\"opale\":[\"french\"],\"opaque\":[\"french\"],\"opérer\":[\"french\"],\"opportun\":[\"french\"],\"opprimer\":[\"french\"],\"opter\":[\"french\"],\"optique\":[\"french\"],\"orageux\":[\"french\"],\"orbite\":[\"french\"],\"ordonner\":[\"french\"],\"oreille\":[\"french\"],\"organe\":[\"french\"],\"orgueil\":[\"french\"],\"orifice\":[\"french\"],\"ornement\":[\"french\"],\"orque\":[\"french\"],\"ortie\":[\"french\"],\"osciller\":[\"french\"],\"osmose\":[\"french\"],\"ossature\":[\"french\"],\"otarie\":[\"french\"],\"ouragan\":[\"french\"],\"ourson\":[\"french\"],\"outil\":[\"french\"],\"outrager\":[\"french\"],\"ouvrage\":[\"french\"],\"ovation\":[\"french\"],\"oxyde\":[\"french\"],\"oxygène\":[\"french\"],\"paisible\":[\"french\"],\"palmarès\":[\"french\"],\"palourde\":[\"french\"],\"palper\":[\"french\"],\"panache\":[\"french\"],\"pangolin\":[\"french\"],\"paniquer\":[\"french\"],\"panneau\":[\"french\"],\"panorama\":[\"french\"],\"pantalon\":[\"french\"],\"papaye\":[\"french\"],\"papier\":[\"french\"],\"papoter\":[\"french\"],\"papyrus\":[\"french\"],\"paradoxe\":[\"french\"],\"parcelle\":[\"french\"],\"paresse\":[\"french\"],\"parfumer\":[\"french\"],\"parler\":[\"french\"],\"parole\":[\"french\"],\"parrain\":[\"french\"],\"parsemer\":[\"french\"],\"partager\":[\"french\"],\"parure\":[\"french\"],\"parvenir\":[\"french\"],\"passion\":[\"french\"],\"pastèque\":[\"french\"],\"paternel\":[\"french\"],\"patience\":[\"french\"],\"patron\":[\"french\",\"turkish\"],\"pavillon\":[\"french\"],\"pavoiser\":[\"french\"],\"payer\":[\"french\"],\"paysage\":[\"french\"],\"peigne\":[\"french\"],\"peintre\":[\"french\"],\"pelage\":[\"french\"],\"pélican\":[\"french\"],\"pelle\":[\"french\"],\"pelouse\":[\"french\"],\"peluche\":[\"french\"],\"pendule\":[\"french\"],\"pénétrer\":[\"french\"],\"pénible\":[\"french\"],\"pensif\":[\"french\"],\"pénurie\":[\"french\"],\"pépite\":[\"french\"],\"péplum\":[\"french\"],\"perdrix\":[\"french\"],\"perforer\":[\"french\"],\"période\":[\"french\"],\"permuter\":[\"french\"],\"perplexe\":[\"french\"],\"persil\":[\"french\"],\"perte\":[\"french\"],\"peser\":[\"french\"],\"pétale\":[\"french\"],\"petit\":[\"french\"],\"pétrir\":[\"french\"],\"peuple\":[\"french\"],\"pharaon\":[\"french\"],\"phobie\":[\"french\"],\"phoque\":[\"french\"],\"photon\":[\"french\"],\"physique\":[\"french\"],\"pictural\":[\"french\"],\"pièce\":[\"french\"],\"pierre\":[\"french\"],\"pieuvre\":[\"french\"],\"pilote\":[\"french\"],\"pinceau\":[\"french\"],\"pipette\":[\"french\"],\"piquer\":[\"french\"],\"pirogue\":[\"french\"],\"piscine\":[\"french\"],\"piston\":[\"french\"],\"pivoter\":[\"french\"],\"pixel\":[\"french\"],\"placard\":[\"french\"],\"plafond\":[\"french\"],\"plaisir\":[\"french\"],\"planer\":[\"french\"],\"plaque\":[\"french\"],\"plastron\":[\"french\"],\"plateau\":[\"french\"],\"pleurer\":[\"french\"],\"plexus\":[\"french\"],\"pliage\":[\"french\"],\"plomb\":[\"french\"],\"plonger\":[\"french\"],\"pluie\":[\"french\"],\"plumage\":[\"french\"],\"pochette\":[\"french\"],\"poésie\":[\"french\"],\"poète\":[\"french\"],\"pointe\":[\"french\"],\"poirier\":[\"french\"],\"poisson\":[\"french\"],\"poivre\":[\"french\"],\"polaire\":[\"french\"],\"policier\":[\"french\"],\"pollen\":[\"french\"],\"polygone\":[\"french\"],\"pommade\":[\"french\"],\"pompier\":[\"french\"],\"ponctuel\":[\"french\"],\"pondérer\":[\"french\"],\"poney\":[\"french\"],\"portique\":[\"french\"],\"posséder\":[\"french\"],\"posture\":[\"french\"],\"potager\":[\"french\"],\"poteau\":[\"french\"],\"potion\":[\"french\"],\"pouce\":[\"french\"],\"poulain\":[\"french\"],\"poumon\":[\"french\"],\"pourpre\":[\"french\"],\"poussin\":[\"french\"],\"pouvoir\":[\"french\"],\"prairie\":[\"french\"],\"pratique\":[\"french\"],\"précieux\":[\"french\"],\"prédire\":[\"french\"],\"préfixe\":[\"french\"],\"prélude\":[\"french\"],\"prénom\":[\"french\"],\"présence\":[\"french\"],\"prétexte\":[\"french\"],\"prévoir\":[\"french\"],\"primitif\":[\"french\"],\"prince\":[\"french\"],\"priver\":[\"french\"],\"problème\":[\"french\"],\"procéder\":[\"french\"],\"prodige\":[\"french\"],\"profond\":[\"french\"],\"progrès\":[\"french\"],\"proie\":[\"french\"],\"projeter\":[\"french\"],\"prologue\":[\"french\"],\"promener\":[\"french\"],\"propre\":[\"french\"],\"prospère\":[\"french\"],\"protéger\":[\"french\"],\"prouesse\":[\"french\"],\"proverbe\":[\"french\"],\"prudence\":[\"french\"],\"pruneau\":[\"french\"],\"psychose\":[\"french\"],\"puceron\":[\"french\"],\"puiser\":[\"french\"],\"pulpe\":[\"french\"],\"pulsar\":[\"french\"],\"punaise\":[\"french\"],\"punitif\":[\"french\"],\"pupitre\":[\"french\"],\"purifier\":[\"french\"],\"pyramide\":[\"french\"],\"quasar\":[\"french\"],\"querelle\":[\"french\"],\"quiétude\":[\"french\"],\"quitter\":[\"french\"],\"quotient\":[\"french\"],\"racine\":[\"french\"],\"raconter\":[\"french\"],\"radieux\":[\"french\"],\"ragondin\":[\"french\"],\"raideur\":[\"french\"],\"raisin\":[\"french\"],\"ralentir\":[\"french\"],\"rallonge\":[\"french\"],\"ramasser\":[\"french\"],\"rapide\":[\"french\"],\"rasage\":[\"french\"],\"ratisser\":[\"french\"],\"ravager\":[\"french\"],\"ravin\":[\"french\"],\"rayonner\":[\"french\"],\"réactif\":[\"french\"],\"réagir\":[\"french\"],\"réaliser\":[\"french\"],\"réanimer\":[\"french\"],\"recevoir\":[\"french\"],\"réciter\":[\"french\"],\"réclamer\":[\"french\"],\"récolter\":[\"french\"],\"recruter\":[\"french\"],\"reculer\":[\"french\"],\"recycler\":[\"french\"],\"rédiger\":[\"french\"],\"redouter\":[\"french\"],\"refaire\":[\"french\"],\"réflexe\":[\"french\"],\"réformer\":[\"french\"],\"refrain\":[\"french\"],\"refuge\":[\"french\"],\"régalien\":[\"french\"],\"région\":[\"french\"],\"réglage\":[\"french\"],\"régulier\":[\"french\"],\"réitérer\":[\"french\"],\"rejeter\":[\"french\"],\"rejouer\":[\"french\"],\"relatif\":[\"french\"],\"relever\":[\"french\"],\"remarque\":[\"french\"],\"remède\":[\"french\"],\"remise\":[\"french\"],\"remonter\":[\"french\"],\"remplir\":[\"french\"],\"remuer\":[\"french\"],\"renard\":[\"french\"],\"renfort\":[\"french\"],\"renifler\":[\"french\"],\"renoncer\":[\"french\"],\"rentrer\":[\"french\"],\"renvoi\":[\"french\"],\"replier\":[\"french\"],\"reporter\":[\"french\"],\"reprise\":[\"french\"],\"reptile\":[\"french\"],\"requin\":[\"french\"],\"réserve\":[\"french\"],\"résineux\":[\"french\"],\"résoudre\":[\"french\"],\"respect\":[\"french\"],\"rester\":[\"french\"],\"résultat\":[\"french\"],\"rétablir\":[\"french\"],\"retenir\":[\"french\"],\"réticule\":[\"french\"],\"retomber\":[\"french\"],\"retracer\":[\"french\"],\"réunion\":[\"french\"],\"réussir\":[\"french\"],\"revanche\":[\"french\"],\"revivre\":[\"french\"],\"révolte\":[\"french\"],\"révulsif\":[\"french\"],\"richesse\":[\"french\"],\"rideau\":[\"french\"],\"rieur\":[\"french\"],\"rigide\":[\"french\"],\"rigoler\":[\"french\"],\"rincer\":[\"french\"],\"riposter\":[\"french\"],\"risible\":[\"french\"],\"risque\":[\"french\"],\"rituel\":[\"french\"],\"rivière\":[\"french\"],\"rocheux\":[\"french\"],\"rompre\":[\"french\"],\"ronce\":[\"french\"],\"rondin\":[\"french\"],\"roseau\":[\"french\"],\"rosier\":[\"french\"],\"rotatif\":[\"french\"],\"rotor\":[\"french\"],\"rotule\":[\"french\"],\"rouge\":[\"french\"],\"rouille\":[\"french\"],\"rouleau\":[\"french\"],\"routine\":[\"french\"],\"royaume\":[\"french\"],\"ruban\":[\"french\"],\"rubis\":[\"french\"],\"ruche\":[\"french\"],\"ruelle\":[\"french\"],\"rugueux\":[\"french\"],\"ruiner\":[\"french\"],\"ruisseau\":[\"french\"],\"ruser\":[\"french\"],\"rustique\":[\"french\"],\"rythme\":[\"french\"],\"sabler\":[\"french\"],\"saboter\":[\"french\"],\"sabre\":[\"french\"],\"sacoche\":[\"french\"],\"safari\":[\"french\"],\"sagesse\":[\"french\"],\"saisir\":[\"french\"],\"salade\":[\"french\"],\"salive\":[\"french\"],\"saluer\":[\"french\"],\"samedi\":[\"french\"],\"sanction\":[\"french\"],\"sanglier\":[\"french\"],\"sarcasme\":[\"french\"],\"sardine\":[\"french\"],\"saturer\":[\"french\"],\"saugrenu\":[\"french\"],\"saumon\":[\"french\"],\"sauter\":[\"french\"],\"sauvage\":[\"french\"],\"savant\":[\"french\"],\"savonner\":[\"french\"],\"scalpel\":[\"french\"],\"scandale\":[\"french\"],\"scélérat\":[\"french\"],\"scénario\":[\"french\"],\"sceptre\":[\"french\"],\"schéma\":[\"french\"],\"scinder\":[\"french\"],\"score\":[\"french\"],\"scrutin\":[\"french\"],\"sculpter\":[\"french\"],\"séance\":[\"french\"],\"sécable\":[\"french\"],\"sécher\":[\"french\"],\"secouer\":[\"french\"],\"sécréter\":[\"french\"],\"sédatif\":[\"french\"],\"séduire\":[\"french\"],\"seigneur\":[\"french\"],\"séjour\":[\"french\"],\"sélectif\":[\"french\"],\"semaine\":[\"french\"],\"sembler\":[\"french\"],\"semence\":[\"french\"],\"séminal\":[\"french\"],\"sénateur\":[\"french\"],\"sensible\":[\"french\"],\"séparer\":[\"french\"],\"séquence\":[\"french\"],\"serein\":[\"french\"],\"sergent\":[\"french\"],\"sérieux\":[\"french\"],\"serrure\":[\"french\"],\"sérum\":[\"french\"],\"sésame\":[\"french\"],\"sévir\":[\"french\"],\"sevrage\":[\"french\"],\"sextuple\":[\"french\"],\"sidéral\":[\"french\"],\"siècle\":[\"french\"],\"siéger\":[\"french\"],\"siffler\":[\"french\"],\"sigle\":[\"french\"],\"signal\":[\"french\"],\"silence\":[\"french\"],\"silicium\":[\"french\"],\"sincère\":[\"french\"],\"sinistre\":[\"french\"],\"siphon\":[\"french\"],\"sirop\":[\"french\"],\"sismique\":[\"french\"],\"situer\":[\"french\"],\"skier\":[\"french\"],\"socle\":[\"french\"],\"sodium\":[\"french\"],\"soigneux\":[\"french\"],\"soldat\":[\"french\"],\"soleil\":[\"french\"],\"solitude\":[\"french\"],\"soluble\":[\"french\"],\"sombre\":[\"french\"],\"sommeil\":[\"french\"],\"somnoler\":[\"french\"],\"sonde\":[\"french\"],\"songeur\":[\"french\"],\"sonnette\":[\"french\"],\"sonore\":[\"french\"],\"sorcier\":[\"french\"],\"sortir\":[\"french\"],\"sosie\":[\"french\"],\"sottise\":[\"french\"],\"soucieux\":[\"french\"],\"soudure\":[\"french\"],\"souffle\":[\"french\"],\"soulever\":[\"french\"],\"soupape\":[\"french\"],\"soutirer\":[\"french\"],\"souvenir\":[\"french\"],\"spacieux\":[\"french\"],\"spécial\":[\"french\"],\"sphère\":[\"french\"],\"spiral\":[\"french\",\"turkish\"],\"station\":[\"french\"],\"sternum\":[\"french\"],\"stimulus\":[\"french\"],\"stipuler\":[\"french\"],\"strict\":[\"french\"],\"studieux\":[\"french\"],\"stupeur\":[\"french\"],\"styliste\":[\"french\"],\"sublime\":[\"french\"],\"substrat\":[\"french\"],\"subtil\":[\"french\"],\"subvenir\":[\"french\"],\"succès\":[\"french\"],\"sucre\":[\"french\"],\"suffixe\":[\"french\"],\"suggérer\":[\"french\"],\"suiveur\":[\"french\"],\"sulfate\":[\"french\"],\"superbe\":[\"french\"],\"supplier\":[\"french\"],\"suricate\":[\"french\"],\"surmener\":[\"french\"],\"sursaut\":[\"french\"],\"survie\":[\"french\"],\"syllabe\":[\"french\"],\"symbole\":[\"french\"],\"symétrie\":[\"french\"],\"synapse\":[\"french\"],\"syntaxe\":[\"french\"],\"système\":[\"french\"],\"tabac\":[\"french\"],\"tablier\":[\"french\"],\"tactile\":[\"french\"],\"tailler\":[\"french\"],\"talisman\":[\"french\"],\"talonner\":[\"french\"],\"tambour\":[\"french\"],\"tamiser\":[\"french\"],\"tangible\":[\"french\"],\"tapis\":[\"french\"],\"taquiner\":[\"french\"],\"tarder\":[\"french\"],\"tarif\":[\"french\"],\"tartine\":[\"french\"],\"tasse\":[\"french\"],\"tatami\":[\"french\"],\"tatouage\":[\"french\"],\"taupe\":[\"french\"],\"taureau\":[\"french\"],\"taxer\":[\"french\"],\"témoin\":[\"french\"],\"temporel\":[\"french\"],\"tenaille\":[\"french\"],\"tendre\":[\"french\"],\"teneur\":[\"french\"],\"tenir\":[\"french\"],\"tension\":[\"french\"],\"terminer\":[\"french\"],\"terne\":[\"french\"],\"terrible\":[\"french\"],\"tétine\":[\"french\"],\"texte\":[\"french\"],\"thème\":[\"french\"],\"théorie\":[\"french\"],\"thérapie\":[\"french\"],\"thorax\":[\"french\"],\"tibia\":[\"french\"],\"tiède\":[\"french\"],\"timide\":[\"french\"],\"tirelire\":[\"french\"],\"tiroir\":[\"french\"],\"tissu\":[\"french\"],\"titane\":[\"french\"],\"titre\":[\"french\"],\"tituber\":[\"french\"],\"toboggan\":[\"french\"],\"tolérant\":[\"french\"],\"tomate\":[\"french\"],\"tonique\":[\"french\"],\"tonneau\":[\"french\"],\"toponyme\":[\"french\"],\"torche\":[\"french\"],\"tordre\":[\"french\"],\"tornade\":[\"french\"],\"torpille\":[\"french\"],\"torrent\":[\"french\"],\"torse\":[\"french\"],\"tortue\":[\"french\"],\"totem\":[\"french\"],\"toucher\":[\"french\"],\"tournage\":[\"french\"],\"tousser\":[\"french\"],\"toxine\":[\"french\"],\"traction\":[\"french\"],\"trafic\":[\"french\"],\"tragique\":[\"french\"],\"trahir\":[\"french\"],\"trancher\":[\"french\"],\"travail\":[\"french\"],\"trèfle\":[\"french\"],\"tremper\":[\"french\"],\"trésor\":[\"french\"],\"treuil\":[\"french\"],\"triage\":[\"french\"],\"tribunal\":[\"french\"],\"tricoter\":[\"french\"],\"trilogie\":[\"french\"],\"triomphe\":[\"french\"],\"tripler\":[\"french\"],\"triturer\":[\"french\"],\"trivial\":[\"french\"],\"trombone\":[\"french\"],\"tronc\":[\"french\"],\"tropical\":[\"french\"],\"troupeau\":[\"french\"],\"tuile\":[\"french\"],\"tulipe\":[\"french\"],\"tumulte\":[\"french\"],\"turbine\":[\"french\"],\"tuteur\":[\"french\"],\"tutoyer\":[\"french\"],\"tuyau\":[\"french\"],\"tympan\":[\"french\"],\"typhon\":[\"french\"],\"typique\":[\"french\"],\"tyran\":[\"french\"],\"ubuesque\":[\"french\"],\"ultime\":[\"french\"],\"ultrason\":[\"french\"],\"unanime\":[\"french\"],\"unifier\":[\"french\"],\"union\":[\"french\"],\"unitaire\":[\"french\"],\"univers\":[\"french\"],\"uranium\":[\"french\"],\"urbain\":[\"french\"],\"urticant\":[\"french\"],\"usine\":[\"french\"],\"usuel\":[\"french\"],\"usure\":[\"french\"],\"utile\":[\"french\"],\"utopie\":[\"french\"],\"vacarme\":[\"french\"],\"vaccin\":[\"french\"],\"vagabond\":[\"french\"],\"vaillant\":[\"french\"],\"vaincre\":[\"french\"],\"vaisseau\":[\"french\"],\"valable\":[\"french\"],\"valise\":[\"french\"],\"vallon\":[\"french\"],\"vampire\":[\"french\"],\"vanille\":[\"french\"],\"vapeur\":[\"french\"],\"varier\":[\"french\"],\"vaseux\":[\"french\"],\"vassal\":[\"french\"],\"vaste\":[\"french\"],\"vecteur\":[\"french\"],\"vedette\":[\"french\"],\"végétal\":[\"french\"],\"véhicule\":[\"french\"],\"veinard\":[\"french\"],\"véloce\":[\"french\"],\"vendredi\":[\"french\"],\"vénérer\":[\"french\"],\"venger\":[\"french\"],\"venimeux\":[\"french\"],\"ventouse\":[\"french\"],\"verdure\":[\"french\"],\"vérin\":[\"french\"],\"vernir\":[\"french\"],\"verrou\":[\"french\"],\"verser\":[\"french\"],\"vertu\":[\"french\"],\"veston\":[\"french\"],\"vétéran\":[\"french\"],\"vétuste\":[\"french\"],\"vexant\":[\"french\"],\"vexer\":[\"french\"],\"viaduc\":[\"french\"],\"viande\":[\"french\"],\"victoire\":[\"french\"],\"vidange\":[\"french\"],\"vidéo\":[\"french\"],\"vignette\":[\"french\"],\"vigueur\":[\"french\"],\"vilain\":[\"french\"],\"vinaigre\":[\"french\"],\"violon\":[\"french\"],\"vipère\":[\"french\"],\"virement\":[\"french\"],\"virtuose\":[\"french\"],\"visage\":[\"french\"],\"viseur\":[\"french\"],\"vision\":[\"french\"],\"visqueux\":[\"french\"],\"visuel\":[\"french\"],\"vitesse\":[\"french\"],\"viticole\":[\"french\"],\"vitrine\":[\"french\"],\"vivace\":[\"french\"],\"vivipare\":[\"french\"],\"vocation\":[\"french\"],\"voguer\":[\"french\"],\"voile\":[\"french\"],\"voisin\":[\"french\"],\"voiture\":[\"french\"],\"volaille\":[\"french\"],\"volcan\":[\"french\"],\"voltiger\":[\"french\"],\"vorace\":[\"french\"],\"vortex\":[\"french\"],\"voter\":[\"french\"],\"vouloir\":[\"french\"],\"voyelle\":[\"french\"],\"xénon\":[\"french\"],\"yacht\":[\"french\"],\"zèbre\":[\"french\"],\"zénith\":[\"french\"],\"zeste\":[\"french\"],\"zoologie\":[\"french\"],\"abaco\":[\"italian\"],\"abbaglio\":[\"italian\"],\"abbinato\":[\"italian\"],\"abete\":[\"italian\"],\"abisso\":[\"italian\"],\"abolire\":[\"italian\"],\"abrasivo\":[\"italian\"],\"abrogato\":[\"italian\"],\"accadere\":[\"italian\"],\"accenno\":[\"italian\"],\"accusato\":[\"italian\"],\"acetone\":[\"italian\"],\"achille\":[\"italian\"],\"acido\":[\"italian\"],\"acqua\":[\"italian\"],\"acre\":[\"italian\"],\"acrilico\":[\"italian\"],\"acrobata\":[\"italian\"],\"acuto\":[\"italian\"],\"adagio\":[\"italian\"],\"addebito\":[\"italian\"],\"addome\":[\"italian\"],\"adeguato\":[\"italian\"],\"aderire\":[\"italian\"],\"adipe\":[\"italian\"],\"adottare\":[\"italian\"],\"adulare\":[\"italian\"],\"affabile\":[\"italian\"],\"affetto\":[\"italian\"],\"affisso\":[\"italian\"],\"affranto\":[\"italian\"],\"aforisma\":[\"italian\"],\"afoso\":[\"italian\"],\"africano\":[\"italian\"],\"agave\":[\"italian\"],\"agente\":[\"italian\"],\"agevole\":[\"italian\"],\"aggancio\":[\"italian\"],\"agire\":[\"italian\"],\"agitare\":[\"italian\"],\"agonismo\":[\"italian\"],\"agricolo\":[\"italian\"],\"agrumeto\":[\"italian\"],\"aguzzo\":[\"italian\"],\"alabarda\":[\"italian\"],\"alato\":[\"italian\"],\"albatro\":[\"italian\"],\"alberato\":[\"italian\"],\"albo\":[\"italian\"],\"albume\":[\"italian\"],\"alce\":[\"italian\"],\"alcolico\":[\"italian\"],\"alettone\":[\"italian\"],\"alfa\":[\"italian\"],\"algebra\":[\"italian\"],\"aliante\":[\"italian\"],\"alibi\":[\"italian\"],\"alimento\":[\"italian\"],\"allagato\":[\"italian\"],\"allegro\":[\"italian\"],\"allievo\":[\"italian\"],\"allodola\":[\"italian\"],\"allusivo\":[\"italian\"],\"almeno\":[\"italian\"],\"alogeno\":[\"italian\"],\"alpaca\":[\"italian\"],\"alpestre\":[\"italian\"],\"altalena\":[\"italian\"],\"alterno\":[\"italian\"],\"alticcio\":[\"italian\"],\"altrove\":[\"italian\"],\"alunno\":[\"italian\"],\"alveolo\":[\"italian\"],\"alzare\":[\"italian\"],\"amalgama\":[\"italian\"],\"amanita\":[\"italian\"],\"amarena\":[\"italian\"],\"ambito\":[\"italian\"],\"ambrato\":[\"italian\"],\"ameba\":[\"italian\"],\"america\":[\"italian\"],\"ametista\":[\"italian\"],\"amico\":[\"italian\"],\"ammasso\":[\"italian\"],\"ammenda\":[\"italian\"],\"ammirare\":[\"italian\"],\"ammonito\":[\"italian\"],\"amore\":[\"italian\"],\"ampio\":[\"italian\"],\"ampliare\":[\"italian\"],\"amuleto\":[\"italian\"],\"anacardo\":[\"italian\"],\"anagrafe\":[\"italian\"],\"analista\":[\"italian\"],\"anarchia\":[\"italian\"],\"anatra\":[\"italian\"],\"anca\":[\"italian\"],\"ancella\":[\"italian\"],\"ancora\":[\"italian\"],\"andare\":[\"italian\"],\"andrea\":[\"italian\"],\"anello\":[\"italian\"],\"angelo\":[\"italian\"],\"angolare\":[\"italian\"],\"angusto\":[\"italian\"],\"anima\":[\"italian\"],\"annegare\":[\"italian\"],\"annidato\":[\"italian\"],\"anno\":[\"italian\"],\"annuncio\":[\"italian\"],\"anonimo\":[\"italian\"],\"anticipo\":[\"italian\"],\"anzi\":[\"italian\"],\"apatico\":[\"italian\"],\"apertura\":[\"italian\"],\"apode\":[\"italian\"],\"apparire\":[\"italian\"],\"appetito\":[\"italian\"],\"appoggio\":[\"italian\"],\"approdo\":[\"italian\"],\"appunto\":[\"italian\"],\"aprile\":[\"italian\"],\"arabica\":[\"italian\"],\"arachide\":[\"italian\"],\"aragosta\":[\"italian\"],\"araldica\":[\"italian\"],\"arancio\":[\"italian\"],\"aratura\":[\"italian\"],\"arazzo\":[\"italian\"],\"arbitro\":[\"italian\"],\"archivio\":[\"italian\"],\"ardito\":[\"italian\"],\"arenile\":[\"italian\"],\"argento\":[\"italian\"],\"argine\":[\"italian\"],\"arguto\":[\"italian\"],\"aria\":[\"italian\"],\"armonia\":[\"italian\"],\"arnese\":[\"italian\"],\"arredato\":[\"italian\"],\"arringa\":[\"italian\"],\"arrosto\":[\"italian\"],\"arsenico\":[\"italian\"],\"arso\":[\"italian\"],\"artefice\":[\"italian\"],\"arzillo\":[\"italian\"],\"asciutto\":[\"italian\"],\"ascolto\":[\"italian\"],\"asepsi\":[\"italian\"],\"asettico\":[\"italian\"],\"asfalto\":[\"italian\"],\"asino\":[\"italian\"],\"asola\":[\"italian\"],\"aspirato\":[\"italian\"],\"aspro\":[\"italian\"],\"assaggio\":[\"italian\"],\"asse\":[\"italian\"],\"assoluto\":[\"italian\"],\"assurdo\":[\"italian\"],\"asta\":[\"italian\"],\"astenuto\":[\"italian\"],\"astice\":[\"italian\"],\"astratto\":[\"italian\"],\"atavico\":[\"italian\"],\"ateismo\":[\"italian\"],\"atomico\":[\"italian\"],\"atono\":[\"italian\"],\"attesa\":[\"italian\"],\"attivare\":[\"italian\"],\"attorno\":[\"italian\"],\"attrito\":[\"italian\"],\"attuale\":[\"italian\"],\"ausilio\":[\"italian\"],\"austria\":[\"italian\"],\"autista\":[\"italian\"],\"autonomo\":[\"italian\"],\"autunno\":[\"italian\"],\"avanzato\":[\"italian\"],\"avere\":[\"italian\"],\"avvenire\":[\"italian\"],\"avviso\":[\"italian\"],\"avvolgere\":[\"italian\"],\"azione\":[\"italian\"],\"azoto\":[\"italian\"],\"azzimo\":[\"italian\"],\"azzurro\":[\"italian\"],\"babele\":[\"italian\"],\"baccano\":[\"italian\"],\"bacino\":[\"italian\"],\"baco\":[\"italian\"],\"badessa\":[\"italian\"],\"badilata\":[\"italian\"],\"bagnato\":[\"italian\"],\"baita\":[\"italian\"],\"balcone\":[\"italian\"],\"baldo\":[\"italian\"],\"balena\":[\"italian\"],\"ballata\":[\"italian\"],\"balzano\":[\"italian\"],\"bambino\":[\"italian\"],\"bandire\":[\"italian\"],\"baraonda\":[\"italian\"],\"barbaro\":[\"italian\"],\"barca\":[\"italian\"],\"baritono\":[\"italian\"],\"barlume\":[\"italian\"],\"barocco\":[\"italian\"],\"basilico\":[\"italian\"],\"basso\":[\"italian\"],\"batosta\":[\"italian\"],\"battuto\":[\"italian\"],\"baule\":[\"italian\"],\"bava\":[\"italian\"],\"bavosa\":[\"italian\"],\"becco\":[\"italian\"],\"beffa\":[\"italian\"],\"belgio\":[\"italian\"],\"belva\":[\"italian\"],\"benda\":[\"italian\"],\"benevole\":[\"italian\"],\"benigno\":[\"italian\"],\"benzina\":[\"italian\"],\"bere\":[\"italian\"],\"berlina\":[\"italian\"],\"beta\":[\"italian\"],\"bibita\":[\"italian\"],\"bici\":[\"italian\"],\"bidone\":[\"italian\"],\"bifido\":[\"italian\"],\"biga\":[\"italian\"],\"bilancia\":[\"italian\"],\"bimbo\":[\"italian\"],\"binocolo\":[\"italian\"],\"biologo\":[\"italian\"],\"bipede\":[\"italian\"],\"bipolare\":[\"italian\"],\"birbante\":[\"italian\"],\"birra\":[\"italian\"],\"biscotto\":[\"italian\"],\"bisesto\":[\"italian\"],\"bisnonno\":[\"italian\"],\"bisonte\":[\"italian\"],\"bisturi\":[\"italian\"],\"bizzarro\":[\"italian\"],\"blando\":[\"italian\"],\"blatta\":[\"italian\"],\"bollito\":[\"italian\"],\"bonifico\":[\"italian\"],\"bordo\":[\"italian\"],\"bosco\":[\"italian\"],\"botanico\":[\"italian\"],\"bottino\":[\"italian\"],\"bozzolo\":[\"italian\"],\"braccio\":[\"italian\"],\"bradipo\":[\"italian\"],\"brama\":[\"italian\"],\"branca\":[\"italian\"],\"bravura\":[\"italian\"],\"bretella\":[\"italian\"],\"brevetto\":[\"italian\"],\"brezza\":[\"italian\"],\"briglia\":[\"italian\"],\"brillante\":[\"italian\"],\"brindare\":[\"italian\"],\"broccolo\":[\"italian\"],\"brodo\":[\"italian\"],\"bronzina\":[\"italian\"],\"brullo\":[\"italian\"],\"bruno\":[\"italian\"],\"bubbone\":[\"italian\"],\"buca\":[\"italian\"],\"budino\":[\"italian\"],\"buffone\":[\"italian\"],\"buio\":[\"italian\"],\"bulbo\":[\"italian\"],\"buono\":[\"italian\"],\"burlone\":[\"italian\"],\"burrasca\":[\"italian\"],\"bussola\":[\"italian\"],\"busta\":[\"italian\"],\"cadetto\":[\"italian\"],\"caduco\":[\"italian\"],\"calamaro\":[\"italian\"],\"calcolo\":[\"italian\"],\"calesse\":[\"italian\"],\"calibro\":[\"italian\"],\"calmo\":[\"italian\"],\"caloria\":[\"italian\"],\"cambusa\":[\"italian\"],\"camerata\":[\"italian\"],\"camicia\":[\"italian\"],\"cammino\":[\"italian\"],\"camola\":[\"italian\"],\"campale\":[\"italian\"],\"canapa\":[\"italian\"],\"candela\":[\"italian\"],\"cane\":[\"italian\"],\"canino\":[\"italian\"],\"canotto\":[\"italian\"],\"cantina\":[\"italian\"],\"capace\":[\"italian\"],\"capello\":[\"italian\"],\"capitolo\":[\"italian\"],\"capogiro\":[\"italian\"],\"cappero\":[\"italian\"],\"capra\":[\"italian\"],\"capsula\":[\"italian\"],\"carapace\":[\"italian\"],\"carcassa\":[\"italian\"],\"cardo\":[\"italian\"],\"carisma\":[\"italian\"],\"carovana\":[\"italian\"],\"carretto\":[\"italian\"],\"cartolina\":[\"italian\"],\"casaccio\":[\"italian\"],\"cascata\":[\"italian\"],\"caserma\":[\"italian\"],\"caso\":[\"italian\"],\"cassone\":[\"italian\"],\"castello\":[\"italian\"],\"casuale\":[\"italian\"],\"catasta\":[\"italian\"],\"catena\":[\"italian\"],\"catrame\":[\"italian\"],\"cauto\":[\"italian\"],\"cavillo\":[\"italian\"],\"cedibile\":[\"italian\"],\"cedrata\":[\"italian\"],\"cefalo\":[\"italian\"],\"celebre\":[\"italian\"],\"cellulare\":[\"italian\"],\"cena\":[\"italian\"],\"cenone\":[\"italian\"],\"centesimo\":[\"italian\"],\"ceramica\":[\"italian\"],\"cercare\":[\"italian\"],\"certo\":[\"italian\"],\"cerume\":[\"italian\"],\"cervello\":[\"italian\"],\"cesoia\":[\"italian\"],\"cespo\":[\"italian\"],\"ceto\":[\"italian\"],\"chela\":[\"italian\"],\"chiaro\":[\"italian\"],\"chicca\":[\"italian\"],\"chiedere\":[\"italian\"],\"chimera\":[\"italian\"],\"china\":[\"italian\"],\"chirurgo\":[\"italian\"],\"chitarra\":[\"italian\"],\"ciao\":[\"italian\"],\"ciclismo\":[\"italian\"],\"cifrare\":[\"italian\"],\"cigno\":[\"italian\"],\"cilindro\":[\"italian\"],\"ciottolo\":[\"italian\"],\"circa\":[\"italian\"],\"cirrosi\":[\"italian\"],\"citrico\":[\"italian\"],\"cittadino\":[\"italian\"],\"ciuffo\":[\"italian\"],\"civetta\":[\"italian\"],\"civile\":[\"italian\"],\"classico\":[\"italian\"],\"clinica\":[\"italian\"],\"cloro\":[\"italian\"],\"cocco\":[\"italian\"],\"codardo\":[\"italian\"],\"codice\":[\"italian\"],\"coerente\":[\"italian\"],\"cognome\":[\"italian\"],\"collare\":[\"italian\"],\"colmato\":[\"italian\"],\"colore\":[\"italian\"],\"colposo\":[\"italian\"],\"coltivato\":[\"italian\"],\"colza\":[\"italian\"],\"coma\":[\"italian\"],\"cometa\":[\"italian\"],\"commando\":[\"italian\"],\"comodo\":[\"italian\"],\"computer\":[\"italian\"],\"comune\":[\"italian\"],\"conciso\":[\"italian\"],\"condurre\":[\"italian\"],\"conferma\":[\"italian\"],\"congelare\":[\"italian\"],\"coniuge\":[\"italian\"],\"connesso\":[\"italian\"],\"conoscere\":[\"italian\"],\"consumo\":[\"italian\"],\"continuo\":[\"italian\"],\"convegno\":[\"italian\"],\"coperto\":[\"italian\"],\"copione\":[\"italian\"],\"coppia\":[\"italian\"],\"copricapo\":[\"italian\"],\"corazza\":[\"italian\"],\"cordata\":[\"italian\"],\"coricato\":[\"italian\"],\"cornice\":[\"italian\"],\"corolla\":[\"italian\"],\"corpo\":[\"italian\"],\"corredo\":[\"italian\"],\"corsia\":[\"italian\"],\"cortese\":[\"italian\"],\"cosmico\":[\"italian\"],\"costante\":[\"italian\"],\"cottura\":[\"italian\"],\"covato\":[\"italian\"],\"cratere\":[\"italian\"],\"cravatta\":[\"italian\"],\"creato\":[\"italian\"],\"credere\":[\"italian\"],\"cremoso\":[\"italian\"],\"crescita\":[\"italian\"],\"creta\":[\"italian\"],\"criceto\":[\"italian\"],\"crinale\":[\"italian\"],\"crisi\":[\"italian\"],\"critico\":[\"italian\"],\"croce\":[\"italian\"],\"cronaca\":[\"italian\"],\"crostata\":[\"italian\"],\"cruciale\":[\"italian\"],\"crusca\":[\"italian\"],\"cucire\":[\"italian\"],\"cuculo\":[\"italian\"],\"cugino\":[\"italian\"],\"cullato\":[\"italian\"],\"cupola\":[\"italian\"],\"curatore\":[\"italian\"],\"cursore\":[\"italian\"],\"curvo\":[\"italian\"],\"cuscino\":[\"italian\"],\"custode\":[\"italian\"],\"dado\":[\"italian\"],\"daino\":[\"italian\"],\"dalmata\":[\"italian\"],\"damerino\":[\"italian\"],\"daniela\":[\"italian\"],\"dannoso\":[\"italian\"],\"danzare\":[\"italian\"],\"datato\":[\"italian\"],\"davanti\":[\"italian\"],\"davvero\":[\"italian\"],\"debutto\":[\"italian\"],\"decennio\":[\"italian\"],\"deciso\":[\"italian\"],\"declino\":[\"italian\"],\"decollo\":[\"italian\"],\"decreto\":[\"italian\"],\"dedicato\":[\"italian\"],\"definito\":[\"italian\"],\"deforme\":[\"italian\"],\"degno\":[\"italian\"],\"delegare\":[\"italian\"],\"delfino\":[\"italian\"],\"delirio\":[\"italian\"],\"delta\":[\"italian\"],\"demenza\":[\"italian\"],\"denotato\":[\"italian\"],\"dentro\":[\"italian\"],\"deposito\":[\"italian\"],\"derapata\":[\"italian\"],\"derivare\":[\"italian\"],\"deroga\":[\"italian\"],\"descritto\":[\"italian\"],\"deserto\":[\"italian\"],\"desiderio\":[\"italian\"],\"desumere\":[\"italian\"],\"detersivo\":[\"italian\"],\"devoto\":[\"italian\"],\"diametro\":[\"italian\"],\"dicembre\":[\"italian\"],\"diedro\":[\"italian\"],\"difeso\":[\"italian\"],\"diffuso\":[\"italian\"],\"digerire\":[\"italian\"],\"digitale\":[\"italian\"],\"diluvio\":[\"italian\"],\"dinamico\":[\"italian\"],\"dinnanzi\":[\"italian\"],\"dipinto\":[\"italian\"],\"diploma\":[\"italian\"],\"dipolo\":[\"italian\"],\"diradare\":[\"italian\"],\"dire\":[\"italian\"],\"dirotto\":[\"italian\"],\"dirupo\":[\"italian\"],\"disagio\":[\"italian\"],\"discreto\":[\"italian\"],\"disfare\":[\"italian\"],\"disgelo\":[\"italian\"],\"disposto\":[\"italian\"],\"distanza\":[\"italian\"],\"disumano\":[\"italian\"],\"dito\":[\"italian\"],\"divano\":[\"italian\"],\"divelto\":[\"italian\"],\"dividere\":[\"italian\"],\"divorato\":[\"italian\"],\"doblone\":[\"italian\"],\"docente\":[\"italian\"],\"doganale\":[\"italian\"],\"dogma\":[\"italian\"],\"dolce\":[\"italian\"],\"domato\":[\"italian\"],\"domenica\":[\"italian\"],\"dominare\":[\"italian\"],\"dondolo\":[\"italian\"],\"dono\":[\"italian\"],\"dormire\":[\"italian\"],\"dote\":[\"italian\"],\"dottore\":[\"italian\"],\"dovuto\":[\"italian\"],\"dozzina\":[\"italian\"],\"drago\":[\"italian\"],\"druido\":[\"italian\"],\"dubbio\":[\"italian\"],\"dubitare\":[\"italian\"],\"ducale\":[\"italian\"],\"duna\":[\"italian\"],\"duomo\":[\"italian\"],\"duplice\":[\"italian\"],\"duraturo\":[\"italian\"],\"ebano\":[\"italian\"],\"eccesso\":[\"italian\"],\"ecco\":[\"italian\"],\"eclissi\":[\"italian\"],\"economia\":[\"italian\"],\"edera\":[\"italian\"],\"edicola\":[\"italian\"],\"edile\":[\"italian\"],\"editoria\":[\"italian\"],\"educare\":[\"italian\"],\"egemonia\":[\"italian\"],\"egli\":[\"italian\"],\"egoismo\":[\"italian\"],\"egregio\":[\"italian\"],\"elaborato\":[\"italian\"],\"elargire\":[\"italian\"],\"elegante\":[\"italian\"],\"elencato\":[\"italian\"],\"eletto\":[\"italian\"],\"elevare\":[\"italian\"],\"elfico\":[\"italian\"],\"elica\":[\"italian\"],\"elmo\":[\"italian\"],\"elsa\":[\"italian\"],\"eluso\":[\"italian\"],\"emanato\":[\"italian\"],\"emblema\":[\"italian\"],\"emesso\":[\"italian\"],\"emiro\":[\"italian\"],\"emotivo\":[\"italian\"],\"emozione\":[\"italian\"],\"empirico\":[\"italian\"],\"emulo\":[\"italian\"],\"endemico\":[\"italian\"],\"enduro\":[\"italian\"],\"energia\":[\"italian\"],\"enfasi\":[\"italian\"],\"enoteca\":[\"italian\"],\"entrare\":[\"italian\"],\"enzima\":[\"italian\"],\"epatite\":[\"italian\"],\"epilogo\":[\"italian\"],\"episodio\":[\"italian\"],\"epocale\":[\"italian\"],\"eppure\":[\"italian\"],\"equatore\":[\"italian\"],\"erario\":[\"italian\"],\"erba\":[\"italian\"],\"erboso\":[\"italian\"],\"erede\":[\"italian\"],\"eremita\":[\"italian\"],\"erigere\":[\"italian\"],\"ermetico\":[\"italian\"],\"eroe\":[\"italian\"],\"erosivo\":[\"italian\"],\"errante\":[\"italian\"],\"esagono\":[\"italian\"],\"esame\":[\"italian\"],\"esanime\":[\"italian\"],\"esaudire\":[\"italian\"],\"esca\":[\"italian\"],\"esempio\":[\"italian\"],\"esercito\":[\"italian\"],\"esibito\":[\"italian\"],\"esigente\":[\"italian\"],\"esistere\":[\"italian\"],\"esito\":[\"italian\"],\"esofago\":[\"italian\"],\"esortato\":[\"italian\"],\"esoso\":[\"italian\"],\"espanso\":[\"italian\"],\"espresso\":[\"italian\"],\"essenza\":[\"italian\"],\"esso\":[\"italian\"],\"esteso\":[\"italian\"],\"estimare\":[\"italian\"],\"estonia\":[\"italian\"],\"estroso\":[\"italian\"],\"esultare\":[\"italian\"],\"etilico\":[\"italian\"],\"etnico\":[\"italian\"],\"etrusco\":[\"italian\"],\"etto\":[\"italian\"],\"euclideo\":[\"italian\"],\"europa\":[\"italian\"],\"evaso\":[\"italian\"],\"evidenza\":[\"italian\"],\"evitato\":[\"italian\"],\"evoluto\":[\"italian\"],\"evviva\":[\"italian\"],\"fabbrica\":[\"italian\"],\"faccenda\":[\"italian\"],\"fachiro\":[\"italian\"],\"falco\":[\"italian\"],\"famiglia\":[\"italian\"],\"fanale\":[\"italian\"],\"fanfara\":[\"italian\"],\"fango\":[\"italian\"],\"fantasma\":[\"italian\"],\"fare\":[\"italian\"],\"farfalla\":[\"italian\"],\"farinoso\":[\"italian\"],\"farmaco\":[\"italian\"],\"fascia\":[\"italian\"],\"fastoso\":[\"italian\"],\"fasullo\":[\"italian\"],\"faticare\":[\"italian\"],\"fato\":[\"italian\"],\"favoloso\":[\"italian\"],\"febbre\":[\"italian\"],\"fecola\":[\"italian\"],\"fede\":[\"italian\"],\"fegato\":[\"italian\"],\"felpa\":[\"italian\"],\"feltro\":[\"italian\"],\"femmina\":[\"italian\"],\"fendere\":[\"italian\"],\"fenomeno\":[\"italian\"],\"fermento\":[\"italian\"],\"ferro\":[\"italian\"],\"fertile\":[\"italian\"],\"fessura\":[\"italian\"],\"festivo\":[\"italian\"],\"fetta\":[\"italian\"],\"feudo\":[\"italian\"],\"fiaba\":[\"italian\"],\"fiducia\":[\"italian\"],\"fifa\":[\"italian\"],\"figurato\":[\"italian\"],\"filo\":[\"italian\",\"turkish\"],\"finanza\":[\"italian\"],\"finestra\":[\"italian\"],\"finire\":[\"italian\"],\"fiore\":[\"italian\"],\"fiscale\":[\"italian\"],\"fisico\":[\"italian\"],\"fiume\":[\"italian\"],\"flacone\":[\"italian\"],\"flamenco\":[\"italian\"],\"flebo\":[\"italian\"],\"flemma\":[\"italian\"],\"florido\":[\"italian\"],\"fluente\":[\"italian\"],\"fluoro\":[\"italian\"],\"fobico\":[\"italian\"],\"focaccia\":[\"italian\"],\"focoso\":[\"italian\"],\"foderato\":[\"italian\"],\"foglio\":[\"italian\"],\"folata\":[\"italian\"],\"folclore\":[\"italian\"],\"folgore\":[\"italian\"],\"fondente\":[\"italian\"],\"fonetico\":[\"italian\"],\"fonia\":[\"italian\"],\"fontana\":[\"italian\"],\"forbito\":[\"italian\"],\"forchetta\":[\"italian\"],\"foresta\":[\"italian\"],\"formica\":[\"italian\"],\"fornaio\":[\"italian\"],\"foro\":[\"italian\"],\"fortezza\":[\"italian\"],\"forzare\":[\"italian\"],\"fosfato\":[\"italian\"],\"fosso\":[\"italian\"],\"fracasso\":[\"italian\"],\"frana\":[\"italian\"],\"frassino\":[\"italian\"],\"fratello\":[\"italian\"],\"freccetta\":[\"italian\"],\"frenata\":[\"italian\"],\"fresco\":[\"italian\"],\"frigo\":[\"italian\"],\"frollino\":[\"italian\"],\"fronde\":[\"italian\"],\"frugale\":[\"italian\"],\"frutta\":[\"italian\"],\"fucilata\":[\"italian\"],\"fucsia\":[\"italian\"],\"fuggente\":[\"italian\"],\"fulmine\":[\"italian\"],\"fulvo\":[\"italian\"],\"fumante\":[\"italian\"],\"fumetto\":[\"italian\"],\"fumoso\":[\"italian\"],\"fune\":[\"italian\"],\"funzione\":[\"italian\"],\"fuoco\":[\"italian\"],\"furbo\":[\"italian\"],\"furgone\":[\"italian\"],\"furore\":[\"italian\"],\"fuso\":[\"italian\"],\"futile\":[\"italian\"],\"gabbiano\":[\"italian\"],\"gaffe\":[\"italian\"],\"galateo\":[\"italian\"],\"gallina\":[\"italian\"],\"galoppo\":[\"italian\"],\"gambero\":[\"italian\"],\"gamma\":[\"italian\"],\"garanzia\":[\"italian\"],\"garbo\":[\"italian\"],\"garofano\":[\"italian\"],\"garzone\":[\"italian\"],\"gasdotto\":[\"italian\"],\"gasolio\":[\"italian\"],\"gastrico\":[\"italian\"],\"gatto\":[\"italian\"],\"gaudio\":[\"italian\"],\"gazebo\":[\"italian\"],\"gazzella\":[\"italian\"],\"geco\":[\"italian\"],\"gelatina\":[\"italian\"],\"gelso\":[\"italian\"],\"gemello\":[\"italian\"],\"gemmato\":[\"italian\"],\"gene\":[\"italian\"],\"genitore\":[\"italian\"],\"gennaio\":[\"italian\"],\"genotipo\":[\"italian\"],\"gergo\":[\"italian\"],\"ghepardo\":[\"italian\"],\"ghiaccio\":[\"italian\"],\"ghisa\":[\"italian\"],\"giallo\":[\"italian\"],\"gilda\":[\"italian\"],\"ginepro\":[\"italian\"],\"giocare\":[\"italian\"],\"gioiello\":[\"italian\"],\"giorno\":[\"italian\"],\"giove\":[\"italian\"],\"girato\":[\"italian\"],\"girone\":[\"italian\"],\"gittata\":[\"italian\"],\"giudizio\":[\"italian\"],\"giurato\":[\"italian\"],\"giusto\":[\"italian\"],\"globulo\":[\"italian\"],\"glutine\":[\"italian\"],\"gnomo\":[\"italian\"],\"gobba\":[\"italian\"],\"golf\":[\"italian\"],\"gomito\":[\"italian\"],\"gommone\":[\"italian\"],\"gonfio\":[\"italian\"],\"gonna\":[\"italian\"],\"governo\":[\"italian\"],\"gracile\":[\"italian\"],\"grado\":[\"italian\"],\"grafico\":[\"italian\"],\"grammo\":[\"italian\"],\"grande\":[\"italian\"],\"grattare\":[\"italian\"],\"gravoso\":[\"italian\"],\"grazia\":[\"italian\"],\"greca\":[\"italian\"],\"gregge\":[\"italian\"],\"grifone\":[\"italian\"],\"grigio\":[\"italian\"],\"grinza\":[\"italian\"],\"grotta\":[\"italian\"],\"gruppo\":[\"italian\"],\"guadagno\":[\"italian\"],\"guaio\":[\"italian\"],\"guanto\":[\"italian\"],\"guardare\":[\"italian\"],\"gufo\":[\"italian\"],\"guidare\":[\"italian\"],\"ibernato\":[\"italian\"],\"icona\":[\"italian\"],\"identico\":[\"italian\"],\"idillio\":[\"italian\"],\"idolo\":[\"italian\"],\"idra\":[\"italian\"],\"idrico\":[\"italian\"],\"idrogeno\":[\"italian\"],\"igiene\":[\"italian\"],\"ignaro\":[\"italian\"],\"ignorato\":[\"italian\"],\"ilare\":[\"italian\"],\"illeso\":[\"italian\"],\"illogico\":[\"italian\"],\"illudere\":[\"italian\"],\"imballo\":[\"italian\"],\"imbevuto\":[\"italian\"],\"imbocco\":[\"italian\"],\"imbuto\":[\"italian\"],\"immane\":[\"italian\"],\"immerso\":[\"italian\"],\"immolato\":[\"italian\"],\"impacco\":[\"italian\"],\"impeto\":[\"italian\"],\"impiego\":[\"italian\"],\"importo\":[\"italian\"],\"impronta\":[\"italian\"],\"inalare\":[\"italian\"],\"inarcare\":[\"italian\"],\"inattivo\":[\"italian\"],\"incanto\":[\"italian\"],\"incendio\":[\"italian\"],\"inchino\":[\"italian\"],\"incisivo\":[\"italian\"],\"incluso\":[\"italian\"],\"incontro\":[\"italian\"],\"incrocio\":[\"italian\"],\"incubo\":[\"italian\"],\"indagine\":[\"italian\"],\"india\":[\"italian\"],\"indole\":[\"italian\"],\"inedito\":[\"italian\"],\"infatti\":[\"italian\"],\"infilare\":[\"italian\"],\"inflitto\":[\"italian\"],\"ingaggio\":[\"italian\"],\"ingegno\":[\"italian\"],\"inglese\":[\"italian\"],\"ingordo\":[\"italian\"],\"ingrosso\":[\"italian\"],\"innesco\":[\"italian\"],\"inodore\":[\"italian\"],\"inoltrare\":[\"italian\"],\"inondato\":[\"italian\"],\"insano\":[\"italian\"],\"insetto\":[\"italian\"],\"insieme\":[\"italian\"],\"insonnia\":[\"italian\"],\"insulina\":[\"italian\"],\"intasato\":[\"italian\"],\"intero\":[\"italian\"],\"intonaco\":[\"italian\"],\"intuito\":[\"italian\"],\"inumidire\":[\"italian\"],\"invalido\":[\"italian\"],\"invece\":[\"italian\"],\"invito\":[\"italian\"],\"iperbole\":[\"italian\"],\"ipnotico\":[\"italian\"],\"ipotesi\":[\"italian\"],\"ippica\":[\"italian\"],\"iride\":[\"italian\"],\"irlanda\":[\"italian\"],\"ironico\":[\"italian\"],\"irrigato\":[\"italian\"],\"irrorare\":[\"italian\"],\"isolato\":[\"italian\"],\"isotopo\":[\"italian\"],\"isterico\":[\"italian\"],\"istituto\":[\"italian\"],\"istrice\":[\"italian\"],\"italia\":[\"italian\"],\"iterare\":[\"italian\"],\"labbro\":[\"italian\"],\"labirinto\":[\"italian\"],\"lacca\":[\"italian\"],\"lacerato\":[\"italian\"],\"lacrima\":[\"italian\"],\"lacuna\":[\"italian\"],\"laddove\":[\"italian\"],\"lago\":[\"italian\"],\"lampo\":[\"italian\"],\"lancetta\":[\"italian\"],\"lanterna\":[\"italian\"],\"lardoso\":[\"italian\"],\"larga\":[\"italian\"],\"laringe\":[\"italian\"],\"lastra\":[\"italian\"],\"latenza\":[\"italian\"],\"latino\":[\"italian\"],\"lattuga\":[\"italian\"],\"lavagna\":[\"italian\"],\"lavoro\":[\"italian\"],\"legale\":[\"italian\"],\"leggero\":[\"italian\"],\"lembo\":[\"italian\"],\"lentezza\":[\"italian\"],\"lenza\":[\"italian\"],\"leone\":[\"italian\"],\"lepre\":[\"italian\"],\"lesivo\":[\"italian\"],\"lessato\":[\"italian\"],\"lesto\":[\"italian\"],\"letterale\":[\"italian\"],\"leva\":[\"italian\"],\"levigato\":[\"italian\"],\"libero\":[\"italian\"],\"lido\":[\"italian\"],\"lievito\":[\"italian\"],\"lilla\":[\"italian\"],\"limatura\":[\"italian\"],\"limitare\":[\"italian\"],\"limpido\":[\"italian\"],\"lineare\":[\"italian\"],\"lingua\":[\"italian\"],\"liquido\":[\"italian\"],\"lira\":[\"italian\"],\"lirica\":[\"italian\"],\"lisca\":[\"italian\"],\"lite\":[\"italian\"],\"litigio\":[\"italian\"],\"livrea\":[\"italian\"],\"locanda\":[\"italian\"],\"lode\":[\"italian\"],\"logica\":[\"italian\"],\"lombare\":[\"italian\"],\"londra\":[\"italian\"],\"longevo\":[\"italian\"],\"loquace\":[\"italian\"],\"lorenzo\":[\"italian\"],\"loto\":[\"italian\"],\"lotteria\":[\"italian\"],\"luce\":[\"italian\"],\"lucidato\":[\"italian\"],\"lumaca\":[\"italian\"],\"luminoso\":[\"italian\"],\"lungo\":[\"italian\"],\"lupo\":[\"italian\"],\"luppolo\":[\"italian\"],\"lusinga\":[\"italian\"],\"lusso\":[\"italian\"],\"lutto\":[\"italian\"],\"macabro\":[\"italian\"],\"macchina\":[\"italian\"],\"macero\":[\"italian\"],\"macinato\":[\"italian\"],\"madama\":[\"italian\"],\"magico\":[\"italian\"],\"maglia\":[\"italian\"],\"magnete\":[\"italian\"],\"magro\":[\"italian\"],\"maiolica\":[\"italian\"],\"malafede\":[\"italian\"],\"malgrado\":[\"italian\"],\"malinteso\":[\"italian\"],\"malsano\":[\"italian\"],\"malto\":[\"italian\"],\"malumore\":[\"italian\"],\"mana\":[\"italian\"],\"mancia\":[\"italian\"],\"mandorla\":[\"italian\"],\"mangiare\":[\"italian\"],\"manifesto\":[\"italian\"],\"mannaro\":[\"italian\"],\"manovra\":[\"italian\"],\"mansarda\":[\"italian\"],\"mantide\":[\"italian\"],\"manubrio\":[\"italian\"],\"mappa\":[\"italian\"],\"maratona\":[\"italian\"],\"marcire\":[\"italian\"],\"maretta\":[\"italian\"],\"marmo\":[\"italian\"],\"marsupio\":[\"italian\"],\"maschera\":[\"italian\"],\"massaia\":[\"italian\"],\"mastino\":[\"italian\"],\"materasso\":[\"italian\"],\"matricola\":[\"italian\"],\"mattone\":[\"italian\"],\"maturo\":[\"italian\"],\"mazurca\":[\"italian\"],\"meandro\":[\"italian\"],\"meccanico\":[\"italian\"],\"mecenate\":[\"italian\"],\"medesimo\":[\"italian\"],\"meditare\":[\"italian\"],\"mega\":[\"italian\"],\"melassa\":[\"italian\"],\"melis\":[\"italian\"],\"melodia\":[\"italian\"],\"meninge\":[\"italian\"],\"meno\":[\"italian\"],\"mensola\":[\"italian\"],\"mercurio\":[\"italian\"],\"merenda\":[\"italian\"],\"merlo\":[\"italian\"],\"meschino\":[\"italian\"],\"mese\":[\"italian\"],\"messere\":[\"italian\"],\"mestolo\":[\"italian\"],\"metallo\":[\"italian\"],\"metodo\":[\"italian\"],\"mettere\":[\"italian\"],\"miagolare\":[\"italian\"],\"mica\":[\"italian\"],\"micelio\":[\"italian\"],\"michele\":[\"italian\"],\"microbo\":[\"italian\"],\"midollo\":[\"italian\"],\"miele\":[\"italian\"],\"migliore\":[\"italian\"],\"milano\":[\"italian\"],\"milite\":[\"italian\"],\"mimosa\":[\"italian\"],\"minerale\":[\"italian\"],\"mini\":[\"italian\"],\"minore\":[\"italian\"],\"mirino\":[\"italian\"],\"mirtillo\":[\"italian\"],\"miscela\":[\"italian\"],\"missiva\":[\"italian\"],\"misto\":[\"italian\"],\"misurare\":[\"italian\"],\"mitezza\":[\"italian\"],\"mitigare\":[\"italian\"],\"mitra\":[\"italian\"],\"mittente\":[\"italian\"],\"mnemonico\":[\"italian\"],\"modello\":[\"italian\"],\"modifica\":[\"italian\"],\"modulo\":[\"italian\"],\"mogano\":[\"italian\"],\"mogio\":[\"italian\"],\"mole\":[\"italian\"],\"molosso\":[\"italian\"],\"monastero\":[\"italian\"],\"monco\":[\"italian\"],\"mondina\":[\"italian\"],\"monetario\":[\"italian\"],\"monile\":[\"italian\"],\"monotono\":[\"italian\"],\"monsone\":[\"italian\"],\"montato\":[\"italian\"],\"monviso\":[\"italian\"],\"mora\":[\"italian\"],\"mordere\":[\"italian\"],\"morsicato\":[\"italian\"],\"mostro\":[\"italian\"],\"motivato\":[\"italian\"],\"motosega\":[\"italian\"],\"motto\":[\"italian\"],\"movenza\":[\"italian\"],\"movimento\":[\"italian\"],\"mozzo\":[\"italian\"],\"mucca\":[\"italian\"],\"mucosa\":[\"italian\"],\"muffa\":[\"italian\"],\"mughetto\":[\"italian\"],\"mugnaio\":[\"italian\"],\"mulatto\":[\"italian\"],\"mulinello\":[\"italian\"],\"multiplo\":[\"italian\"],\"mummia\":[\"italian\"],\"munto\":[\"italian\"],\"muovere\":[\"italian\"],\"murale\":[\"italian\"],\"musa\":[\"italian\"],\"muscolo\":[\"italian\"],\"musica\":[\"italian\"],\"mutevole\":[\"italian\"],\"muto\":[\"italian\"],\"nababbo\":[\"italian\"],\"nafta\":[\"italian\"],\"nanometro\":[\"italian\"],\"narciso\":[\"italian\"],\"narice\":[\"italian\"],\"narrato\":[\"italian\"],\"nascere\":[\"italian\"],\"nastrare\":[\"italian\"],\"naturale\":[\"italian\"],\"nautica\":[\"italian\"],\"naviglio\":[\"italian\"],\"nebulosa\":[\"italian\"],\"necrosi\":[\"italian\"],\"negativo\":[\"italian\"],\"negozio\":[\"italian\"],\"nemmeno\":[\"italian\"],\"neofita\":[\"italian\"],\"neretto\":[\"italian\"],\"nervo\":[\"italian\"],\"nessuno\":[\"italian\"],\"nettuno\":[\"italian\"],\"neutrale\":[\"italian\"],\"neve\":[\"italian\"],\"nevrotico\":[\"italian\"],\"nicchia\":[\"italian\"],\"ninfa\":[\"italian\"],\"nitido\":[\"italian\"],\"nobile\":[\"italian\"],\"nocivo\":[\"italian\"],\"nodo\":[\"italian\"],\"nome\":[\"italian\"],\"nomina\":[\"italian\"],\"nordico\":[\"italian\"],\"normale\":[\"italian\"],\"norvegese\":[\"italian\"],\"nostrano\":[\"italian\"],\"notare\":[\"italian\"],\"notizia\":[\"italian\"],\"notturno\":[\"italian\"],\"novella\":[\"italian\"],\"nucleo\":[\"italian\"],\"nulla\":[\"italian\"],\"numero\":[\"italian\"],\"nuovo\":[\"italian\"],\"nutrire\":[\"italian\"],\"nuvola\":[\"italian\"],\"nuziale\":[\"italian\"],\"oasi\":[\"italian\"],\"obbedire\":[\"italian\"],\"obbligo\":[\"italian\"],\"obelisco\":[\"italian\"],\"oblio\":[\"italian\"],\"obolo\":[\"italian\"],\"obsoleto\":[\"italian\"],\"occasione\":[\"italian\"],\"occhio\":[\"italian\"],\"occidente\":[\"italian\"],\"occorrere\":[\"italian\"],\"occultare\":[\"italian\"],\"ocra\":[\"italian\"],\"oculato\":[\"italian\"],\"odierno\":[\"italian\"],\"odorare\":[\"italian\"],\"offerta\":[\"italian\"],\"offrire\":[\"italian\"],\"offuscato\":[\"italian\"],\"oggetto\":[\"italian\"],\"oggi\":[\"italian\"],\"ognuno\":[\"italian\"],\"olandese\":[\"italian\"],\"olfatto\":[\"italian\"],\"oliato\":[\"italian\"],\"oliva\":[\"italian\"],\"ologramma\":[\"italian\"],\"oltre\":[\"italian\"],\"omaggio\":[\"italian\"],\"ombelico\":[\"italian\"],\"ombra\":[\"italian\"],\"omega\":[\"italian\"],\"omissione\":[\"italian\"],\"ondoso\":[\"italian\"],\"onere\":[\"italian\"],\"onice\":[\"italian\"],\"onnivoro\":[\"italian\"],\"onorevole\":[\"italian\"],\"onta\":[\"italian\"],\"operato\":[\"italian\"],\"opinione\":[\"italian\"],\"opposto\":[\"italian\"],\"oracolo\":[\"italian\"],\"orafo\":[\"italian\"],\"ordine\":[\"italian\"],\"orecchino\":[\"italian\"],\"orefice\":[\"italian\"],\"orfano\":[\"italian\"],\"organico\":[\"italian\"],\"origine\":[\"italian\"],\"orizzonte\":[\"italian\"],\"orma\":[\"italian\"],\"ormeggio\":[\"italian\"],\"ornativo\":[\"italian\"],\"orologio\":[\"italian\"],\"orrendo\":[\"italian\"],\"orribile\":[\"italian\"],\"ortensia\":[\"italian\"],\"ortica\":[\"italian\"],\"orzata\":[\"italian\"],\"orzo\":[\"italian\"],\"osare\":[\"italian\"],\"oscurare\":[\"italian\"],\"osmosi\":[\"italian\"],\"ospedale\":[\"italian\"],\"ospite\":[\"italian\"],\"ossa\":[\"italian\"],\"ossidare\":[\"italian\"],\"ostacolo\":[\"italian\"],\"oste\":[\"italian\"],\"otite\":[\"italian\"],\"otre\":[\"italian\"],\"ottagono\":[\"italian\"],\"ottimo\":[\"italian\"],\"ottobre\":[\"italian\"],\"ovale\":[\"italian\"],\"ovest\":[\"italian\"],\"ovino\":[\"italian\"],\"oviparo\":[\"italian\"],\"ovocito\":[\"italian\"],\"ovunque\":[\"italian\"],\"ovviare\":[\"italian\"],\"ozio\":[\"italian\"],\"pacchetto\":[\"italian\"],\"pace\":[\"italian\"],\"pacifico\":[\"italian\"],\"padella\":[\"italian\"],\"padrone\":[\"italian\"],\"paese\":[\"italian\"],\"paga\":[\"italian\"],\"pagina\":[\"italian\"],\"palazzina\":[\"italian\"],\"palesare\":[\"italian\"],\"pallido\":[\"italian\"],\"palo\":[\"italian\"],\"palude\":[\"italian\"],\"pandoro\":[\"italian\"],\"pannello\":[\"italian\"],\"paolo\":[\"italian\"],\"paonazzo\":[\"italian\"],\"paprica\":[\"italian\"],\"parabola\":[\"italian\"],\"parcella\":[\"italian\"],\"parere\":[\"italian\"],\"pargolo\":[\"italian\"],\"pari\":[\"italian\"],\"parlato\":[\"italian\"],\"parola\":[\"italian\"],\"partire\":[\"italian\"],\"parvenza\":[\"italian\"],\"parziale\":[\"italian\"],\"passivo\":[\"italian\"],\"pasticca\":[\"italian\"],\"patacca\":[\"italian\"],\"patologia\":[\"italian\"],\"pattume\":[\"italian\"],\"pavone\":[\"italian\"],\"peccato\":[\"italian\"],\"pedalare\":[\"italian\"],\"pedonale\":[\"italian\"],\"peggio\":[\"italian\"],\"peloso\":[\"italian\"],\"penare\":[\"italian\"],\"pendice\":[\"italian\"],\"penisola\":[\"italian\"],\"pennuto\":[\"italian\"],\"penombra\":[\"italian\"],\"pensare\":[\"italian\"],\"pentola\":[\"italian\"],\"pepe\":[\"italian\"],\"pepita\":[\"italian\"],\"perbene\":[\"italian\"],\"percorso\":[\"italian\"],\"perdonato\":[\"italian\"],\"perforare\":[\"italian\"],\"pergamena\":[\"italian\"],\"periodo\":[\"italian\"],\"permesso\":[\"italian\"],\"perno\":[\"italian\"],\"perplesso\":[\"italian\"],\"persuaso\":[\"italian\"],\"pertugio\":[\"italian\"],\"pervaso\":[\"italian\"],\"pesatore\":[\"italian\"],\"pesista\":[\"italian\"],\"peso\":[\"italian\"],\"pestifero\":[\"italian\"],\"petalo\":[\"italian\"],\"pettine\":[\"italian\"],\"petulante\":[\"italian\"],\"pezzo\":[\"italian\"],\"piacere\":[\"italian\"],\"pianta\":[\"italian\"],\"piattino\":[\"italian\"],\"piccino\":[\"italian\"],\"picozza\":[\"italian\"],\"piega\":[\"italian\"],\"pietra\":[\"italian\"],\"piffero\":[\"italian\"],\"pigiama\":[\"italian\"],\"pigolio\":[\"italian\"],\"pigro\":[\"italian\"],\"pila\":[\"italian\"],\"pilifero\":[\"italian\"],\"pillola\":[\"italian\"],\"pilota\":[\"italian\"],\"pimpante\":[\"italian\"],\"pineta\":[\"italian\"],\"pinna\":[\"italian\"],\"pinolo\":[\"italian\"],\"pioggia\":[\"italian\"],\"piombo\":[\"italian\"],\"piramide\":[\"italian\"],\"piretico\":[\"italian\"],\"pirite\":[\"italian\"],\"pirolisi\":[\"italian\"],\"pitone\":[\"italian\"],\"pizzico\":[\"italian\"],\"placebo\":[\"italian\"],\"planare\":[\"italian\"],\"plasma\":[\"italian\"],\"platano\":[\"italian\"],\"plenario\":[\"italian\"],\"pochezza\":[\"italian\"],\"poderoso\":[\"italian\"],\"podismo\":[\"italian\"],\"poesia\":[\"italian\"],\"poggiare\":[\"italian\"],\"polenta\":[\"italian\"],\"poligono\":[\"italian\"],\"pollice\":[\"italian\"],\"polmonite\":[\"italian\"],\"polpetta\":[\"italian\"],\"polso\":[\"italian\"],\"poltrona\":[\"italian\"],\"polvere\":[\"italian\"],\"pomice\":[\"italian\"],\"pomodoro\":[\"italian\"],\"ponte\":[\"italian\"],\"popoloso\":[\"italian\"],\"porfido\":[\"italian\"],\"poroso\":[\"italian\"],\"porpora\":[\"italian\"],\"porre\":[\"italian\"],\"portata\":[\"italian\"],\"posa\":[\"italian\",\"turkish\"],\"positivo\":[\"italian\"],\"possesso\":[\"italian\"],\"postulato\":[\"italian\"],\"potassio\":[\"italian\"],\"potere\":[\"italian\"],\"pranzo\":[\"italian\"],\"prassi\":[\"italian\"],\"pratica\":[\"italian\"],\"precluso\":[\"italian\"],\"predica\":[\"italian\"],\"prefisso\":[\"italian\"],\"pregiato\":[\"italian\"],\"prelievo\":[\"italian\"],\"premere\":[\"italian\"],\"prenotare\":[\"italian\"],\"preparato\":[\"italian\"],\"presenza\":[\"italian\"],\"pretesto\":[\"italian\"],\"prevalso\":[\"italian\"],\"prima\":[\"italian\"],\"principe\":[\"italian\"],\"privato\":[\"italian\"],\"problema\":[\"italian\"],\"procura\":[\"italian\"],\"produrre\":[\"italian\"],\"profumo\":[\"italian\"],\"progetto\":[\"italian\"],\"prolunga\":[\"italian\"],\"promessa\":[\"italian\"],\"pronome\":[\"italian\"],\"proposta\":[\"italian\"],\"proroga\":[\"italian\"],\"proteso\":[\"italian\"],\"prova\":[\"italian\",\"turkish\"],\"prudente\":[\"italian\"],\"prugna\":[\"italian\"],\"prurito\":[\"italian\"],\"psiche\":[\"italian\"],\"pubblico\":[\"italian\"],\"pudica\":[\"italian\"],\"pugilato\":[\"italian\"],\"pugno\":[\"italian\"],\"pulce\":[\"italian\"],\"pulito\":[\"italian\"],\"pulsante\":[\"italian\"],\"puntare\":[\"italian\"],\"pupazzo\":[\"italian\"],\"pupilla\":[\"italian\"],\"puro\":[\"italian\"],\"quadro\":[\"italian\"],\"qualcosa\":[\"italian\"],\"quasi\":[\"italian\"],\"querela\":[\"italian\"],\"quota\":[\"italian\"],\"raccolto\":[\"italian\"],\"raddoppio\":[\"italian\"],\"radicale\":[\"italian\"],\"radunato\":[\"italian\"],\"raffica\":[\"italian\"],\"ragazzo\":[\"italian\"],\"ragione\":[\"italian\"],\"ragno\":[\"italian\"],\"ramarro\":[\"italian\"],\"ramingo\":[\"italian\"],\"ramo\":[\"italian\"],\"randagio\":[\"italian\"],\"rantolare\":[\"italian\"],\"rapato\":[\"italian\"],\"rapina\":[\"italian\"],\"rappreso\":[\"italian\"],\"rasatura\":[\"italian\"],\"raschiato\":[\"italian\"],\"rasente\":[\"italian\"],\"rassegna\":[\"italian\"],\"rastrello\":[\"italian\"],\"rata\":[\"italian\"],\"ravveduto\":[\"italian\"],\"reale\":[\"italian\"],\"recepire\":[\"italian\"],\"recinto\":[\"italian\"],\"recluta\":[\"italian\"],\"recondito\":[\"italian\"],\"recupero\":[\"italian\"],\"reddito\":[\"italian\"],\"redimere\":[\"italian\"],\"regalato\":[\"italian\"],\"registro\":[\"italian\"],\"regola\":[\"italian\"],\"regresso\":[\"italian\"],\"relazione\":[\"italian\"],\"remare\":[\"italian\"],\"remoto\":[\"italian\"],\"renna\":[\"italian\"],\"replica\":[\"italian\"],\"reprimere\":[\"italian\"],\"reputare\":[\"italian\"],\"resa\":[\"italian\"],\"residente\":[\"italian\"],\"responso\":[\"italian\"],\"restauro\":[\"italian\"],\"rete\":[\"italian\"],\"retina\":[\"italian\"],\"retorica\":[\"italian\"],\"rettifica\":[\"italian\"],\"revocato\":[\"italian\"],\"riassunto\":[\"italian\"],\"ribadire\":[\"italian\"],\"ribelle\":[\"italian\"],\"ribrezzo\":[\"italian\"],\"ricarica\":[\"italian\"],\"ricco\":[\"italian\"],\"ricevere\":[\"italian\"],\"riciclato\":[\"italian\"],\"ricordo\":[\"italian\"],\"ricreduto\":[\"italian\"],\"ridicolo\":[\"italian\"],\"ridurre\":[\"italian\"],\"rifasare\":[\"italian\"],\"riflesso\":[\"italian\"],\"riforma\":[\"italian\"],\"rifugio\":[\"italian\"],\"rigare\":[\"italian\"],\"rigettato\":[\"italian\"],\"righello\":[\"italian\"],\"rilassato\":[\"italian\"],\"rilevato\":[\"italian\"],\"rimanere\":[\"italian\"],\"rimbalzo\":[\"italian\"],\"rimedio\":[\"italian\"],\"rimorchio\":[\"italian\"],\"rinascita\":[\"italian\"],\"rincaro\":[\"italian\"],\"rinforzo\":[\"italian\"],\"rinnovo\":[\"italian\"],\"rinomato\":[\"italian\"],\"rinsavito\":[\"italian\"],\"rintocco\":[\"italian\"],\"rinuncia\":[\"italian\"],\"rinvenire\":[\"italian\"],\"riparato\":[\"italian\"],\"ripetuto\":[\"italian\"],\"ripieno\":[\"italian\"],\"riportare\":[\"italian\"],\"ripresa\":[\"italian\"],\"ripulire\":[\"italian\"],\"risata\":[\"italian\"],\"rischio\":[\"italian\"],\"riserva\":[\"italian\"],\"risibile\":[\"italian\"],\"riso\":[\"italian\"],\"rispetto\":[\"italian\"],\"ristoro\":[\"italian\"],\"risultato\":[\"italian\"],\"risvolto\":[\"italian\"],\"ritardo\":[\"italian\"],\"ritegno\":[\"italian\"],\"ritmico\":[\"italian\"],\"ritrovo\":[\"italian\"],\"riunione\":[\"italian\"],\"riva\":[\"italian\"],\"riverso\":[\"italian\"],\"rivincita\":[\"italian\"],\"rivolto\":[\"italian\"],\"rizoma\":[\"italian\"],\"roba\":[\"italian\"],\"robotico\":[\"italian\"],\"robusto\":[\"italian\"],\"roccia\":[\"italian\"],\"roco\":[\"italian\"],\"rodaggio\":[\"italian\"],\"rodere\":[\"italian\"],\"roditore\":[\"italian\"],\"rogito\":[\"italian\"],\"rollio\":[\"italian\"],\"romantico\":[\"italian\"],\"rompere\":[\"italian\"],\"ronzio\":[\"italian\"],\"rosolare\":[\"italian\"],\"rospo\":[\"italian\"],\"rotante\":[\"italian\"],\"rotondo\":[\"italian\"],\"rotula\":[\"italian\"],\"rovescio\":[\"italian\"],\"rubizzo\":[\"italian\"],\"rubrica\":[\"italian\"],\"ruga\":[\"italian\"],\"rullino\":[\"italian\"],\"rumine\":[\"italian\"],\"rumoroso\":[\"italian\"],\"ruolo\":[\"italian\"],\"rupe\":[\"italian\"],\"russare\":[\"italian\"],\"rustico\":[\"italian\"],\"sabato\":[\"italian\"],\"sabbiare\":[\"italian\"],\"sabotato\":[\"italian\"],\"sagoma\":[\"italian\"],\"salasso\":[\"italian\"],\"saldatura\":[\"italian\"],\"salgemma\":[\"italian\"],\"salivare\":[\"italian\"],\"salmone\":[\"italian\"],\"salone\":[\"italian\"],\"saltare\":[\"italian\"],\"saluto\":[\"italian\"],\"salvo\":[\"italian\"],\"sapere\":[\"italian\"],\"sapido\":[\"italian\"],\"saporito\":[\"italian\"],\"saraceno\":[\"italian\"],\"sarcasmo\":[\"italian\"],\"sarto\":[\"italian\"],\"sassoso\":[\"italian\"],\"satellite\":[\"italian\"],\"satira\":[\"italian\"],\"satollo\":[\"italian\"],\"saturno\":[\"italian\"],\"savana\":[\"italian\"],\"savio\":[\"italian\"],\"saziato\":[\"italian\"],\"sbadiglio\":[\"italian\"],\"sbalzo\":[\"italian\"],\"sbancato\":[\"italian\"],\"sbarra\":[\"italian\"],\"sbattere\":[\"italian\"],\"sbavare\":[\"italian\"],\"sbendare\":[\"italian\"],\"sbirciare\":[\"italian\"],\"sbloccato\":[\"italian\"],\"sbocciato\":[\"italian\"],\"sbrinare\":[\"italian\"],\"sbruffone\":[\"italian\"],\"sbuffare\":[\"italian\"],\"scabroso\":[\"italian\"],\"scadenza\":[\"italian\"],\"scala\":[\"italian\"],\"scambiare\":[\"italian\"],\"scandalo\":[\"italian\"],\"scapola\":[\"italian\"],\"scarso\":[\"italian\"],\"scatenare\":[\"italian\"],\"scavato\":[\"italian\"],\"scelto\":[\"italian\"],\"scenico\":[\"italian\"],\"scettro\":[\"italian\"],\"scheda\":[\"italian\"],\"schiena\":[\"italian\"],\"sciarpa\":[\"italian\"],\"scienza\":[\"italian\"],\"scindere\":[\"italian\"],\"scippo\":[\"italian\"],\"sciroppo\":[\"italian\"],\"scivolo\":[\"italian\"],\"sclerare\":[\"italian\"],\"scodella\":[\"italian\"],\"scolpito\":[\"italian\"],\"scomparto\":[\"italian\"],\"sconforto\":[\"italian\"],\"scoprire\":[\"italian\"],\"scorta\":[\"italian\"],\"scossone\":[\"italian\"],\"scozzese\":[\"italian\"],\"scriba\":[\"italian\"],\"scrollare\":[\"italian\"],\"scrutinio\":[\"italian\"],\"scuderia\":[\"italian\"],\"scultore\":[\"italian\"],\"scuola\":[\"italian\"],\"scuro\":[\"italian\"],\"scusare\":[\"italian\"],\"sdebitare\":[\"italian\"],\"sdoganare\":[\"italian\"],\"seccatura\":[\"italian\"],\"secondo\":[\"italian\"],\"sedano\":[\"italian\"],\"seggiola\":[\"italian\"],\"segnalato\":[\"italian\"],\"segregato\":[\"italian\"],\"seguito\":[\"italian\"],\"selciato\":[\"italian\"],\"selettivo\":[\"italian\"],\"sella\":[\"italian\"],\"selvaggio\":[\"italian\"],\"semaforo\":[\"italian\"],\"sembrare\":[\"italian\"],\"seme\":[\"italian\"],\"seminato\":[\"italian\"],\"sempre\":[\"italian\"],\"senso\":[\"italian\"],\"sentire\":[\"italian\"],\"sepolto\":[\"italian\"],\"sequenza\":[\"italian\"],\"serata\":[\"italian\"],\"serbato\":[\"italian\"],\"sereno\":[\"italian\"],\"serio\":[\"italian\"],\"serpente\":[\"italian\"],\"serraglio\":[\"italian\"],\"servire\":[\"italian\"],\"sestina\":[\"italian\"],\"setola\":[\"italian\"],\"settimana\":[\"italian\"],\"sfacelo\":[\"italian\"],\"sfaldare\":[\"italian\"],\"sfamato\":[\"italian\"],\"sfarzoso\":[\"italian\"],\"sfaticato\":[\"italian\"],\"sfera\":[\"italian\"],\"sfida\":[\"italian\"],\"sfilato\":[\"italian\"],\"sfinge\":[\"italian\"],\"sfocato\":[\"italian\"],\"sfoderare\":[\"italian\"],\"sfogo\":[\"italian\"],\"sfoltire\":[\"italian\"],\"sforzato\":[\"italian\"],\"sfratto\":[\"italian\"],\"sfruttato\":[\"italian\"],\"sfuggito\":[\"italian\"],\"sfumare\":[\"italian\"],\"sfuso\":[\"italian\"],\"sgabello\":[\"italian\"],\"sgarbato\":[\"italian\"],\"sgonfiare\":[\"italian\"],\"sgorbio\":[\"italian\"],\"sgrassato\":[\"italian\"],\"sguardo\":[\"italian\"],\"sibilo\":[\"italian\"],\"siccome\":[\"italian\"],\"sierra\":[\"italian\"],\"sigla\":[\"italian\"],\"signore\":[\"italian\"],\"silenzio\":[\"italian\"],\"sillaba\":[\"italian\"],\"simbolo\":[\"italian\"],\"simpatico\":[\"italian\"],\"simulato\":[\"italian\"],\"sinfonia\":[\"italian\"],\"singolo\":[\"italian\"],\"sinistro\":[\"italian\"],\"sino\":[\"italian\"],\"sintesi\":[\"italian\"],\"sinusoide\":[\"italian\"],\"sipario\":[\"italian\"],\"sisma\":[\"italian\"],\"sistole\":[\"italian\"],\"situato\":[\"italian\"],\"slitta\":[\"italian\"],\"slogatura\":[\"italian\"],\"sloveno\":[\"italian\"],\"smarrito\":[\"italian\"],\"smemorato\":[\"italian\"],\"smentito\":[\"italian\"],\"smeraldo\":[\"italian\"],\"smilzo\":[\"italian\"],\"smontare\":[\"italian\"],\"smottato\":[\"italian\"],\"smussato\":[\"italian\"],\"snellire\":[\"italian\"],\"snervato\":[\"italian\"],\"snodo\":[\"italian\"],\"sobbalzo\":[\"italian\"],\"sobrio\":[\"italian\"],\"soccorso\":[\"italian\"],\"sociale\":[\"italian\"],\"sodale\":[\"italian\"],\"soffitto\":[\"italian\"],\"sogno\":[\"italian\"],\"soldato\":[\"italian\"],\"solenne\":[\"italian\"],\"solido\":[\"italian\"],\"sollazzo\":[\"italian\"],\"solo\":[\"italian\"],\"solubile\":[\"italian\"],\"solvente\":[\"italian\"],\"somatico\":[\"italian\"],\"somma\":[\"italian\"],\"sonda\":[\"italian\"],\"sonetto\":[\"italian\"],\"sonnifero\":[\"italian\"],\"sopire\":[\"italian\"],\"soppeso\":[\"italian\"],\"sopra\":[\"italian\"],\"sorgere\":[\"italian\"],\"sorpasso\":[\"italian\"],\"sorriso\":[\"italian\"],\"sorso\":[\"italian\"],\"sorteggio\":[\"italian\"],\"sorvolato\":[\"italian\"],\"sospiro\":[\"italian\"],\"sosta\":[\"italian\"],\"sottile\":[\"italian\"],\"spada\":[\"italian\"],\"spalla\":[\"italian\"],\"spargere\":[\"italian\"],\"spatola\":[\"italian\"],\"spavento\":[\"italian\"],\"spazzola\":[\"italian\"],\"specie\":[\"italian\"],\"spedire\":[\"italian\"],\"spegnere\":[\"italian\"],\"spelatura\":[\"italian\"],\"speranza\":[\"italian\"],\"spessore\":[\"italian\"],\"spettrale\":[\"italian\"],\"spezzato\":[\"italian\"],\"spia\":[\"italian\"],\"spigoloso\":[\"italian\"],\"spillato\":[\"italian\"],\"spinoso\":[\"italian\"],\"spirale\":[\"italian\"],\"splendido\":[\"italian\"],\"sportivo\":[\"italian\"],\"sposo\":[\"italian\"],\"spranga\":[\"italian\"],\"sprecare\":[\"italian\"],\"spronato\":[\"italian\"],\"spruzzo\":[\"italian\"],\"spuntino\":[\"italian\"],\"squillo\":[\"italian\"],\"sradicare\":[\"italian\"],\"srotolato\":[\"italian\"],\"stabile\":[\"italian\"],\"stacco\":[\"italian\"],\"staffa\":[\"italian\"],\"stagnare\":[\"italian\"],\"stampato\":[\"italian\"],\"stantio\":[\"italian\"],\"starnuto\":[\"italian\"],\"stasera\":[\"italian\"],\"statuto\":[\"italian\"],\"stelo\":[\"italian\"],\"steppa\":[\"italian\"],\"sterzo\":[\"italian\"],\"stiletto\":[\"italian\"],\"stima\":[\"italian\"],\"stirpe\":[\"italian\"],\"stivale\":[\"italian\"],\"stizzoso\":[\"italian\"],\"stonato\":[\"italian\"],\"storico\":[\"italian\"],\"strappo\":[\"italian\"],\"stregato\":[\"italian\"],\"stridulo\":[\"italian\"],\"strozzare\":[\"italian\"],\"strutto\":[\"italian\"],\"stuccare\":[\"italian\"],\"stufo\":[\"italian\"],\"stupendo\":[\"italian\"],\"subentro\":[\"italian\"],\"succoso\":[\"italian\"],\"sudore\":[\"italian\"],\"suggerito\":[\"italian\"],\"sugo\":[\"italian\"],\"sultano\":[\"italian\"],\"suonare\":[\"italian\"],\"superbo\":[\"italian\"],\"supporto\":[\"italian\"],\"surgelato\":[\"italian\"],\"surrogato\":[\"italian\"],\"sussurro\":[\"italian\"],\"sutura\":[\"italian\"],\"svagare\":[\"italian\"],\"svedese\":[\"italian\"],\"sveglio\":[\"italian\"],\"svelare\":[\"italian\"],\"svenuto\":[\"italian\"],\"svezia\":[\"italian\"],\"sviluppo\":[\"italian\"],\"svista\":[\"italian\"],\"svizzera\":[\"italian\"],\"svolta\":[\"italian\"],\"svuotare\":[\"italian\"],\"tabacco\":[\"italian\"],\"tabulato\":[\"italian\"],\"tacciare\":[\"italian\"],\"taciturno\":[\"italian\"],\"tale\":[\"italian\"],\"talismano\":[\"italian\"],\"tampone\":[\"italian\"],\"tannino\":[\"italian\"],\"tara\":[\"italian\"],\"tardivo\":[\"italian\"],\"targato\":[\"italian\"],\"tariffa\":[\"italian\"],\"tarpare\":[\"italian\"],\"tartaruga\":[\"italian\"],\"tasto\":[\"italian\"],\"tattico\":[\"italian\"],\"taverna\":[\"italian\"],\"tavolata\":[\"italian\"],\"tazza\":[\"italian\"],\"teca\":[\"italian\"],\"tecnico\":[\"italian\"],\"telefono\":[\"italian\"],\"temerario\":[\"italian\"],\"tempo\":[\"italian\",\"turkish\"],\"temuto\":[\"italian\"],\"tendone\":[\"italian\"],\"tenero\":[\"italian\"],\"tensione\":[\"italian\"],\"tentacolo\":[\"italian\"],\"teorema\":[\"italian\"],\"terme\":[\"italian\"],\"terrazzo\":[\"italian\"],\"terzetto\":[\"italian\"],\"tesi\":[\"italian\"],\"tesserato\":[\"italian\"],\"testato\":[\"italian\"],\"tetro\":[\"italian\"],\"tettoia\":[\"italian\"],\"tifare\":[\"italian\"],\"tigella\":[\"italian\"],\"timbro\":[\"italian\"],\"tinto\":[\"italian\"],\"tipico\":[\"italian\"],\"tipografo\":[\"italian\"],\"tiraggio\":[\"italian\"],\"tiro\":[\"italian\"],\"titanio\":[\"italian\"],\"titolo\":[\"italian\"],\"titubante\":[\"italian\"],\"tizio\":[\"italian\"],\"tizzone\":[\"italian\"],\"toccare\":[\"italian\"],\"tollerare\":[\"italian\"],\"tolto\":[\"italian\"],\"tombola\":[\"italian\"],\"tomo\":[\"italian\"],\"tonfo\":[\"italian\"],\"tonsilla\":[\"italian\"],\"topazio\":[\"italian\"],\"topologia\":[\"italian\"],\"toppa\":[\"italian\"],\"torba\":[\"italian\"],\"tornare\":[\"italian\"],\"torrone\":[\"italian\"],\"tortora\":[\"italian\"],\"toscano\":[\"italian\"],\"tossire\":[\"italian\"],\"tostatura\":[\"italian\"],\"totano\":[\"italian\"],\"trabocco\":[\"italian\"],\"trachea\":[\"italian\"],\"trafila\":[\"italian\"],\"tragedia\":[\"italian\"],\"tralcio\":[\"italian\"],\"tramonto\":[\"italian\"],\"transito\":[\"italian\"],\"trapano\":[\"italian\"],\"trarre\":[\"italian\"],\"trasloco\":[\"italian\"],\"trattato\":[\"italian\"],\"trave\":[\"italian\"],\"treccia\":[\"italian\"],\"tremolio\":[\"italian\"],\"trespolo\":[\"italian\"],\"tributo\":[\"italian\"],\"tricheco\":[\"italian\"],\"trifoglio\":[\"italian\"],\"trillo\":[\"italian\"],\"trincea\":[\"italian\"],\"trio\":[\"italian\"],\"tristezza\":[\"italian\"],\"triturato\":[\"italian\"],\"trivella\":[\"italian\"],\"tromba\":[\"italian\"],\"trono\":[\"italian\"],\"troppo\":[\"italian\"],\"trottola\":[\"italian\"],\"trovare\":[\"italian\"],\"truccato\":[\"italian\"],\"tubatura\":[\"italian\"],\"tuffato\":[\"italian\"],\"tulipano\":[\"italian\"],\"tumulto\":[\"italian\"],\"tunisia\":[\"italian\"],\"turbare\":[\"italian\"],\"turchino\":[\"italian\"],\"tuta\":[\"italian\"],\"tutela\":[\"italian\"],\"ubicato\":[\"italian\"],\"uccello\":[\"italian\"],\"uccisore\":[\"italian\"],\"udire\":[\"italian\"],\"uditivo\":[\"italian\"],\"uffa\":[\"italian\"],\"ufficio\":[\"italian\"],\"uguale\":[\"italian\"],\"ulisse\":[\"italian\"],\"ultimato\":[\"italian\"],\"umano\":[\"italian\"],\"umile\":[\"italian\"],\"umorismo\":[\"italian\"],\"uncinetto\":[\"italian\"],\"ungere\":[\"italian\"],\"ungherese\":[\"italian\"],\"unicorno\":[\"italian\"],\"unificato\":[\"italian\"],\"unisono\":[\"italian\"],\"unitario\":[\"italian\"],\"unte\":[\"italian\"],\"uovo\":[\"italian\"],\"upupa\":[\"italian\"],\"uragano\":[\"italian\"],\"urgenza\":[\"italian\"],\"urlo\":[\"italian\"],\"usanza\":[\"italian\"],\"usato\":[\"italian\"],\"uscito\":[\"italian\"],\"usignolo\":[\"italian\"],\"usuraio\":[\"italian\"],\"utensile\":[\"italian\"],\"utilizzo\":[\"italian\"],\"utopia\":[\"italian\"],\"vacante\":[\"italian\"],\"vaccinato\":[\"italian\"],\"vagabondo\":[\"italian\"],\"vagliato\":[\"italian\"],\"valanga\":[\"italian\"],\"valgo\":[\"italian\"],\"valico\":[\"italian\"],\"valletta\":[\"italian\"],\"valoroso\":[\"italian\"],\"valutare\":[\"italian\"],\"valvola\":[\"italian\"],\"vampata\":[\"italian\"],\"vangare\":[\"italian\"],\"vanitoso\":[\"italian\"],\"vano\":[\"italian\"],\"vantaggio\":[\"italian\"],\"vanvera\":[\"italian\"],\"vapore\":[\"italian\"],\"varano\":[\"italian\"],\"varcato\":[\"italian\"],\"variante\":[\"italian\"],\"vasca\":[\"italian\"],\"vedetta\":[\"italian\"],\"vedova\":[\"italian\"],\"veduto\":[\"italian\"],\"vegetale\":[\"italian\"],\"veicolo\":[\"italian\"],\"velcro\":[\"italian\"],\"velina\":[\"italian\"],\"velluto\":[\"italian\"],\"veloce\":[\"italian\"],\"venato\":[\"italian\"],\"vendemmia\":[\"italian\"],\"vento\":[\"italian\"],\"verace\":[\"italian\"],\"verbale\":[\"italian\"],\"vergogna\":[\"italian\"],\"verifica\":[\"italian\"],\"vero\":[\"italian\"],\"verruca\":[\"italian\"],\"verticale\":[\"italian\"],\"vescica\":[\"italian\"],\"vessillo\":[\"italian\"],\"vestale\":[\"italian\"],\"veterano\":[\"italian\"],\"vetrina\":[\"italian\"],\"vetusto\":[\"italian\"],\"viandante\":[\"italian\"],\"vibrante\":[\"italian\"],\"vicenda\":[\"italian\"],\"vichingo\":[\"italian\"],\"vicinanza\":[\"italian\"],\"vidimare\":[\"italian\"],\"vigilia\":[\"italian\"],\"vigneto\":[\"italian\"],\"vigore\":[\"italian\"],\"vile\":[\"italian\"],\"villano\":[\"italian\"],\"vimini\":[\"italian\"],\"vincitore\":[\"italian\"],\"viola\":[\"italian\"],\"vipera\":[\"italian\"],\"virgola\":[\"italian\"],\"virologo\":[\"italian\"],\"virulento\":[\"italian\"],\"viscoso\":[\"italian\"],\"visione\":[\"italian\"],\"vispo\":[\"italian\"],\"vissuto\":[\"italian\"],\"visura\":[\"italian\"],\"vita\":[\"italian\"],\"vitello\":[\"italian\"],\"vittima\":[\"italian\"],\"vivanda\":[\"italian\"],\"vivido\":[\"italian\"],\"viziare\":[\"italian\"],\"voce\":[\"italian\"],\"voga\":[\"italian\"],\"volatile\":[\"italian\"],\"volere\":[\"italian\"],\"volpe\":[\"italian\"],\"voragine\":[\"italian\"],\"vulcano\":[\"italian\"],\"zampogna\":[\"italian\"],\"zanna\":[\"italian\"],\"zappato\":[\"italian\"],\"zattera\":[\"italian\"],\"zavorra\":[\"italian\"],\"zefiro\":[\"italian\"],\"zelante\":[\"italian\"],\"zelo\":[\"italian\"],\"zenzero\":[\"italian\"],\"zerbino\":[\"italian\"],\"zibetto\":[\"italian\"],\"zinco\":[\"italian\"],\"zircone\":[\"italian\"],\"zitto\":[\"italian\"],\"zolla\":[\"italian\"],\"zotico\":[\"italian\"],\"zucchero\":[\"italian\"],\"zufolo\":[\"italian\"],\"zulu\":[\"italian\"],\"zuppa\":[\"italian\"],\"あいこくしん\":[\"japanese\"],\"あいさつ\":[\"japanese\"],\"あいだ\":[\"japanese\"],\"あおぞら\":[\"japanese\"],\"あかちゃん\":[\"japanese\"],\"あきる\":[\"japanese\"],\"あけがた\":[\"japanese\"],\"あける\":[\"japanese\"],\"あこがれる\":[\"japanese\"],\"あさい\":[\"japanese\"],\"あさひ\":[\"japanese\"],\"あしあと\":[\"japanese\"],\"あじわう\":[\"japanese\"],\"あずかる\":[\"japanese\"],\"あずき\":[\"japanese\"],\"あそぶ\":[\"japanese\"],\"あたえる\":[\"japanese\"],\"あたためる\":[\"japanese\"],\"あたりまえ\":[\"japanese\"],\"あたる\":[\"japanese\"],\"あつい\":[\"japanese\"],\"あつかう\":[\"japanese\"],\"あっしゅく\":[\"japanese\"],\"あつまり\":[\"japanese\"],\"あつめる\":[\"japanese\"],\"あてな\":[\"japanese\"],\"あてはまる\":[\"japanese\"],\"あひる\":[\"japanese\"],\"あぶら\":[\"japanese\"],\"あぶる\":[\"japanese\"],\"あふれる\":[\"japanese\"],\"あまい\":[\"japanese\"],\"あまど\":[\"japanese\"],\"あまやかす\":[\"japanese\"],\"あまり\":[\"japanese\"],\"あみもの\":[\"japanese\"],\"あめりか\":[\"japanese\"],\"あやまる\":[\"japanese\"],\"あゆむ\":[\"japanese\"],\"あらいぐま\":[\"japanese\"],\"あらし\":[\"japanese\"],\"あらすじ\":[\"japanese\"],\"あらためる\":[\"japanese\"],\"あらゆる\":[\"japanese\"],\"あらわす\":[\"japanese\"],\"ありがとう\":[\"japanese\"],\"あわせる\":[\"japanese\"],\"あわてる\":[\"japanese\"],\"あんい\":[\"japanese\"],\"あんがい\":[\"japanese\"],\"あんこ\":[\"japanese\"],\"あんぜん\":[\"japanese\"],\"あんてい\":[\"japanese\"],\"あんない\":[\"japanese\"],\"あんまり\":[\"japanese\"],\"いいだす\":[\"japanese\"],\"いおん\":[\"japanese\"],\"いがい\":[\"japanese\"],\"いがく\":[\"japanese\"],\"いきおい\":[\"japanese\"],\"いきなり\":[\"japanese\"],\"いきもの\":[\"japanese\"],\"いきる\":[\"japanese\"],\"いくじ\":[\"japanese\"],\"いくぶん\":[\"japanese\"],\"いけばな\":[\"japanese\"],\"いけん\":[\"japanese\"],\"いこう\":[\"japanese\"],\"いこく\":[\"japanese\"],\"いこつ\":[\"japanese\"],\"いさましい\":[\"japanese\"],\"いさん\":[\"japanese\"],\"いしき\":[\"japanese\"],\"いじゅう\":[\"japanese\"],\"いじょう\":[\"japanese\"],\"いじわる\":[\"japanese\"],\"いずみ\":[\"japanese\"],\"いずれ\":[\"japanese\"],\"いせい\":[\"japanese\"],\"いせえび\":[\"japanese\"],\"いせかい\":[\"japanese\"],\"いせき\":[\"japanese\"],\"いぜん\":[\"japanese\"],\"いそうろう\":[\"japanese\"],\"いそがしい\":[\"japanese\"],\"いだい\":[\"japanese\"],\"いだく\":[\"japanese\"],\"いたずら\":[\"japanese\"],\"いたみ\":[\"japanese\"],\"いたりあ\":[\"japanese\"],\"いちおう\":[\"japanese\"],\"いちじ\":[\"japanese\"],\"いちど\":[\"japanese\"],\"いちば\":[\"japanese\"],\"いちぶ\":[\"japanese\"],\"いちりゅう\":[\"japanese\"],\"いつか\":[\"japanese\"],\"いっしゅん\":[\"japanese\"],\"いっせい\":[\"japanese\"],\"いっそう\":[\"japanese\"],\"いったん\":[\"japanese\"],\"いっち\":[\"japanese\"],\"いってい\":[\"japanese\"],\"いっぽう\":[\"japanese\"],\"いてざ\":[\"japanese\"],\"いてん\":[\"japanese\"],\"いどう\":[\"japanese\"],\"いとこ\":[\"japanese\"],\"いない\":[\"japanese\"],\"いなか\":[\"japanese\"],\"いねむり\":[\"japanese\"],\"いのち\":[\"japanese\"],\"いのる\":[\"japanese\"],\"いはつ\":[\"japanese\"],\"いばる\":[\"japanese\"],\"いはん\":[\"japanese\"],\"いびき\":[\"japanese\"],\"いひん\":[\"japanese\"],\"いふく\":[\"japanese\"],\"いへん\":[\"japanese\"],\"いほう\":[\"japanese\"],\"いみん\":[\"japanese\"],\"いもうと\":[\"japanese\"],\"いもたれ\":[\"japanese\"],\"いもり\":[\"japanese\"],\"いやがる\":[\"japanese\"],\"いやす\":[\"japanese\"],\"いよかん\":[\"japanese\"],\"いよく\":[\"japanese\"],\"いらい\":[\"japanese\"],\"いらすと\":[\"japanese\"],\"いりぐち\":[\"japanese\"],\"いりょう\":[\"japanese\"],\"いれい\":[\"japanese\"],\"いれもの\":[\"japanese\"],\"いれる\":[\"japanese\"],\"いろえんぴつ\":[\"japanese\"],\"いわい\":[\"japanese\"],\"いわう\":[\"japanese\"],\"いわかん\":[\"japanese\"],\"いわば\":[\"japanese\"],\"いわゆる\":[\"japanese\"],\"いんげんまめ\":[\"japanese\"],\"いんさつ\":[\"japanese\"],\"いんしょう\":[\"japanese\"],\"いんよう\":[\"japanese\"],\"うえき\":[\"japanese\"],\"うえる\":[\"japanese\"],\"うおざ\":[\"japanese\"],\"うがい\":[\"japanese\"],\"うかぶ\":[\"japanese\"],\"うかべる\":[\"japanese\"],\"うきわ\":[\"japanese\"],\"うくらいな\":[\"japanese\"],\"うくれれ\":[\"japanese\"],\"うけたまわる\":[\"japanese\"],\"うけつけ\":[\"japanese\"],\"うけとる\":[\"japanese\"],\"うけもつ\":[\"japanese\"],\"うける\":[\"japanese\"],\"うごかす\":[\"japanese\"],\"うごく\":[\"japanese\"],\"うこん\":[\"japanese\"],\"うさぎ\":[\"japanese\"],\"うしなう\":[\"japanese\"],\"うしろがみ\":[\"japanese\"],\"うすい\":[\"japanese\"],\"うすぎ\":[\"japanese\"],\"うすぐらい\":[\"japanese\"],\"うすめる\":[\"japanese\"],\"うせつ\":[\"japanese\"],\"うちあわせ\":[\"japanese\"],\"うちがわ\":[\"japanese\"],\"うちき\":[\"japanese\"],\"うちゅう\":[\"japanese\"],\"うっかり\":[\"japanese\"],\"うつくしい\":[\"japanese\"],\"うったえる\":[\"japanese\"],\"うつる\":[\"japanese\"],\"うどん\":[\"japanese\"],\"うなぎ\":[\"japanese\"],\"うなじ\":[\"japanese\"],\"うなずく\":[\"japanese\"],\"うなる\":[\"japanese\"],\"うねる\":[\"japanese\"],\"うのう\":[\"japanese\"],\"うぶげ\":[\"japanese\"],\"うぶごえ\":[\"japanese\"],\"うまれる\":[\"japanese\"],\"うめる\":[\"japanese\"],\"うもう\":[\"japanese\"],\"うやまう\":[\"japanese\"],\"うよく\":[\"japanese\"],\"うらがえす\":[\"japanese\"],\"うらぐち\":[\"japanese\"],\"うらない\":[\"japanese\"],\"うりあげ\":[\"japanese\"],\"うりきれ\":[\"japanese\"],\"うるさい\":[\"japanese\"],\"うれしい\":[\"japanese\"],\"うれゆき\":[\"japanese\"],\"うれる\":[\"japanese\"],\"うろこ\":[\"japanese\"],\"うわき\":[\"japanese\"],\"うわさ\":[\"japanese\"],\"うんこう\":[\"japanese\"],\"うんちん\":[\"japanese\"],\"うんてん\":[\"japanese\"],\"うんどう\":[\"japanese\"],\"えいえん\":[\"japanese\"],\"えいが\":[\"japanese\"],\"えいきょう\":[\"japanese\"],\"えいご\":[\"japanese\"],\"えいせい\":[\"japanese\"],\"えいぶん\":[\"japanese\"],\"えいよう\":[\"japanese\"],\"えいわ\":[\"japanese\"],\"えおり\":[\"japanese\"],\"えがお\":[\"japanese\"],\"えがく\":[\"japanese\"],\"えきたい\":[\"japanese\"],\"えくせる\":[\"japanese\"],\"えしゃく\":[\"japanese\"],\"えすて\":[\"japanese\"],\"えつらん\":[\"japanese\"],\"えのぐ\":[\"japanese\"],\"えほうまき\":[\"japanese\"],\"えほん\":[\"japanese\"],\"えまき\":[\"japanese\"],\"えもじ\":[\"japanese\"],\"えもの\":[\"japanese\"],\"えらい\":[\"japanese\"],\"えらぶ\":[\"japanese\"],\"えりあ\":[\"japanese\"],\"えんえん\":[\"japanese\"],\"えんかい\":[\"japanese\"],\"えんぎ\":[\"japanese\"],\"えんげき\":[\"japanese\"],\"えんしゅう\":[\"japanese\"],\"えんぜつ\":[\"japanese\"],\"えんそく\":[\"japanese\"],\"えんちょう\":[\"japanese\"],\"えんとつ\":[\"japanese\"],\"おいかける\":[\"japanese\"],\"おいこす\":[\"japanese\"],\"おいしい\":[\"japanese\"],\"おいつく\":[\"japanese\"],\"おうえん\":[\"japanese\"],\"おうさま\":[\"japanese\"],\"おうじ\":[\"japanese\"],\"おうせつ\":[\"japanese\"],\"おうたい\":[\"japanese\"],\"おうふく\":[\"japanese\"],\"おうべい\":[\"japanese\"],\"おうよう\":[\"japanese\"],\"おえる\":[\"japanese\"],\"おおい\":[\"japanese\"],\"おおう\":[\"japanese\"],\"おおどおり\":[\"japanese\"],\"おおや\":[\"japanese\"],\"おおよそ\":[\"japanese\"],\"おかえり\":[\"japanese\"],\"おかず\":[\"japanese\"],\"おがむ\":[\"japanese\"],\"おかわり\":[\"japanese\"],\"おぎなう\":[\"japanese\"],\"おきる\":[\"japanese\"],\"おくさま\":[\"japanese\"],\"おくじょう\":[\"japanese\"],\"おくりがな\":[\"japanese\"],\"おくる\":[\"japanese\"],\"おくれる\":[\"japanese\"],\"おこす\":[\"japanese\"],\"おこなう\":[\"japanese\"],\"おこる\":[\"japanese\"],\"おさえる\":[\"japanese\"],\"おさない\":[\"japanese\"],\"おさめる\":[\"japanese\"],\"おしいれ\":[\"japanese\"],\"おしえる\":[\"japanese\"],\"おじぎ\":[\"japanese\"],\"おじさん\":[\"japanese\"],\"おしゃれ\":[\"japanese\"],\"おそらく\":[\"japanese\"],\"おそわる\":[\"japanese\"],\"おたがい\":[\"japanese\"],\"おたく\":[\"japanese\"],\"おだやか\":[\"japanese\"],\"おちつく\":[\"japanese\"],\"おっと\":[\"japanese\"],\"おつり\":[\"japanese\"],\"おでかけ\":[\"japanese\"],\"おとしもの\":[\"japanese\"],\"おとなしい\":[\"japanese\"],\"おどり\":[\"japanese\"],\"おどろかす\":[\"japanese\"],\"おばさん\":[\"japanese\"],\"おまいり\":[\"japanese\"],\"おめでとう\":[\"japanese\"],\"おもいで\":[\"japanese\"],\"おもう\":[\"japanese\"],\"おもたい\":[\"japanese\"],\"おもちゃ\":[\"japanese\"],\"おやつ\":[\"japanese\"],\"おやゆび\":[\"japanese\"],\"およぼす\":[\"japanese\"],\"おらんだ\":[\"japanese\"],\"おろす\":[\"japanese\"],\"おんがく\":[\"japanese\"],\"おんけい\":[\"japanese\"],\"おんしゃ\":[\"japanese\"],\"おんせん\":[\"japanese\"],\"おんだん\":[\"japanese\"],\"おんちゅう\":[\"japanese\"],\"おんどけい\":[\"japanese\"],\"かあつ\":[\"japanese\"],\"かいが\":[\"japanese\"],\"がいき\":[\"japanese\"],\"がいけん\":[\"japanese\"],\"がいこう\":[\"japanese\"],\"かいさつ\":[\"japanese\"],\"かいしゃ\":[\"japanese\"],\"かいすいよく\":[\"japanese\"],\"かいぜん\":[\"japanese\"],\"かいぞうど\":[\"japanese\"],\"かいつう\":[\"japanese\"],\"かいてん\":[\"japanese\"],\"かいとう\":[\"japanese\"],\"かいふく\":[\"japanese\"],\"がいへき\":[\"japanese\"],\"かいほう\":[\"japanese\"],\"かいよう\":[\"japanese\"],\"がいらい\":[\"japanese\"],\"かいわ\":[\"japanese\"],\"かえる\":[\"japanese\"],\"かおり\":[\"japanese\"],\"かかえる\":[\"japanese\"],\"かがく\":[\"japanese\"],\"かがし\":[\"japanese\"],\"かがみ\":[\"japanese\"],\"かくご\":[\"japanese\"],\"かくとく\":[\"japanese\"],\"かざる\":[\"japanese\"],\"がぞう\":[\"japanese\"],\"かたい\":[\"japanese\"],\"かたち\":[\"japanese\"],\"がちょう\":[\"japanese\"],\"がっきゅう\":[\"japanese\"],\"がっこう\":[\"japanese\"],\"がっさん\":[\"japanese\"],\"がっしょう\":[\"japanese\"],\"かなざわし\":[\"japanese\"],\"かのう\":[\"japanese\"],\"がはく\":[\"japanese\"],\"かぶか\":[\"japanese\"],\"かほう\":[\"japanese\"],\"かほご\":[\"japanese\"],\"かまう\":[\"japanese\"],\"かまぼこ\":[\"japanese\"],\"かめれおん\":[\"japanese\"],\"かゆい\":[\"japanese\"],\"かようび\":[\"japanese\"],\"からい\":[\"japanese\"],\"かるい\":[\"japanese\"],\"かろう\":[\"japanese\"],\"かわく\":[\"japanese\"],\"かわら\":[\"japanese\"],\"がんか\":[\"japanese\"],\"かんけい\":[\"japanese\"],\"かんこう\":[\"japanese\"],\"かんしゃ\":[\"japanese\"],\"かんそう\":[\"japanese\"],\"かんたん\":[\"japanese\"],\"かんち\":[\"japanese\"],\"がんばる\":[\"japanese\"],\"きあい\":[\"japanese\"],\"きあつ\":[\"japanese\"],\"きいろ\":[\"japanese\"],\"ぎいん\":[\"japanese\"],\"きうい\":[\"japanese\"],\"きうん\":[\"japanese\"],\"きえる\":[\"japanese\"],\"きおう\":[\"japanese\"],\"きおく\":[\"japanese\"],\"きおち\":[\"japanese\"],\"きおん\":[\"japanese\"],\"きかい\":[\"japanese\"],\"きかく\":[\"japanese\"],\"きかんしゃ\":[\"japanese\"],\"ききて\":[\"japanese\"],\"きくばり\":[\"japanese\"],\"きくらげ\":[\"japanese\"],\"きけんせい\":[\"japanese\"],\"きこう\":[\"japanese\"],\"きこえる\":[\"japanese\"],\"きこく\":[\"japanese\"],\"きさい\":[\"japanese\"],\"きさく\":[\"japanese\"],\"きさま\":[\"japanese\"],\"きさらぎ\":[\"japanese\"],\"ぎじかがく\":[\"japanese\"],\"ぎしき\":[\"japanese\"],\"ぎじたいけん\":[\"japanese\"],\"ぎじにってい\":[\"japanese\"],\"ぎじゅつしゃ\":[\"japanese\"],\"きすう\":[\"japanese\"],\"きせい\":[\"japanese\"],\"きせき\":[\"japanese\"],\"きせつ\":[\"japanese\"],\"きそう\":[\"japanese\"],\"きぞく\":[\"japanese\"],\"きぞん\":[\"japanese\"],\"きたえる\":[\"japanese\"],\"きちょう\":[\"japanese\"],\"きつえん\":[\"japanese\"],\"ぎっちり\":[\"japanese\"],\"きつつき\":[\"japanese\"],\"きつね\":[\"japanese\"],\"きてい\":[\"japanese\"],\"きどう\":[\"japanese\"],\"きどく\":[\"japanese\"],\"きない\":[\"japanese\"],\"きなが\":[\"japanese\"],\"きなこ\":[\"japanese\"],\"きぬごし\":[\"japanese\"],\"きねん\":[\"japanese\"],\"きのう\":[\"japanese\"],\"きのした\":[\"japanese\"],\"きはく\":[\"japanese\"],\"きびしい\":[\"japanese\"],\"きひん\":[\"japanese\"],\"きふく\":[\"japanese\"],\"きぶん\":[\"japanese\"],\"きぼう\":[\"japanese\"],\"きほん\":[\"japanese\"],\"きまる\":[\"japanese\"],\"きみつ\":[\"japanese\"],\"きむずかしい\":[\"japanese\"],\"きめる\":[\"japanese\"],\"きもだめし\":[\"japanese\"],\"きもち\":[\"japanese\"],\"きもの\":[\"japanese\"],\"きゃく\":[\"japanese\"],\"きやく\":[\"japanese\"],\"ぎゅうにく\":[\"japanese\"],\"きよう\":[\"japanese\"],\"きょうりゅう\":[\"japanese\"],\"きらい\":[\"japanese\"],\"きらく\":[\"japanese\"],\"きりん\":[\"japanese\"],\"きれい\":[\"japanese\"],\"きれつ\":[\"japanese\"],\"きろく\":[\"japanese\"],\"ぎろん\":[\"japanese\"],\"きわめる\":[\"japanese\"],\"ぎんいろ\":[\"japanese\"],\"きんかくじ\":[\"japanese\"],\"きんじょ\":[\"japanese\"],\"きんようび\":[\"japanese\"],\"ぐあい\":[\"japanese\"],\"くいず\":[\"japanese\"],\"くうかん\":[\"japanese\"],\"くうき\":[\"japanese\"],\"くうぐん\":[\"japanese\"],\"くうこう\":[\"japanese\"],\"ぐうせい\":[\"japanese\"],\"くうそう\":[\"japanese\"],\"ぐうたら\":[\"japanese\"],\"くうふく\":[\"japanese\"],\"くうぼ\":[\"japanese\"],\"くかん\":[\"japanese\"],\"くきょう\":[\"japanese\"],\"くげん\":[\"japanese\"],\"ぐこう\":[\"japanese\"],\"くさい\":[\"japanese\"],\"くさき\":[\"japanese\"],\"くさばな\":[\"japanese\"],\"くさる\":[\"japanese\"],\"くしゃみ\":[\"japanese\"],\"くしょう\":[\"japanese\"],\"くすのき\":[\"japanese\"],\"くすりゆび\":[\"japanese\"],\"くせげ\":[\"japanese\"],\"くせん\":[\"japanese\"],\"ぐたいてき\":[\"japanese\"],\"くださる\":[\"japanese\"],\"くたびれる\":[\"japanese\"],\"くちこみ\":[\"japanese\"],\"くちさき\":[\"japanese\"],\"くつした\":[\"japanese\"],\"ぐっすり\":[\"japanese\"],\"くつろぐ\":[\"japanese\"],\"くとうてん\":[\"japanese\"],\"くどく\":[\"japanese\"],\"くなん\":[\"japanese\"],\"くねくね\":[\"japanese\"],\"くのう\":[\"japanese\"],\"くふう\":[\"japanese\"],\"くみあわせ\":[\"japanese\"],\"くみたてる\":[\"japanese\"],\"くめる\":[\"japanese\"],\"くやくしょ\":[\"japanese\"],\"くらす\":[\"japanese\"],\"くらべる\":[\"japanese\"],\"くるま\":[\"japanese\"],\"くれる\":[\"japanese\"],\"くろう\":[\"japanese\"],\"くわしい\":[\"japanese\"],\"ぐんかん\":[\"japanese\"],\"ぐんしょく\":[\"japanese\"],\"ぐんたい\":[\"japanese\"],\"ぐんて\":[\"japanese\"],\"けあな\":[\"japanese\"],\"けいかく\":[\"japanese\"],\"けいけん\":[\"japanese\"],\"けいこ\":[\"japanese\"],\"けいさつ\":[\"japanese\"],\"げいじゅつ\":[\"japanese\"],\"けいたい\":[\"japanese\"],\"げいのうじん\":[\"japanese\"],\"けいれき\":[\"japanese\"],\"けいろ\":[\"japanese\"],\"けおとす\":[\"japanese\"],\"けおりもの\":[\"japanese\"],\"げきか\":[\"japanese\"],\"げきげん\":[\"japanese\"],\"げきだん\":[\"japanese\"],\"げきちん\":[\"japanese\"],\"げきとつ\":[\"japanese\"],\"げきは\":[\"japanese\"],\"げきやく\":[\"japanese\"],\"げこう\":[\"japanese\"],\"げこくじょう\":[\"japanese\"],\"げざい\":[\"japanese\"],\"けさき\":[\"japanese\"],\"げざん\":[\"japanese\"],\"けしき\":[\"japanese\"],\"けしごむ\":[\"japanese\"],\"けしょう\":[\"japanese\"],\"げすと\":[\"japanese\"],\"けたば\":[\"japanese\"],\"けちゃっぷ\":[\"japanese\"],\"けちらす\":[\"japanese\"],\"けつあつ\":[\"japanese\"],\"けつい\":[\"japanese\"],\"けつえき\":[\"japanese\"],\"けっこん\":[\"japanese\"],\"けつじょ\":[\"japanese\"],\"けっせき\":[\"japanese\"],\"けってい\":[\"japanese\"],\"けつまつ\":[\"japanese\"],\"げつようび\":[\"japanese\"],\"げつれい\":[\"japanese\"],\"けつろん\":[\"japanese\"],\"げどく\":[\"japanese\"],\"けとばす\":[\"japanese\"],\"けとる\":[\"japanese\"],\"けなげ\":[\"japanese\"],\"けなす\":[\"japanese\"],\"けなみ\":[\"japanese\"],\"けぬき\":[\"japanese\"],\"げねつ\":[\"japanese\"],\"けねん\":[\"japanese\"],\"けはい\":[\"japanese\"],\"げひん\":[\"japanese\"],\"けぶかい\":[\"japanese\"],\"げぼく\":[\"japanese\"],\"けまり\":[\"japanese\"],\"けみかる\":[\"japanese\"],\"けむし\":[\"japanese\"],\"けむり\":[\"japanese\"],\"けもの\":[\"japanese\"],\"けらい\":[\"japanese\"],\"けろけろ\":[\"japanese\"],\"けわしい\":[\"japanese\"],\"けんい\":[\"japanese\"],\"けんえつ\":[\"japanese\"],\"けんお\":[\"japanese\"],\"けんか\":[\"japanese\"],\"げんき\":[\"japanese\"],\"けんげん\":[\"japanese\"],\"けんこう\":[\"japanese\"],\"けんさく\":[\"japanese\"],\"けんしゅう\":[\"japanese\"],\"けんすう\":[\"japanese\"],\"げんそう\":[\"japanese\"],\"けんちく\":[\"japanese\"],\"けんてい\":[\"japanese\"],\"けんとう\":[\"japanese\"],\"けんない\":[\"japanese\"],\"けんにん\":[\"japanese\"],\"げんぶつ\":[\"japanese\"],\"けんま\":[\"japanese\"],\"けんみん\":[\"japanese\"],\"けんめい\":[\"japanese\"],\"けんらん\":[\"japanese\"],\"けんり\":[\"japanese\"],\"こあくま\":[\"japanese\"],\"こいぬ\":[\"japanese\"],\"こいびと\":[\"japanese\"],\"ごうい\":[\"japanese\"],\"こうえん\":[\"japanese\"],\"こうおん\":[\"japanese\"],\"こうかん\":[\"japanese\"],\"ごうきゅう\":[\"japanese\"],\"ごうけい\":[\"japanese\"],\"こうこう\":[\"japanese\"],\"こうさい\":[\"japanese\"],\"こうじ\":[\"japanese\"],\"こうすい\":[\"japanese\"],\"ごうせい\":[\"japanese\"],\"こうそく\":[\"japanese\"],\"こうたい\":[\"japanese\"],\"こうちゃ\":[\"japanese\"],\"こうつう\":[\"japanese\"],\"こうてい\":[\"japanese\"],\"こうどう\":[\"japanese\"],\"こうない\":[\"japanese\"],\"こうはい\":[\"japanese\"],\"ごうほう\":[\"japanese\"],\"ごうまん\":[\"japanese\"],\"こうもく\":[\"japanese\"],\"こうりつ\":[\"japanese\"],\"こえる\":[\"japanese\"],\"こおり\":[\"japanese\"],\"ごかい\":[\"japanese\"],\"ごがつ\":[\"japanese\"],\"ごかん\":[\"japanese\"],\"こくご\":[\"japanese\"],\"こくさい\":[\"japanese\"],\"こくとう\":[\"japanese\"],\"こくない\":[\"japanese\"],\"こくはく\":[\"japanese\"],\"こぐま\":[\"japanese\"],\"こけい\":[\"japanese\"],\"こける\":[\"japanese\"],\"ここのか\":[\"japanese\"],\"こころ\":[\"japanese\"],\"こさめ\":[\"japanese\"],\"こしつ\":[\"japanese\"],\"こすう\":[\"japanese\"],\"こせい\":[\"japanese\"],\"こせき\":[\"japanese\"],\"こぜん\":[\"japanese\"],\"こそだて\":[\"japanese\"],\"こたい\":[\"japanese\"],\"こたえる\":[\"japanese\"],\"こたつ\":[\"japanese\"],\"こちょう\":[\"japanese\"],\"こっか\":[\"japanese\"],\"こつこつ\":[\"japanese\"],\"こつばん\":[\"japanese\"],\"こつぶ\":[\"japanese\"],\"こてい\":[\"japanese\"],\"こてん\":[\"japanese\"],\"ことがら\":[\"japanese\"],\"ことし\":[\"japanese\"],\"ことば\":[\"japanese\"],\"ことり\":[\"japanese\"],\"こなごな\":[\"japanese\"],\"こねこね\":[\"japanese\"],\"このまま\":[\"japanese\"],\"このみ\":[\"japanese\"],\"このよ\":[\"japanese\"],\"ごはん\":[\"japanese\"],\"こひつじ\":[\"japanese\"],\"こふう\":[\"japanese\"],\"こふん\":[\"japanese\"],\"こぼれる\":[\"japanese\"],\"ごまあぶら\":[\"japanese\"],\"こまかい\":[\"japanese\"],\"ごますり\":[\"japanese\"],\"こまつな\":[\"japanese\"],\"こまる\":[\"japanese\"],\"こむぎこ\":[\"japanese\"],\"こもじ\":[\"japanese\"],\"こもち\":[\"japanese\"],\"こもの\":[\"japanese\"],\"こもん\":[\"japanese\"],\"こやく\":[\"japanese\"],\"こやま\":[\"japanese\"],\"こゆう\":[\"japanese\"],\"こゆび\":[\"japanese\"],\"こよい\":[\"japanese\"],\"こよう\":[\"japanese\"],\"こりる\":[\"japanese\"],\"これくしょん\":[\"japanese\"],\"ころっけ\":[\"japanese\"],\"こわもて\":[\"japanese\"],\"こわれる\":[\"japanese\"],\"こんいん\":[\"japanese\"],\"こんかい\":[\"japanese\"],\"こんき\":[\"japanese\"],\"こんしゅう\":[\"japanese\"],\"こんすい\":[\"japanese\"],\"こんだて\":[\"japanese\"],\"こんとん\":[\"japanese\"],\"こんなん\":[\"japanese\"],\"こんびに\":[\"japanese\"],\"こんぽん\":[\"japanese\"],\"こんまけ\":[\"japanese\"],\"こんや\":[\"japanese\"],\"こんれい\":[\"japanese\"],\"こんわく\":[\"japanese\"],\"ざいえき\":[\"japanese\"],\"さいかい\":[\"japanese\"],\"さいきん\":[\"japanese\"],\"ざいげん\":[\"japanese\"],\"ざいこ\":[\"japanese\"],\"さいしょ\":[\"japanese\"],\"さいせい\":[\"japanese\"],\"ざいたく\":[\"japanese\"],\"ざいちゅう\":[\"japanese\"],\"さいてき\":[\"japanese\"],\"ざいりょう\":[\"japanese\"],\"さうな\":[\"japanese\"],\"さかいし\":[\"japanese\"],\"さがす\":[\"japanese\"],\"さかな\":[\"japanese\"],\"さかみち\":[\"japanese\"],\"さがる\":[\"japanese\"],\"さぎょう\":[\"japanese\"],\"さくし\":[\"japanese\"],\"さくひん\":[\"japanese\"],\"さくら\":[\"japanese\"],\"さこく\":[\"japanese\"],\"さこつ\":[\"japanese\"],\"さずかる\":[\"japanese\"],\"ざせき\":[\"japanese\"],\"さたん\":[\"japanese\"],\"さつえい\":[\"japanese\"],\"ざつおん\":[\"japanese\"],\"ざっか\":[\"japanese\"],\"ざつがく\":[\"japanese\"],\"さっきょく\":[\"japanese\"],\"ざっし\":[\"japanese\"],\"さつじん\":[\"japanese\"],\"ざっそう\":[\"japanese\"],\"さつたば\":[\"japanese\"],\"さつまいも\":[\"japanese\"],\"さてい\":[\"japanese\"],\"さといも\":[\"japanese\"],\"さとう\":[\"japanese\"],\"さとおや\":[\"japanese\"],\"さとし\":[\"japanese\"],\"さとる\":[\"japanese\"],\"さのう\":[\"japanese\"],\"さばく\":[\"japanese\"],\"さびしい\":[\"japanese\"],\"さべつ\":[\"japanese\"],\"さほう\":[\"japanese\"],\"さほど\":[\"japanese\"],\"さます\":[\"japanese\"],\"さみしい\":[\"japanese\"],\"さみだれ\":[\"japanese\"],\"さむけ\":[\"japanese\"],\"さめる\":[\"japanese\"],\"さやえんどう\":[\"japanese\"],\"さゆう\":[\"japanese\"],\"さよう\":[\"japanese\"],\"さよく\":[\"japanese\"],\"さらだ\":[\"japanese\"],\"ざるそば\":[\"japanese\"],\"さわやか\":[\"japanese\"],\"さわる\":[\"japanese\"],\"さんいん\":[\"japanese\"],\"さんか\":[\"japanese\"],\"さんきゃく\":[\"japanese\"],\"さんこう\":[\"japanese\"],\"さんさい\":[\"japanese\"],\"ざんしょ\":[\"japanese\"],\"さんすう\":[\"japanese\"],\"さんせい\":[\"japanese\"],\"さんそ\":[\"japanese\"],\"さんち\":[\"japanese\"],\"さんま\":[\"japanese\"],\"さんみ\":[\"japanese\"],\"さんらん\":[\"japanese\"],\"しあい\":[\"japanese\"],\"しあげ\":[\"japanese\"],\"しあさって\":[\"japanese\"],\"しあわせ\":[\"japanese\"],\"しいく\":[\"japanese\"],\"しいん\":[\"japanese\"],\"しうち\":[\"japanese\"],\"しえい\":[\"japanese\"],\"しおけ\":[\"japanese\"],\"しかい\":[\"japanese\"],\"しかく\":[\"japanese\"],\"じかん\":[\"japanese\"],\"しごと\":[\"japanese\"],\"しすう\":[\"japanese\"],\"じだい\":[\"japanese\"],\"したうけ\":[\"japanese\"],\"したぎ\":[\"japanese\"],\"したて\":[\"japanese\"],\"したみ\":[\"japanese\"],\"しちょう\":[\"japanese\"],\"しちりん\":[\"japanese\"],\"しっかり\":[\"japanese\"],\"しつじ\":[\"japanese\"],\"しつもん\":[\"japanese\"],\"してい\":[\"japanese\"],\"してき\":[\"japanese\"],\"してつ\":[\"japanese\"],\"じてん\":[\"japanese\"],\"じどう\":[\"japanese\"],\"しなぎれ\":[\"japanese\"],\"しなもの\":[\"japanese\"],\"しなん\":[\"japanese\"],\"しねま\":[\"japanese\"],\"しねん\":[\"japanese\"],\"しのぐ\":[\"japanese\"],\"しのぶ\":[\"japanese\"],\"しはい\":[\"japanese\"],\"しばかり\":[\"japanese\"],\"しはつ\":[\"japanese\"],\"しはらい\":[\"japanese\"],\"しはん\":[\"japanese\"],\"しひょう\":[\"japanese\"],\"しふく\":[\"japanese\"],\"じぶん\":[\"japanese\"],\"しへい\":[\"japanese\"],\"しほう\":[\"japanese\"],\"しほん\":[\"japanese\"],\"しまう\":[\"japanese\"],\"しまる\":[\"japanese\"],\"しみん\":[\"japanese\"],\"しむける\":[\"japanese\"],\"じむしょ\":[\"japanese\"],\"しめい\":[\"japanese\"],\"しめる\":[\"japanese\"],\"しもん\":[\"japanese\"],\"しゃいん\":[\"japanese\"],\"しゃうん\":[\"japanese\"],\"しゃおん\":[\"japanese\"],\"じゃがいも\":[\"japanese\"],\"しやくしょ\":[\"japanese\"],\"しゃくほう\":[\"japanese\"],\"しゃけん\":[\"japanese\"],\"しゃこ\":[\"japanese\"],\"しゃざい\":[\"japanese\"],\"しゃしん\":[\"japanese\"],\"しゃせん\":[\"japanese\"],\"しゃそう\":[\"japanese\"],\"しゃたい\":[\"japanese\"],\"しゃちょう\":[\"japanese\"],\"しゃっきん\":[\"japanese\"],\"じゃま\":[\"japanese\"],\"しゃりん\":[\"japanese\"],\"しゃれい\":[\"japanese\"],\"じゆう\":[\"japanese\"],\"じゅうしょ\":[\"japanese\"],\"しゅくはく\":[\"japanese\"],\"じゅしん\":[\"japanese\"],\"しゅっせき\":[\"japanese\"],\"しゅみ\":[\"japanese\"],\"しゅらば\":[\"japanese\"],\"じゅんばん\":[\"japanese\"],\"しょうかい\":[\"japanese\"],\"しょくたく\":[\"japanese\"],\"しょっけん\":[\"japanese\"],\"しょどう\":[\"japanese\"],\"しょもつ\":[\"japanese\"],\"しらせる\":[\"japanese\"],\"しらべる\":[\"japanese\"],\"しんか\":[\"japanese\"],\"しんこう\":[\"japanese\"],\"じんじゃ\":[\"japanese\"],\"しんせいじ\":[\"japanese\"],\"しんちく\":[\"japanese\"],\"しんりん\":[\"japanese\"],\"すあげ\":[\"japanese\"],\"すあし\":[\"japanese\"],\"すあな\":[\"japanese\"],\"ずあん\":[\"japanese\"],\"すいえい\":[\"japanese\"],\"すいか\":[\"japanese\"],\"すいとう\":[\"japanese\"],\"ずいぶん\":[\"japanese\"],\"すいようび\":[\"japanese\"],\"すうがく\":[\"japanese\"],\"すうじつ\":[\"japanese\"],\"すうせん\":[\"japanese\"],\"すおどり\":[\"japanese\"],\"すきま\":[\"japanese\"],\"すくう\":[\"japanese\"],\"すくない\":[\"japanese\"],\"すける\":[\"japanese\"],\"すごい\":[\"japanese\"],\"すこし\":[\"japanese\"],\"ずさん\":[\"japanese\"],\"すずしい\":[\"japanese\"],\"すすむ\":[\"japanese\"],\"すすめる\":[\"japanese\"],\"すっかり\":[\"japanese\"],\"ずっしり\":[\"japanese\"],\"ずっと\":[\"japanese\"],\"すてき\":[\"japanese\"],\"すてる\":[\"japanese\"],\"すねる\":[\"japanese\"],\"すのこ\":[\"japanese\"],\"すはだ\":[\"japanese\"],\"すばらしい\":[\"japanese\"],\"ずひょう\":[\"japanese\"],\"ずぶぬれ\":[\"japanese\"],\"すぶり\":[\"japanese\"],\"すふれ\":[\"japanese\"],\"すべて\":[\"japanese\"],\"すべる\":[\"japanese\"],\"ずほう\":[\"japanese\"],\"すぼん\":[\"japanese\"],\"すまい\":[\"japanese\"],\"すめし\":[\"japanese\"],\"すもう\":[\"japanese\"],\"すやき\":[\"japanese\"],\"すらすら\":[\"japanese\"],\"するめ\":[\"japanese\"],\"すれちがう\":[\"japanese\"],\"すろっと\":[\"japanese\"],\"すわる\":[\"japanese\"],\"すんぜん\":[\"japanese\"],\"すんぽう\":[\"japanese\"],\"せあぶら\":[\"japanese\"],\"せいかつ\":[\"japanese\"],\"せいげん\":[\"japanese\"],\"せいじ\":[\"japanese\"],\"せいよう\":[\"japanese\"],\"せおう\":[\"japanese\"],\"せかいかん\":[\"japanese\"],\"せきにん\":[\"japanese\"],\"せきむ\":[\"japanese\"],\"せきゆ\":[\"japanese\"],\"せきらんうん\":[\"japanese\"],\"せけん\":[\"japanese\"],\"せこう\":[\"japanese\"],\"せすじ\":[\"japanese\"],\"せたい\":[\"japanese\"],\"せたけ\":[\"japanese\"],\"せっかく\":[\"japanese\"],\"せっきゃく\":[\"japanese\"],\"ぜっく\":[\"japanese\"],\"せっけん\":[\"japanese\"],\"せっこつ\":[\"japanese\"],\"せっさたくま\":[\"japanese\"],\"せつぞく\":[\"japanese\"],\"せつだん\":[\"japanese\"],\"せつでん\":[\"japanese\"],\"せっぱん\":[\"japanese\"],\"せつび\":[\"japanese\"],\"せつぶん\":[\"japanese\"],\"せつめい\":[\"japanese\"],\"せつりつ\":[\"japanese\"],\"せなか\":[\"japanese\"],\"せのび\":[\"japanese\"],\"せはば\":[\"japanese\"],\"せびろ\":[\"japanese\"],\"せぼね\":[\"japanese\"],\"せまい\":[\"japanese\"],\"せまる\":[\"japanese\"],\"せめる\":[\"japanese\"],\"せもたれ\":[\"japanese\"],\"せりふ\":[\"japanese\"],\"ぜんあく\":[\"japanese\"],\"せんい\":[\"japanese\"],\"せんえい\":[\"japanese\"],\"せんか\":[\"japanese\"],\"せんきょ\":[\"japanese\"],\"せんく\":[\"japanese\"],\"せんげん\":[\"japanese\"],\"ぜんご\":[\"japanese\"],\"せんさい\":[\"japanese\"],\"せんしゅ\":[\"japanese\"],\"せんすい\":[\"japanese\"],\"せんせい\":[\"japanese\"],\"せんぞ\":[\"japanese\"],\"せんたく\":[\"japanese\"],\"せんちょう\":[\"japanese\"],\"せんてい\":[\"japanese\"],\"せんとう\":[\"japanese\"],\"せんぬき\":[\"japanese\"],\"せんねん\":[\"japanese\"],\"せんぱい\":[\"japanese\"],\"ぜんぶ\":[\"japanese\"],\"ぜんぽう\":[\"japanese\"],\"せんむ\":[\"japanese\"],\"せんめんじょ\":[\"japanese\"],\"せんもん\":[\"japanese\"],\"せんやく\":[\"japanese\"],\"せんゆう\":[\"japanese\"],\"せんよう\":[\"japanese\"],\"ぜんら\":[\"japanese\"],\"ぜんりゃく\":[\"japanese\"],\"せんれい\":[\"japanese\"],\"せんろ\":[\"japanese\"],\"そあく\":[\"japanese\"],\"そいとげる\":[\"japanese\"],\"そいね\":[\"japanese\"],\"そうがんきょう\":[\"japanese\"],\"そうき\":[\"japanese\"],\"そうご\":[\"japanese\"],\"そうしん\":[\"japanese\"],\"そうだん\":[\"japanese\"],\"そうなん\":[\"japanese\"],\"そうび\":[\"japanese\"],\"そうめん\":[\"japanese\"],\"そうり\":[\"japanese\"],\"そえもの\":[\"japanese\"],\"そえん\":[\"japanese\"],\"そがい\":[\"japanese\"],\"そげき\":[\"japanese\"],\"そこう\":[\"japanese\"],\"そこそこ\":[\"japanese\"],\"そざい\":[\"japanese\"],\"そしな\":[\"japanese\"],\"そせい\":[\"japanese\"],\"そせん\":[\"japanese\"],\"そそぐ\":[\"japanese\"],\"そだてる\":[\"japanese\"],\"そつう\":[\"japanese\"],\"そつえん\":[\"japanese\"],\"そっかん\":[\"japanese\"],\"そつぎょう\":[\"japanese\"],\"そっけつ\":[\"japanese\"],\"そっこう\":[\"japanese\"],\"そっせん\":[\"japanese\"],\"そっと\":[\"japanese\"],\"そとがわ\":[\"japanese\"],\"そとづら\":[\"japanese\"],\"そなえる\":[\"japanese\"],\"そなた\":[\"japanese\"],\"そふぼ\":[\"japanese\"],\"そぼく\":[\"japanese\"],\"そぼろ\":[\"japanese\"],\"そまつ\":[\"japanese\"],\"そまる\":[\"japanese\"],\"そむく\":[\"japanese\"],\"そむりえ\":[\"japanese\"],\"そめる\":[\"japanese\"],\"そもそも\":[\"japanese\"],\"そよかぜ\":[\"japanese\"],\"そらまめ\":[\"japanese\"],\"そろう\":[\"japanese\"],\"そんかい\":[\"japanese\"],\"そんけい\":[\"japanese\"],\"そんざい\":[\"japanese\"],\"そんしつ\":[\"japanese\"],\"そんぞく\":[\"japanese\"],\"そんちょう\":[\"japanese\"],\"ぞんび\":[\"japanese\"],\"ぞんぶん\":[\"japanese\"],\"そんみん\":[\"japanese\"],\"たあい\":[\"japanese\"],\"たいいん\":[\"japanese\"],\"たいうん\":[\"japanese\"],\"たいえき\":[\"japanese\"],\"たいおう\":[\"japanese\"],\"だいがく\":[\"japanese\"],\"たいき\":[\"japanese\"],\"たいぐう\":[\"japanese\"],\"たいけん\":[\"japanese\"],\"たいこ\":[\"japanese\"],\"たいざい\":[\"japanese\"],\"だいじょうぶ\":[\"japanese\"],\"だいすき\":[\"japanese\"],\"たいせつ\":[\"japanese\"],\"たいそう\":[\"japanese\"],\"だいたい\":[\"japanese\"],\"たいちょう\":[\"japanese\"],\"たいてい\":[\"japanese\"],\"だいどころ\":[\"japanese\"],\"たいない\":[\"japanese\"],\"たいねつ\":[\"japanese\"],\"たいのう\":[\"japanese\"],\"たいはん\":[\"japanese\"],\"だいひょう\":[\"japanese\"],\"たいふう\":[\"japanese\"],\"たいへん\":[\"japanese\"],\"たいほ\":[\"japanese\"],\"たいまつばな\":[\"japanese\"],\"たいみんぐ\":[\"japanese\"],\"たいむ\":[\"japanese\"],\"たいめん\":[\"japanese\"],\"たいやき\":[\"japanese\"],\"たいよう\":[\"japanese\"],\"たいら\":[\"japanese\"],\"たいりょく\":[\"japanese\"],\"たいる\":[\"japanese\"],\"たいわん\":[\"japanese\"],\"たうえ\":[\"japanese\"],\"たえる\":[\"japanese\"],\"たおす\":[\"japanese\"],\"たおる\":[\"japanese\"],\"たおれる\":[\"japanese\"],\"たかい\":[\"japanese\"],\"たかね\":[\"japanese\"],\"たきび\":[\"japanese\"],\"たくさん\":[\"japanese\"],\"たこく\":[\"japanese\"],\"たこやき\":[\"japanese\"],\"たさい\":[\"japanese\"],\"たしざん\":[\"japanese\"],\"だじゃれ\":[\"japanese\"],\"たすける\":[\"japanese\"],\"たずさわる\":[\"japanese\"],\"たそがれ\":[\"japanese\"],\"たたかう\":[\"japanese\"],\"たたく\":[\"japanese\"],\"ただしい\":[\"japanese\"],\"たたみ\":[\"japanese\"],\"たちばな\":[\"japanese\"],\"だっかい\":[\"japanese\"],\"だっきゃく\":[\"japanese\"],\"だっこ\":[\"japanese\"],\"だっしゅつ\":[\"japanese\"],\"だったい\":[\"japanese\"],\"たてる\":[\"japanese\"],\"たとえる\":[\"japanese\"],\"たなばた\":[\"japanese\"],\"たにん\":[\"japanese\"],\"たぬき\":[\"japanese\"],\"たのしみ\":[\"japanese\"],\"たはつ\":[\"japanese\"],\"たぶん\":[\"japanese\"],\"たべる\":[\"japanese\"],\"たぼう\":[\"japanese\"],\"たまご\":[\"japanese\"],\"たまる\":[\"japanese\"],\"だむる\":[\"japanese\"],\"ためいき\":[\"japanese\"],\"ためす\":[\"japanese\"],\"ためる\":[\"japanese\"],\"たもつ\":[\"japanese\"],\"たやすい\":[\"japanese\"],\"たよる\":[\"japanese\"],\"たらす\":[\"japanese\"],\"たりきほんがん\":[\"japanese\"],\"たりょう\":[\"japanese\"],\"たりる\":[\"japanese\"],\"たると\":[\"japanese\"],\"たれる\":[\"japanese\"],\"たれんと\":[\"japanese\"],\"たろっと\":[\"japanese\"],\"たわむれる\":[\"japanese\"],\"だんあつ\":[\"japanese\"],\"たんい\":[\"japanese\"],\"たんおん\":[\"japanese\"],\"たんか\":[\"japanese\"],\"たんき\":[\"japanese\"],\"たんけん\":[\"japanese\"],\"たんご\":[\"japanese\"],\"たんさん\":[\"japanese\"],\"たんじょうび\":[\"japanese\"],\"だんせい\":[\"japanese\"],\"たんそく\":[\"japanese\"],\"たんたい\":[\"japanese\"],\"だんち\":[\"japanese\"],\"たんてい\":[\"japanese\"],\"たんとう\":[\"japanese\"],\"だんな\":[\"japanese\"],\"たんにん\":[\"japanese\"],\"だんねつ\":[\"japanese\"],\"たんのう\":[\"japanese\"],\"たんぴん\":[\"japanese\"],\"だんぼう\":[\"japanese\"],\"たんまつ\":[\"japanese\"],\"たんめい\":[\"japanese\"],\"だんれつ\":[\"japanese\"],\"だんろ\":[\"japanese\"],\"だんわ\":[\"japanese\"],\"ちあい\":[\"japanese\"],\"ちあん\":[\"japanese\"],\"ちいき\":[\"japanese\"],\"ちいさい\":[\"japanese\"],\"ちえん\":[\"japanese\"],\"ちかい\":[\"japanese\"],\"ちから\":[\"japanese\"],\"ちきゅう\":[\"japanese\"],\"ちきん\":[\"japanese\"],\"ちけいず\":[\"japanese\"],\"ちけん\":[\"japanese\"],\"ちこく\":[\"japanese\"],\"ちさい\":[\"japanese\"],\"ちしき\":[\"japanese\"],\"ちしりょう\":[\"japanese\"],\"ちせい\":[\"japanese\"],\"ちそう\":[\"japanese\"],\"ちたい\":[\"japanese\"],\"ちたん\":[\"japanese\"],\"ちちおや\":[\"japanese\"],\"ちつじょ\":[\"japanese\"],\"ちてき\":[\"japanese\"],\"ちてん\":[\"japanese\"],\"ちぬき\":[\"japanese\"],\"ちぬり\":[\"japanese\"],\"ちのう\":[\"japanese\"],\"ちひょう\":[\"japanese\"],\"ちへいせん\":[\"japanese\"],\"ちほう\":[\"japanese\"],\"ちまた\":[\"japanese\"],\"ちみつ\":[\"japanese\"],\"ちみどろ\":[\"japanese\"],\"ちめいど\":[\"japanese\"],\"ちゃんこなべ\":[\"japanese\"],\"ちゅうい\":[\"japanese\"],\"ちゆりょく\":[\"japanese\"],\"ちょうし\":[\"japanese\"],\"ちょさくけん\":[\"japanese\"],\"ちらし\":[\"japanese\"],\"ちらみ\":[\"japanese\"],\"ちりがみ\":[\"japanese\"],\"ちりょう\":[\"japanese\"],\"ちるど\":[\"japanese\"],\"ちわわ\":[\"japanese\"],\"ちんたい\":[\"japanese\"],\"ちんもく\":[\"japanese\"],\"ついか\":[\"japanese\"],\"ついたち\":[\"japanese\"],\"つうか\":[\"japanese\"],\"つうじょう\":[\"japanese\"],\"つうはん\":[\"japanese\"],\"つうわ\":[\"japanese\"],\"つかう\":[\"japanese\"],\"つかれる\":[\"japanese\"],\"つくね\":[\"japanese\"],\"つくる\":[\"japanese\"],\"つけね\":[\"japanese\"],\"つける\":[\"japanese\"],\"つごう\":[\"japanese\"],\"つたえる\":[\"japanese\"],\"つづく\":[\"japanese\"],\"つつじ\":[\"japanese\"],\"つつむ\":[\"japanese\"],\"つとめる\":[\"japanese\"],\"つながる\":[\"japanese\"],\"つなみ\":[\"japanese\"],\"つねづね\":[\"japanese\"],\"つのる\":[\"japanese\"],\"つぶす\":[\"japanese\"],\"つまらない\":[\"japanese\"],\"つまる\":[\"japanese\"],\"つみき\":[\"japanese\"],\"つめたい\":[\"japanese\"],\"つもり\":[\"japanese\"],\"つもる\":[\"japanese\"],\"つよい\":[\"japanese\"],\"つるぼ\":[\"japanese\"],\"つるみく\":[\"japanese\"],\"つわもの\":[\"japanese\"],\"つわり\":[\"japanese\"],\"てあし\":[\"japanese\"],\"てあて\":[\"japanese\"],\"てあみ\":[\"japanese\"],\"ていおん\":[\"japanese\"],\"ていか\":[\"japanese\"],\"ていき\":[\"japanese\"],\"ていけい\":[\"japanese\"],\"ていこく\":[\"japanese\"],\"ていさつ\":[\"japanese\"],\"ていし\":[\"japanese\"],\"ていせい\":[\"japanese\"],\"ていたい\":[\"japanese\"],\"ていど\":[\"japanese\"],\"ていねい\":[\"japanese\"],\"ていひょう\":[\"japanese\"],\"ていへん\":[\"japanese\"],\"ていぼう\":[\"japanese\"],\"てうち\":[\"japanese\"],\"ておくれ\":[\"japanese\"],\"てきとう\":[\"japanese\"],\"てくび\":[\"japanese\"],\"でこぼこ\":[\"japanese\"],\"てさぎょう\":[\"japanese\"],\"てさげ\":[\"japanese\"],\"てすり\":[\"japanese\"],\"てそう\":[\"japanese\"],\"てちがい\":[\"japanese\"],\"てちょう\":[\"japanese\"],\"てつがく\":[\"japanese\"],\"てつづき\":[\"japanese\"],\"でっぱ\":[\"japanese\"],\"てつぼう\":[\"japanese\"],\"てつや\":[\"japanese\"],\"でぬかえ\":[\"japanese\"],\"てぬき\":[\"japanese\"],\"てぬぐい\":[\"japanese\"],\"てのひら\":[\"japanese\"],\"てはい\":[\"japanese\"],\"てぶくろ\":[\"japanese\"],\"てふだ\":[\"japanese\"],\"てほどき\":[\"japanese\"],\"てほん\":[\"japanese\"],\"てまえ\":[\"japanese\"],\"てまきずし\":[\"japanese\"],\"てみじか\":[\"japanese\"],\"てみやげ\":[\"japanese\"],\"てらす\":[\"japanese\"],\"てれび\":[\"japanese\"],\"てわけ\":[\"japanese\"],\"てわたし\":[\"japanese\"],\"でんあつ\":[\"japanese\"],\"てんいん\":[\"japanese\"],\"てんかい\":[\"japanese\"],\"てんき\":[\"japanese\"],\"てんぐ\":[\"japanese\"],\"てんけん\":[\"japanese\"],\"てんごく\":[\"japanese\"],\"てんさい\":[\"japanese\"],\"てんし\":[\"japanese\"],\"てんすう\":[\"japanese\"],\"でんち\":[\"japanese\"],\"てんてき\":[\"japanese\"],\"てんとう\":[\"japanese\"],\"てんない\":[\"japanese\"],\"てんぷら\":[\"japanese\"],\"てんぼうだい\":[\"japanese\"],\"てんめつ\":[\"japanese\"],\"てんらんかい\":[\"japanese\"],\"でんりょく\":[\"japanese\"],\"でんわ\":[\"japanese\"],\"どあい\":[\"japanese\"],\"といれ\":[\"japanese\"],\"どうかん\":[\"japanese\"],\"とうきゅう\":[\"japanese\"],\"どうぐ\":[\"japanese\"],\"とうし\":[\"japanese\"],\"とうむぎ\":[\"japanese\"],\"とおい\":[\"japanese\"],\"とおか\":[\"japanese\"],\"とおく\":[\"japanese\"],\"とおす\":[\"japanese\"],\"とおる\":[\"japanese\"],\"とかい\":[\"japanese\"],\"とかす\":[\"japanese\"],\"ときおり\":[\"japanese\"],\"ときどき\":[\"japanese\"],\"とくい\":[\"japanese\"],\"とくしゅう\":[\"japanese\"],\"とくてん\":[\"japanese\"],\"とくに\":[\"japanese\"],\"とくべつ\":[\"japanese\"],\"とけい\":[\"japanese\"],\"とける\":[\"japanese\"],\"とこや\":[\"japanese\"],\"とさか\":[\"japanese\"],\"としょかん\":[\"japanese\"],\"とそう\":[\"japanese\"],\"とたん\":[\"japanese\"],\"とちゅう\":[\"japanese\"],\"とっきゅう\":[\"japanese\"],\"とっくん\":[\"japanese\"],\"とつぜん\":[\"japanese\"],\"とつにゅう\":[\"japanese\"],\"とどける\":[\"japanese\"],\"ととのえる\":[\"japanese\"],\"とない\":[\"japanese\"],\"となえる\":[\"japanese\"],\"となり\":[\"japanese\"],\"とのさま\":[\"japanese\"],\"とばす\":[\"japanese\"],\"どぶがわ\":[\"japanese\"],\"とほう\":[\"japanese\"],\"とまる\":[\"japanese\"],\"とめる\":[\"japanese\"],\"ともだち\":[\"japanese\"],\"ともる\":[\"japanese\"],\"どようび\":[\"japanese\"],\"とらえる\":[\"japanese\"],\"とんかつ\":[\"japanese\"],\"どんぶり\":[\"japanese\"],\"ないかく\":[\"japanese\"],\"ないこう\":[\"japanese\"],\"ないしょ\":[\"japanese\"],\"ないす\":[\"japanese\"],\"ないせん\":[\"japanese\"],\"ないそう\":[\"japanese\"],\"なおす\":[\"japanese\"],\"ながい\":[\"japanese\"],\"なくす\":[\"japanese\"],\"なげる\":[\"japanese\"],\"なこうど\":[\"japanese\"],\"なさけ\":[\"japanese\"],\"なたでここ\":[\"japanese\"],\"なっとう\":[\"japanese\"],\"なつやすみ\":[\"japanese\"],\"ななおし\":[\"japanese\"],\"なにごと\":[\"japanese\"],\"なにもの\":[\"japanese\"],\"なにわ\":[\"japanese\"],\"なのか\":[\"japanese\"],\"なふだ\":[\"japanese\"],\"なまいき\":[\"japanese\"],\"なまえ\":[\"japanese\"],\"なまみ\":[\"japanese\"],\"なみだ\":[\"japanese\"],\"なめらか\":[\"japanese\"],\"なめる\":[\"japanese\"],\"なやむ\":[\"japanese\"],\"ならう\":[\"japanese\"],\"ならび\":[\"japanese\"],\"ならぶ\":[\"japanese\"],\"なれる\":[\"japanese\"],\"なわとび\":[\"japanese\"],\"なわばり\":[\"japanese\"],\"にあう\":[\"japanese\"],\"にいがた\":[\"japanese\"],\"にうけ\":[\"japanese\"],\"におい\":[\"japanese\"],\"にかい\":[\"japanese\"],\"にがて\":[\"japanese\"],\"にきび\":[\"japanese\"],\"にくしみ\":[\"japanese\"],\"にくまん\":[\"japanese\"],\"にげる\":[\"japanese\"],\"にさんかたんそ\":[\"japanese\"],\"にしき\":[\"japanese\"],\"にせもの\":[\"japanese\"],\"にちじょう\":[\"japanese\"],\"にちようび\":[\"japanese\"],\"にっか\":[\"japanese\"],\"にっき\":[\"japanese\"],\"にっけい\":[\"japanese\"],\"にっこう\":[\"japanese\"],\"にっさん\":[\"japanese\"],\"にっしょく\":[\"japanese\"],\"にっすう\":[\"japanese\"],\"にっせき\":[\"japanese\"],\"にってい\":[\"japanese\"],\"になう\":[\"japanese\"],\"にほん\":[\"japanese\"],\"にまめ\":[\"japanese\"],\"にもつ\":[\"japanese\"],\"にやり\":[\"japanese\"],\"にゅういん\":[\"japanese\"],\"にりんしゃ\":[\"japanese\"],\"にわとり\":[\"japanese\"],\"にんい\":[\"japanese\"],\"にんか\":[\"japanese\"],\"にんき\":[\"japanese\"],\"にんげん\":[\"japanese\"],\"にんしき\":[\"japanese\"],\"にんずう\":[\"japanese\"],\"にんそう\":[\"japanese\"],\"にんたい\":[\"japanese\"],\"にんち\":[\"japanese\"],\"にんてい\":[\"japanese\"],\"にんにく\":[\"japanese\"],\"にんぷ\":[\"japanese\"],\"にんまり\":[\"japanese\"],\"にんむ\":[\"japanese\"],\"にんめい\":[\"japanese\"],\"にんよう\":[\"japanese\"],\"ぬいくぎ\":[\"japanese\"],\"ぬかす\":[\"japanese\"],\"ぬぐいとる\":[\"japanese\"],\"ぬぐう\":[\"japanese\"],\"ぬくもり\":[\"japanese\"],\"ぬすむ\":[\"japanese\"],\"ぬまえび\":[\"japanese\"],\"ぬめり\":[\"japanese\"],\"ぬらす\":[\"japanese\"],\"ぬんちゃく\":[\"japanese\"],\"ねあげ\":[\"japanese\"],\"ねいき\":[\"japanese\"],\"ねいる\":[\"japanese\"],\"ねいろ\":[\"japanese\"],\"ねぐせ\":[\"japanese\"],\"ねくたい\":[\"japanese\"],\"ねくら\":[\"japanese\"],\"ねこぜ\":[\"japanese\"],\"ねこむ\":[\"japanese\"],\"ねさげ\":[\"japanese\"],\"ねすごす\":[\"japanese\"],\"ねそべる\":[\"japanese\"],\"ねだん\":[\"japanese\"],\"ねつい\":[\"japanese\"],\"ねっしん\":[\"japanese\"],\"ねつぞう\":[\"japanese\"],\"ねったいぎょ\":[\"japanese\"],\"ねぶそく\":[\"japanese\"],\"ねふだ\":[\"japanese\"],\"ねぼう\":[\"japanese\"],\"ねほりはほり\":[\"japanese\"],\"ねまき\":[\"japanese\"],\"ねまわし\":[\"japanese\"],\"ねみみ\":[\"japanese\"],\"ねむい\":[\"japanese\"],\"ねむたい\":[\"japanese\"],\"ねもと\":[\"japanese\"],\"ねらう\":[\"japanese\"],\"ねわざ\":[\"japanese\"],\"ねんいり\":[\"japanese\"],\"ねんおし\":[\"japanese\"],\"ねんかん\":[\"japanese\"],\"ねんきん\":[\"japanese\"],\"ねんぐ\":[\"japanese\"],\"ねんざ\":[\"japanese\"],\"ねんし\":[\"japanese\"],\"ねんちゃく\":[\"japanese\"],\"ねんど\":[\"japanese\"],\"ねんぴ\":[\"japanese\"],\"ねんぶつ\":[\"japanese\"],\"ねんまつ\":[\"japanese\"],\"ねんりょう\":[\"japanese\"],\"ねんれい\":[\"japanese\"],\"のいず\":[\"japanese\"],\"のおづま\":[\"japanese\"],\"のがす\":[\"japanese\"],\"のきなみ\":[\"japanese\"],\"のこぎり\":[\"japanese\"],\"のこす\":[\"japanese\"],\"のこる\":[\"japanese\"],\"のせる\":[\"japanese\"],\"のぞく\":[\"japanese\"],\"のぞむ\":[\"japanese\"],\"のたまう\":[\"japanese\"],\"のちほど\":[\"japanese\"],\"のっく\":[\"japanese\"],\"のばす\":[\"japanese\"],\"のはら\":[\"japanese\"],\"のべる\":[\"japanese\"],\"のぼる\":[\"japanese\"],\"のみもの\":[\"japanese\"],\"のやま\":[\"japanese\"],\"のらいぬ\":[\"japanese\"],\"のらねこ\":[\"japanese\"],\"のりもの\":[\"japanese\"],\"のりゆき\":[\"japanese\"],\"のれん\":[\"japanese\"],\"のんき\":[\"japanese\"],\"ばあい\":[\"japanese\"],\"はあく\":[\"japanese\"],\"ばあさん\":[\"japanese\"],\"ばいか\":[\"japanese\"],\"ばいく\":[\"japanese\"],\"はいけん\":[\"japanese\"],\"はいご\":[\"japanese\"],\"はいしん\":[\"japanese\"],\"はいすい\":[\"japanese\"],\"はいせん\":[\"japanese\"],\"はいそう\":[\"japanese\"],\"はいち\":[\"japanese\"],\"ばいばい\":[\"japanese\"],\"はいれつ\":[\"japanese\"],\"はえる\":[\"japanese\"],\"はおる\":[\"japanese\"],\"はかい\":[\"japanese\"],\"ばかり\":[\"japanese\"],\"はかる\":[\"japanese\"],\"はくしゅ\":[\"japanese\"],\"はけん\":[\"japanese\"],\"はこぶ\":[\"japanese\"],\"はさみ\":[\"japanese\"],\"はさん\":[\"japanese\"],\"はしご\":[\"japanese\"],\"ばしょ\":[\"japanese\"],\"はしる\":[\"japanese\"],\"はせる\":[\"japanese\"],\"ぱそこん\":[\"japanese\"],\"はそん\":[\"japanese\"],\"はたん\":[\"japanese\"],\"はちみつ\":[\"japanese\"],\"はつおん\":[\"japanese\"],\"はっかく\":[\"japanese\"],\"はづき\":[\"japanese\"],\"はっきり\":[\"japanese\"],\"はっくつ\":[\"japanese\"],\"はっけん\":[\"japanese\"],\"はっこう\":[\"japanese\"],\"はっさん\":[\"japanese\"],\"はっしん\":[\"japanese\"],\"はったつ\":[\"japanese\"],\"はっちゅう\":[\"japanese\"],\"はってん\":[\"japanese\"],\"はっぴょう\":[\"japanese\"],\"はっぽう\":[\"japanese\"],\"はなす\":[\"japanese\"],\"はなび\":[\"japanese\"],\"はにかむ\":[\"japanese\"],\"はぶらし\":[\"japanese\"],\"はみがき\":[\"japanese\"],\"はむかう\":[\"japanese\"],\"はめつ\":[\"japanese\"],\"はやい\":[\"japanese\"],\"はやし\":[\"japanese\"],\"はらう\":[\"japanese\"],\"はろうぃん\":[\"japanese\"],\"はわい\":[\"japanese\"],\"はんい\":[\"japanese\"],\"はんえい\":[\"japanese\"],\"はんおん\":[\"japanese\"],\"はんかく\":[\"japanese\"],\"はんきょう\":[\"japanese\"],\"ばんぐみ\":[\"japanese\"],\"はんこ\":[\"japanese\"],\"はんしゃ\":[\"japanese\"],\"はんすう\":[\"japanese\"],\"はんだん\":[\"japanese\"],\"ぱんち\":[\"japanese\"],\"ぱんつ\":[\"japanese\"],\"はんてい\":[\"japanese\"],\"はんとし\":[\"japanese\"],\"はんのう\":[\"japanese\"],\"はんぱ\":[\"japanese\"],\"はんぶん\":[\"japanese\"],\"はんぺん\":[\"japanese\"],\"はんぼうき\":[\"japanese\"],\"はんめい\":[\"japanese\"],\"はんらん\":[\"japanese\"],\"はんろん\":[\"japanese\"],\"ひいき\":[\"japanese\"],\"ひうん\":[\"japanese\"],\"ひえる\":[\"japanese\"],\"ひかく\":[\"japanese\"],\"ひかり\":[\"japanese\"],\"ひかる\":[\"japanese\"],\"ひかん\":[\"japanese\"],\"ひくい\":[\"japanese\"],\"ひけつ\":[\"japanese\"],\"ひこうき\":[\"japanese\"],\"ひこく\":[\"japanese\"],\"ひさい\":[\"japanese\"],\"ひさしぶり\":[\"japanese\"],\"ひさん\":[\"japanese\"],\"びじゅつかん\":[\"japanese\"],\"ひしょ\":[\"japanese\"],\"ひそか\":[\"japanese\"],\"ひそむ\":[\"japanese\"],\"ひたむき\":[\"japanese\"],\"ひだり\":[\"japanese\"],\"ひたる\":[\"japanese\"],\"ひつぎ\":[\"japanese\"],\"ひっこし\":[\"japanese\"],\"ひっし\":[\"japanese\"],\"ひつじゅひん\":[\"japanese\"],\"ひっす\":[\"japanese\"],\"ひつぜん\":[\"japanese\"],\"ぴったり\":[\"japanese\"],\"ぴっちり\":[\"japanese\"],\"ひつよう\":[\"japanese\"],\"ひてい\":[\"japanese\"],\"ひとごみ\":[\"japanese\"],\"ひなまつり\":[\"japanese\"],\"ひなん\":[\"japanese\"],\"ひねる\":[\"japanese\"],\"ひはん\":[\"japanese\"],\"ひびく\":[\"japanese\"],\"ひひょう\":[\"japanese\"],\"ひほう\":[\"japanese\"],\"ひまわり\":[\"japanese\"],\"ひまん\":[\"japanese\"],\"ひみつ\":[\"japanese\"],\"ひめい\":[\"japanese\"],\"ひめじし\":[\"japanese\"],\"ひやけ\":[\"japanese\"],\"ひやす\":[\"japanese\"],\"ひよう\":[\"japanese\"],\"びょうき\":[\"japanese\"],\"ひらがな\":[\"japanese\"],\"ひらく\":[\"japanese\"],\"ひりつ\":[\"japanese\"],\"ひりょう\":[\"japanese\"],\"ひるま\":[\"japanese\"],\"ひるやすみ\":[\"japanese\"],\"ひれい\":[\"japanese\"],\"ひろい\":[\"japanese\"],\"ひろう\":[\"japanese\"],\"ひろき\":[\"japanese\"],\"ひろゆき\":[\"japanese\"],\"ひんかく\":[\"japanese\"],\"ひんけつ\":[\"japanese\"],\"ひんこん\":[\"japanese\"],\"ひんしゅ\":[\"japanese\"],\"ひんそう\":[\"japanese\"],\"ぴんち\":[\"japanese\"],\"ひんぱん\":[\"japanese\"],\"びんぼう\":[\"japanese\"],\"ふあん\":[\"japanese\"],\"ふいうち\":[\"japanese\"],\"ふうけい\":[\"japanese\"],\"ふうせん\":[\"japanese\"],\"ぷうたろう\":[\"japanese\"],\"ふうとう\":[\"japanese\"],\"ふうふ\":[\"japanese\"],\"ふえる\":[\"japanese\"],\"ふおん\":[\"japanese\"],\"ふかい\":[\"japanese\"],\"ふきん\":[\"japanese\"],\"ふくざつ\":[\"japanese\"],\"ふくぶくろ\":[\"japanese\"],\"ふこう\":[\"japanese\"],\"ふさい\":[\"japanese\"],\"ふしぎ\":[\"japanese\"],\"ふじみ\":[\"japanese\"],\"ふすま\":[\"japanese\"],\"ふせい\":[\"japanese\"],\"ふせぐ\":[\"japanese\"],\"ふそく\":[\"japanese\"],\"ぶたにく\":[\"japanese\"],\"ふたん\":[\"japanese\"],\"ふちょう\":[\"japanese\"],\"ふつう\":[\"japanese\"],\"ふつか\":[\"japanese\"],\"ふっかつ\":[\"japanese\"],\"ふっき\":[\"japanese\"],\"ふっこく\":[\"japanese\"],\"ぶどう\":[\"japanese\"],\"ふとる\":[\"japanese\"],\"ふとん\":[\"japanese\"],\"ふのう\":[\"japanese\"],\"ふはい\":[\"japanese\"],\"ふひょう\":[\"japanese\"],\"ふへん\":[\"japanese\"],\"ふまん\":[\"japanese\"],\"ふみん\":[\"japanese\"],\"ふめつ\":[\"japanese\"],\"ふめん\":[\"japanese\"],\"ふよう\":[\"japanese\"],\"ふりこ\":[\"japanese\"],\"ふりる\":[\"japanese\"],\"ふるい\":[\"japanese\"],\"ふんいき\":[\"japanese\"],\"ぶんがく\":[\"japanese\"],\"ぶんぐ\":[\"japanese\"],\"ふんしつ\":[\"japanese\"],\"ぶんせき\":[\"japanese\"],\"ふんそう\":[\"japanese\"],\"ぶんぽう\":[\"japanese\"],\"へいあん\":[\"japanese\"],\"へいおん\":[\"japanese\"],\"へいがい\":[\"japanese\"],\"へいき\":[\"japanese\"],\"へいげん\":[\"japanese\"],\"へいこう\":[\"japanese\"],\"へいさ\":[\"japanese\"],\"へいしゃ\":[\"japanese\"],\"へいせつ\":[\"japanese\"],\"へいそ\":[\"japanese\"],\"へいたく\":[\"japanese\"],\"へいてん\":[\"japanese\"],\"へいねつ\":[\"japanese\"],\"へいわ\":[\"japanese\"],\"へきが\":[\"japanese\"],\"へこむ\":[\"japanese\"],\"べにいろ\":[\"japanese\"],\"べにしょうが\":[\"japanese\"],\"へらす\":[\"japanese\"],\"へんかん\":[\"japanese\"],\"べんきょう\":[\"japanese\"],\"べんごし\":[\"japanese\"],\"へんさい\":[\"japanese\"],\"へんたい\":[\"japanese\"],\"べんり\":[\"japanese\"],\"ほあん\":[\"japanese\"],\"ほいく\":[\"japanese\"],\"ぼうぎょ\":[\"japanese\"],\"ほうこく\":[\"japanese\"],\"ほうそう\":[\"japanese\"],\"ほうほう\":[\"japanese\"],\"ほうもん\":[\"japanese\"],\"ほうりつ\":[\"japanese\"],\"ほえる\":[\"japanese\"],\"ほおん\":[\"japanese\"],\"ほかん\":[\"japanese\"],\"ほきょう\":[\"japanese\"],\"ぼきん\":[\"japanese\"],\"ほくろ\":[\"japanese\"],\"ほけつ\":[\"japanese\"],\"ほけん\":[\"japanese\"],\"ほこう\":[\"japanese\"],\"ほこる\":[\"japanese\"],\"ほしい\":[\"japanese\"],\"ほしつ\":[\"japanese\"],\"ほしゅ\":[\"japanese\"],\"ほしょう\":[\"japanese\"],\"ほせい\":[\"japanese\"],\"ほそい\":[\"japanese\"],\"ほそく\":[\"japanese\"],\"ほたて\":[\"japanese\"],\"ほたる\":[\"japanese\"],\"ぽちぶくろ\":[\"japanese\"],\"ほっきょく\":[\"japanese\"],\"ほっさ\":[\"japanese\"],\"ほったん\":[\"japanese\"],\"ほとんど\":[\"japanese\"],\"ほめる\":[\"japanese\"],\"ほんい\":[\"japanese\"],\"ほんき\":[\"japanese\"],\"ほんけ\":[\"japanese\"],\"ほんしつ\":[\"japanese\"],\"ほんやく\":[\"japanese\"],\"まいにち\":[\"japanese\"],\"まかい\":[\"japanese\"],\"まかせる\":[\"japanese\"],\"まがる\":[\"japanese\"],\"まける\":[\"japanese\"],\"まこと\":[\"japanese\"],\"まさつ\":[\"japanese\"],\"まじめ\":[\"japanese\"],\"ますく\":[\"japanese\"],\"まぜる\":[\"japanese\"],\"まつり\":[\"japanese\"],\"まとめ\":[\"japanese\"],\"まなぶ\":[\"japanese\"],\"まぬけ\":[\"japanese\"],\"まねく\":[\"japanese\"],\"まほう\":[\"japanese\"],\"まもる\":[\"japanese\"],\"まゆげ\":[\"japanese\"],\"まよう\":[\"japanese\"],\"まろやか\":[\"japanese\"],\"まわす\":[\"japanese\"],\"まわり\":[\"japanese\"],\"まわる\":[\"japanese\"],\"まんが\":[\"japanese\"],\"まんきつ\":[\"japanese\"],\"まんぞく\":[\"japanese\"],\"まんなか\":[\"japanese\"],\"みいら\":[\"japanese\"],\"みうち\":[\"japanese\"],\"みえる\":[\"japanese\"],\"みがく\":[\"japanese\"],\"みかた\":[\"japanese\"],\"みかん\":[\"japanese\"],\"みけん\":[\"japanese\"],\"みこん\":[\"japanese\"],\"みじかい\":[\"japanese\"],\"みすい\":[\"japanese\"],\"みすえる\":[\"japanese\"],\"みせる\":[\"japanese\"],\"みっか\":[\"japanese\"],\"みつかる\":[\"japanese\"],\"みつける\":[\"japanese\"],\"みてい\":[\"japanese\"],\"みとめる\":[\"japanese\"],\"みなと\":[\"japanese\"],\"みなみかさい\":[\"japanese\"],\"みねらる\":[\"japanese\"],\"みのう\":[\"japanese\"],\"みのがす\":[\"japanese\"],\"みほん\":[\"japanese\"],\"みもと\":[\"japanese\"],\"みやげ\":[\"japanese\"],\"みらい\":[\"japanese\"],\"みりょく\":[\"japanese\"],\"みわく\":[\"japanese\"],\"みんか\":[\"japanese\"],\"みんぞく\":[\"japanese\"],\"むいか\":[\"japanese\"],\"むえき\":[\"japanese\"],\"むえん\":[\"japanese\"],\"むかい\":[\"japanese\"],\"むかう\":[\"japanese\"],\"むかえ\":[\"japanese\"],\"むかし\":[\"japanese\"],\"むぎちゃ\":[\"japanese\"],\"むける\":[\"japanese\"],\"むげん\":[\"japanese\"],\"むさぼる\":[\"japanese\"],\"むしあつい\":[\"japanese\"],\"むしば\":[\"japanese\"],\"むじゅん\":[\"japanese\"],\"むしろ\":[\"japanese\"],\"むすう\":[\"japanese\"],\"むすこ\":[\"japanese\"],\"むすぶ\":[\"japanese\"],\"むすめ\":[\"japanese\"],\"むせる\":[\"japanese\"],\"むせん\":[\"japanese\"],\"むちゅう\":[\"japanese\"],\"むなしい\":[\"japanese\"],\"むのう\":[\"japanese\"],\"むやみ\":[\"japanese\"],\"むよう\":[\"japanese\"],\"むらさき\":[\"japanese\"],\"むりょう\":[\"japanese\"],\"むろん\":[\"japanese\"],\"めいあん\":[\"japanese\"],\"めいうん\":[\"japanese\"],\"めいえん\":[\"japanese\"],\"めいかく\":[\"japanese\"],\"めいきょく\":[\"japanese\"],\"めいさい\":[\"japanese\"],\"めいし\":[\"japanese\"],\"めいそう\":[\"japanese\"],\"めいぶつ\":[\"japanese\"],\"めいれい\":[\"japanese\"],\"めいわく\":[\"japanese\"],\"めぐまれる\":[\"japanese\"],\"めざす\":[\"japanese\"],\"めした\":[\"japanese\"],\"めずらしい\":[\"japanese\"],\"めだつ\":[\"japanese\"],\"めまい\":[\"japanese\"],\"めやす\":[\"japanese\"],\"めんきょ\":[\"japanese\"],\"めんせき\":[\"japanese\"],\"めんどう\":[\"japanese\"],\"もうしあげる\":[\"japanese\"],\"もうどうけん\":[\"japanese\"],\"もえる\":[\"japanese\"],\"もくし\":[\"japanese\"],\"もくてき\":[\"japanese\"],\"もくようび\":[\"japanese\"],\"もちろん\":[\"japanese\"],\"もどる\":[\"japanese\"],\"もらう\":[\"japanese\"],\"もんく\":[\"japanese\"],\"もんだい\":[\"japanese\"],\"やおや\":[\"japanese\"],\"やける\":[\"japanese\"],\"やさい\":[\"japanese\"],\"やさしい\":[\"japanese\"],\"やすい\":[\"japanese\"],\"やすたろう\":[\"japanese\"],\"やすみ\":[\"japanese\"],\"やせる\":[\"japanese\"],\"やそう\":[\"japanese\"],\"やたい\":[\"japanese\"],\"やちん\":[\"japanese\"],\"やっと\":[\"japanese\"],\"やっぱり\":[\"japanese\"],\"やぶる\":[\"japanese\"],\"やめる\":[\"japanese\"],\"ややこしい\":[\"japanese\"],\"やよい\":[\"japanese\"],\"やわらかい\":[\"japanese\"],\"ゆうき\":[\"japanese\"],\"ゆうびんきょく\":[\"japanese\"],\"ゆうべ\":[\"japanese\"],\"ゆうめい\":[\"japanese\"],\"ゆけつ\":[\"japanese\"],\"ゆしゅつ\":[\"japanese\"],\"ゆせん\":[\"japanese\"],\"ゆそう\":[\"japanese\"],\"ゆたか\":[\"japanese\"],\"ゆちゃく\":[\"japanese\"],\"ゆでる\":[\"japanese\"],\"ゆにゅう\":[\"japanese\"],\"ゆびわ\":[\"japanese\"],\"ゆらい\":[\"japanese\"],\"ゆれる\":[\"japanese\"],\"ようい\":[\"japanese\"],\"ようか\":[\"japanese\"],\"ようきゅう\":[\"japanese\"],\"ようじ\":[\"japanese\"],\"ようす\":[\"japanese\"],\"ようちえん\":[\"japanese\"],\"よかぜ\":[\"japanese\"],\"よかん\":[\"japanese\"],\"よきん\":[\"japanese\"],\"よくせい\":[\"japanese\"],\"よくぼう\":[\"japanese\"],\"よけい\":[\"japanese\"],\"よごれる\":[\"japanese\"],\"よさん\":[\"japanese\"],\"よしゅう\":[\"japanese\"],\"よそう\":[\"japanese\"],\"よそく\":[\"japanese\"],\"よっか\":[\"japanese\"],\"よてい\":[\"japanese\"],\"よどがわく\":[\"japanese\"],\"よねつ\":[\"japanese\"],\"よやく\":[\"japanese\"],\"よゆう\":[\"japanese\"],\"よろこぶ\":[\"japanese\"],\"よろしい\":[\"japanese\"],\"らいう\":[\"japanese\"],\"らくがき\":[\"japanese\"],\"らくご\":[\"japanese\"],\"らくさつ\":[\"japanese\"],\"らくだ\":[\"japanese\"],\"らしんばん\":[\"japanese\"],\"らせん\":[\"japanese\"],\"らぞく\":[\"japanese\"],\"らたい\":[\"japanese\"],\"らっか\":[\"japanese\"],\"られつ\":[\"japanese\"],\"りえき\":[\"japanese\"],\"りかい\":[\"japanese\"],\"りきさく\":[\"japanese\"],\"りきせつ\":[\"japanese\"],\"りくぐん\":[\"japanese\"],\"りくつ\":[\"japanese\"],\"りけん\":[\"japanese\"],\"りこう\":[\"japanese\"],\"りせい\":[\"japanese\"],\"りそう\":[\"japanese\"],\"りそく\":[\"japanese\"],\"りてん\":[\"japanese\"],\"りねん\":[\"japanese\"],\"りゆう\":[\"japanese\"],\"りゅうがく\":[\"japanese\"],\"りよう\":[\"japanese\"],\"りょうり\":[\"japanese\"],\"りょかん\":[\"japanese\"],\"りょくちゃ\":[\"japanese\"],\"りょこう\":[\"japanese\"],\"りりく\":[\"japanese\"],\"りれき\":[\"japanese\"],\"りろん\":[\"japanese\"],\"りんご\":[\"japanese\"],\"るいけい\":[\"japanese\"],\"るいさい\":[\"japanese\"],\"るいじ\":[\"japanese\"],\"るいせき\":[\"japanese\"],\"るすばん\":[\"japanese\"],\"るりがわら\":[\"japanese\"],\"れいかん\":[\"japanese\"],\"れいぎ\":[\"japanese\"],\"れいせい\":[\"japanese\"],\"れいぞうこ\":[\"japanese\"],\"れいとう\":[\"japanese\"],\"れいぼう\":[\"japanese\"],\"れきし\":[\"japanese\"],\"れきだい\":[\"japanese\"],\"れんあい\":[\"japanese\"],\"れんけい\":[\"japanese\"],\"れんこん\":[\"japanese\"],\"れんさい\":[\"japanese\"],\"れんしゅう\":[\"japanese\"],\"れんぞく\":[\"japanese\"],\"れんらく\":[\"japanese\"],\"ろうか\":[\"japanese\"],\"ろうご\":[\"japanese\"],\"ろうじん\":[\"japanese\"],\"ろうそく\":[\"japanese\"],\"ろくが\":[\"japanese\"],\"ろこつ\":[\"japanese\"],\"ろじうら\":[\"japanese\"],\"ろしゅつ\":[\"japanese\"],\"ろせん\":[\"japanese\"],\"ろてん\":[\"japanese\"],\"ろめん\":[\"japanese\"],\"ろれつ\":[\"japanese\"],\"ろんぎ\":[\"japanese\"],\"ろんぱ\":[\"japanese\"],\"ろんぶん\":[\"japanese\"],\"ろんり\":[\"japanese\"],\"わかす\":[\"japanese\"],\"わかめ\":[\"japanese\"],\"わかやま\":[\"japanese\"],\"わかれる\":[\"japanese\"],\"わしつ\":[\"japanese\"],\"わじまし\":[\"japanese\"],\"わすれもの\":[\"japanese\"],\"わらう\":[\"japanese\"],\"われる\":[\"japanese\"],\"가격\":[\"korean\"],\"가끔\":[\"korean\"],\"가난\":[\"korean\"],\"가능\":[\"korean\"],\"가득\":[\"korean\"],\"가르침\":[\"korean\"],\"가뭄\":[\"korean\"],\"가방\":[\"korean\"],\"가상\":[\"korean\"],\"가슴\":[\"korean\"],\"가운데\":[\"korean\"],\"가을\":[\"korean\"],\"가이드\":[\"korean\"],\"가입\":[\"korean\"],\"가장\":[\"korean\"],\"가정\":[\"korean\"],\"가족\":[\"korean\"],\"가죽\":[\"korean\"],\"각오\":[\"korean\"],\"각자\":[\"korean\"],\"간격\":[\"korean\"],\"간부\":[\"korean\"],\"간섭\":[\"korean\"],\"간장\":[\"korean\"],\"간접\":[\"korean\"],\"간판\":[\"korean\"],\"갈등\":[\"korean\"],\"갈비\":[\"korean\"],\"갈색\":[\"korean\"],\"갈증\":[\"korean\"],\"감각\":[\"korean\"],\"감기\":[\"korean\"],\"감소\":[\"korean\"],\"감수성\":[\"korean\"],\"감자\":[\"korean\"],\"감정\":[\"korean\"],\"갑자기\":[\"korean\"],\"강남\":[\"korean\"],\"강당\":[\"korean\"],\"강도\":[\"korean\"],\"강력히\":[\"korean\"],\"강변\":[\"korean\"],\"강북\":[\"korean\"],\"강사\":[\"korean\"],\"강수량\":[\"korean\"],\"강아지\":[\"korean\"],\"강원도\":[\"korean\"],\"강의\":[\"korean\"],\"강제\":[\"korean\"],\"강조\":[\"korean\"],\"같이\":[\"korean\"],\"개구리\":[\"korean\"],\"개나리\":[\"korean\"],\"개방\":[\"korean\"],\"개별\":[\"korean\"],\"개선\":[\"korean\"],\"개성\":[\"korean\"],\"개인\":[\"korean\"],\"객관적\":[\"korean\"],\"거실\":[\"korean\"],\"거액\":[\"korean\"],\"거울\":[\"korean\"],\"거짓\":[\"korean\"],\"거품\":[\"korean\"],\"걱정\":[\"korean\"],\"건강\":[\"korean\"],\"건물\":[\"korean\"],\"건설\":[\"korean\"],\"건조\":[\"korean\"],\"건축\":[\"korean\"],\"걸음\":[\"korean\"],\"검사\":[\"korean\"],\"검토\":[\"korean\"],\"게시판\":[\"korean\"],\"게임\":[\"korean\"],\"겨울\":[\"korean\"],\"견해\":[\"korean\"],\"결과\":[\"korean\"],\"결국\":[\"korean\"],\"결론\":[\"korean\"],\"결석\":[\"korean\"],\"결승\":[\"korean\"],\"결심\":[\"korean\"],\"결정\":[\"korean\"],\"결혼\":[\"korean\"],\"경계\":[\"korean\"],\"경고\":[\"korean\"],\"경기\":[\"korean\"],\"경력\":[\"korean\"],\"경복궁\":[\"korean\"],\"경비\":[\"korean\"],\"경상도\":[\"korean\"],\"경영\":[\"korean\"],\"경우\":[\"korean\"],\"경쟁\":[\"korean\"],\"경제\":[\"korean\"],\"경주\":[\"korean\"],\"경찰\":[\"korean\"],\"경치\":[\"korean\"],\"경향\":[\"korean\"],\"경험\":[\"korean\"],\"계곡\":[\"korean\"],\"계단\":[\"korean\"],\"계란\":[\"korean\"],\"계산\":[\"korean\"],\"계속\":[\"korean\"],\"계약\":[\"korean\"],\"계절\":[\"korean\"],\"계층\":[\"korean\"],\"계획\":[\"korean\"],\"고객\":[\"korean\"],\"고구려\":[\"korean\"],\"고궁\":[\"korean\"],\"고급\":[\"korean\"],\"고등학생\":[\"korean\"],\"고무신\":[\"korean\"],\"고민\":[\"korean\"],\"고양이\":[\"korean\"],\"고장\":[\"korean\"],\"고전\":[\"korean\"],\"고집\":[\"korean\"],\"고춧가루\":[\"korean\"],\"고통\":[\"korean\"],\"고향\":[\"korean\"],\"곡식\":[\"korean\"],\"골목\":[\"korean\"],\"골짜기\":[\"korean\"],\"골프\":[\"korean\"],\"공간\":[\"korean\"],\"공개\":[\"korean\"],\"공격\":[\"korean\"],\"공군\":[\"korean\"],\"공급\":[\"korean\"],\"공기\":[\"korean\"],\"공동\":[\"korean\"],\"공무원\":[\"korean\"],\"공부\":[\"korean\"],\"공사\":[\"korean\"],\"공식\":[\"korean\"],\"공업\":[\"korean\"],\"공연\":[\"korean\"],\"공원\":[\"korean\"],\"공장\":[\"korean\"],\"공짜\":[\"korean\"],\"공책\":[\"korean\"],\"공통\":[\"korean\"],\"공포\":[\"korean\"],\"공항\":[\"korean\"],\"공휴일\":[\"korean\"],\"과목\":[\"korean\"],\"과일\":[\"korean\"],\"과장\":[\"korean\"],\"과정\":[\"korean\"],\"과학\":[\"korean\"],\"관객\":[\"korean\"],\"관계\":[\"korean\"],\"관광\":[\"korean\"],\"관념\":[\"korean\"],\"관람\":[\"korean\"],\"관련\":[\"korean\"],\"관리\":[\"korean\"],\"관습\":[\"korean\"],\"관심\":[\"korean\"],\"관점\":[\"korean\"],\"관찰\":[\"korean\"],\"광경\":[\"korean\"],\"광고\":[\"korean\"],\"광장\":[\"korean\"],\"광주\":[\"korean\"],\"괴로움\":[\"korean\"],\"굉장히\":[\"korean\"],\"교과서\":[\"korean\"],\"교문\":[\"korean\"],\"교복\":[\"korean\"],\"교실\":[\"korean\"],\"교양\":[\"korean\"],\"교육\":[\"korean\"],\"교장\":[\"korean\"],\"교직\":[\"korean\"],\"교통\":[\"korean\"],\"교환\":[\"korean\"],\"교훈\":[\"korean\"],\"구경\":[\"korean\"],\"구름\":[\"korean\"],\"구멍\":[\"korean\"],\"구별\":[\"korean\"],\"구분\":[\"korean\"],\"구석\":[\"korean\"],\"구성\":[\"korean\"],\"구속\":[\"korean\"],\"구역\":[\"korean\"],\"구입\":[\"korean\"],\"구청\":[\"korean\"],\"구체적\":[\"korean\"],\"국가\":[\"korean\"],\"국기\":[\"korean\"],\"국내\":[\"korean\"],\"국립\":[\"korean\"],\"국물\":[\"korean\"],\"국민\":[\"korean\"],\"국수\":[\"korean\"],\"국어\":[\"korean\"],\"국왕\":[\"korean\"],\"국적\":[\"korean\"],\"국제\":[\"korean\"],\"국회\":[\"korean\"],\"군대\":[\"korean\"],\"군사\":[\"korean\"],\"군인\":[\"korean\"],\"궁극적\":[\"korean\"],\"권리\":[\"korean\"],\"권위\":[\"korean\"],\"권투\":[\"korean\"],\"귀국\":[\"korean\"],\"귀신\":[\"korean\"],\"규정\":[\"korean\"],\"규칙\":[\"korean\"],\"균형\":[\"korean\"],\"그날\":[\"korean\"],\"그냥\":[\"korean\"],\"그늘\":[\"korean\"],\"그러나\":[\"korean\"],\"그룹\":[\"korean\"],\"그릇\":[\"korean\"],\"그림\":[\"korean\"],\"그제서야\":[\"korean\"],\"그토록\":[\"korean\"],\"극복\":[\"korean\"],\"극히\":[\"korean\"],\"근거\":[\"korean\"],\"근교\":[\"korean\"],\"근래\":[\"korean\"],\"근로\":[\"korean\"],\"근무\":[\"korean\"],\"근본\":[\"korean\"],\"근원\":[\"korean\"],\"근육\":[\"korean\"],\"근처\":[\"korean\"],\"글씨\":[\"korean\"],\"글자\":[\"korean\"],\"금강산\":[\"korean\"],\"금고\":[\"korean\"],\"금년\":[\"korean\"],\"금메달\":[\"korean\"],\"금액\":[\"korean\"],\"금연\":[\"korean\"],\"금요일\":[\"korean\"],\"금지\":[\"korean\"],\"긍정적\":[\"korean\"],\"기간\":[\"korean\"],\"기관\":[\"korean\"],\"기념\":[\"korean\"],\"기능\":[\"korean\"],\"기독교\":[\"korean\"],\"기둥\":[\"korean\"],\"기록\":[\"korean\"],\"기름\":[\"korean\"],\"기법\":[\"korean\"],\"기본\":[\"korean\"],\"기분\":[\"korean\"],\"기쁨\":[\"korean\"],\"기숙사\":[\"korean\"],\"기술\":[\"korean\"],\"기억\":[\"korean\"],\"기업\":[\"korean\"],\"기온\":[\"korean\"],\"기운\":[\"korean\"],\"기원\":[\"korean\"],\"기적\":[\"korean\"],\"기준\":[\"korean\"],\"기침\":[\"korean\"],\"기혼\":[\"korean\"],\"기획\":[\"korean\"],\"긴급\":[\"korean\"],\"긴장\":[\"korean\"],\"길이\":[\"korean\"],\"김밥\":[\"korean\"],\"김치\":[\"korean\"],\"김포공항\":[\"korean\"],\"깍두기\":[\"korean\"],\"깜빡\":[\"korean\"],\"깨달음\":[\"korean\"],\"깨소금\":[\"korean\"],\"껍질\":[\"korean\"],\"꼭대기\":[\"korean\"],\"꽃잎\":[\"korean\"],\"나들이\":[\"korean\"],\"나란히\":[\"korean\"],\"나머지\":[\"korean\"],\"나물\":[\"korean\"],\"나침반\":[\"korean\"],\"나흘\":[\"korean\"],\"낙엽\":[\"korean\"],\"난방\":[\"korean\"],\"날개\":[\"korean\"],\"날씨\":[\"korean\"],\"날짜\":[\"korean\"],\"남녀\":[\"korean\"],\"남대문\":[\"korean\"],\"남매\":[\"korean\"],\"남산\":[\"korean\"],\"남자\":[\"korean\"],\"남편\":[\"korean\"],\"남학생\":[\"korean\"],\"낭비\":[\"korean\"],\"낱말\":[\"korean\"],\"내년\":[\"korean\"],\"내용\":[\"korean\"],\"내일\":[\"korean\"],\"냄비\":[\"korean\"],\"냄새\":[\"korean\"],\"냇물\":[\"korean\"],\"냉동\":[\"korean\"],\"냉면\":[\"korean\"],\"냉방\":[\"korean\"],\"냉장고\":[\"korean\"],\"넥타이\":[\"korean\"],\"넷째\":[\"korean\"],\"노동\":[\"korean\"],\"노란색\":[\"korean\"],\"노력\":[\"korean\"],\"노인\":[\"korean\"],\"녹음\":[\"korean\"],\"녹차\":[\"korean\"],\"녹화\":[\"korean\"],\"논리\":[\"korean\"],\"논문\":[\"korean\"],\"논쟁\":[\"korean\"],\"놀이\":[\"korean\"],\"농구\":[\"korean\"],\"농담\":[\"korean\"],\"농민\":[\"korean\"],\"농부\":[\"korean\"],\"농업\":[\"korean\"],\"농장\":[\"korean\"],\"농촌\":[\"korean\"],\"높이\":[\"korean\"],\"눈동자\":[\"korean\"],\"눈물\":[\"korean\"],\"눈썹\":[\"korean\"],\"뉴욕\":[\"korean\"],\"느낌\":[\"korean\"],\"늑대\":[\"korean\"],\"능동적\":[\"korean\"],\"능력\":[\"korean\"],\"다방\":[\"korean\"],\"다양성\":[\"korean\"],\"다음\":[\"korean\"],\"다이어트\":[\"korean\"],\"다행\":[\"korean\"],\"단계\":[\"korean\"],\"단골\":[\"korean\"],\"단독\":[\"korean\"],\"단맛\":[\"korean\"],\"단순\":[\"korean\"],\"단어\":[\"korean\"],\"단위\":[\"korean\"],\"단점\":[\"korean\"],\"단체\":[\"korean\"],\"단추\":[\"korean\"],\"단편\":[\"korean\"],\"단풍\":[\"korean\"],\"달걀\":[\"korean\"],\"달러\":[\"korean\"],\"달력\":[\"korean\"],\"달리\":[\"korean\"],\"닭고기\":[\"korean\"],\"담당\":[\"korean\"],\"담배\":[\"korean\"],\"담요\":[\"korean\"],\"담임\":[\"korean\"],\"답변\":[\"korean\"],\"답장\":[\"korean\"],\"당근\":[\"korean\"],\"당분간\":[\"korean\"],\"당연히\":[\"korean\"],\"당장\":[\"korean\"],\"대규모\":[\"korean\"],\"대낮\":[\"korean\"],\"대단히\":[\"korean\"],\"대답\":[\"korean\"],\"대도시\":[\"korean\"],\"대략\":[\"korean\"],\"대량\":[\"korean\"],\"대륙\":[\"korean\"],\"대문\":[\"korean\"],\"대부분\":[\"korean\"],\"대신\":[\"korean\"],\"대응\":[\"korean\"],\"대장\":[\"korean\"],\"대전\":[\"korean\"],\"대접\":[\"korean\"],\"대중\":[\"korean\"],\"대책\":[\"korean\"],\"대출\":[\"korean\"],\"대충\":[\"korean\"],\"대통령\":[\"korean\"],\"대학\":[\"korean\"],\"대한민국\":[\"korean\"],\"대합실\":[\"korean\"],\"대형\":[\"korean\"],\"덩어리\":[\"korean\"],\"데이트\":[\"korean\"],\"도대체\":[\"korean\"],\"도덕\":[\"korean\"],\"도둑\":[\"korean\"],\"도망\":[\"korean\"],\"도서관\":[\"korean\"],\"도심\":[\"korean\"],\"도움\":[\"korean\"],\"도입\":[\"korean\"],\"도자기\":[\"korean\"],\"도저히\":[\"korean\"],\"도전\":[\"korean\"],\"도중\":[\"korean\"],\"도착\":[\"korean\"],\"독감\":[\"korean\"],\"독립\":[\"korean\"],\"독서\":[\"korean\"],\"독일\":[\"korean\"],\"독창적\":[\"korean\"],\"동화책\":[\"korean\"],\"뒷모습\":[\"korean\"],\"뒷산\":[\"korean\"],\"딸아이\":[\"korean\"],\"마누라\":[\"korean\"],\"마늘\":[\"korean\"],\"마당\":[\"korean\"],\"마라톤\":[\"korean\"],\"마련\":[\"korean\"],\"마무리\":[\"korean\"],\"마사지\":[\"korean\"],\"마약\":[\"korean\"],\"마요네즈\":[\"korean\"],\"마을\":[\"korean\"],\"마음\":[\"korean\"],\"마이크\":[\"korean\"],\"마중\":[\"korean\"],\"마지막\":[\"korean\"],\"마찬가지\":[\"korean\"],\"마찰\":[\"korean\"],\"마흔\":[\"korean\"],\"막걸리\":[\"korean\"],\"막내\":[\"korean\"],\"막상\":[\"korean\"],\"만남\":[\"korean\"],\"만두\":[\"korean\"],\"만세\":[\"korean\"],\"만약\":[\"korean\"],\"만일\":[\"korean\"],\"만점\":[\"korean\"],\"만족\":[\"korean\"],\"만화\":[\"korean\"],\"많이\":[\"korean\"],\"말기\":[\"korean\"],\"말씀\":[\"korean\"],\"말투\":[\"korean\"],\"맘대로\":[\"korean\"],\"망원경\":[\"korean\"],\"매년\":[\"korean\"],\"매달\":[\"korean\"],\"매력\":[\"korean\"],\"매번\":[\"korean\"],\"매스컴\":[\"korean\"],\"매일\":[\"korean\"],\"매장\":[\"korean\"],\"맥주\":[\"korean\"],\"먹이\":[\"korean\"],\"먼저\":[\"korean\"],\"먼지\":[\"korean\"],\"멀리\":[\"korean\"],\"메일\":[\"korean\"],\"며느리\":[\"korean\"],\"며칠\":[\"korean\"],\"면담\":[\"korean\"],\"멸치\":[\"korean\"],\"명단\":[\"korean\"],\"명령\":[\"korean\"],\"명예\":[\"korean\"],\"명의\":[\"korean\"],\"명절\":[\"korean\"],\"명칭\":[\"korean\"],\"명함\":[\"korean\"],\"모금\":[\"korean\"],\"모니터\":[\"korean\"],\"모델\":[\"korean\"],\"모든\":[\"korean\"],\"모범\":[\"korean\"],\"모습\":[\"korean\"],\"모양\":[\"korean\"],\"모임\":[\"korean\"],\"모조리\":[\"korean\"],\"모집\":[\"korean\"],\"모퉁이\":[\"korean\"],\"목걸이\":[\"korean\"],\"목록\":[\"korean\"],\"목사\":[\"korean\"],\"목소리\":[\"korean\"],\"목숨\":[\"korean\"],\"목적\":[\"korean\"],\"목표\":[\"korean\"],\"몰래\":[\"korean\"],\"몸매\":[\"korean\"],\"몸무게\":[\"korean\"],\"몸살\":[\"korean\"],\"몸속\":[\"korean\"],\"몸짓\":[\"korean\"],\"몸통\":[\"korean\"],\"몹시\":[\"korean\"],\"무관심\":[\"korean\"],\"무궁화\":[\"korean\"],\"무더위\":[\"korean\"],\"무덤\":[\"korean\"],\"무릎\":[\"korean\"],\"무슨\":[\"korean\"],\"무엇\":[\"korean\"],\"무역\":[\"korean\"],\"무용\":[\"korean\"],\"무조건\":[\"korean\"],\"무지개\":[\"korean\"],\"무척\":[\"korean\"],\"문구\":[\"korean\"],\"문득\":[\"korean\"],\"문법\":[\"korean\"],\"문서\":[\"korean\"],\"문제\":[\"korean\"],\"문학\":[\"korean\"],\"문화\":[\"korean\"],\"물가\":[\"korean\"],\"물건\":[\"korean\"],\"물결\":[\"korean\"],\"물고기\":[\"korean\"],\"물론\":[\"korean\"],\"물리학\":[\"korean\"],\"물음\":[\"korean\"],\"물질\":[\"korean\"],\"물체\":[\"korean\"],\"미국\":[\"korean\"],\"미디어\":[\"korean\"],\"미사일\":[\"korean\"],\"미술\":[\"korean\"],\"미역\":[\"korean\"],\"미용실\":[\"korean\"],\"미움\":[\"korean\"],\"미인\":[\"korean\"],\"미팅\":[\"korean\"],\"미혼\":[\"korean\"],\"민간\":[\"korean\"],\"민족\":[\"korean\"],\"민주\":[\"korean\"],\"믿음\":[\"korean\"],\"밀가루\":[\"korean\"],\"밀리미터\":[\"korean\"],\"밑바닥\":[\"korean\"],\"바가지\":[\"korean\"],\"바구니\":[\"korean\"],\"바나나\":[\"korean\"],\"바늘\":[\"korean\"],\"바닥\":[\"korean\"],\"바닷가\":[\"korean\"],\"바람\":[\"korean\"],\"바이러스\":[\"korean\"],\"바탕\":[\"korean\"],\"박물관\":[\"korean\"],\"박사\":[\"korean\"],\"박수\":[\"korean\"],\"반대\":[\"korean\"],\"반드시\":[\"korean\"],\"반말\":[\"korean\"],\"반발\":[\"korean\"],\"반성\":[\"korean\"],\"반응\":[\"korean\"],\"반장\":[\"korean\"],\"반죽\":[\"korean\"],\"반지\":[\"korean\"],\"반찬\":[\"korean\"],\"받침\":[\"korean\"],\"발가락\":[\"korean\"],\"발걸음\":[\"korean\"],\"발견\":[\"korean\"],\"발달\":[\"korean\"],\"발레\":[\"korean\"],\"발목\":[\"korean\"],\"발바닥\":[\"korean\"],\"발생\":[\"korean\"],\"발음\":[\"korean\"],\"발자국\":[\"korean\"],\"발전\":[\"korean\"],\"발톱\":[\"korean\"],\"발표\":[\"korean\"],\"밤하늘\":[\"korean\"],\"밥그릇\":[\"korean\"],\"밥맛\":[\"korean\"],\"밥상\":[\"korean\"],\"밥솥\":[\"korean\"],\"방금\":[\"korean\"],\"방면\":[\"korean\"],\"방문\":[\"korean\"],\"방바닥\":[\"korean\"],\"방법\":[\"korean\"],\"방송\":[\"korean\"],\"방식\":[\"korean\"],\"방안\":[\"korean\"],\"방울\":[\"korean\"],\"방지\":[\"korean\"],\"방학\":[\"korean\"],\"방해\":[\"korean\"],\"방향\":[\"korean\"],\"배경\":[\"korean\"],\"배꼽\":[\"korean\"],\"배달\":[\"korean\"],\"배드민턴\":[\"korean\"],\"백두산\":[\"korean\"],\"백색\":[\"korean\"],\"백성\":[\"korean\"],\"백인\":[\"korean\"],\"백제\":[\"korean\"],\"백화점\":[\"korean\"],\"버릇\":[\"korean\"],\"버섯\":[\"korean\"],\"버튼\":[\"korean\"],\"번개\":[\"korean\"],\"번역\":[\"korean\"],\"번지\":[\"korean\"],\"번호\":[\"korean\"],\"벌금\":[\"korean\"],\"벌레\":[\"korean\"],\"벌써\":[\"korean\"],\"범위\":[\"korean\"],\"범인\":[\"korean\"],\"범죄\":[\"korean\"],\"법률\":[\"korean\"],\"법원\":[\"korean\"],\"법적\":[\"korean\"],\"법칙\":[\"korean\"],\"베이징\":[\"korean\"],\"벨트\":[\"korean\"],\"변경\":[\"korean\"],\"변동\":[\"korean\"],\"변명\":[\"korean\"],\"변신\":[\"korean\"],\"변호사\":[\"korean\"],\"변화\":[\"korean\"],\"별도\":[\"korean\"],\"별명\":[\"korean\"],\"별일\":[\"korean\"],\"병실\":[\"korean\"],\"병아리\":[\"korean\"],\"병원\":[\"korean\"],\"보관\":[\"korean\"],\"보너스\":[\"korean\"],\"보라색\":[\"korean\"],\"보람\":[\"korean\"],\"보름\":[\"korean\"],\"보상\":[\"korean\"],\"보안\":[\"korean\"],\"보자기\":[\"korean\"],\"보장\":[\"korean\"],\"보전\":[\"korean\"],\"보존\":[\"korean\"],\"보통\":[\"korean\"],\"보편적\":[\"korean\"],\"보험\":[\"korean\"],\"복도\":[\"korean\"],\"복사\":[\"korean\"],\"복숭아\":[\"korean\"],\"복습\":[\"korean\"],\"볶음\":[\"korean\"],\"본격적\":[\"korean\"],\"본래\":[\"korean\"],\"본부\":[\"korean\"],\"본사\":[\"korean\"],\"본성\":[\"korean\"],\"본인\":[\"korean\"],\"본질\":[\"korean\"],\"볼펜\":[\"korean\"],\"봉사\":[\"korean\"],\"봉지\":[\"korean\"],\"봉투\":[\"korean\"],\"부근\":[\"korean\"],\"부끄러움\":[\"korean\"],\"부담\":[\"korean\"],\"부동산\":[\"korean\"],\"부문\":[\"korean\"],\"부분\":[\"korean\"],\"부산\":[\"korean\"],\"부상\":[\"korean\"],\"부엌\":[\"korean\"],\"부인\":[\"korean\"],\"부작용\":[\"korean\"],\"부장\":[\"korean\"],\"부정\":[\"korean\"],\"부족\":[\"korean\"],\"부지런히\":[\"korean\"],\"부친\":[\"korean\"],\"부탁\":[\"korean\"],\"부품\":[\"korean\"],\"부회장\":[\"korean\"],\"북부\":[\"korean\"],\"북한\":[\"korean\"],\"분노\":[\"korean\"],\"분량\":[\"korean\"],\"분리\":[\"korean\"],\"분명\":[\"korean\"],\"분석\":[\"korean\"],\"분야\":[\"korean\"],\"분위기\":[\"korean\"],\"분필\":[\"korean\"],\"분홍색\":[\"korean\"],\"불고기\":[\"korean\"],\"불과\":[\"korean\"],\"불교\":[\"korean\"],\"불꽃\":[\"korean\"],\"불만\":[\"korean\"],\"불법\":[\"korean\"],\"불빛\":[\"korean\"],\"불안\":[\"korean\"],\"불이익\":[\"korean\"],\"불행\":[\"korean\"],\"브랜드\":[\"korean\"],\"비극\":[\"korean\"],\"비난\":[\"korean\"],\"비닐\":[\"korean\"],\"비둘기\":[\"korean\"],\"비디오\":[\"korean\"],\"비로소\":[\"korean\"],\"비만\":[\"korean\"],\"비명\":[\"korean\"],\"비밀\":[\"korean\"],\"비바람\":[\"korean\"],\"비빔밥\":[\"korean\"],\"비상\":[\"korean\"],\"비용\":[\"korean\"],\"비율\":[\"korean\"],\"비중\":[\"korean\"],\"비타민\":[\"korean\"],\"비판\":[\"korean\"],\"빌딩\":[\"korean\"],\"빗물\":[\"korean\"],\"빗방울\":[\"korean\"],\"빗줄기\":[\"korean\"],\"빛깔\":[\"korean\"],\"빨간색\":[\"korean\"],\"빨래\":[\"korean\"],\"빨리\":[\"korean\"],\"사건\":[\"korean\"],\"사계절\":[\"korean\"],\"사나이\":[\"korean\"],\"사냥\":[\"korean\"],\"사람\":[\"korean\"],\"사랑\":[\"korean\"],\"사립\":[\"korean\"],\"사모님\":[\"korean\"],\"사물\":[\"korean\"],\"사방\":[\"korean\"],\"사상\":[\"korean\"],\"사생활\":[\"korean\"],\"사설\":[\"korean\"],\"사슴\":[\"korean\"],\"사실\":[\"korean\"],\"사업\":[\"korean\"],\"사용\":[\"korean\"],\"사월\":[\"korean\"],\"사장\":[\"korean\"],\"사전\":[\"korean\"],\"사진\":[\"korean\"],\"사촌\":[\"korean\"],\"사춘기\":[\"korean\"],\"사탕\":[\"korean\"],\"사투리\":[\"korean\"],\"사흘\":[\"korean\"],\"산길\":[\"korean\"],\"산부인과\":[\"korean\"],\"산업\":[\"korean\"],\"산책\":[\"korean\"],\"살림\":[\"korean\"],\"살인\":[\"korean\"],\"살짝\":[\"korean\"],\"삼계탕\":[\"korean\"],\"삼국\":[\"korean\"],\"삼십\":[\"korean\"],\"삼월\":[\"korean\"],\"삼촌\":[\"korean\"],\"상관\":[\"korean\"],\"상금\":[\"korean\"],\"상대\":[\"korean\"],\"상류\":[\"korean\"],\"상반기\":[\"korean\"],\"상상\":[\"korean\"],\"상식\":[\"korean\"],\"상업\":[\"korean\"],\"상인\":[\"korean\"],\"상자\":[\"korean\"],\"상점\":[\"korean\"],\"상처\":[\"korean\"],\"상추\":[\"korean\"],\"상태\":[\"korean\"],\"상표\":[\"korean\"],\"상품\":[\"korean\"],\"상황\":[\"korean\"],\"새벽\":[\"korean\"],\"색깔\":[\"korean\"],\"색연필\":[\"korean\"],\"생각\":[\"korean\"],\"생명\":[\"korean\"],\"생물\":[\"korean\"],\"생방송\":[\"korean\"],\"생산\":[\"korean\"],\"생선\":[\"korean\"],\"생신\":[\"korean\"],\"생일\":[\"korean\"],\"생활\":[\"korean\"],\"서랍\":[\"korean\"],\"서른\":[\"korean\"],\"서명\":[\"korean\"],\"서민\":[\"korean\"],\"서비스\":[\"korean\"],\"서양\":[\"korean\"],\"서울\":[\"korean\"],\"서적\":[\"korean\"],\"서점\":[\"korean\"],\"서쪽\":[\"korean\"],\"서클\":[\"korean\"],\"석사\":[\"korean\"],\"석유\":[\"korean\"],\"선거\":[\"korean\"],\"선물\":[\"korean\"],\"선배\":[\"korean\"],\"선생\":[\"korean\"],\"선수\":[\"korean\"],\"선원\":[\"korean\"],\"선장\":[\"korean\"],\"선전\":[\"korean\"],\"선택\":[\"korean\"],\"선풍기\":[\"korean\"],\"설거지\":[\"korean\"],\"설날\":[\"korean\"],\"설렁탕\":[\"korean\"],\"설명\":[\"korean\"],\"설문\":[\"korean\"],\"설사\":[\"korean\"],\"설악산\":[\"korean\"],\"설치\":[\"korean\"],\"설탕\":[\"korean\"],\"섭씨\":[\"korean\"],\"성공\":[\"korean\"],\"성당\":[\"korean\"],\"성명\":[\"korean\"],\"성별\":[\"korean\"],\"성인\":[\"korean\"],\"성장\":[\"korean\"],\"성적\":[\"korean\"],\"성질\":[\"korean\"],\"성함\":[\"korean\"],\"세금\":[\"korean\"],\"세미나\":[\"korean\"],\"세상\":[\"korean\"],\"세월\":[\"korean\"],\"세종대왕\":[\"korean\"],\"세탁\":[\"korean\"],\"센터\":[\"korean\"],\"센티미터\":[\"korean\"],\"셋째\":[\"korean\"],\"소규모\":[\"korean\"],\"소극적\":[\"korean\"],\"소금\":[\"korean\"],\"소나기\":[\"korean\"],\"소년\":[\"korean\"],\"소득\":[\"korean\"],\"소망\":[\"korean\"],\"소문\":[\"korean\"],\"소설\":[\"korean\"],\"소속\":[\"korean\"],\"소아과\":[\"korean\"],\"소용\":[\"korean\"],\"소원\":[\"korean\"],\"소음\":[\"korean\"],\"소중히\":[\"korean\"],\"소지품\":[\"korean\"],\"소질\":[\"korean\"],\"소풍\":[\"korean\"],\"소형\":[\"korean\"],\"속담\":[\"korean\"],\"속도\":[\"korean\"],\"속옷\":[\"korean\"],\"손가락\":[\"korean\"],\"손길\":[\"korean\"],\"손녀\":[\"korean\"],\"손님\":[\"korean\"],\"손등\":[\"korean\"],\"손목\":[\"korean\"],\"손뼉\":[\"korean\"],\"손실\":[\"korean\"],\"손질\":[\"korean\"],\"손톱\":[\"korean\"],\"손해\":[\"korean\"],\"솔직히\":[\"korean\"],\"솜씨\":[\"korean\"],\"송아지\":[\"korean\"],\"송이\":[\"korean\"],\"송편\":[\"korean\"],\"쇠고기\":[\"korean\"],\"쇼핑\":[\"korean\"],\"수건\":[\"korean\"],\"수년\":[\"korean\"],\"수단\":[\"korean\"],\"수돗물\":[\"korean\"],\"수동적\":[\"korean\"],\"수면\":[\"korean\"],\"수명\":[\"korean\"],\"수박\":[\"korean\"],\"수상\":[\"korean\"],\"수석\":[\"korean\"],\"수술\":[\"korean\"],\"수시로\":[\"korean\"],\"수업\":[\"korean\"],\"수염\":[\"korean\"],\"수영\":[\"korean\"],\"수입\":[\"korean\"],\"수준\":[\"korean\"],\"수집\":[\"korean\"],\"수출\":[\"korean\"],\"수컷\":[\"korean\"],\"수필\":[\"korean\"],\"수학\":[\"korean\"],\"수험생\":[\"korean\"],\"수화기\":[\"korean\"],\"숙녀\":[\"korean\"],\"숙소\":[\"korean\"],\"숙제\":[\"korean\"],\"순간\":[\"korean\"],\"순서\":[\"korean\"],\"순수\":[\"korean\"],\"순식간\":[\"korean\"],\"순위\":[\"korean\"],\"숟가락\":[\"korean\"],\"술병\":[\"korean\"],\"술집\":[\"korean\"],\"숫자\":[\"korean\"],\"스님\":[\"korean\"],\"스물\":[\"korean\"],\"스스로\":[\"korean\"],\"스승\":[\"korean\"],\"스웨터\":[\"korean\"],\"스위치\":[\"korean\"],\"스케이트\":[\"korean\"],\"스튜디오\":[\"korean\"],\"스트레스\":[\"korean\"],\"스포츠\":[\"korean\"],\"슬쩍\":[\"korean\"],\"슬픔\":[\"korean\"],\"습관\":[\"korean\"],\"습기\":[\"korean\"],\"승객\":[\"korean\"],\"승리\":[\"korean\"],\"승부\":[\"korean\"],\"승용차\":[\"korean\"],\"승진\":[\"korean\"],\"시각\":[\"korean\"],\"시간\":[\"korean\"],\"시골\":[\"korean\"],\"시금치\":[\"korean\"],\"시나리오\":[\"korean\"],\"시댁\":[\"korean\"],\"시리즈\":[\"korean\"],\"시멘트\":[\"korean\"],\"시민\":[\"korean\"],\"시부모\":[\"korean\"],\"시선\":[\"korean\"],\"시설\":[\"korean\"],\"시스템\":[\"korean\"],\"시아버지\":[\"korean\"],\"시어머니\":[\"korean\"],\"시월\":[\"korean\"],\"시인\":[\"korean\"],\"시일\":[\"korean\"],\"시작\":[\"korean\"],\"시장\":[\"korean\"],\"시절\":[\"korean\"],\"시점\":[\"korean\"],\"시중\":[\"korean\"],\"시즌\":[\"korean\"],\"시집\":[\"korean\"],\"시청\":[\"korean\"],\"시합\":[\"korean\"],\"시험\":[\"korean\"],\"식구\":[\"korean\"],\"식기\":[\"korean\"],\"식당\":[\"korean\"],\"식량\":[\"korean\"],\"식료품\":[\"korean\"],\"식물\":[\"korean\"],\"식빵\":[\"korean\"],\"식사\":[\"korean\"],\"식생활\":[\"korean\"],\"식초\":[\"korean\"],\"식탁\":[\"korean\"],\"식품\":[\"korean\"],\"신고\":[\"korean\"],\"신규\":[\"korean\"],\"신념\":[\"korean\"],\"신문\":[\"korean\"],\"신발\":[\"korean\"],\"신비\":[\"korean\"],\"신사\":[\"korean\"],\"신세\":[\"korean\"],\"신용\":[\"korean\"],\"신제품\":[\"korean\"],\"신청\":[\"korean\"],\"신체\":[\"korean\"],\"신화\":[\"korean\"],\"실감\":[\"korean\"],\"실내\":[\"korean\"],\"실력\":[\"korean\"],\"실례\":[\"korean\"],\"실망\":[\"korean\"],\"실수\":[\"korean\"],\"실습\":[\"korean\"],\"실시\":[\"korean\"],\"실장\":[\"korean\"],\"실정\":[\"korean\"],\"실질적\":[\"korean\"],\"실천\":[\"korean\"],\"실체\":[\"korean\"],\"실컷\":[\"korean\"],\"실태\":[\"korean\"],\"실패\":[\"korean\"],\"실험\":[\"korean\"],\"실현\":[\"korean\"],\"심리\":[\"korean\"],\"심부름\":[\"korean\"],\"심사\":[\"korean\"],\"심장\":[\"korean\"],\"심정\":[\"korean\"],\"심판\":[\"korean\"],\"쌍둥이\":[\"korean\"],\"씨름\":[\"korean\"],\"씨앗\":[\"korean\"],\"아가씨\":[\"korean\"],\"아나운서\":[\"korean\"],\"아드님\":[\"korean\"],\"아들\":[\"korean\"],\"아쉬움\":[\"korean\"],\"아스팔트\":[\"korean\"],\"아시아\":[\"korean\"],\"아울러\":[\"korean\"],\"아저씨\":[\"korean\"],\"아줌마\":[\"korean\"],\"아직\":[\"korean\"],\"아침\":[\"korean\"],\"아파트\":[\"korean\"],\"아프리카\":[\"korean\"],\"아픔\":[\"korean\"],\"아홉\":[\"korean\"],\"아흔\":[\"korean\"],\"악기\":[\"korean\"],\"악몽\":[\"korean\"],\"악수\":[\"korean\"],\"안개\":[\"korean\"],\"안경\":[\"korean\"],\"안과\":[\"korean\"],\"안내\":[\"korean\"],\"안녕\":[\"korean\"],\"안동\":[\"korean\"],\"안방\":[\"korean\"],\"안부\":[\"korean\"],\"안주\":[\"korean\"],\"알루미늄\":[\"korean\"],\"알코올\":[\"korean\"],\"암시\":[\"korean\"],\"암컷\":[\"korean\"],\"압력\":[\"korean\"],\"앞날\":[\"korean\"],\"앞문\":[\"korean\"],\"애인\":[\"korean\"],\"애정\":[\"korean\"],\"액수\":[\"korean\"],\"앨범\":[\"korean\"],\"야간\":[\"korean\"],\"야단\":[\"korean\"],\"야옹\":[\"korean\"],\"약간\":[\"korean\"],\"약국\":[\"korean\"],\"약속\":[\"korean\"],\"약수\":[\"korean\"],\"약점\":[\"korean\"],\"약품\":[\"korean\"],\"약혼녀\":[\"korean\"],\"양념\":[\"korean\"],\"양력\":[\"korean\"],\"양말\":[\"korean\"],\"양배추\":[\"korean\"],\"양주\":[\"korean\"],\"양파\":[\"korean\"],\"어둠\":[\"korean\"],\"어려움\":[\"korean\"],\"어른\":[\"korean\"],\"어젯밤\":[\"korean\"],\"어쨌든\":[\"korean\"],\"어쩌다가\":[\"korean\"],\"어쩐지\":[\"korean\"],\"언니\":[\"korean\"],\"언덕\":[\"korean\"],\"언론\":[\"korean\"],\"언어\":[\"korean\"],\"얼굴\":[\"korean\"],\"얼른\":[\"korean\"],\"얼음\":[\"korean\"],\"얼핏\":[\"korean\"],\"엄마\":[\"korean\"],\"업무\":[\"korean\"],\"업종\":[\"korean\"],\"업체\":[\"korean\"],\"엉덩이\":[\"korean\"],\"엉망\":[\"korean\"],\"엉터리\":[\"korean\"],\"엊그제\":[\"korean\"],\"에너지\":[\"korean\"],\"에어컨\":[\"korean\"],\"엔진\":[\"korean\"],\"여건\":[\"korean\"],\"여고생\":[\"korean\"],\"여관\":[\"korean\"],\"여군\":[\"korean\"],\"여권\":[\"korean\"],\"여대생\":[\"korean\"],\"여덟\":[\"korean\"],\"여동생\":[\"korean\"],\"여든\":[\"korean\"],\"여론\":[\"korean\"],\"여름\":[\"korean\"],\"여섯\":[\"korean\"],\"여성\":[\"korean\"],\"여왕\":[\"korean\"],\"여인\":[\"korean\"],\"여전히\":[\"korean\"],\"여직원\":[\"korean\"],\"여학생\":[\"korean\"],\"여행\":[\"korean\"],\"역사\":[\"korean\"],\"역시\":[\"korean\"],\"역할\":[\"korean\"],\"연결\":[\"korean\"],\"연구\":[\"korean\"],\"연극\":[\"korean\"],\"연기\":[\"korean\"],\"연락\":[\"korean\"],\"연설\":[\"korean\"],\"연세\":[\"korean\"],\"연속\":[\"korean\"],\"연습\":[\"korean\"],\"연애\":[\"korean\"],\"연예인\":[\"korean\"],\"연인\":[\"korean\"],\"연장\":[\"korean\"],\"연주\":[\"korean\"],\"연출\":[\"korean\"],\"연필\":[\"korean\"],\"연합\":[\"korean\"],\"연휴\":[\"korean\"],\"열기\":[\"korean\"],\"열매\":[\"korean\"],\"열쇠\":[\"korean\"],\"열심히\":[\"korean\"],\"열정\":[\"korean\"],\"열차\":[\"korean\"],\"열흘\":[\"korean\"],\"염려\":[\"korean\"],\"엽서\":[\"korean\"],\"영국\":[\"korean\"],\"영남\":[\"korean\"],\"영상\":[\"korean\"],\"영양\":[\"korean\"],\"영역\":[\"korean\"],\"영웅\":[\"korean\"],\"영원히\":[\"korean\"],\"영하\":[\"korean\"],\"영향\":[\"korean\"],\"영혼\":[\"korean\"],\"영화\":[\"korean\"],\"옆구리\":[\"korean\"],\"옆방\":[\"korean\"],\"옆집\":[\"korean\"],\"예감\":[\"korean\"],\"예금\":[\"korean\"],\"예방\":[\"korean\"],\"예산\":[\"korean\"],\"예상\":[\"korean\"],\"예선\":[\"korean\"],\"예술\":[\"korean\"],\"예습\":[\"korean\"],\"예식장\":[\"korean\"],\"예약\":[\"korean\"],\"예전\":[\"korean\"],\"예절\":[\"korean\"],\"예정\":[\"korean\"],\"예컨대\":[\"korean\"],\"옛날\":[\"korean\"],\"오늘\":[\"korean\"],\"오락\":[\"korean\"],\"오랫동안\":[\"korean\"],\"오렌지\":[\"korean\"],\"오로지\":[\"korean\"],\"오른발\":[\"korean\"],\"오븐\":[\"korean\"],\"오십\":[\"korean\"],\"오염\":[\"korean\"],\"오월\":[\"korean\"],\"오전\":[\"korean\"],\"오직\":[\"korean\"],\"오징어\":[\"korean\"],\"오페라\":[\"korean\"],\"오피스텔\":[\"korean\"],\"오히려\":[\"korean\"],\"옥상\":[\"korean\"],\"옥수수\":[\"korean\"],\"온갖\":[\"korean\"],\"온라인\":[\"korean\"],\"온몸\":[\"korean\"],\"온종일\":[\"korean\"],\"온통\":[\"korean\"],\"올가을\":[\"korean\"],\"올림픽\":[\"korean\"],\"올해\":[\"korean\"],\"옷차림\":[\"korean\"],\"와이셔츠\":[\"korean\"],\"와인\":[\"korean\"],\"완성\":[\"korean\"],\"완전\":[\"korean\"],\"왕비\":[\"korean\"],\"왕자\":[\"korean\"],\"왜냐하면\":[\"korean\"],\"왠지\":[\"korean\"],\"외갓집\":[\"korean\"],\"외국\":[\"korean\"],\"외로움\":[\"korean\"],\"외삼촌\":[\"korean\"],\"외출\":[\"korean\"],\"외침\":[\"korean\"],\"외할머니\":[\"korean\"],\"왼발\":[\"korean\"],\"왼손\":[\"korean\"],\"왼쪽\":[\"korean\"],\"요금\":[\"korean\"],\"요일\":[\"korean\"],\"요즘\":[\"korean\"],\"요청\":[\"korean\"],\"용기\":[\"korean\"],\"용서\":[\"korean\"],\"용어\":[\"korean\"],\"우산\":[\"korean\"],\"우선\":[\"korean\"],\"우승\":[\"korean\"],\"우연히\":[\"korean\"],\"우정\":[\"korean\"],\"우체국\":[\"korean\"],\"우편\":[\"korean\"],\"운동\":[\"korean\"],\"운명\":[\"korean\"],\"운반\":[\"korean\"],\"운전\":[\"korean\"],\"운행\":[\"korean\"],\"울산\":[\"korean\"],\"울음\":[\"korean\"],\"움직임\":[\"korean\"],\"웃어른\":[\"korean\"],\"웃음\":[\"korean\"],\"워낙\":[\"korean\"],\"원고\":[\"korean\"],\"원래\":[\"korean\"],\"원서\":[\"korean\"],\"원숭이\":[\"korean\"],\"원인\":[\"korean\"],\"원장\":[\"korean\"],\"원피스\":[\"korean\"],\"월급\":[\"korean\"],\"월드컵\":[\"korean\"],\"월세\":[\"korean\"],\"월요일\":[\"korean\"],\"웨이터\":[\"korean\"],\"위반\":[\"korean\"],\"위법\":[\"korean\"],\"위성\":[\"korean\"],\"위원\":[\"korean\"],\"위험\":[\"korean\"],\"위협\":[\"korean\"],\"윗사람\":[\"korean\"],\"유난히\":[\"korean\"],\"유럽\":[\"korean\"],\"유명\":[\"korean\"],\"유물\":[\"korean\"],\"유산\":[\"korean\"],\"유적\":[\"korean\"],\"유치원\":[\"korean\"],\"유학\":[\"korean\"],\"유행\":[\"korean\"],\"유형\":[\"korean\"],\"육군\":[\"korean\"],\"육상\":[\"korean\"],\"육십\":[\"korean\"],\"육체\":[\"korean\"],\"은행\":[\"korean\"],\"음력\":[\"korean\"],\"음료\":[\"korean\"],\"음반\":[\"korean\"],\"음성\":[\"korean\"],\"음식\":[\"korean\"],\"음악\":[\"korean\"],\"음주\":[\"korean\"],\"의견\":[\"korean\"],\"의논\":[\"korean\"],\"의문\":[\"korean\"],\"의복\":[\"korean\"],\"의식\":[\"korean\"],\"의심\":[\"korean\"],\"의외로\":[\"korean\"],\"의욕\":[\"korean\"],\"의원\":[\"korean\"],\"의학\":[\"korean\"],\"이것\":[\"korean\"],\"이곳\":[\"korean\"],\"이념\":[\"korean\"],\"이놈\":[\"korean\"],\"이달\":[\"korean\"],\"이대로\":[\"korean\"],\"이동\":[\"korean\"],\"이렇게\":[\"korean\"],\"이력서\":[\"korean\"],\"이론적\":[\"korean\"],\"이름\":[\"korean\"],\"이민\":[\"korean\"],\"이발소\":[\"korean\"],\"이별\":[\"korean\"],\"이불\":[\"korean\"],\"이빨\":[\"korean\"],\"이상\":[\"korean\"],\"이성\":[\"korean\"],\"이슬\":[\"korean\"],\"이야기\":[\"korean\"],\"이용\":[\"korean\"],\"이웃\":[\"korean\"],\"이월\":[\"korean\"],\"이윽고\":[\"korean\"],\"이익\":[\"korean\"],\"이전\":[\"korean\"],\"이중\":[\"korean\"],\"이튿날\":[\"korean\"],\"이틀\":[\"korean\"],\"이혼\":[\"korean\"],\"인간\":[\"korean\"],\"인격\":[\"korean\"],\"인공\":[\"korean\"],\"인구\":[\"korean\"],\"인근\":[\"korean\"],\"인기\":[\"korean\"],\"인도\":[\"korean\"],\"인류\":[\"korean\"],\"인물\":[\"korean\"],\"인생\":[\"korean\"],\"인쇄\":[\"korean\"],\"인연\":[\"korean\"],\"인원\":[\"korean\"],\"인재\":[\"korean\"],\"인종\":[\"korean\"],\"인천\":[\"korean\"],\"인체\":[\"korean\"],\"인터넷\":[\"korean\"],\"인하\":[\"korean\"],\"인형\":[\"korean\"],\"일곱\":[\"korean\"],\"일기\":[\"korean\"],\"일단\":[\"korean\"],\"일대\":[\"korean\"],\"일등\":[\"korean\"],\"일반\":[\"korean\"],\"일본\":[\"korean\"],\"일부\":[\"korean\"],\"일상\":[\"korean\"],\"일생\":[\"korean\"],\"일손\":[\"korean\"],\"일요일\":[\"korean\"],\"일월\":[\"korean\"],\"일정\":[\"korean\"],\"일종\":[\"korean\"],\"일주일\":[\"korean\"],\"일찍\":[\"korean\"],\"일체\":[\"korean\"],\"일치\":[\"korean\"],\"일행\":[\"korean\"],\"일회용\":[\"korean\"],\"임금\":[\"korean\"],\"임무\":[\"korean\"],\"입대\":[\"korean\"],\"입력\":[\"korean\"],\"입맛\":[\"korean\"],\"입사\":[\"korean\"],\"입술\":[\"korean\"],\"입시\":[\"korean\"],\"입원\":[\"korean\"],\"입장\":[\"korean\"],\"입학\":[\"korean\"],\"자가용\":[\"korean\"],\"자격\":[\"korean\"],\"자극\":[\"korean\"],\"자동\":[\"korean\"],\"자랑\":[\"korean\"],\"자부심\":[\"korean\"],\"자식\":[\"korean\"],\"자신\":[\"korean\"],\"자연\":[\"korean\"],\"자원\":[\"korean\"],\"자율\":[\"korean\"],\"자전거\":[\"korean\"],\"자정\":[\"korean\"],\"자존심\":[\"korean\"],\"자판\":[\"korean\"],\"작가\":[\"korean\"],\"작년\":[\"korean\"],\"작성\":[\"korean\"],\"작업\":[\"korean\"],\"작용\":[\"korean\"],\"작은딸\":[\"korean\"],\"작품\":[\"korean\"],\"잔디\":[\"korean\"],\"잔뜩\":[\"korean\"],\"잔치\":[\"korean\"],\"잘못\":[\"korean\"],\"잠깐\":[\"korean\"],\"잠수함\":[\"korean\"],\"잠시\":[\"korean\"],\"잠옷\":[\"korean\"],\"잠자리\":[\"korean\"],\"잡지\":[\"korean\"],\"장관\":[\"korean\"],\"장군\":[\"korean\"],\"장기간\":[\"korean\"],\"장래\":[\"korean\"],\"장례\":[\"korean\"],\"장르\":[\"korean\"],\"장마\":[\"korean\"],\"장면\":[\"korean\"],\"장모\":[\"korean\"],\"장미\":[\"korean\"],\"장비\":[\"korean\"],\"장사\":[\"korean\"],\"장소\":[\"korean\"],\"장식\":[\"korean\"],\"장애인\":[\"korean\"],\"장인\":[\"korean\"],\"장점\":[\"korean\"],\"장차\":[\"korean\"],\"장학금\":[\"korean\"],\"재능\":[\"korean\"],\"재빨리\":[\"korean\"],\"재산\":[\"korean\"],\"재생\":[\"korean\"],\"재작년\":[\"korean\"],\"재정\":[\"korean\"],\"재채기\":[\"korean\"],\"재판\":[\"korean\"],\"재학\":[\"korean\"],\"재활용\":[\"korean\"],\"저것\":[\"korean\"],\"저고리\":[\"korean\"],\"저곳\":[\"korean\"],\"저녁\":[\"korean\"],\"저런\":[\"korean\"],\"저렇게\":[\"korean\"],\"저번\":[\"korean\"],\"저울\":[\"korean\"],\"저절로\":[\"korean\"],\"저축\":[\"korean\"],\"적극\":[\"korean\"],\"적당히\":[\"korean\"],\"적성\":[\"korean\"],\"적용\":[\"korean\"],\"적응\":[\"korean\"],\"전개\":[\"korean\"],\"전공\":[\"korean\"],\"전기\":[\"korean\"],\"전달\":[\"korean\"],\"전라도\":[\"korean\"],\"전망\":[\"korean\"],\"전문\":[\"korean\"],\"전반\":[\"korean\"],\"전부\":[\"korean\"],\"전세\":[\"korean\"],\"전시\":[\"korean\"],\"전용\":[\"korean\"],\"전자\":[\"korean\"],\"전쟁\":[\"korean\"],\"전주\":[\"korean\"],\"전철\":[\"korean\"],\"전체\":[\"korean\"],\"전통\":[\"korean\"],\"전혀\":[\"korean\"],\"전후\":[\"korean\"],\"절대\":[\"korean\"],\"절망\":[\"korean\"],\"절반\":[\"korean\"],\"절약\":[\"korean\"],\"절차\":[\"korean\"],\"점검\":[\"korean\"],\"점수\":[\"korean\"],\"점심\":[\"korean\"],\"점원\":[\"korean\"],\"점점\":[\"korean\"],\"점차\":[\"korean\"],\"접근\":[\"korean\"],\"접시\":[\"korean\"],\"접촉\":[\"korean\"],\"젓가락\":[\"korean\"],\"정거장\":[\"korean\"],\"정도\":[\"korean\"],\"정류장\":[\"korean\"],\"정리\":[\"korean\"],\"정말\":[\"korean\"],\"정면\":[\"korean\"],\"정문\":[\"korean\"],\"정반대\":[\"korean\"],\"정보\":[\"korean\"],\"정부\":[\"korean\"],\"정비\":[\"korean\"],\"정상\":[\"korean\"],\"정성\":[\"korean\"],\"정오\":[\"korean\"],\"정원\":[\"korean\"],\"정장\":[\"korean\"],\"정지\":[\"korean\"],\"정치\":[\"korean\"],\"정확히\":[\"korean\"],\"제공\":[\"korean\"],\"제과점\":[\"korean\"],\"제대로\":[\"korean\"],\"제목\":[\"korean\"],\"제발\":[\"korean\"],\"제법\":[\"korean\"],\"제삿날\":[\"korean\"],\"제안\":[\"korean\"],\"제일\":[\"korean\"],\"제작\":[\"korean\"],\"제주도\":[\"korean\"],\"제출\":[\"korean\"],\"제품\":[\"korean\"],\"제한\":[\"korean\"],\"조각\":[\"korean\"],\"조건\":[\"korean\"],\"조금\":[\"korean\"],\"조깅\":[\"korean\"],\"조명\":[\"korean\"],\"조미료\":[\"korean\"],\"조상\":[\"korean\"],\"조선\":[\"korean\"],\"조용히\":[\"korean\"],\"조절\":[\"korean\"],\"조정\":[\"korean\"],\"조직\":[\"korean\"],\"존댓말\":[\"korean\"],\"존재\":[\"korean\"],\"졸업\":[\"korean\"],\"졸음\":[\"korean\"],\"종교\":[\"korean\"],\"종로\":[\"korean\"],\"종류\":[\"korean\"],\"종소리\":[\"korean\"],\"종업원\":[\"korean\"],\"종종\":[\"korean\"],\"종합\":[\"korean\"],\"좌석\":[\"korean\"],\"죄인\":[\"korean\"],\"주관적\":[\"korean\"],\"주름\":[\"korean\"],\"주말\":[\"korean\"],\"주머니\":[\"korean\"],\"주먹\":[\"korean\"],\"주문\":[\"korean\"],\"주민\":[\"korean\"],\"주방\":[\"korean\"],\"주변\":[\"korean\"],\"주식\":[\"korean\"],\"주인\":[\"korean\"],\"주일\":[\"korean\"],\"주장\":[\"korean\"],\"주전자\":[\"korean\"],\"주택\":[\"korean\"],\"준비\":[\"korean\"],\"줄거리\":[\"korean\"],\"줄기\":[\"korean\"],\"줄무늬\":[\"korean\"],\"중간\":[\"korean\"],\"중계방송\":[\"korean\"],\"중국\":[\"korean\"],\"중년\":[\"korean\"],\"중단\":[\"korean\"],\"중독\":[\"korean\"],\"중반\":[\"korean\"],\"중부\":[\"korean\"],\"중세\":[\"korean\"],\"중소기업\":[\"korean\"],\"중순\":[\"korean\"],\"중앙\":[\"korean\"],\"중요\":[\"korean\"],\"중학교\":[\"korean\"],\"즉석\":[\"korean\"],\"즉시\":[\"korean\"],\"즐거움\":[\"korean\"],\"증가\":[\"korean\"],\"증거\":[\"korean\"],\"증권\":[\"korean\"],\"증상\":[\"korean\"],\"증세\":[\"korean\"],\"지각\":[\"korean\"],\"지갑\":[\"korean\"],\"지경\":[\"korean\"],\"지극히\":[\"korean\"],\"지금\":[\"korean\"],\"지급\":[\"korean\"],\"지능\":[\"korean\"],\"지름길\":[\"korean\"],\"지리산\":[\"korean\"],\"지방\":[\"korean\"],\"지붕\":[\"korean\"],\"지식\":[\"korean\"],\"지역\":[\"korean\"],\"지우개\":[\"korean\"],\"지원\":[\"korean\"],\"지적\":[\"korean\"],\"지점\":[\"korean\"],\"지진\":[\"korean\"],\"지출\":[\"korean\"],\"직선\":[\"korean\"],\"직업\":[\"korean\"],\"직원\":[\"korean\"],\"직장\":[\"korean\"],\"진급\":[\"korean\"],\"진동\":[\"korean\"],\"진로\":[\"korean\"],\"진료\":[\"korean\"],\"진리\":[\"korean\"],\"진짜\":[\"korean\"],\"진찰\":[\"korean\"],\"진출\":[\"korean\"],\"진통\":[\"korean\"],\"진행\":[\"korean\"],\"질문\":[\"korean\"],\"질병\":[\"korean\"],\"질서\":[\"korean\"],\"짐작\":[\"korean\"],\"집단\":[\"korean\"],\"집안\":[\"korean\"],\"집중\":[\"korean\"],\"짜증\":[\"korean\"],\"찌꺼기\":[\"korean\"],\"차남\":[\"korean\"],\"차라리\":[\"korean\"],\"차량\":[\"korean\"],\"차림\":[\"korean\"],\"차별\":[\"korean\"],\"차선\":[\"korean\"],\"차츰\":[\"korean\"],\"착각\":[\"korean\"],\"찬물\":[\"korean\"],\"찬성\":[\"korean\"],\"참가\":[\"korean\"],\"참기름\":[\"korean\"],\"참새\":[\"korean\"],\"참석\":[\"korean\"],\"참여\":[\"korean\"],\"참외\":[\"korean\"],\"참조\":[\"korean\"],\"찻잔\":[\"korean\"],\"창가\":[\"korean\"],\"창고\":[\"korean\"],\"창구\":[\"korean\"],\"창문\":[\"korean\"],\"창밖\":[\"korean\"],\"창작\":[\"korean\"],\"창조\":[\"korean\"],\"채널\":[\"korean\"],\"채점\":[\"korean\"],\"책가방\":[\"korean\"],\"책방\":[\"korean\"],\"책상\":[\"korean\"],\"책임\":[\"korean\"],\"챔피언\":[\"korean\"],\"처벌\":[\"korean\"],\"처음\":[\"korean\"],\"천국\":[\"korean\"],\"천둥\":[\"korean\"],\"천장\":[\"korean\"],\"천재\":[\"korean\"],\"천천히\":[\"korean\"],\"철도\":[\"korean\"],\"철저히\":[\"korean\"],\"철학\":[\"korean\"],\"첫날\":[\"korean\"],\"첫째\":[\"korean\"],\"청년\":[\"korean\"],\"청바지\":[\"korean\"],\"청소\":[\"korean\"],\"청춘\":[\"korean\"],\"체계\":[\"korean\"],\"체력\":[\"korean\"],\"체온\":[\"korean\"],\"체육\":[\"korean\"],\"체중\":[\"korean\"],\"체험\":[\"korean\"],\"초등학생\":[\"korean\"],\"초반\":[\"korean\"],\"초밥\":[\"korean\"],\"초상화\":[\"korean\"],\"초순\":[\"korean\"],\"초여름\":[\"korean\"],\"초원\":[\"korean\"],\"초저녁\":[\"korean\"],\"초점\":[\"korean\"],\"초청\":[\"korean\"],\"초콜릿\":[\"korean\"],\"촛불\":[\"korean\"],\"총각\":[\"korean\"],\"총리\":[\"korean\"],\"총장\":[\"korean\"],\"촬영\":[\"korean\"],\"최근\":[\"korean\"],\"최상\":[\"korean\"],\"최선\":[\"korean\"],\"최신\":[\"korean\"],\"최악\":[\"korean\"],\"최종\":[\"korean\"],\"추석\":[\"korean\"],\"추억\":[\"korean\"],\"추진\":[\"korean\"],\"추천\":[\"korean\"],\"추측\":[\"korean\"],\"축구\":[\"korean\"],\"축소\":[\"korean\"],\"축제\":[\"korean\"],\"축하\":[\"korean\"],\"출근\":[\"korean\"],\"출발\":[\"korean\"],\"출산\":[\"korean\"],\"출신\":[\"korean\"],\"출연\":[\"korean\"],\"출입\":[\"korean\"],\"출장\":[\"korean\"],\"출판\":[\"korean\"],\"충격\":[\"korean\"],\"충고\":[\"korean\"],\"충돌\":[\"korean\"],\"충분히\":[\"korean\"],\"충청도\":[\"korean\"],\"취업\":[\"korean\"],\"취직\":[\"korean\"],\"취향\":[\"korean\"],\"치약\":[\"korean\"],\"친구\":[\"korean\"],\"친척\":[\"korean\"],\"칠십\":[\"korean\"],\"칠월\":[\"korean\"],\"칠판\":[\"korean\"],\"침대\":[\"korean\"],\"침묵\":[\"korean\"],\"침실\":[\"korean\"],\"칫솔\":[\"korean\"],\"칭찬\":[\"korean\"],\"카메라\":[\"korean\"],\"카운터\":[\"korean\"],\"칼국수\":[\"korean\"],\"캐릭터\":[\"korean\"],\"캠퍼스\":[\"korean\"],\"캠페인\":[\"korean\"],\"커튼\":[\"korean\"],\"컨디션\":[\"korean\"],\"컬러\":[\"korean\"],\"컴퓨터\":[\"korean\"],\"코끼리\":[\"korean\"],\"코미디\":[\"korean\"],\"콘서트\":[\"korean\"],\"콜라\":[\"korean\"],\"콤플렉스\":[\"korean\"],\"콩나물\":[\"korean\"],\"쾌감\":[\"korean\"],\"쿠데타\":[\"korean\"],\"크림\":[\"korean\"],\"큰길\":[\"korean\"],\"큰딸\":[\"korean\"],\"큰소리\":[\"korean\"],\"큰아들\":[\"korean\"],\"큰어머니\":[\"korean\"],\"큰일\":[\"korean\"],\"큰절\":[\"korean\"],\"클래식\":[\"korean\"],\"클럽\":[\"korean\"],\"킬로\":[\"korean\"],\"타입\":[\"korean\"],\"타자기\":[\"korean\"],\"탁구\":[\"korean\"],\"탁자\":[\"korean\"],\"탄생\":[\"korean\"],\"태권도\":[\"korean\"],\"태양\":[\"korean\"],\"태풍\":[\"korean\"],\"택시\":[\"korean\"],\"탤런트\":[\"korean\"],\"터널\":[\"korean\"],\"터미널\":[\"korean\"],\"테니스\":[\"korean\"],\"테스트\":[\"korean\"],\"테이블\":[\"korean\"],\"텔레비전\":[\"korean\"],\"토론\":[\"korean\"],\"토마토\":[\"korean\"],\"토요일\":[\"korean\"],\"통계\":[\"korean\"],\"통과\":[\"korean\"],\"통로\":[\"korean\"],\"통신\":[\"korean\"],\"통역\":[\"korean\"],\"통일\":[\"korean\"],\"통장\":[\"korean\"],\"통제\":[\"korean\"],\"통증\":[\"korean\"],\"통합\":[\"korean\"],\"통화\":[\"korean\"],\"퇴근\":[\"korean\"],\"퇴원\":[\"korean\"],\"퇴직금\":[\"korean\"],\"튀김\":[\"korean\"],\"트럭\":[\"korean\"],\"특급\":[\"korean\"],\"특별\":[\"korean\"],\"특성\":[\"korean\"],\"특수\":[\"korean\"],\"특징\":[\"korean\"],\"특히\":[\"korean\"],\"튼튼히\":[\"korean\"],\"티셔츠\":[\"korean\"],\"파란색\":[\"korean\"],\"파일\":[\"korean\"],\"파출소\":[\"korean\"],\"판결\":[\"korean\"],\"판단\":[\"korean\"],\"판매\":[\"korean\"],\"판사\":[\"korean\"],\"팔십\":[\"korean\"],\"팔월\":[\"korean\"],\"팝송\":[\"korean\"],\"패션\":[\"korean\"],\"팩스\":[\"korean\"],\"팩시밀리\":[\"korean\"],\"팬티\":[\"korean\"],\"퍼센트\":[\"korean\"],\"페인트\":[\"korean\"],\"편견\":[\"korean\"],\"편의\":[\"korean\"],\"편지\":[\"korean\"],\"편히\":[\"korean\"],\"평가\":[\"korean\"],\"평균\":[\"korean\"],\"평생\":[\"korean\"],\"평소\":[\"korean\"],\"평양\":[\"korean\"],\"평일\":[\"korean\"],\"평화\":[\"korean\"],\"포스터\":[\"korean\"],\"포인트\":[\"korean\"],\"포장\":[\"korean\"],\"포함\":[\"korean\"],\"표면\":[\"korean\"],\"표정\":[\"korean\"],\"표준\":[\"korean\"],\"표현\":[\"korean\"],\"품목\":[\"korean\"],\"품질\":[\"korean\"],\"풍경\":[\"korean\"],\"풍속\":[\"korean\"],\"풍습\":[\"korean\"],\"프랑스\":[\"korean\"],\"프린터\":[\"korean\"],\"플라스틱\":[\"korean\"],\"피곤\":[\"korean\"],\"피망\":[\"korean\"],\"피아노\":[\"korean\"],\"필름\":[\"korean\"],\"필수\":[\"korean\"],\"필요\":[\"korean\"],\"필자\":[\"korean\"],\"필통\":[\"korean\"],\"핑계\":[\"korean\"],\"하느님\":[\"korean\"],\"하늘\":[\"korean\"],\"하드웨어\":[\"korean\"],\"하룻밤\":[\"korean\"],\"하반기\":[\"korean\"],\"하숙집\":[\"korean\"],\"하순\":[\"korean\"],\"하여튼\":[\"korean\"],\"하지만\":[\"korean\"],\"하천\":[\"korean\"],\"하품\":[\"korean\"],\"하필\":[\"korean\"],\"학과\":[\"korean\"],\"학교\":[\"korean\"],\"학급\":[\"korean\"],\"학기\":[\"korean\"],\"학년\":[\"korean\"],\"학력\":[\"korean\"],\"학번\":[\"korean\"],\"학부모\":[\"korean\"],\"학비\":[\"korean\"],\"학생\":[\"korean\"],\"학술\":[\"korean\"],\"학습\":[\"korean\"],\"학용품\":[\"korean\"],\"학원\":[\"korean\"],\"학위\":[\"korean\"],\"학자\":[\"korean\"],\"학점\":[\"korean\"],\"한계\":[\"korean\"],\"한글\":[\"korean\"],\"한꺼번에\":[\"korean\"],\"한낮\":[\"korean\"],\"한눈\":[\"korean\"],\"한동안\":[\"korean\"],\"한때\":[\"korean\"],\"한라산\":[\"korean\"],\"한마디\":[\"korean\"],\"한문\":[\"korean\"],\"한번\":[\"korean\"],\"한복\":[\"korean\"],\"한식\":[\"korean\"],\"한여름\":[\"korean\"],\"한쪽\":[\"korean\"],\"할머니\":[\"korean\"],\"할아버지\":[\"korean\"],\"할인\":[\"korean\"],\"함께\":[\"korean\"],\"함부로\":[\"korean\"],\"합격\":[\"korean\"],\"합리적\":[\"korean\"],\"항공\":[\"korean\"],\"항구\":[\"korean\"],\"항상\":[\"korean\"],\"항의\":[\"korean\"],\"해결\":[\"korean\"],\"해군\":[\"korean\"],\"해답\":[\"korean\"],\"해당\":[\"korean\"],\"해물\":[\"korean\"],\"해석\":[\"korean\"],\"해설\":[\"korean\"],\"해수욕장\":[\"korean\"],\"해안\":[\"korean\"],\"핵심\":[\"korean\"],\"핸드백\":[\"korean\"],\"햄버거\":[\"korean\"],\"햇볕\":[\"korean\"],\"햇살\":[\"korean\"],\"행동\":[\"korean\"],\"행복\":[\"korean\"],\"행사\":[\"korean\"],\"행운\":[\"korean\"],\"행위\":[\"korean\"],\"향기\":[\"korean\"],\"향상\":[\"korean\"],\"향수\":[\"korean\"],\"허락\":[\"korean\"],\"허용\":[\"korean\"],\"헬기\":[\"korean\"],\"현관\":[\"korean\"],\"현금\":[\"korean\"],\"현대\":[\"korean\"],\"현상\":[\"korean\"],\"현실\":[\"korean\"],\"현장\":[\"korean\"],\"현재\":[\"korean\"],\"현지\":[\"korean\"],\"혈액\":[\"korean\"],\"협력\":[\"korean\"],\"형부\":[\"korean\"],\"형사\":[\"korean\"],\"형수\":[\"korean\"],\"형식\":[\"korean\"],\"형제\":[\"korean\"],\"형태\":[\"korean\"],\"형편\":[\"korean\"],\"혜택\":[\"korean\"],\"호기심\":[\"korean\"],\"호남\":[\"korean\"],\"호랑이\":[\"korean\"],\"호박\":[\"korean\"],\"호텔\":[\"korean\"],\"호흡\":[\"korean\"],\"혹시\":[\"korean\"],\"홀로\":[\"korean\"],\"홈페이지\":[\"korean\"],\"홍보\":[\"korean\"],\"홍수\":[\"korean\"],\"홍차\":[\"korean\"],\"화면\":[\"korean\"],\"화분\":[\"korean\"],\"화살\":[\"korean\"],\"화요일\":[\"korean\"],\"화장\":[\"korean\"],\"화학\":[\"korean\"],\"확보\":[\"korean\"],\"확인\":[\"korean\"],\"확장\":[\"korean\"],\"확정\":[\"korean\"],\"환갑\":[\"korean\"],\"환경\":[\"korean\"],\"환영\":[\"korean\"],\"환율\":[\"korean\"],\"환자\":[\"korean\"],\"활기\":[\"korean\"],\"활동\":[\"korean\"],\"활발히\":[\"korean\"],\"활용\":[\"korean\"],\"활짝\":[\"korean\"],\"회견\":[\"korean\"],\"회관\":[\"korean\"],\"회복\":[\"korean\"],\"회색\":[\"korean\"],\"회원\":[\"korean\"],\"회장\":[\"korean\"],\"회전\":[\"korean\"],\"횟수\":[\"korean\"],\"횡단보도\":[\"korean\"],\"효율적\":[\"korean\"],\"후반\":[\"korean\"],\"후춧가루\":[\"korean\"],\"훈련\":[\"korean\"],\"훨씬\":[\"korean\"],\"휴식\":[\"korean\"],\"휴일\":[\"korean\"],\"흉내\":[\"korean\"],\"흐름\":[\"korean\"],\"흑백\":[\"korean\"],\"흑인\":[\"korean\"],\"흔적\":[\"korean\"],\"흔히\":[\"korean\"],\"흥미\":[\"korean\"],\"흥분\":[\"korean\"],\"희곡\":[\"korean\"],\"희망\":[\"korean\"],\"희생\":[\"korean\"],\"흰색\":[\"korean\"],\"힘껏\":[\"korean\"],\"abacate\":[\"portuguese\"],\"abaixo\":[\"portuguese\"],\"abalar\":[\"portuguese\"],\"abater\":[\"portuguese\"],\"abduzir\":[\"portuguese\"],\"abelha\":[\"portuguese\"],\"aberto\":[\"portuguese\"],\"abismo\":[\"portuguese\"],\"abotoar\":[\"portuguese\"],\"abranger\":[\"portuguese\"],\"abreviar\":[\"portuguese\"],\"abrigar\":[\"portuguese\"],\"abrupto\":[\"portuguese\"],\"absinto\":[\"portuguese\"],\"absoluto\":[\"portuguese\"],\"absurdo\":[\"portuguese\"],\"abutre\":[\"portuguese\"],\"acabado\":[\"portuguese\"],\"acalmar\":[\"portuguese\"],\"acampar\":[\"portuguese\"],\"acanhar\":[\"portuguese\"],\"acaso\":[\"portuguese\"],\"aceitar\":[\"portuguese\"],\"acelerar\":[\"portuguese\"],\"acenar\":[\"portuguese\"],\"acervo\":[\"portuguese\"],\"acessar\":[\"portuguese\"],\"acetona\":[\"portuguese\"],\"achatar\":[\"portuguese\"],\"acidez\":[\"portuguese\"],\"acima\":[\"portuguese\"],\"acionado\":[\"portuguese\"],\"acirrar\":[\"portuguese\"],\"aclamar\":[\"portuguese\"],\"aclive\":[\"portuguese\"],\"acolhida\":[\"portuguese\"],\"acomodar\":[\"portuguese\"],\"acoplar\":[\"portuguese\"],\"acordar\":[\"portuguese\"],\"acumular\":[\"portuguese\"],\"acusador\":[\"portuguese\"],\"adaptar\":[\"portuguese\"],\"adega\":[\"portuguese\"],\"adentro\":[\"portuguese\"],\"adepto\":[\"portuguese\"],\"adequar\":[\"portuguese\"],\"aderente\":[\"portuguese\"],\"adesivo\":[\"portuguese\"],\"adeus\":[\"portuguese\"],\"adiante\":[\"portuguese\"],\"aditivo\":[\"portuguese\"],\"adjetivo\":[\"portuguese\"],\"adjunto\":[\"portuguese\"],\"admirar\":[\"portuguese\"],\"adorar\":[\"portuguese\"],\"adquirir\":[\"portuguese\"],\"adubo\":[\"portuguese\"],\"adverso\":[\"portuguese\"],\"advogado\":[\"portuguese\"],\"aeronave\":[\"portuguese\"],\"afastar\":[\"portuguese\"],\"aferir\":[\"portuguese\"],\"afetivo\":[\"portuguese\"],\"afinador\":[\"portuguese\"],\"afivelar\":[\"portuguese\"],\"aflito\":[\"portuguese\"],\"afluente\":[\"portuguese\"],\"afrontar\":[\"portuguese\"],\"agachar\":[\"portuguese\"],\"agarrar\":[\"portuguese\"],\"agasalho\":[\"portuguese\"],\"agenciar\":[\"portuguese\"],\"agilizar\":[\"portuguese\"],\"agiota\":[\"portuguese\"],\"agitado\":[\"portuguese\"],\"agora\":[\"portuguese\"],\"agradar\":[\"portuguese\"],\"agreste\":[\"portuguese\"],\"agrupar\":[\"portuguese\"],\"aguardar\":[\"portuguese\"],\"agulha\":[\"portuguese\"],\"ajoelhar\":[\"portuguese\"],\"ajudar\":[\"portuguese\"],\"ajustar\":[\"portuguese\"],\"alameda\":[\"portuguese\"],\"alarme\":[\"portuguese\"],\"alastrar\":[\"portuguese\"],\"alavanca\":[\"portuguese\"],\"albergue\":[\"portuguese\"],\"albino\":[\"portuguese\"],\"alcatra\":[\"portuguese\"],\"aldeia\":[\"portuguese\"],\"alecrim\":[\"portuguese\"],\"alegria\":[\"portuguese\"],\"alertar\":[\"portuguese\"],\"alface\":[\"portuguese\"],\"alfinete\":[\"portuguese\"],\"algum\":[\"portuguese\"],\"alheio\":[\"portuguese\"],\"aliar\":[\"portuguese\"],\"alicate\":[\"portuguese\"],\"alienar\":[\"portuguese\"],\"alinhar\":[\"portuguese\"],\"aliviar\":[\"portuguese\"],\"almofada\":[\"portuguese\"],\"alocar\":[\"portuguese\"],\"alpiste\":[\"portuguese\"],\"alterar\":[\"portuguese\"],\"altitude\":[\"portuguese\"],\"alucinar\":[\"portuguese\"],\"alugar\":[\"portuguese\"],\"aluno\":[\"portuguese\"],\"alusivo\":[\"portuguese\"],\"alvo\":[\"portuguese\"],\"amaciar\":[\"portuguese\"],\"amador\":[\"portuguese\"],\"amarelo\":[\"portuguese\"],\"amassar\":[\"portuguese\"],\"ambas\":[\"portuguese\"],\"ambiente\":[\"portuguese\"],\"ameixa\":[\"portuguese\"],\"amenizar\":[\"portuguese\"],\"amido\":[\"portuguese\"],\"amistoso\":[\"portuguese\"],\"amizade\":[\"portuguese\"],\"amolador\":[\"portuguese\"],\"amontoar\":[\"portuguese\"],\"amoroso\":[\"portuguese\"],\"amostra\":[\"portuguese\"],\"amparar\":[\"portuguese\"],\"ampliar\":[\"portuguese\"],\"ampola\":[\"portuguese\"],\"anagrama\":[\"portuguese\"],\"analisar\":[\"portuguese\"],\"anarquia\":[\"portuguese\"],\"anatomia\":[\"portuguese\"],\"andaime\":[\"portuguese\"],\"anel\":[\"portuguese\"],\"anexo\":[\"portuguese\"],\"angular\":[\"portuguese\"],\"animar\":[\"portuguese\"],\"anjo\":[\"portuguese\"],\"anomalia\":[\"portuguese\"],\"anotado\":[\"portuguese\"],\"ansioso\":[\"portuguese\"],\"anterior\":[\"portuguese\"],\"anuidade\":[\"portuguese\"],\"anunciar\":[\"portuguese\"],\"anzol\":[\"portuguese\"],\"apagador\":[\"portuguese\"],\"apalpar\":[\"portuguese\"],\"apanhado\":[\"portuguese\"],\"apego\":[\"portuguese\"],\"apelido\":[\"portuguese\"],\"apertada\":[\"portuguese\"],\"apesar\":[\"portuguese\"],\"apetite\":[\"portuguese\"],\"apito\":[\"portuguese\"],\"aplauso\":[\"portuguese\"],\"aplicada\":[\"portuguese\"],\"apoio\":[\"portuguese\"],\"apontar\":[\"portuguese\"],\"aposta\":[\"portuguese\"],\"aprendiz\":[\"portuguese\"],\"aprovar\":[\"portuguese\"],\"aquecer\":[\"portuguese\"],\"arame\":[\"portuguese\"],\"aranha\":[\"portuguese\"],\"arara\":[\"portuguese\"],\"arcada\":[\"portuguese\"],\"ardente\":[\"portuguese\"],\"areia\":[\"portuguese\"],\"arejar\":[\"portuguese\"],\"arenito\":[\"portuguese\"],\"aresta\":[\"portuguese\"],\"argiloso\":[\"portuguese\"],\"argola\":[\"portuguese\"],\"arma\":[\"portuguese\"],\"arquivo\":[\"portuguese\"],\"arraial\":[\"portuguese\"],\"arrebate\":[\"portuguese\"],\"arriscar\":[\"portuguese\"],\"arroba\":[\"portuguese\"],\"arrumar\":[\"portuguese\"],\"arsenal\":[\"portuguese\"],\"arterial\":[\"portuguese\"],\"artigo\":[\"portuguese\"],\"arvoredo\":[\"portuguese\"],\"asfaltar\":[\"portuguese\"],\"asilado\":[\"portuguese\"],\"aspirar\":[\"portuguese\"],\"assador\":[\"portuguese\"],\"assinar\":[\"portuguese\"],\"assoalho\":[\"portuguese\"],\"assunto\":[\"portuguese\"],\"astral\":[\"portuguese\"],\"atacado\":[\"portuguese\"],\"atadura\":[\"portuguese\"],\"atalho\":[\"portuguese\"],\"atarefar\":[\"portuguese\"],\"atear\":[\"portuguese\"],\"atender\":[\"portuguese\"],\"aterro\":[\"portuguese\"],\"ateu\":[\"portuguese\"],\"atingir\":[\"portuguese\"],\"atirador\":[\"portuguese\"],\"ativo\":[\"portuguese\"],\"atoleiro\":[\"portuguese\"],\"atracar\":[\"portuguese\"],\"atrevido\":[\"portuguese\"],\"atriz\":[\"portuguese\"],\"atual\":[\"portuguese\"],\"atum\":[\"portuguese\"],\"auditor\":[\"portuguese\"],\"aumentar\":[\"portuguese\"],\"aura\":[\"portuguese\"],\"aurora\":[\"portuguese\"],\"autismo\":[\"portuguese\"],\"autoria\":[\"portuguese\"],\"autuar\":[\"portuguese\"],\"avaliar\":[\"portuguese\"],\"avante\":[\"portuguese\"],\"avaria\":[\"portuguese\"],\"avental\":[\"portuguese\"],\"avesso\":[\"portuguese\"],\"aviador\":[\"portuguese\"],\"avisar\":[\"portuguese\"],\"avulso\":[\"portuguese\"],\"axila\":[\"portuguese\"],\"azarar\":[\"portuguese\"],\"azedo\":[\"portuguese\"],\"azeite\":[\"portuguese\"],\"azulejo\":[\"portuguese\"],\"babar\":[\"portuguese\"],\"babosa\":[\"portuguese\"],\"bacalhau\":[\"portuguese\"],\"bacharel\":[\"portuguese\"],\"bacia\":[\"portuguese\"],\"bagagem\":[\"portuguese\"],\"baiano\":[\"portuguese\"],\"bailar\":[\"portuguese\"],\"baioneta\":[\"portuguese\"],\"bairro\":[\"portuguese\"],\"baixista\":[\"portuguese\"],\"bajular\":[\"portuguese\"],\"baleia\":[\"portuguese\"],\"baliza\":[\"portuguese\"],\"balsa\":[\"portuguese\"],\"banal\":[\"portuguese\"],\"bandeira\":[\"portuguese\"],\"banho\":[\"portuguese\"],\"banir\":[\"portuguese\"],\"banquete\":[\"portuguese\"],\"barato\":[\"portuguese\"],\"barbado\":[\"portuguese\"],\"baronesa\":[\"portuguese\"],\"barraca\":[\"portuguese\"],\"barulho\":[\"portuguese\"],\"baseado\":[\"portuguese\"],\"bastante\":[\"portuguese\"],\"batata\":[\"portuguese\"],\"batedor\":[\"portuguese\"],\"batida\":[\"portuguese\"],\"batom\":[\"portuguese\"],\"batucar\":[\"portuguese\"],\"baunilha\":[\"portuguese\"],\"beber\":[\"portuguese\"],\"beijo\":[\"portuguese\"],\"beirada\":[\"portuguese\"],\"beisebol\":[\"portuguese\"],\"beldade\":[\"portuguese\"],\"beleza\":[\"portuguese\"],\"belga\":[\"portuguese\"],\"beliscar\":[\"portuguese\"],\"bendito\":[\"portuguese\"],\"bengala\":[\"portuguese\"],\"benzer\":[\"portuguese\",\"turkish\"],\"berimbau\":[\"portuguese\"],\"berlinda\":[\"portuguese\"],\"berro\":[\"portuguese\"],\"besouro\":[\"portuguese\"],\"bexiga\":[\"portuguese\"],\"bezerro\":[\"portuguese\"],\"bico\":[\"portuguese\"],\"bicudo\":[\"portuguese\"],\"bienal\":[\"portuguese\"],\"bifocal\":[\"portuguese\"],\"bifurcar\":[\"portuguese\"],\"bigorna\":[\"portuguese\"],\"bilhete\":[\"portuguese\"],\"bimestre\":[\"portuguese\"],\"bimotor\":[\"portuguese\"],\"biologia\":[\"portuguese\"],\"biombo\":[\"portuguese\"],\"biosfera\":[\"portuguese\"],\"bipolar\":[\"portuguese\"],\"birrento\":[\"portuguese\"],\"biscoito\":[\"portuguese\"],\"bisneto\":[\"portuguese\"],\"bispo\":[\"portuguese\"],\"bissexto\":[\"portuguese\"],\"bitola\":[\"portuguese\"],\"bizarro\":[\"portuguese\"],\"blindado\":[\"portuguese\"],\"bloco\":[\"portuguese\"],\"bloquear\":[\"portuguese\"],\"boato\":[\"portuguese\"],\"bobagem\":[\"portuguese\"],\"bocado\":[\"portuguese\"],\"bocejo\":[\"portuguese\"],\"bochecha\":[\"portuguese\"],\"boicotar\":[\"portuguese\"],\"bolada\":[\"portuguese\"],\"boletim\":[\"portuguese\"],\"bolha\":[\"portuguese\"],\"bolo\":[\"portuguese\"],\"bombeiro\":[\"portuguese\"],\"bonde\":[\"portuguese\"],\"boneco\":[\"portuguese\"],\"bonita\":[\"portuguese\"],\"borbulha\":[\"portuguese\"],\"borda\":[\"portuguese\"],\"boreal\":[\"portuguese\"],\"borracha\":[\"portuguese\"],\"bovino\":[\"portuguese\"],\"boxeador\":[\"portuguese\"],\"branco\":[\"portuguese\"],\"brasa\":[\"portuguese\"],\"braveza\":[\"portuguese\"],\"breu\":[\"portuguese\"],\"briga\":[\"portuguese\"],\"brilho\":[\"portuguese\"],\"brincar\":[\"portuguese\"],\"broa\":[\"portuguese\"],\"brochura\":[\"portuguese\"],\"bronzear\":[\"portuguese\"],\"broto\":[\"portuguese\"],\"bruxo\":[\"portuguese\"],\"bucha\":[\"portuguese\"],\"budismo\":[\"portuguese\"],\"bufar\":[\"portuguese\"],\"bule\":[\"portuguese\"],\"buraco\":[\"portuguese\"],\"busca\":[\"portuguese\"],\"busto\":[\"portuguese\"],\"buzina\":[\"portuguese\"],\"cabana\":[\"portuguese\"],\"cabelo\":[\"portuguese\"],\"cabide\":[\"portuguese\"],\"cabo\":[\"portuguese\"],\"cabrito\":[\"portuguese\"],\"cacau\":[\"portuguese\"],\"cacetada\":[\"portuguese\"],\"cachorro\":[\"portuguese\"],\"cacique\":[\"portuguese\"],\"cadastro\":[\"portuguese\"],\"cadeado\":[\"portuguese\"],\"cafezal\":[\"portuguese\"],\"caiaque\":[\"portuguese\"],\"caipira\":[\"portuguese\"],\"caixote\":[\"portuguese\"],\"cajado\":[\"portuguese\"],\"caju\":[\"portuguese\"],\"calafrio\":[\"portuguese\"],\"calcular\":[\"portuguese\"],\"caldeira\":[\"portuguese\"],\"calibrar\":[\"portuguese\"],\"calmante\":[\"portuguese\"],\"calota\":[\"portuguese\"],\"camada\":[\"portuguese\"],\"cambista\":[\"portuguese\"],\"camisa\":[\"portuguese\"],\"camomila\":[\"portuguese\"],\"campanha\":[\"portuguese\"],\"camuflar\":[\"portuguese\"],\"canavial\":[\"portuguese\"],\"cancelar\":[\"portuguese\"],\"caneta\":[\"portuguese\"],\"canguru\":[\"portuguese\"],\"canhoto\":[\"portuguese\"],\"canivete\":[\"portuguese\"],\"canoa\":[\"portuguese\"],\"cansado\":[\"portuguese\"],\"cantar\":[\"portuguese\"],\"canudo\":[\"portuguese\"],\"capacho\":[\"portuguese\"],\"capela\":[\"portuguese\"],\"capinar\":[\"portuguese\"],\"capotar\":[\"portuguese\"],\"capricho\":[\"portuguese\"],\"captador\":[\"portuguese\"],\"capuz\":[\"portuguese\"],\"caracol\":[\"portuguese\"],\"carbono\":[\"portuguese\"],\"cardeal\":[\"portuguese\"],\"careca\":[\"portuguese\"],\"carimbar\":[\"portuguese\"],\"carneiro\":[\"portuguese\"],\"carpete\":[\"portuguese\"],\"carreira\":[\"portuguese\"],\"cartaz\":[\"portuguese\"],\"carvalho\":[\"portuguese\"],\"casaco\":[\"portuguese\"],\"casca\":[\"portuguese\"],\"casebre\":[\"portuguese\"],\"castelo\":[\"portuguese\"],\"casulo\":[\"portuguese\"],\"catarata\":[\"portuguese\"],\"cativar\":[\"portuguese\"],\"caule\":[\"portuguese\"],\"causador\":[\"portuguese\"],\"cautelar\":[\"portuguese\"],\"cavalo\":[\"portuguese\"],\"caverna\":[\"portuguese\"],\"cebola\":[\"portuguese\"],\"cedilha\":[\"portuguese\"],\"cegonha\":[\"portuguese\"],\"celebrar\":[\"portuguese\"],\"celular\":[\"portuguese\"],\"cenoura\":[\"portuguese\"],\"censo\":[\"portuguese\"],\"centeio\":[\"portuguese\"],\"cercar\":[\"portuguese\"],\"cerrado\":[\"portuguese\"],\"certeiro\":[\"portuguese\"],\"cerveja\":[\"portuguese\"],\"cetim\":[\"portuguese\"],\"cevada\":[\"portuguese\"],\"chacota\":[\"portuguese\"],\"chaleira\":[\"portuguese\"],\"chamado\":[\"portuguese\"],\"chapada\":[\"portuguese\"],\"charme\":[\"portuguese\"],\"chatice\":[\"portuguese\"],\"chave\":[\"portuguese\"],\"chefe\":[\"portuguese\"],\"chegada\":[\"portuguese\"],\"cheiro\":[\"portuguese\"],\"cheque\":[\"portuguese\"],\"chicote\":[\"portuguese\"],\"chifre\":[\"portuguese\"],\"chinelo\":[\"portuguese\"],\"chocalho\":[\"portuguese\"],\"chover\":[\"portuguese\"],\"chumbo\":[\"portuguese\"],\"chutar\":[\"portuguese\"],\"chuva\":[\"portuguese\"],\"cicatriz\":[\"portuguese\"],\"ciclone\":[\"portuguese\"],\"cidade\":[\"portuguese\"],\"cidreira\":[\"portuguese\"],\"ciente\":[\"portuguese\"],\"cigana\":[\"portuguese\"],\"cimento\":[\"portuguese\"],\"cinto\":[\"portuguese\"],\"cinza\":[\"portuguese\"],\"ciranda\":[\"portuguese\"],\"circuito\":[\"portuguese\"],\"cirurgia\":[\"portuguese\"],\"citar\":[\"portuguese\"],\"clareza\":[\"portuguese\"],\"clero\":[\"portuguese\"],\"clicar\":[\"portuguese\"],\"clone\":[\"portuguese\"],\"clube\":[\"portuguese\"],\"coado\":[\"portuguese\"],\"coagir\":[\"portuguese\"],\"cobaia\":[\"portuguese\"],\"cobertor\":[\"portuguese\"],\"cobrar\":[\"portuguese\"],\"cocada\":[\"portuguese\"],\"coelho\":[\"portuguese\"],\"coentro\":[\"portuguese\"],\"coeso\":[\"portuguese\"],\"cogumelo\":[\"portuguese\"],\"coibir\":[\"portuguese\"],\"coifa\":[\"portuguese\"],\"coiote\":[\"portuguese\"],\"colar\":[\"portuguese\"],\"coleira\":[\"portuguese\"],\"colher\":[\"portuguese\"],\"colidir\":[\"portuguese\"],\"colmeia\":[\"portuguese\"],\"colono\":[\"portuguese\"],\"coluna\":[\"portuguese\"],\"comando\":[\"portuguese\"],\"combinar\":[\"portuguese\"],\"comentar\":[\"portuguese\"],\"comitiva\":[\"portuguese\"],\"comover\":[\"portuguese\"],\"complexo\":[\"portuguese\"],\"comum\":[\"portuguese\"],\"concha\":[\"portuguese\"],\"condor\":[\"portuguese\"],\"conectar\":[\"portuguese\"],\"confuso\":[\"portuguese\"],\"congelar\":[\"portuguese\"],\"conhecer\":[\"portuguese\"],\"conjugar\":[\"portuguese\"],\"consumir\":[\"portuguese\"],\"contrato\":[\"portuguese\"],\"convite\":[\"portuguese\"],\"cooperar\":[\"portuguese\"],\"copeiro\":[\"portuguese\"],\"copiador\":[\"portuguese\"],\"copo\":[\"portuguese\"],\"coquetel\":[\"portuguese\"],\"coragem\":[\"portuguese\"],\"cordial\":[\"portuguese\"],\"corneta\":[\"portuguese\"],\"coronha\":[\"portuguese\"],\"corporal\":[\"portuguese\"],\"correio\":[\"portuguese\"],\"cortejo\":[\"portuguese\"],\"coruja\":[\"portuguese\"],\"corvo\":[\"portuguese\"],\"cosseno\":[\"portuguese\"],\"costela\":[\"portuguese\"],\"cotonete\":[\"portuguese\"],\"couro\":[\"portuguese\"],\"couve\":[\"portuguese\"],\"covil\":[\"portuguese\"],\"cozinha\":[\"portuguese\"],\"cratera\":[\"portuguese\"],\"cravo\":[\"portuguese\"],\"creche\":[\"portuguese\"],\"credor\":[\"portuguese\"],\"creme\":[\"portuguese\"],\"crer\":[\"portuguese\"],\"crespo\":[\"portuguese\"],\"criada\":[\"portuguese\"],\"criminal\":[\"portuguese\"],\"crioulo\":[\"portuguese\"],\"crise\":[\"portuguese\"],\"criticar\":[\"portuguese\"],\"crosta\":[\"portuguese\"],\"crua\":[\"portuguese\"],\"cruzeiro\":[\"portuguese\"],\"cubano\":[\"portuguese\"],\"cueca\":[\"portuguese\"],\"cuidado\":[\"portuguese\"],\"cujo\":[\"portuguese\"],\"culatra\":[\"portuguese\"],\"culminar\":[\"portuguese\"],\"culpar\":[\"portuguese\"],\"cultura\":[\"portuguese\"],\"cumprir\":[\"portuguese\"],\"cunhado\":[\"portuguese\"],\"cupido\":[\"portuguese\"],\"curativo\":[\"portuguese\"],\"curral\":[\"portuguese\"],\"cursar\":[\"portuguese\"],\"curto\":[\"portuguese\"],\"cuspir\":[\"portuguese\"],\"custear\":[\"portuguese\"],\"cutelo\":[\"portuguese\"],\"damasco\":[\"portuguese\"],\"datar\":[\"portuguese\"],\"debater\":[\"portuguese\"],\"debitar\":[\"portuguese\"],\"deboche\":[\"portuguese\"],\"debulhar\":[\"portuguese\"],\"decalque\":[\"portuguese\"],\"decimal\":[\"portuguese\"],\"declive\":[\"portuguese\"],\"decote\":[\"portuguese\"],\"decretar\":[\"portuguese\"],\"dedal\":[\"portuguese\"],\"dedicado\":[\"portuguese\"],\"deduzir\":[\"portuguese\"],\"defesa\":[\"portuguese\"],\"defumar\":[\"portuguese\"],\"degelo\":[\"portuguese\"],\"degrau\":[\"portuguese\"],\"degustar\":[\"portuguese\"],\"deitado\":[\"portuguese\"],\"deixar\":[\"portuguese\"],\"delator\":[\"portuguese\"],\"delegado\":[\"portuguese\"],\"delinear\":[\"portuguese\"],\"delonga\":[\"portuguese\"],\"demanda\":[\"portuguese\"],\"demitir\":[\"portuguese\"],\"demolido\":[\"portuguese\"],\"dentista\":[\"portuguese\"],\"depenado\":[\"portuguese\"],\"depilar\":[\"portuguese\"],\"depois\":[\"portuguese\"],\"depressa\":[\"portuguese\"],\"depurar\":[\"portuguese\"],\"deriva\":[\"portuguese\"],\"derramar\":[\"portuguese\"],\"desafio\":[\"portuguese\"],\"desbotar\":[\"portuguese\"],\"descanso\":[\"portuguese\"],\"desenho\":[\"portuguese\"],\"desfiado\":[\"portuguese\"],\"desgaste\":[\"portuguese\"],\"desigual\":[\"portuguese\"],\"deslize\":[\"portuguese\"],\"desmamar\":[\"portuguese\"],\"desova\":[\"portuguese\"],\"despesa\":[\"portuguese\"],\"destaque\":[\"portuguese\"],\"desviar\":[\"portuguese\"],\"detalhar\":[\"portuguese\"],\"detentor\":[\"portuguese\"],\"detonar\":[\"portuguese\"],\"detrito\":[\"portuguese\"],\"deusa\":[\"portuguese\"],\"dever\":[\"portuguese\"],\"devido\":[\"portuguese\"],\"devotado\":[\"portuguese\"],\"dezena\":[\"portuguese\"],\"diagrama\":[\"portuguese\"],\"dialeto\":[\"portuguese\"],\"didata\":[\"portuguese\"],\"difuso\":[\"portuguese\"],\"digitar\":[\"portuguese\"],\"dilatado\":[\"portuguese\"],\"diluente\":[\"portuguese\"],\"diminuir\":[\"portuguese\"],\"dinastia\":[\"portuguese\"],\"dinheiro\":[\"portuguese\"],\"diocese\":[\"portuguese\"],\"direto\":[\"portuguese\"],\"discreta\":[\"portuguese\"],\"disfarce\":[\"portuguese\"],\"disparo\":[\"portuguese\"],\"disquete\":[\"portuguese\"],\"dissipar\":[\"portuguese\"],\"distante\":[\"portuguese\"],\"ditador\":[\"portuguese\"],\"diurno\":[\"portuguese\"],\"diverso\":[\"portuguese\"],\"divisor\":[\"portuguese\"],\"divulgar\":[\"portuguese\"],\"dizer\":[\"portuguese\"],\"dobrador\":[\"portuguese\"],\"dolorido\":[\"portuguese\"],\"domador\":[\"portuguese\"],\"dominado\":[\"portuguese\"],\"donativo\":[\"portuguese\"],\"donzela\":[\"portuguese\"],\"dormente\":[\"portuguese\"],\"dorsal\":[\"portuguese\"],\"dosagem\":[\"portuguese\"],\"dourado\":[\"portuguese\"],\"doutor\":[\"portuguese\"],\"drenagem\":[\"portuguese\"],\"drible\":[\"portuguese\"],\"drogaria\":[\"portuguese\"],\"duelar\":[\"portuguese\"],\"duende\":[\"portuguese\"],\"dueto\":[\"portuguese\"],\"duplo\":[\"portuguese\"],\"duquesa\":[\"portuguese\"],\"durante\":[\"portuguese\"],\"duvidoso\":[\"portuguese\"],\"eclodir\":[\"portuguese\"],\"ecoar\":[\"portuguese\"],\"ecologia\":[\"portuguese\"],\"edificar\":[\"portuguese\"],\"edital\":[\"portuguese\"],\"educado\":[\"portuguese\"],\"efeito\":[\"portuguese\"],\"efetivar\":[\"portuguese\"],\"ejetar\":[\"portuguese\"],\"elaborar\":[\"portuguese\"],\"eleger\":[\"portuguese\"],\"eleitor\":[\"portuguese\"],\"elenco\":[\"portuguese\"],\"elevador\":[\"portuguese\"],\"eliminar\":[\"portuguese\"],\"elogiar\":[\"portuguese\"],\"embargo\":[\"portuguese\"],\"embolado\":[\"portuguese\"],\"embrulho\":[\"portuguese\"],\"embutido\":[\"portuguese\"],\"emenda\":[\"portuguese\"],\"emergir\":[\"portuguese\"],\"emissor\":[\"portuguese\"],\"empatia\":[\"portuguese\"],\"empenho\":[\"portuguese\"],\"empinado\":[\"portuguese\"],\"empolgar\":[\"portuguese\"],\"emprego\":[\"portuguese\"],\"empurrar\":[\"portuguese\"],\"emulador\":[\"portuguese\"],\"encaixe\":[\"portuguese\"],\"encenado\":[\"portuguese\"],\"enchente\":[\"portuguese\"],\"encontro\":[\"portuguese\"],\"endeusar\":[\"portuguese\"],\"endossar\":[\"portuguese\"],\"enfaixar\":[\"portuguese\"],\"enfeite\":[\"portuguese\"],\"enfim\":[\"portuguese\"],\"engajado\":[\"portuguese\"],\"engenho\":[\"portuguese\"],\"englobar\":[\"portuguese\"],\"engomado\":[\"portuguese\"],\"engraxar\":[\"portuguese\"],\"enguia\":[\"portuguese\"],\"enjoar\":[\"portuguese\"],\"enlatar\":[\"portuguese\"],\"enquanto\":[\"portuguese\"],\"enraizar\":[\"portuguese\"],\"enrolado\":[\"portuguese\"],\"enrugar\":[\"portuguese\"],\"ensaio\":[\"portuguese\"],\"enseada\":[\"portuguese\"],\"ensino\":[\"portuguese\"],\"ensopado\":[\"portuguese\"],\"entanto\":[\"portuguese\"],\"enteado\":[\"portuguese\"],\"entidade\":[\"portuguese\"],\"entortar\":[\"portuguese\"],\"entrada\":[\"portuguese\"],\"entulho\":[\"portuguese\"],\"envergar\":[\"portuguese\"],\"enviado\":[\"portuguese\"],\"envolver\":[\"portuguese\"],\"enxame\":[\"portuguese\"],\"enxerto\":[\"portuguese\"],\"enxofre\":[\"portuguese\"],\"enxuto\":[\"portuguese\"],\"epiderme\":[\"portuguese\"],\"equipar\":[\"portuguese\"],\"ereto\":[\"portuguese\"],\"erguido\":[\"portuguese\"],\"errata\":[\"portuguese\"],\"erva\":[\"portuguese\"],\"ervilha\":[\"portuguese\"],\"esbanjar\":[\"portuguese\"],\"esbelto\":[\"portuguese\"],\"escama\":[\"portuguese\"],\"escola\":[\"portuguese\"],\"escrita\":[\"portuguese\"],\"escuta\":[\"portuguese\"],\"esfinge\":[\"portuguese\"],\"esfolar\":[\"portuguese\"],\"esfregar\":[\"portuguese\"],\"esfumado\":[\"portuguese\"],\"esgrima\":[\"portuguese\"],\"esmalte\":[\"portuguese\"],\"espanto\":[\"portuguese\"],\"espelho\":[\"portuguese\"],\"espiga\":[\"portuguese\"],\"esponja\":[\"portuguese\"],\"espreita\":[\"portuguese\"],\"espumar\":[\"portuguese\"],\"esquerda\":[\"portuguese\"],\"estaca\":[\"portuguese\"],\"esteira\":[\"portuguese\"],\"esticar\":[\"portuguese\"],\"estofado\":[\"portuguese\"],\"estrela\":[\"portuguese\"],\"estudo\":[\"portuguese\"],\"esvaziar\":[\"portuguese\"],\"etanol\":[\"portuguese\"],\"etiqueta\":[\"portuguese\"],\"euforia\":[\"portuguese\"],\"europeu\":[\"portuguese\"],\"evacuar\":[\"portuguese\"],\"evaporar\":[\"portuguese\"],\"evasivo\":[\"portuguese\"],\"eventual\":[\"portuguese\"],\"evidente\":[\"portuguese\"],\"evoluir\":[\"portuguese\"],\"exagero\":[\"portuguese\"],\"exalar\":[\"portuguese\"],\"examinar\":[\"portuguese\"],\"exato\":[\"portuguese\"],\"exausto\":[\"portuguese\"],\"excesso\":[\"portuguese\"],\"excitar\":[\"portuguese\"],\"exclamar\":[\"portuguese\"],\"executar\":[\"portuguese\"],\"exemplo\":[\"portuguese\"],\"exibir\":[\"portuguese\"],\"exigente\":[\"portuguese\"],\"exonerar\":[\"portuguese\"],\"expandir\":[\"portuguese\"],\"expelir\":[\"portuguese\"],\"expirar\":[\"portuguese\"],\"explanar\":[\"portuguese\"],\"exposto\":[\"portuguese\"],\"expresso\":[\"portuguese\"],\"expulsar\":[\"portuguese\"],\"externo\":[\"portuguese\"],\"extinto\":[\"portuguese\"],\"extrato\":[\"portuguese\"],\"fabricar\":[\"portuguese\"],\"fabuloso\":[\"portuguese\"],\"faceta\":[\"portuguese\"],\"facial\":[\"portuguese\"],\"fada\":[\"portuguese\"],\"fadiga\":[\"portuguese\"],\"faixa\":[\"portuguese\"],\"falar\":[\"portuguese\"],\"falta\":[\"portuguese\"],\"familiar\":[\"portuguese\"],\"fandango\":[\"portuguese\"],\"fanfarra\":[\"portuguese\"],\"fantoche\":[\"portuguese\"],\"fardado\":[\"portuguese\"],\"farelo\":[\"portuguese\"],\"farinha\":[\"portuguese\"],\"farofa\":[\"portuguese\"],\"farpa\":[\"portuguese\"],\"fartura\":[\"portuguese\"],\"fatia\":[\"portuguese\"],\"fator\":[\"portuguese\"],\"favorita\":[\"portuguese\"],\"faxina\":[\"portuguese\"],\"fazenda\":[\"portuguese\"],\"fechado\":[\"portuguese\"],\"feijoada\":[\"portuguese\"],\"feirante\":[\"portuguese\"],\"felino\":[\"portuguese\"],\"feminino\":[\"portuguese\"],\"fenda\":[\"portuguese\"],\"feno\":[\"portuguese\"],\"fera\":[\"portuguese\"],\"feriado\":[\"portuguese\"],\"ferrugem\":[\"portuguese\"],\"ferver\":[\"portuguese\"],\"festejar\":[\"portuguese\"],\"fetal\":[\"portuguese\"],\"feudal\":[\"portuguese\"],\"fiapo\":[\"portuguese\"],\"fibrose\":[\"portuguese\"],\"ficar\":[\"portuguese\"],\"ficheiro\":[\"portuguese\"],\"figurado\":[\"portuguese\"],\"fileira\":[\"portuguese\"],\"filho\":[\"portuguese\"],\"filme\":[\"portuguese\"],\"filtrar\":[\"portuguese\"],\"firmeza\":[\"portuguese\"],\"fisgada\":[\"portuguese\"],\"fissura\":[\"portuguese\"],\"fita\":[\"portuguese\"],\"fivela\":[\"portuguese\"],\"fixador\":[\"portuguese\"],\"fixo\":[\"portuguese\"],\"flacidez\":[\"portuguese\"],\"flamingo\":[\"portuguese\"],\"flanela\":[\"portuguese\"],\"flechada\":[\"portuguese\"],\"flora\":[\"portuguese\"],\"flutuar\":[\"portuguese\"],\"fluxo\":[\"portuguese\"],\"focal\":[\"portuguese\"],\"focinho\":[\"portuguese\"],\"fofocar\":[\"portuguese\"],\"fogo\":[\"portuguese\"],\"foguete\":[\"portuguese\"],\"foice\":[\"portuguese\"],\"folgado\":[\"portuguese\"],\"folheto\":[\"portuguese\"],\"forjar\":[\"portuguese\"],\"formiga\":[\"portuguese\"],\"forno\":[\"portuguese\"],\"forte\":[\"portuguese\"],\"fosco\":[\"portuguese\"],\"fossa\":[\"portuguese\"],\"fragata\":[\"portuguese\"],\"fralda\":[\"portuguese\"],\"frango\":[\"portuguese\"],\"frasco\":[\"portuguese\"],\"fraterno\":[\"portuguese\"],\"freira\":[\"portuguese\"],\"frente\":[\"portuguese\"],\"fretar\":[\"portuguese\"],\"frieza\":[\"portuguese\"],\"friso\":[\"portuguese\"],\"fritura\":[\"portuguese\"],\"fronha\":[\"portuguese\"],\"frustrar\":[\"portuguese\"],\"fruteira\":[\"portuguese\"],\"fugir\":[\"portuguese\"],\"fulano\":[\"portuguese\"],\"fuligem\":[\"portuguese\"],\"fundar\":[\"portuguese\"],\"fungo\":[\"portuguese\"],\"funil\":[\"portuguese\"],\"furador\":[\"portuguese\"],\"furioso\":[\"portuguese\"],\"futebol\":[\"portuguese\"],\"gabarito\":[\"portuguese\"],\"gabinete\":[\"portuguese\"],\"gado\":[\"portuguese\"],\"gaiato\":[\"portuguese\"],\"gaiola\":[\"portuguese\"],\"gaivota\":[\"portuguese\"],\"galega\":[\"portuguese\"],\"galho\":[\"portuguese\"],\"galinha\":[\"portuguese\"],\"galocha\":[\"portuguese\"],\"ganhar\":[\"portuguese\"],\"garagem\":[\"portuguese\"],\"garfo\":[\"portuguese\"],\"gargalo\":[\"portuguese\"],\"garimpo\":[\"portuguese\"],\"garoupa\":[\"portuguese\"],\"garrafa\":[\"portuguese\"],\"gasoduto\":[\"portuguese\"],\"gasto\":[\"portuguese\"],\"gata\":[\"portuguese\"],\"gatilho\":[\"portuguese\"],\"gaveta\":[\"portuguese\"],\"gazela\":[\"portuguese\"],\"gelado\":[\"portuguese\"],\"geleia\":[\"portuguese\"],\"gelo\":[\"portuguese\"],\"gemada\":[\"portuguese\"],\"gemer\":[\"portuguese\"],\"gemido\":[\"portuguese\"],\"generoso\":[\"portuguese\"],\"gengiva\":[\"portuguese\"],\"genial\":[\"portuguese\"],\"genoma\":[\"portuguese\"],\"genro\":[\"portuguese\"],\"geologia\":[\"portuguese\"],\"gerador\":[\"portuguese\"],\"germinar\":[\"portuguese\"],\"gesso\":[\"portuguese\"],\"gestor\":[\"portuguese\"],\"ginasta\":[\"portuguese\"],\"gincana\":[\"portuguese\"],\"gingado\":[\"portuguese\"],\"girafa\":[\"portuguese\"],\"girino\":[\"portuguese\"],\"glacial\":[\"portuguese\"],\"glicose\":[\"portuguese\"],\"global\":[\"portuguese\"],\"glorioso\":[\"portuguese\"],\"goela\":[\"portuguese\"],\"goiaba\":[\"portuguese\"],\"golfe\":[\"portuguese\"],\"golpear\":[\"portuguese\"],\"gordura\":[\"portuguese\"],\"gorjeta\":[\"portuguese\"],\"gorro\":[\"portuguese\"],\"gostoso\":[\"portuguese\"],\"goteira\":[\"portuguese\"],\"governar\":[\"portuguese\"],\"gracejo\":[\"portuguese\"],\"gradual\":[\"portuguese\"],\"grafite\":[\"portuguese\"],\"gralha\":[\"portuguese\"],\"grampo\":[\"portuguese\"],\"granada\":[\"portuguese\"],\"gratuito\":[\"portuguese\"],\"graveto\":[\"portuguese\"],\"graxa\":[\"portuguese\"],\"grego\":[\"portuguese\"],\"grelhar\":[\"portuguese\"],\"greve\":[\"portuguese\"],\"grilo\":[\"portuguese\"],\"grisalho\":[\"portuguese\"],\"gritaria\":[\"portuguese\"],\"grosso\":[\"portuguese\"],\"grotesco\":[\"portuguese\"],\"grudado\":[\"portuguese\"],\"grunhido\":[\"portuguese\"],\"gruta\":[\"portuguese\"],\"guache\":[\"portuguese\"],\"guarani\":[\"portuguese\"],\"guaxinim\":[\"portuguese\"],\"guerrear\":[\"portuguese\"],\"guiar\":[\"portuguese\"],\"guincho\":[\"portuguese\"],\"guisado\":[\"portuguese\"],\"gula\":[\"portuguese\"],\"guloso\":[\"portuguese\"],\"guru\":[\"portuguese\"],\"habitar\":[\"portuguese\"],\"harmonia\":[\"portuguese\"],\"haste\":[\"portuguese\"],\"haver\":[\"portuguese\"],\"hectare\":[\"portuguese\"],\"herdar\":[\"portuguese\"],\"heresia\":[\"portuguese\"],\"hesitar\":[\"portuguese\"],\"hiato\":[\"portuguese\"],\"hibernar\":[\"portuguese\"],\"hidratar\":[\"portuguese\"],\"hiena\":[\"portuguese\"],\"hino\":[\"portuguese\"],\"hipismo\":[\"portuguese\"],\"hipnose\":[\"portuguese\"],\"hipoteca\":[\"portuguese\"],\"hoje\":[\"portuguese\"],\"holofote\":[\"portuguese\"],\"homem\":[\"portuguese\"],\"honesto\":[\"portuguese\"],\"honrado\":[\"portuguese\"],\"hormonal\":[\"portuguese\"],\"hospedar\":[\"portuguese\"],\"humorado\":[\"portuguese\"],\"iate\":[\"portuguese\"],\"ideia\":[\"portuguese\"],\"idoso\":[\"portuguese\"],\"ignorado\":[\"portuguese\"],\"igreja\":[\"portuguese\"],\"iguana\":[\"portuguese\"],\"ileso\":[\"portuguese\"],\"ilha\":[\"portuguese\"],\"iludido\":[\"portuguese\"],\"iluminar\":[\"portuguese\"],\"ilustrar\":[\"portuguese\"],\"imagem\":[\"portuguese\"],\"imediato\":[\"portuguese\"],\"imenso\":[\"portuguese\"],\"imersivo\":[\"portuguese\"],\"iminente\":[\"portuguese\"],\"imitador\":[\"portuguese\"],\"imortal\":[\"portuguese\"],\"impacto\":[\"portuguese\"],\"impedir\":[\"portuguese\"],\"implante\":[\"portuguese\"],\"impor\":[\"portuguese\"],\"imprensa\":[\"portuguese\"],\"impune\":[\"portuguese\"],\"imunizar\":[\"portuguese\"],\"inalador\":[\"portuguese\"],\"inapto\":[\"portuguese\"],\"inativo\":[\"portuguese\"],\"incenso\":[\"portuguese\"],\"inchar\":[\"portuguese\"],\"incidir\":[\"portuguese\"],\"incluir\":[\"portuguese\"],\"incolor\":[\"portuguese\"],\"indeciso\":[\"portuguese\"],\"indireto\":[\"portuguese\"],\"indutor\":[\"portuguese\"],\"ineficaz\":[\"portuguese\"],\"inerente\":[\"portuguese\"],\"infantil\":[\"portuguese\"],\"infestar\":[\"portuguese\"],\"infinito\":[\"portuguese\"],\"inflamar\":[\"portuguese\"],\"informal\":[\"portuguese\"],\"infrator\":[\"portuguese\"],\"ingerir\":[\"portuguese\"],\"inibido\":[\"portuguese\"],\"inicial\":[\"portuguese\"],\"inimigo\":[\"portuguese\"],\"injetar\":[\"portuguese\"],\"inocente\":[\"portuguese\"],\"inodoro\":[\"portuguese\"],\"inovador\":[\"portuguese\"],\"inox\":[\"portuguese\"],\"inquieto\":[\"portuguese\"],\"inscrito\":[\"portuguese\"],\"inseto\":[\"portuguese\"],\"insistir\":[\"portuguese\"],\"inspetor\":[\"portuguese\"],\"instalar\":[\"portuguese\"],\"insulto\":[\"portuguese\"],\"intacto\":[\"portuguese\"],\"integral\":[\"portuguese\"],\"intimar\":[\"portuguese\"],\"intocado\":[\"portuguese\"],\"intriga\":[\"portuguese\"],\"invasor\":[\"portuguese\"],\"inverno\":[\"portuguese\"],\"invicto\":[\"portuguese\"],\"invocar\":[\"portuguese\"],\"iogurte\":[\"portuguese\"],\"iraniano\":[\"portuguese\"],\"ironizar\":[\"portuguese\"],\"irreal\":[\"portuguese\"],\"irritado\":[\"portuguese\"],\"isca\":[\"portuguese\"],\"isento\":[\"portuguese\"],\"isolado\":[\"portuguese\"],\"isqueiro\":[\"portuguese\"],\"italiano\":[\"portuguese\"],\"janeiro\":[\"portuguese\"],\"jangada\":[\"portuguese\"],\"janta\":[\"portuguese\"],\"jararaca\":[\"portuguese\"],\"jardim\":[\"portuguese\"],\"jarro\":[\"portuguese\"],\"jasmim\":[\"portuguese\"],\"jato\":[\"portuguese\"],\"javali\":[\"portuguese\"],\"jazida\":[\"portuguese\"],\"jejum\":[\"portuguese\"],\"joaninha\":[\"portuguese\"],\"joelhada\":[\"portuguese\"],\"jogador\":[\"portuguese\"],\"joia\":[\"portuguese\"],\"jornal\":[\"portuguese\"],\"jorrar\":[\"portuguese\"],\"jovem\":[\"portuguese\"],\"juba\":[\"portuguese\"],\"judeu\":[\"portuguese\"],\"judoca\":[\"portuguese\"],\"juiz\":[\"portuguese\"],\"julgador\":[\"portuguese\"],\"julho\":[\"portuguese\"],\"jurado\":[\"portuguese\"],\"jurista\":[\"portuguese\"],\"juro\":[\"portuguese\"],\"justa\":[\"portuguese\"],\"labareda\":[\"portuguese\"],\"laboral\":[\"portuguese\"],\"lacre\":[\"portuguese\"],\"lactante\":[\"portuguese\"],\"ladrilho\":[\"portuguese\"],\"lagarta\":[\"portuguese\"],\"lagoa\":[\"portuguese\"],\"laje\":[\"portuguese\"],\"lamber\":[\"portuguese\"],\"lamentar\":[\"portuguese\"],\"laminar\":[\"portuguese\"],\"lampejo\":[\"portuguese\"],\"lanche\":[\"portuguese\"],\"lapidar\":[\"portuguese\"],\"lapso\":[\"portuguese\"],\"laranja\":[\"portuguese\"],\"lareira\":[\"portuguese\"],\"largura\":[\"portuguese\"],\"lasanha\":[\"portuguese\"],\"lastro\":[\"portuguese\"],\"lateral\":[\"portuguese\"],\"latido\":[\"portuguese\"],\"lavanda\":[\"portuguese\"],\"lavoura\":[\"portuguese\"],\"lavrador\":[\"portuguese\"],\"laxante\":[\"portuguese\"],\"lazer\":[\"portuguese\"],\"lealdade\":[\"portuguese\"],\"lebre\":[\"portuguese\"],\"legado\":[\"portuguese\"],\"legendar\":[\"portuguese\"],\"legista\":[\"portuguese\"],\"leigo\":[\"portuguese\"],\"leiloar\":[\"portuguese\"],\"leitura\":[\"portuguese\"],\"lembrete\":[\"portuguese\"],\"leme\":[\"portuguese\"],\"lenhador\":[\"portuguese\"],\"lentilha\":[\"portuguese\"],\"leoa\":[\"portuguese\"],\"lesma\":[\"portuguese\"],\"leste\":[\"portuguese\"],\"letivo\":[\"portuguese\"],\"letreiro\":[\"portuguese\"],\"levar\":[\"portuguese\"],\"leveza\":[\"portuguese\"],\"levitar\":[\"portuguese\"],\"liberal\":[\"portuguese\"],\"libido\":[\"portuguese\"],\"liderar\":[\"portuguese\"],\"ligar\":[\"portuguese\"],\"ligeiro\":[\"portuguese\"],\"limitar\":[\"portuguese\"],\"limoeiro\":[\"portuguese\"],\"limpador\":[\"portuguese\"],\"linda\":[\"portuguese\"],\"linear\":[\"portuguese\"],\"linhagem\":[\"portuguese\"],\"liquidez\":[\"portuguese\"],\"listagem\":[\"portuguese\"],\"lisura\":[\"portuguese\"],\"litoral\":[\"portuguese\"],\"livro\":[\"portuguese\"],\"lixa\":[\"portuguese\"],\"lixeira\":[\"portuguese\"],\"locador\":[\"portuguese\"],\"locutor\":[\"portuguese\"],\"lojista\":[\"portuguese\"],\"lombo\":[\"portuguese\"],\"lona\":[\"portuguese\"],\"longe\":[\"portuguese\"],\"lontra\":[\"portuguese\"],\"lorde\":[\"portuguese\"],\"lotado\":[\"portuguese\"],\"loteria\":[\"portuguese\"],\"loucura\":[\"portuguese\"],\"lousa\":[\"portuguese\"],\"louvar\":[\"portuguese\"],\"luar\":[\"portuguese\"],\"lucidez\":[\"portuguese\"],\"lucro\":[\"portuguese\"],\"luneta\":[\"portuguese\"],\"lustre\":[\"portuguese\"],\"lutador\":[\"portuguese\"],\"luva\":[\"portuguese\"],\"macaco\":[\"portuguese\"],\"macete\":[\"portuguese\"],\"machado\":[\"portuguese\"],\"macio\":[\"portuguese\"],\"madeira\":[\"portuguese\"],\"madrinha\":[\"portuguese\"],\"magnata\":[\"portuguese\"],\"magreza\":[\"portuguese\"],\"maior\":[\"portuguese\"],\"mais\":[\"portuguese\"],\"malandro\":[\"portuguese\"],\"malha\":[\"portuguese\"],\"malote\":[\"portuguese\"],\"maluco\":[\"portuguese\"],\"mamilo\":[\"portuguese\"],\"mamoeiro\":[\"portuguese\"],\"mamute\":[\"portuguese\"],\"manada\":[\"portuguese\"],\"mancha\":[\"portuguese\"],\"mandato\":[\"portuguese\"],\"manequim\":[\"portuguese\"],\"manhoso\":[\"portuguese\"],\"manivela\":[\"portuguese\"],\"manobrar\":[\"portuguese\"],\"mansa\":[\"portuguese\"],\"manter\":[\"portuguese\"],\"manusear\":[\"portuguese\"],\"mapeado\":[\"portuguese\"],\"maquinar\":[\"portuguese\"],\"marcador\":[\"portuguese\"],\"maresia\":[\"portuguese\"],\"marfim\":[\"portuguese\"],\"margem\":[\"portuguese\"],\"marinho\":[\"portuguese\"],\"marmita\":[\"portuguese\"],\"maroto\":[\"portuguese\"],\"marquise\":[\"portuguese\"],\"marreco\":[\"portuguese\"],\"martelo\":[\"portuguese\"],\"marujo\":[\"portuguese\"],\"mascote\":[\"portuguese\"],\"masmorra\":[\"portuguese\"],\"massagem\":[\"portuguese\"],\"mastigar\":[\"portuguese\"],\"matagal\":[\"portuguese\"],\"materno\":[\"portuguese\"],\"matinal\":[\"portuguese\"],\"matutar\":[\"portuguese\"],\"maxilar\":[\"portuguese\"],\"medalha\":[\"portuguese\"],\"medida\":[\"portuguese\"],\"medusa\":[\"portuguese\"],\"megafone\":[\"portuguese\"],\"meiga\":[\"portuguese\"],\"melancia\":[\"portuguese\"],\"melhor\":[\"portuguese\"],\"membro\":[\"portuguese\"],\"memorial\":[\"portuguese\"],\"menino\":[\"portuguese\"],\"menos\":[\"portuguese\"],\"mensagem\":[\"portuguese\"],\"mental\":[\"portuguese\"],\"merecer\":[\"portuguese\"],\"mergulho\":[\"portuguese\"],\"mesada\":[\"portuguese\"],\"mesclar\":[\"portuguese\"],\"mesmo\":[\"portuguese\"],\"mesquita\":[\"portuguese\"],\"mestre\":[\"portuguese\"],\"metade\":[\"portuguese\"],\"meteoro\":[\"portuguese\"],\"metragem\":[\"portuguese\"],\"mexer\":[\"portuguese\"],\"mexicano\":[\"portuguese\"],\"micro\":[\"portuguese\"],\"migalha\":[\"portuguese\"],\"migrar\":[\"portuguese\"],\"milagre\":[\"portuguese\"],\"milenar\":[\"portuguese\"],\"milhar\":[\"portuguese\"],\"mimado\":[\"portuguese\"],\"minerar\":[\"portuguese\"],\"minhoca\":[\"portuguese\"],\"ministro\":[\"portuguese\"],\"minoria\":[\"portuguese\"],\"miolo\":[\"portuguese\"],\"mirante\":[\"portuguese\"],\"mirtilo\":[\"portuguese\"],\"misturar\":[\"portuguese\"],\"mocidade\":[\"portuguese\"],\"moderno\":[\"portuguese\"],\"modular\":[\"portuguese\"],\"moeda\":[\"portuguese\"],\"moer\":[\"portuguese\"],\"moinho\":[\"portuguese\"],\"moita\":[\"portuguese\"],\"moldura\":[\"portuguese\"],\"moleza\":[\"portuguese\"],\"molho\":[\"portuguese\"],\"molinete\":[\"portuguese\"],\"molusco\":[\"portuguese\"],\"montanha\":[\"portuguese\"],\"moqueca\":[\"portuguese\"],\"morango\":[\"portuguese\"],\"morcego\":[\"portuguese\"],\"mordomo\":[\"portuguese\"],\"morena\":[\"portuguese\"],\"mosaico\":[\"portuguese\"],\"mosquete\":[\"portuguese\"],\"mostarda\":[\"portuguese\"],\"motel\":[\"portuguese\"],\"motim\":[\"portuguese\"],\"moto\":[\"portuguese\"],\"motriz\":[\"portuguese\"],\"muda\":[\"portuguese\"],\"muito\":[\"portuguese\"],\"mulata\":[\"portuguese\"],\"mulher\":[\"portuguese\"],\"multar\":[\"portuguese\"],\"mundial\":[\"portuguese\"],\"munido\":[\"portuguese\"],\"muralha\":[\"portuguese\"],\"murcho\":[\"portuguese\"],\"muscular\":[\"portuguese\"],\"museu\":[\"portuguese\"],\"musical\":[\"portuguese\"],\"nacional\":[\"portuguese\"],\"nadador\":[\"portuguese\"],\"naja\":[\"portuguese\"],\"namoro\":[\"portuguese\"],\"narina\":[\"portuguese\"],\"narrado\":[\"portuguese\"],\"nascer\":[\"portuguese\"],\"nativa\":[\"portuguese\"],\"natureza\":[\"portuguese\"],\"navalha\":[\"portuguese\"],\"navegar\":[\"portuguese\"],\"navio\":[\"portuguese\"],\"neblina\":[\"portuguese\"],\"nebuloso\":[\"portuguese\"],\"negativa\":[\"portuguese\"],\"negociar\":[\"portuguese\"],\"negrito\":[\"portuguese\"],\"nervoso\":[\"portuguese\"],\"neta\":[\"portuguese\"],\"neural\":[\"portuguese\"],\"nevasca\":[\"portuguese\"],\"nevoeiro\":[\"portuguese\"],\"ninar\":[\"portuguese\"],\"ninho\":[\"portuguese\"],\"nitidez\":[\"portuguese\"],\"nivelar\":[\"portuguese\"],\"nobreza\":[\"portuguese\"],\"noite\":[\"portuguese\"],\"noiva\":[\"portuguese\"],\"nomear\":[\"portuguese\"],\"nominal\":[\"portuguese\"],\"nordeste\":[\"portuguese\"],\"nortear\":[\"portuguese\"],\"notar\":[\"portuguese\"],\"noticiar\":[\"portuguese\"],\"noturno\":[\"portuguese\"],\"novelo\":[\"portuguese\"],\"novilho\":[\"portuguese\"],\"novo\":[\"portuguese\"],\"nublado\":[\"portuguese\"],\"nudez\":[\"portuguese\"],\"numeral\":[\"portuguese\"],\"nupcial\":[\"portuguese\"],\"nutrir\":[\"portuguese\"],\"nuvem\":[\"portuguese\"],\"obcecado\":[\"portuguese\"],\"obedecer\":[\"portuguese\"],\"objetivo\":[\"portuguese\"],\"obrigado\":[\"portuguese\"],\"obscuro\":[\"portuguese\"],\"obstetra\":[\"portuguese\"],\"obter\":[\"portuguese\"],\"obturar\":[\"portuguese\"],\"ocidente\":[\"portuguese\"],\"ocioso\":[\"portuguese\"],\"ocorrer\":[\"portuguese\"],\"oculista\":[\"portuguese\"],\"ocupado\":[\"portuguese\"],\"ofegante\":[\"portuguese\"],\"ofensiva\":[\"portuguese\"],\"oferenda\":[\"portuguese\"],\"oficina\":[\"portuguese\"],\"ofuscado\":[\"portuguese\"],\"ogiva\":[\"portuguese\"],\"olaria\":[\"portuguese\"],\"oleoso\":[\"portuguese\"],\"olhar\":[\"portuguese\"],\"oliveira\":[\"portuguese\"],\"ombro\":[\"portuguese\"],\"omelete\":[\"portuguese\"],\"omisso\":[\"portuguese\"],\"omitir\":[\"portuguese\"],\"ondulado\":[\"portuguese\"],\"oneroso\":[\"portuguese\"],\"ontem\":[\"portuguese\"],\"opcional\":[\"portuguese\"],\"operador\":[\"portuguese\"],\"oponente\":[\"portuguese\"],\"oportuno\":[\"portuguese\"],\"oposto\":[\"portuguese\"],\"orar\":[\"portuguese\"],\"orbitar\":[\"portuguese\"],\"ordem\":[\"portuguese\"],\"ordinal\":[\"portuguese\"],\"orfanato\":[\"portuguese\"],\"orgasmo\":[\"portuguese\"],\"orgulho\":[\"portuguese\"],\"oriental\":[\"portuguese\"],\"origem\":[\"portuguese\"],\"oriundo\":[\"portuguese\"],\"orla\":[\"portuguese\"],\"ortodoxo\":[\"portuguese\"],\"orvalho\":[\"portuguese\"],\"oscilar\":[\"portuguese\"],\"ossada\":[\"portuguese\"],\"osso\":[\"portuguese\"],\"ostentar\":[\"portuguese\"],\"otimismo\":[\"portuguese\"],\"ousadia\":[\"portuguese\"],\"outono\":[\"portuguese\"],\"outubro\":[\"portuguese\"],\"ouvido\":[\"portuguese\"],\"ovelha\":[\"portuguese\"],\"ovular\":[\"portuguese\"],\"oxidar\":[\"portuguese\"],\"oxigenar\":[\"portuguese\"],\"pacato\":[\"portuguese\"],\"paciente\":[\"portuguese\"],\"pacote\":[\"portuguese\"],\"pactuar\":[\"portuguese\"],\"padaria\":[\"portuguese\"],\"padrinho\":[\"portuguese\"],\"pagar\":[\"portuguese\"],\"pagode\":[\"portuguese\"],\"painel\":[\"portuguese\"],\"pairar\":[\"portuguese\"],\"paisagem\":[\"portuguese\"],\"palavra\":[\"portuguese\"],\"palestra\":[\"portuguese\"],\"palheta\":[\"portuguese\"],\"palito\":[\"portuguese\"],\"palmada\":[\"portuguese\"],\"palpitar\":[\"portuguese\"],\"pancada\":[\"portuguese\"],\"panela\":[\"portuguese\"],\"panfleto\":[\"portuguese\"],\"panqueca\":[\"portuguese\"],\"pantanal\":[\"portuguese\"],\"papagaio\":[\"portuguese\"],\"papelada\":[\"portuguese\"],\"papiro\":[\"portuguese\"],\"parafina\":[\"portuguese\"],\"parcial\":[\"portuguese\"],\"pardal\":[\"portuguese\"],\"parede\":[\"portuguese\"],\"partida\":[\"portuguese\"],\"pasmo\":[\"portuguese\"],\"passado\":[\"portuguese\"],\"pastel\":[\"portuguese\"],\"patamar\":[\"portuguese\"],\"patente\":[\"portuguese\"],\"patinar\":[\"portuguese\"],\"patrono\":[\"portuguese\"],\"paulada\":[\"portuguese\"],\"pausar\":[\"portuguese\"],\"peculiar\":[\"portuguese\"],\"pedalar\":[\"portuguese\"],\"pedestre\":[\"portuguese\"],\"pediatra\":[\"portuguese\"],\"pedra\":[\"portuguese\"],\"pegada\":[\"portuguese\"],\"peitoral\":[\"portuguese\"],\"peixe\":[\"portuguese\"],\"pele\":[\"portuguese\"],\"pelicano\":[\"portuguese\"],\"penca\":[\"portuguese\"],\"pendurar\":[\"portuguese\"],\"peneira\":[\"portuguese\"],\"penhasco\":[\"portuguese\"],\"pensador\":[\"portuguese\"],\"pente\":[\"portuguese\"],\"perceber\":[\"portuguese\"],\"perfeito\":[\"portuguese\"],\"pergunta\":[\"portuguese\"],\"perito\":[\"portuguese\"],\"permitir\":[\"portuguese\"],\"perna\":[\"portuguese\"],\"perplexo\":[\"portuguese\"],\"persiana\":[\"portuguese\"],\"pertence\":[\"portuguese\"],\"peruca\":[\"portuguese\"],\"pescado\":[\"portuguese\"],\"pesquisa\":[\"portuguese\"],\"pessoa\":[\"portuguese\"],\"petiscar\":[\"portuguese\"],\"piada\":[\"portuguese\"],\"picado\":[\"portuguese\"],\"piedade\":[\"portuguese\"],\"pigmento\":[\"portuguese\"],\"pilastra\":[\"portuguese\"],\"pilhado\":[\"portuguese\"],\"pilotar\":[\"portuguese\"],\"pimenta\":[\"portuguese\"],\"pincel\":[\"portuguese\"],\"pinguim\":[\"portuguese\"],\"pinha\":[\"portuguese\"],\"pinote\":[\"portuguese\"],\"pintar\":[\"portuguese\"],\"pioneiro\":[\"portuguese\"],\"pipoca\":[\"portuguese\"],\"piquete\":[\"portuguese\"],\"piranha\":[\"portuguese\"],\"pires\":[\"portuguese\"],\"pirueta\":[\"portuguese\"],\"piscar\":[\"portuguese\"],\"pistola\":[\"portuguese\"],\"pitanga\":[\"portuguese\"],\"pivete\":[\"portuguese\"],\"planta\":[\"portuguese\"],\"plaqueta\":[\"portuguese\"],\"platina\":[\"portuguese\"],\"plebeu\":[\"portuguese\"],\"plumagem\":[\"portuguese\"],\"pluvial\":[\"portuguese\"],\"pneu\":[\"portuguese\"],\"poda\":[\"portuguese\"],\"poeira\":[\"portuguese\"],\"poetisa\":[\"portuguese\"],\"polegada\":[\"portuguese\"],\"policiar\":[\"portuguese\"],\"poluente\":[\"portuguese\"],\"polvilho\":[\"portuguese\"],\"pomar\":[\"portuguese\"],\"pomba\":[\"portuguese\"],\"ponderar\":[\"portuguese\"],\"pontaria\":[\"portuguese\"],\"populoso\":[\"portuguese\"],\"porta\":[\"portuguese\"],\"possuir\":[\"portuguese\"],\"postal\":[\"portuguese\"],\"pote\":[\"portuguese\"],\"poupar\":[\"portuguese\"],\"pouso\":[\"portuguese\"],\"povoar\":[\"portuguese\"],\"praia\":[\"portuguese\"],\"prancha\":[\"portuguese\"],\"prato\":[\"portuguese\"],\"praxe\":[\"portuguese\"],\"prece\":[\"portuguese\"],\"predador\":[\"portuguese\"],\"prefeito\":[\"portuguese\"],\"premiar\":[\"portuguese\"],\"prensar\":[\"portuguese\"],\"preparar\":[\"portuguese\"],\"presilha\":[\"portuguese\"],\"pretexto\":[\"portuguese\"],\"prevenir\":[\"portuguese\"],\"prezar\":[\"portuguese\"],\"primata\":[\"portuguese\"],\"princesa\":[\"portuguese\"],\"prisma\":[\"portuguese\"],\"privado\":[\"portuguese\"],\"processo\":[\"portuguese\"],\"produto\":[\"portuguese\"],\"profeta\":[\"portuguese\"],\"proibido\":[\"portuguese\"],\"projeto\":[\"portuguese\"],\"prometer\":[\"portuguese\"],\"propagar\":[\"portuguese\"],\"prosa\":[\"portuguese\"],\"protetor\":[\"portuguese\"],\"provador\":[\"portuguese\"],\"publicar\":[\"portuguese\"],\"pudim\":[\"portuguese\"],\"pular\":[\"portuguese\"],\"pulmonar\":[\"portuguese\"],\"pulseira\":[\"portuguese\"],\"punhal\":[\"portuguese\"],\"punir\":[\"portuguese\"],\"pupilo\":[\"portuguese\"],\"pureza\":[\"portuguese\"],\"puxador\":[\"portuguese\"],\"quadra\":[\"portuguese\"],\"quantia\":[\"portuguese\"],\"quarto\":[\"portuguese\"],\"quase\":[\"portuguese\"],\"quebrar\":[\"portuguese\"],\"queda\":[\"portuguese\"],\"queijo\":[\"portuguese\"],\"quente\":[\"portuguese\"],\"querido\":[\"portuguese\"],\"quimono\":[\"portuguese\"],\"quina\":[\"portuguese\"],\"quiosque\":[\"portuguese\"],\"rabanada\":[\"portuguese\"],\"rabisco\":[\"portuguese\"],\"rachar\":[\"portuguese\"],\"racionar\":[\"portuguese\"],\"radial\":[\"portuguese\"],\"raiar\":[\"portuguese\"],\"rainha\":[\"portuguese\"],\"raio\":[\"portuguese\"],\"raiva\":[\"portuguese\"],\"rajada\":[\"portuguese\"],\"ralado\":[\"portuguese\"],\"ramal\":[\"portuguese\"],\"ranger\":[\"portuguese\"],\"ranhura\":[\"portuguese\"],\"rapadura\":[\"portuguese\"],\"rapel\":[\"portuguese\"],\"rapidez\":[\"portuguese\"],\"raposa\":[\"portuguese\"],\"raquete\":[\"portuguese\"],\"raridade\":[\"portuguese\"],\"rasante\":[\"portuguese\"],\"rascunho\":[\"portuguese\"],\"rasgar\":[\"portuguese\"],\"raspador\":[\"portuguese\"],\"rasteira\":[\"portuguese\"],\"rasurar\":[\"portuguese\"],\"ratazana\":[\"portuguese\"],\"ratoeira\":[\"portuguese\"],\"realeza\":[\"portuguese\"],\"reanimar\":[\"portuguese\"],\"reaver\":[\"portuguese\"],\"rebaixar\":[\"portuguese\"],\"rebelde\":[\"portuguese\"],\"rebolar\":[\"portuguese\"],\"recado\":[\"portuguese\"],\"recente\":[\"portuguese\"],\"recheio\":[\"portuguese\"],\"recibo\":[\"portuguese\"],\"recordar\":[\"portuguese\"],\"recrutar\":[\"portuguese\"],\"recuar\":[\"portuguese\"],\"rede\":[\"portuguese\"],\"redimir\":[\"portuguese\"],\"redonda\":[\"portuguese\"],\"reduzida\":[\"portuguese\"],\"reenvio\":[\"portuguese\"],\"refinar\":[\"portuguese\"],\"refletir\":[\"portuguese\"],\"refogar\":[\"portuguese\"],\"refresco\":[\"portuguese\"],\"refugiar\":[\"portuguese\"],\"regalia\":[\"portuguese\"],\"regime\":[\"portuguese\"],\"regra\":[\"portuguese\"],\"reinado\":[\"portuguese\"],\"reitor\":[\"portuguese\"],\"rejeitar\":[\"portuguese\"],\"relativo\":[\"portuguese\"],\"remador\":[\"portuguese\"],\"remendo\":[\"portuguese\"],\"remorso\":[\"portuguese\"],\"renovado\":[\"portuguese\"],\"reparo\":[\"portuguese\"],\"repelir\":[\"portuguese\"],\"repleto\":[\"portuguese\"],\"repolho\":[\"portuguese\"],\"represa\":[\"portuguese\"],\"repudiar\":[\"portuguese\"],\"requerer\":[\"portuguese\"],\"resenha\":[\"portuguese\"],\"resfriar\":[\"portuguese\"],\"resgatar\":[\"portuguese\"],\"residir\":[\"portuguese\"],\"resolver\":[\"portuguese\"],\"respeito\":[\"portuguese\"],\"ressaca\":[\"portuguese\"],\"restante\":[\"portuguese\"],\"resumir\":[\"portuguese\"],\"retalho\":[\"portuguese\"],\"reter\":[\"portuguese\"],\"retirar\":[\"portuguese\"],\"retomada\":[\"portuguese\"],\"retratar\":[\"portuguese\"],\"revelar\":[\"portuguese\"],\"revisor\":[\"portuguese\"],\"revolta\":[\"portuguese\"],\"riacho\":[\"portuguese\"],\"rica\":[\"portuguese\"],\"rigidez\":[\"portuguese\"],\"rigoroso\":[\"portuguese\"],\"rimar\":[\"portuguese\"],\"ringue\":[\"portuguese\"],\"risada\":[\"portuguese\"],\"risco\":[\"portuguese\"],\"risonho\":[\"portuguese\"],\"robalo\":[\"portuguese\"],\"rochedo\":[\"portuguese\"],\"rodada\":[\"portuguese\"],\"rodeio\":[\"portuguese\"],\"rodovia\":[\"portuguese\"],\"roedor\":[\"portuguese\"],\"roleta\":[\"portuguese\"],\"romano\":[\"portuguese\"],\"roncar\":[\"portuguese\"],\"rosado\":[\"portuguese\"],\"roseira\":[\"portuguese\"],\"rosto\":[\"portuguese\"],\"rota\":[\"portuguese\",\"turkish\"],\"roteiro\":[\"portuguese\"],\"rotina\":[\"portuguese\"],\"rotular\":[\"portuguese\"],\"rouco\":[\"portuguese\"],\"roupa\":[\"portuguese\"],\"roxo\":[\"portuguese\"],\"rubro\":[\"portuguese\"],\"rugido\":[\"portuguese\"],\"rugoso\":[\"portuguese\"],\"ruivo\":[\"portuguese\"],\"rumo\":[\"portuguese\"],\"rupestre\":[\"portuguese\"],\"russo\":[\"portuguese\"],\"sabor\":[\"portuguese\"],\"saciar\":[\"portuguese\"],\"sacola\":[\"portuguese\"],\"sacudir\":[\"portuguese\"],\"sadio\":[\"portuguese\"],\"safira\":[\"portuguese\"],\"saga\":[\"portuguese\"],\"sagrada\":[\"portuguese\"],\"saibro\":[\"portuguese\"],\"salada\":[\"portuguese\"],\"saleiro\":[\"portuguese\"],\"salgado\":[\"portuguese\"],\"saliva\":[\"portuguese\"],\"salpicar\":[\"portuguese\"],\"salsicha\":[\"portuguese\"],\"saltar\":[\"portuguese\"],\"salvador\":[\"portuguese\"],\"sambar\":[\"portuguese\"],\"samurai\":[\"portuguese\"],\"sanar\":[\"portuguese\"],\"sanfona\":[\"portuguese\"],\"sangue\":[\"portuguese\"],\"sanidade\":[\"portuguese\"],\"sapato\":[\"portuguese\"],\"sarda\":[\"portuguese\"],\"sargento\":[\"portuguese\"],\"sarjeta\":[\"portuguese\"],\"saturar\":[\"portuguese\"],\"saudade\":[\"portuguese\"],\"saxofone\":[\"portuguese\"],\"sazonal\":[\"portuguese\"],\"secar\":[\"portuguese\"],\"secular\":[\"portuguese\"],\"seda\":[\"portuguese\",\"turkish\"],\"sedento\":[\"portuguese\"],\"sediado\":[\"portuguese\"],\"sedoso\":[\"portuguese\"],\"sedutor\":[\"portuguese\"],\"segmento\":[\"portuguese\"],\"segredo\":[\"portuguese\"],\"segundo\":[\"portuguese\"],\"seiva\":[\"portuguese\"],\"seleto\":[\"portuguese\"],\"selvagem\":[\"portuguese\"],\"semanal\":[\"portuguese\"],\"semente\":[\"portuguese\"],\"senador\":[\"portuguese\"],\"senhor\":[\"portuguese\"],\"sensual\":[\"portuguese\"],\"sentado\":[\"portuguese\"],\"separado\":[\"portuguese\"],\"sereia\":[\"portuguese\"],\"seringa\":[\"portuguese\"],\"serra\":[\"portuguese\"],\"servo\":[\"portuguese\"],\"setembro\":[\"portuguese\"],\"setor\":[\"portuguese\"],\"sigilo\":[\"portuguese\"],\"silhueta\":[\"portuguese\"],\"silicone\":[\"portuguese\"],\"simetria\":[\"portuguese\"],\"simpatia\":[\"portuguese\"],\"simular\":[\"portuguese\"],\"sinal\":[\"portuguese\"],\"sincero\":[\"portuguese\"],\"singular\":[\"portuguese\"],\"sinopse\":[\"portuguese\"],\"sintonia\":[\"portuguese\"],\"sirene\":[\"portuguese\"],\"siri\":[\"portuguese\"],\"situado\":[\"portuguese\"],\"soberano\":[\"portuguese\"],\"sobra\":[\"portuguese\"],\"socorro\":[\"portuguese\"],\"sogro\":[\"portuguese\"],\"soja\":[\"portuguese\"],\"solda\":[\"portuguese\"],\"soletrar\":[\"portuguese\"],\"solteiro\":[\"portuguese\"],\"sombrio\":[\"portuguese\"],\"sonata\":[\"portuguese\"],\"sondar\":[\"portuguese\"],\"sonegar\":[\"portuguese\"],\"sonhador\":[\"portuguese\"],\"sono\":[\"portuguese\"],\"soprano\":[\"portuguese\"],\"soquete\":[\"portuguese\"],\"sorrir\":[\"portuguese\"],\"sorteio\":[\"portuguese\"],\"sossego\":[\"portuguese\"],\"sotaque\":[\"portuguese\"],\"soterrar\":[\"portuguese\"],\"sovado\":[\"portuguese\"],\"sozinho\":[\"portuguese\"],\"suavizar\":[\"portuguese\"],\"subida\":[\"portuguese\"],\"submerso\":[\"portuguese\"],\"subsolo\":[\"portuguese\"],\"subtrair\":[\"portuguese\"],\"sucata\":[\"portuguese\"],\"sucesso\":[\"portuguese\"],\"suco\":[\"portuguese\"],\"sudeste\":[\"portuguese\"],\"sufixo\":[\"portuguese\"],\"sugador\":[\"portuguese\"],\"sugerir\":[\"portuguese\"],\"sujeito\":[\"portuguese\"],\"sulfato\":[\"portuguese\"],\"sumir\":[\"portuguese\"],\"suor\":[\"portuguese\"],\"superior\":[\"portuguese\"],\"suplicar\":[\"portuguese\"],\"suposto\":[\"portuguese\"],\"suprimir\":[\"portuguese\"],\"surdina\":[\"portuguese\"],\"surfista\":[\"portuguese\"],\"surpresa\":[\"portuguese\"],\"surreal\":[\"portuguese\"],\"surtir\":[\"portuguese\"],\"suspiro\":[\"portuguese\"],\"sustento\":[\"portuguese\"],\"tabela\":[\"portuguese\",\"turkish\"],\"tablete\":[\"portuguese\"],\"tabuada\":[\"portuguese\"],\"tacho\":[\"portuguese\"],\"tagarela\":[\"portuguese\"],\"talher\":[\"portuguese\"],\"talo\":[\"portuguese\"],\"talvez\":[\"portuguese\"],\"tamanho\":[\"portuguese\"],\"tamborim\":[\"portuguese\"],\"tampa\":[\"portuguese\"],\"tangente\":[\"portuguese\"],\"tanto\":[\"portuguese\"],\"tapar\":[\"portuguese\"],\"tapioca\":[\"portuguese\"],\"tardio\":[\"portuguese\"],\"tarefa\":[\"portuguese\"],\"tarja\":[\"portuguese\"],\"tarraxa\":[\"portuguese\"],\"tatuagem\":[\"portuguese\"],\"taurino\":[\"portuguese\"],\"taxativo\":[\"portuguese\"],\"taxista\":[\"portuguese\"],\"teatral\":[\"portuguese\"],\"tecer\":[\"portuguese\"],\"tecido\":[\"portuguese\"],\"teclado\":[\"portuguese\"],\"tedioso\":[\"portuguese\"],\"teia\":[\"portuguese\"],\"teimar\":[\"portuguese\"],\"telefone\":[\"portuguese\"],\"telhado\":[\"portuguese\"],\"tempero\":[\"portuguese\"],\"tenente\":[\"portuguese\"],\"tensor\":[\"portuguese\"],\"tentar\":[\"portuguese\"],\"termal\":[\"portuguese\"],\"terno\":[\"portuguese\"],\"terreno\":[\"portuguese\"],\"tese\":[\"portuguese\"],\"tesoura\":[\"portuguese\"],\"testado\":[\"portuguese\"],\"teto\":[\"portuguese\"],\"textura\":[\"portuguese\"],\"texugo\":[\"portuguese\"],\"tiara\":[\"portuguese\"],\"tigela\":[\"portuguese\"],\"tijolo\":[\"portuguese\"],\"timbrar\":[\"portuguese\"],\"timidez\":[\"portuguese\"],\"tingido\":[\"portuguese\"],\"tinteiro\":[\"portuguese\"],\"tiragem\":[\"portuguese\"],\"titular\":[\"portuguese\"],\"toalha\":[\"portuguese\"],\"tocha\":[\"portuguese\"],\"tolerar\":[\"portuguese\"],\"tolice\":[\"portuguese\"],\"tomada\":[\"portuguese\"],\"tomilho\":[\"portuguese\"],\"tonel\":[\"portuguese\"],\"tontura\":[\"portuguese\"],\"topete\":[\"portuguese\"],\"tora\":[\"portuguese\"],\"torcido\":[\"portuguese\"],\"torneio\":[\"portuguese\"],\"torque\":[\"portuguese\"],\"torrada\":[\"portuguese\"],\"torto\":[\"portuguese\"],\"tostar\":[\"portuguese\"],\"touca\":[\"portuguese\"],\"toupeira\":[\"portuguese\"],\"toxina\":[\"portuguese\"],\"trabalho\":[\"portuguese\"],\"tracejar\":[\"portuguese\"],\"tradutor\":[\"portuguese\"],\"trafegar\":[\"portuguese\"],\"trajeto\":[\"portuguese\"],\"trama\":[\"portuguese\"],\"trancar\":[\"portuguese\"],\"trapo\":[\"portuguese\"],\"traseiro\":[\"portuguese\"],\"tratador\":[\"portuguese\"],\"travar\":[\"portuguese\"],\"treino\":[\"portuguese\"],\"tremer\":[\"portuguese\"],\"trepidar\":[\"portuguese\"],\"trevo\":[\"portuguese\"],\"triagem\":[\"portuguese\"],\"tribo\":[\"portuguese\"],\"triciclo\":[\"portuguese\"],\"tridente\":[\"portuguese\"],\"trilogia\":[\"portuguese\"],\"trindade\":[\"portuguese\"],\"triplo\":[\"portuguese\"],\"triturar\":[\"portuguese\"],\"triunfal\":[\"portuguese\"],\"trocar\":[\"portuguese\"],\"trombeta\":[\"portuguese\"],\"trova\":[\"portuguese\"],\"trunfo\":[\"portuguese\"],\"truque\":[\"portuguese\"],\"tubular\":[\"portuguese\"],\"tucano\":[\"portuguese\"],\"tudo\":[\"portuguese\"],\"tulipa\":[\"portuguese\"],\"tupi\":[\"portuguese\"],\"turbo\":[\"portuguese\"],\"turma\":[\"portuguese\"],\"turquesa\":[\"portuguese\"],\"tutelar\":[\"portuguese\"],\"tutorial\":[\"portuguese\"],\"uivar\":[\"portuguese\"],\"umbigo\":[\"portuguese\"],\"unha\":[\"portuguese\"],\"unidade\":[\"portuguese\"],\"uniforme\":[\"portuguese\"],\"urologia\":[\"portuguese\"],\"urso\":[\"portuguese\"],\"urtiga\":[\"portuguese\"],\"urubu\":[\"portuguese\"],\"usado\":[\"portuguese\"],\"usina\":[\"portuguese\"],\"usufruir\":[\"portuguese\"],\"vacina\":[\"portuguese\"],\"vadiar\":[\"portuguese\"],\"vagaroso\":[\"portuguese\"],\"vaidoso\":[\"portuguese\"],\"vala\":[\"portuguese\"],\"valente\":[\"portuguese\"],\"validade\":[\"portuguese\"],\"valores\":[\"portuguese\"],\"vantagem\":[\"portuguese\"],\"vaqueiro\":[\"portuguese\"],\"varanda\":[\"portuguese\"],\"vareta\":[\"portuguese\"],\"varrer\":[\"portuguese\"],\"vascular\":[\"portuguese\"],\"vasilha\":[\"portuguese\"],\"vassoura\":[\"portuguese\"],\"vazar\":[\"portuguese\"],\"vazio\":[\"portuguese\"],\"veado\":[\"portuguese\"],\"vedar\":[\"portuguese\"],\"vegetar\":[\"portuguese\"],\"veicular\":[\"portuguese\"],\"veleiro\":[\"portuguese\"],\"velhice\":[\"portuguese\"],\"veludo\":[\"portuguese\"],\"vencedor\":[\"portuguese\"],\"vendaval\":[\"portuguese\"],\"venerar\":[\"portuguese\"],\"ventre\":[\"portuguese\"],\"verbal\":[\"portuguese\"],\"verdade\":[\"portuguese\"],\"vereador\":[\"portuguese\"],\"vergonha\":[\"portuguese\"],\"vermelho\":[\"portuguese\"],\"verniz\":[\"portuguese\"],\"versar\":[\"portuguese\"],\"vertente\":[\"portuguese\"],\"vespa\":[\"portuguese\"],\"vestido\":[\"portuguese\"],\"vetorial\":[\"portuguese\"],\"viaduto\":[\"portuguese\"],\"viagem\":[\"portuguese\"],\"viajar\":[\"portuguese\"],\"viatura\":[\"portuguese\"],\"vibrador\":[\"portuguese\"],\"videira\":[\"portuguese\"],\"vidraria\":[\"portuguese\"],\"viela\":[\"portuguese\"],\"viga\":[\"portuguese\"],\"vigente\":[\"portuguese\"],\"vigiar\":[\"portuguese\"],\"vigorar\":[\"portuguese\"],\"vilarejo\":[\"portuguese\"],\"vinco\":[\"portuguese\"],\"vinheta\":[\"portuguese\"],\"vinil\":[\"portuguese\"],\"violeta\":[\"portuguese\"],\"virada\":[\"portuguese\"],\"virtude\":[\"portuguese\"],\"visitar\":[\"portuguese\"],\"visto\":[\"portuguese\"],\"vitral\":[\"portuguese\"],\"viveiro\":[\"portuguese\"],\"vizinho\":[\"portuguese\"],\"voador\":[\"portuguese\"],\"voar\":[\"portuguese\"],\"vogal\":[\"portuguese\"],\"volante\":[\"portuguese\"],\"voleibol\":[\"portuguese\"],\"voltagem\":[\"portuguese\"],\"volumoso\":[\"portuguese\"],\"vontade\":[\"portuguese\"],\"vulto\":[\"portuguese\"],\"vuvuzela\":[\"portuguese\"],\"xadrez\":[\"portuguese\"],\"xarope\":[\"portuguese\"],\"xeque\":[\"portuguese\"],\"xeretar\":[\"portuguese\"],\"xerife\":[\"portuguese\"],\"xingar\":[\"portuguese\"],\"zangado\":[\"portuguese\"],\"zarpar\":[\"portuguese\"],\"zebu\":[\"portuguese\"],\"zelador\":[\"portuguese\"],\"zombar\":[\"portuguese\"],\"zoologia\":[\"portuguese\"],\"zumbido\":[\"portuguese\"],\"абзац\":[\"russian\"],\"абонент\":[\"russian\"],\"абсурд\":[\"russian\"],\"авангард\":[\"russian\"],\"авария\":[\"russian\"],\"август\":[\"russian\"],\"авиация\":[\"russian\"],\"автор\":[\"russian\"],\"агент\":[\"russian\"],\"агитация\":[\"russian\"],\"агрегат\":[\"russian\"],\"адвокат\":[\"russian\"],\"адмирал\":[\"russian\"],\"адрес\":[\"russian\"],\"азарт\":[\"russian\"],\"азот\":[\"russian\"],\"академия\":[\"russian\"],\"аквариум\":[\"russian\"],\"аксиома\":[\"russian\"],\"акула\":[\"russian\"],\"акцент\":[\"russian\"],\"акция\":[\"russian\"],\"аллея\":[\"russian\"],\"алмаз\":[\"russian\"],\"алтарь\":[\"russian\"],\"альбом\":[\"russian\"],\"альянс\":[\"russian\"],\"амбиция\":[\"russian\"],\"анализ\":[\"russian\"],\"анекдот\":[\"russian\"],\"анкета\":[\"russian\"],\"ансамбль\":[\"russian\"],\"антенна\":[\"russian\"],\"апельсин\":[\"russian\"],\"аппарат\":[\"russian\"],\"аппетит\":[\"russian\"],\"апрель\":[\"russian\"],\"аптека\":[\"russian\"],\"арбуз\":[\"russian\"],\"аргумент\":[\"russian\"],\"аренда\":[\"russian\"],\"арест\":[\"russian\"],\"армия\":[\"russian\"],\"аромат\":[\"russian\"],\"арсенал\":[\"russian\"],\"артерия\":[\"russian\"],\"артист\":[\"russian\"],\"архив\":[\"russian\"],\"аспирант\":[\"russian\"],\"асфальт\":[\"russian\"],\"атака\":[\"russian\"],\"атомный\":[\"russian\"],\"атрибут\":[\"russian\"],\"аукцион\":[\"russian\"],\"афиша\":[\"russian\"],\"аэропорт\":[\"russian\"],\"бабочка\":[\"russian\"],\"бабушка\":[\"russian\"],\"багаж\":[\"russian\"],\"база\":[\"russian\"],\"бактерия\":[\"russian\"],\"баланс\":[\"russian\"],\"балерина\":[\"russian\"],\"балкон\":[\"russian\"],\"бандит\":[\"russian\"],\"банк\":[\"russian\"],\"барабан\":[\"russian\"],\"барон\":[\"russian\"],\"барышня\":[\"russian\"],\"барьер\":[\"russian\"],\"бассейн\":[\"russian\"],\"батарея\":[\"russian\"],\"башмак\":[\"russian\"],\"башня\":[\"russian\"],\"бедный\":[\"russian\"],\"беженец\":[\"russian\"],\"бездна\":[\"russian\"],\"белка\":[\"russian\"],\"белый\":[\"russian\"],\"бензин\":[\"russian\"],\"берег\":[\"russian\"],\"беседа\":[\"russian\"],\"бешеный\":[\"russian\"],\"билет\":[\"russian\"],\"бинокль\":[\"russian\"],\"биржа\":[\"russian\"],\"битва\":[\"russian\"],\"благо\":[\"russian\"],\"блеск\":[\"russian\"],\"близкий\":[\"russian\"],\"блин\":[\"russian\"],\"блок\":[\"russian\"],\"блюдо\":[\"russian\"],\"богатый\":[\"russian\"],\"бодрый\":[\"russian\"],\"боец\":[\"russian\"],\"бокал\":[\"russian\"],\"боковой\":[\"russian\"],\"бокс\":[\"russian\"],\"более\":[\"russian\"],\"болото\":[\"russian\"],\"болтать\":[\"russian\"],\"большой\":[\"russian\"],\"бомба\":[\"russian\"],\"борт\":[\"russian\"],\"борьба\":[\"russian\"],\"босой\":[\"russian\"],\"ботинок\":[\"russian\"],\"бояться\":[\"russian\"],\"брак\":[\"russian\"],\"брать\":[\"russian\"],\"бревно\":[\"russian\"],\"бред\":[\"russian\"],\"бригада\":[\"russian\"],\"бродяга\":[\"russian\"],\"броня\":[\"russian\"],\"бросить\":[\"russian\"],\"брызги\":[\"russian\"],\"брюки\":[\"russian\"],\"брюхо\":[\"russian\"],\"бугор\":[\"russian\"],\"будка\":[\"russian\"],\"будни\":[\"russian\"],\"будущее\":[\"russian\"],\"буква\":[\"russian\"],\"букет\":[\"russian\"],\"бульвар\":[\"russian\"],\"бумага\":[\"russian\"],\"бунт\":[\"russian\"],\"бурный\":[\"russian\"],\"буря\":[\"russian\"],\"бутылка\":[\"russian\"],\"бухта\":[\"russian\"],\"бывший\":[\"russian\"],\"быстро\":[\"russian\"],\"бытовой\":[\"russian\"],\"быть\":[\"russian\"],\"бюджет\":[\"russian\"],\"бюро\":[\"russian\"],\"бюст\":[\"russian\"],\"вагон\":[\"russian\"],\"важный\":[\"russian\"],\"вакцина\":[\"russian\"],\"валенок\":[\"russian\"],\"вальс\":[\"russian\"],\"валюта\":[\"russian\"],\"ванная\":[\"russian\"],\"варенье\":[\"russian\"],\"вариант\":[\"russian\"],\"вблизи\":[\"russian\"],\"вверх\":[\"russian\"],\"вводить\":[\"russian\"],\"вдали\":[\"russian\"],\"вдвое\":[\"russian\"],\"вдова\":[\"russian\"],\"вдоль\":[\"russian\"],\"вдруг\":[\"russian\"],\"ведро\":[\"russian\"],\"ведущий\":[\"russian\"],\"ведьма\":[\"russian\"],\"вежливо\":[\"russian\"],\"везде\":[\"russian\"],\"веко\":[\"russian\"],\"вексель\":[\"russian\"],\"велеть\":[\"russian\"],\"великий\":[\"russian\"],\"венец\":[\"russian\"],\"веник\":[\"russian\"],\"веранда\":[\"russian\"],\"верблюд\":[\"russian\"],\"верить\":[\"russian\"],\"верный\":[\"russian\"],\"версия\":[\"russian\"],\"вертеть\":[\"russian\"],\"верхний\":[\"russian\"],\"вершина\":[\"russian\"],\"весело\":[\"russian\"],\"весна\":[\"russian\"],\"весомый\":[\"russian\"],\"вести\":[\"russian\"],\"весь\":[\"russian\"],\"ветеран\":[\"russian\"],\"ветхий\":[\"russian\"],\"вечер\":[\"russian\"],\"вечно\":[\"russian\"],\"вешалка\":[\"russian\"],\"вещество\":[\"russian\"],\"взамен\":[\"russian\"],\"взгляд\":[\"russian\"],\"вздох\":[\"russian\"],\"взнос\":[\"russian\"],\"взойти\":[\"russian\"],\"взор\":[\"russian\"],\"взрыв\":[\"russian\"],\"взять\":[\"russian\"],\"видеть\":[\"russian\"],\"видимо\":[\"russian\"],\"визг\":[\"russian\"],\"визит\":[\"russian\"],\"вилка\":[\"russian\"],\"вина\":[\"russian\"],\"вирус\":[\"russian\"],\"висок\":[\"russian\"],\"витамин\":[\"russian\"],\"витрина\":[\"russian\"],\"вихрь\":[\"russian\"],\"вишня\":[\"russian\"],\"вкус\":[\"russian\"],\"влага\":[\"russian\"],\"владелец\":[\"russian\"],\"власть\":[\"russian\"],\"влево\":[\"russian\"],\"влияние\":[\"russian\"],\"вложить\":[\"russian\"],\"вместе\":[\"russian\"],\"внешний\":[\"russian\"],\"вникать\":[\"russian\"],\"внимание\":[\"russian\"],\"вновь\":[\"russian\"],\"внук\":[\"russian\"],\"внутри\":[\"russian\"],\"внучка\":[\"russian\"],\"внушать\":[\"russian\"],\"вовлечь\":[\"russian\"],\"вовремя\":[\"russian\"],\"вовсю\":[\"russian\"],\"вода\":[\"russian\"],\"водород\":[\"russian\"],\"водяной\":[\"russian\"],\"воевать\":[\"russian\"],\"возврат\":[\"russian\"],\"возглас\":[\"russian\"],\"воздух\":[\"russian\"],\"возить\":[\"russian\"],\"возле\":[\"russian\"],\"возня\":[\"russian\"],\"возраст\":[\"russian\"],\"война\":[\"russian\"],\"войско\":[\"russian\"],\"вокзал\":[\"russian\"],\"волос\":[\"russian\"],\"волчий\":[\"russian\"],\"вольный\":[\"russian\"],\"воля\":[\"russian\"],\"вообще\":[\"russian\"],\"вопль\":[\"russian\"],\"вопрос\":[\"russian\"],\"ворота\":[\"russian\"],\"восемь\":[\"russian\"],\"восток\":[\"russian\"],\"вплоть\":[\"russian\"],\"вполне\":[\"russian\"],\"вправе\":[\"russian\"],\"впредь\":[\"russian\"],\"впрочем\":[\"russian\"],\"врач\":[\"russian\"],\"вредный\":[\"russian\"],\"время\":[\"russian\"],\"вручить\":[\"russian\"],\"всадник\":[\"russian\"],\"всегда\":[\"russian\"],\"вскоре\":[\"russian\"],\"вскрыть\":[\"russian\"],\"всплеск\":[\"russian\"],\"вспышка\":[\"russian\"],\"встреча\":[\"russian\"],\"всюду\":[\"russian\"],\"всякий\":[\"russian\"],\"второй\":[\"russian\"],\"вход\":[\"russian\"],\"вчера\":[\"russian\"],\"выбор\":[\"russian\"],\"вывод\":[\"russian\"],\"выгнать\":[\"russian\"],\"выдать\":[\"russian\"],\"выехать\":[\"russian\"],\"вызов\":[\"russian\"],\"выйти\":[\"russian\"],\"выкуп\":[\"russian\"],\"вылезти\":[\"russian\"],\"вымыть\":[\"russian\"],\"выпасть\":[\"russian\"],\"выпить\":[\"russian\"],\"выплата\":[\"russian\"],\"выпуск\":[\"russian\"],\"вырасти\":[\"russian\"],\"выручка\":[\"russian\"],\"выслать\":[\"russian\"],\"высокий\":[\"russian\"],\"выставка\":[\"russian\"],\"вышка\":[\"russian\"],\"вязать\":[\"russian\"],\"вялый\":[\"russian\"],\"газета\":[\"russian\"],\"газовый\":[\"russian\"],\"галерея\":[\"russian\"],\"галстук\":[\"russian\"],\"гамма\":[\"russian\"],\"гарантия\":[\"russian\"],\"гармония\":[\"russian\"],\"гарнизон\":[\"russian\"],\"гастроли\":[\"russian\"],\"гвардия\":[\"russian\"],\"гвоздь\":[\"russian\"],\"гектар\":[\"russian\"],\"генерал\":[\"russian\"],\"гений\":[\"russian\"],\"геном\":[\"russian\"],\"геолог\":[\"russian\"],\"герб\":[\"russian\"],\"герой\":[\"russian\"],\"гибкий\":[\"russian\"],\"гигант\":[\"russian\"],\"гимн\":[\"russian\"],\"гипотеза\":[\"russian\"],\"гитара\":[\"russian\"],\"главный\":[\"russian\"],\"глагол\":[\"russian\"],\"гладить\":[\"russian\"],\"глаз\":[\"russian\"],\"глина\":[\"russian\"],\"глоток\":[\"russian\"],\"глубокий\":[\"russian\"],\"глупый\":[\"russian\"],\"глухой\":[\"russian\"],\"глыба\":[\"russian\"],\"глядеть\":[\"russian\"],\"гнев\":[\"russian\"],\"гнездо\":[\"russian\"],\"гнилой\":[\"russian\"],\"годовой\":[\"russian\"],\"голова\":[\"russian\"],\"голубой\":[\"russian\"],\"голый\":[\"russian\"],\"гонорар\":[\"russian\"],\"гордость\":[\"russian\"],\"горизонт\":[\"russian\"],\"горло\":[\"russian\"],\"горный\":[\"russian\"],\"город\":[\"russian\"],\"горшок\":[\"russian\"],\"горький\":[\"russian\"],\"горючее\":[\"russian\"],\"горячий\":[\"russian\"],\"готовый\":[\"russian\"],\"градус\":[\"russian\"],\"грамм\":[\"russian\"],\"граница\":[\"russian\"],\"граф\":[\"russian\"],\"гребень\":[\"russian\"],\"гриб\":[\"russian\"],\"гримаса\":[\"russian\"],\"грозить\":[\"russian\"],\"грохот\":[\"russian\"],\"грош\":[\"russian\"],\"грубый\":[\"russian\"],\"грудь\":[\"russian\"],\"груз\":[\"russian\"],\"грунт\":[\"russian\"],\"группа\":[\"russian\"],\"груша\":[\"russian\"],\"грязный\":[\"russian\"],\"губа\":[\"russian\"],\"гудок\":[\"russian\"],\"гулкий\":[\"russian\"],\"гулять\":[\"russian\"],\"гусеница\":[\"russian\"],\"густо\":[\"russian\"],\"гусь\":[\"russian\"],\"давление\":[\"russian\"],\"давно\":[\"russian\"],\"даже\":[\"russian\"],\"дальний\":[\"russian\"],\"данный\":[\"russian\"],\"дарить\":[\"russian\"],\"датчик\":[\"russian\"],\"дать\":[\"russian\"],\"дача\":[\"russian\"],\"двадцать\":[\"russian\"],\"дважды\":[\"russian\"],\"дверь\":[\"russian\"],\"двигать\":[\"russian\"],\"движение\":[\"russian\"],\"двойной\":[\"russian\"],\"двор\":[\"russian\"],\"дебют\":[\"russian\"],\"девятый\":[\"russian\"],\"дежурный\":[\"russian\"],\"действие\":[\"russian\"],\"декабрь\":[\"russian\"],\"деление\":[\"russian\"],\"дело\":[\"russian\"],\"дельфин\":[\"russian\"],\"день\":[\"russian\"],\"дерево\":[\"russian\"],\"держать\":[\"russian\"],\"дерзкий\":[\"russian\"],\"десять\":[\"russian\"],\"деталь\":[\"russian\"],\"детский\":[\"russian\"],\"дефект\":[\"russian\"],\"дефицит\":[\"russian\"],\"деятель\":[\"russian\"],\"джаз\":[\"russian\"],\"джинсы\":[\"russian\"],\"джунгли\":[\"russian\"],\"диагноз\":[\"russian\"],\"диалог\":[\"russian\"],\"диапазон\":[\"russian\"],\"диван\":[\"russian\"],\"дивизия\":[\"russian\"],\"дивный\":[\"russian\"],\"диета\":[\"russian\"],\"дизайн\":[\"russian\"],\"дикарь\":[\"russian\"],\"дилер\":[\"russian\"],\"динамика\":[\"russian\"],\"диплом\":[\"russian\"],\"директор\":[\"russian\"],\"дитя\":[\"russian\"],\"длинный\":[\"russian\"],\"дневник\":[\"russian\"],\"добрый\":[\"russian\"],\"добыча\":[\"russian\"],\"доверие\":[\"russian\"],\"догадка\":[\"russian\"],\"догнать\":[\"russian\"],\"дождь\":[\"russian\"],\"доклад\":[\"russian\"],\"доктор\":[\"russian\"],\"документ\":[\"russian\"],\"долго\":[\"russian\"],\"должен\":[\"russian\"],\"долина\":[\"russian\"],\"донос\":[\"russian\"],\"дорога\":[\"russian\"],\"досада\":[\"russian\"],\"доска\":[\"russian\"],\"достать\":[\"russian\"],\"досуг\":[\"russian\"],\"доход\":[\"russian\"],\"доцент\":[\"russian\"],\"дощатый\":[\"russian\"],\"драка\":[\"russian\"],\"древний\":[\"russian\"],\"дремать\":[\"russian\"],\"дробный\":[\"russian\"],\"дрова\":[\"russian\"],\"дрожать\":[\"russian\"],\"другой\":[\"russian\"],\"дружба\":[\"russian\"],\"дубовый\":[\"russian\"],\"дуга\":[\"russian\"],\"думать\":[\"russian\"],\"дурной\":[\"russian\"],\"духи\":[\"russian\"],\"душный\":[\"russian\"],\"дуэль\":[\"russian\"],\"дуэт\":[\"russian\"],\"дыра\":[\"russian\"],\"дыхание\":[\"russian\"],\"дюжина\":[\"russian\"],\"дядя\":[\"russian\"],\"едва\":[\"russian\"],\"единый\":[\"russian\"],\"ерунда\":[\"russian\"],\"если\":[\"russian\"],\"ехать\":[\"russian\"],\"жадный\":[\"russian\"],\"жажда\":[\"russian\"],\"жалеть\":[\"russian\"],\"жалоба\":[\"russian\"],\"жанр\":[\"russian\"],\"жареный\":[\"russian\"],\"жаркий\":[\"russian\"],\"жгучий\":[\"russian\"],\"жевать\":[\"russian\"],\"желание\":[\"russian\"],\"желудок\":[\"russian\"],\"жена\":[\"russian\"],\"женщина\":[\"russian\"],\"жертва\":[\"russian\"],\"жест\":[\"russian\"],\"жидкость\":[\"russian\"],\"житель\":[\"russian\"],\"жить\":[\"russian\"],\"жрец\":[\"russian\"],\"жулик\":[\"russian\"],\"журнал\":[\"russian\"],\"жуткий\":[\"russian\"],\"забрать\":[\"russian\"],\"забыть\":[\"russian\"],\"завести\":[\"russian\"],\"завод\":[\"russian\"],\"завтра\":[\"russian\"],\"загадка\":[\"russian\"],\"загнать\":[\"russian\"],\"заговор\":[\"russian\"],\"задача\":[\"russian\"],\"задеть\":[\"russian\"],\"задний\":[\"russian\"],\"задолго\":[\"russian\"],\"заехать\":[\"russian\"],\"заказ\":[\"russian\"],\"закон\":[\"russian\"],\"закрыть\":[\"russian\"],\"закуска\":[\"russian\"],\"залезть\":[\"russian\"],\"залить\":[\"russian\"],\"залп\":[\"russian\"],\"замок\":[\"russian\"],\"замуж\":[\"russian\"],\"замысел\":[\"russian\"],\"занавес\":[\"russian\"],\"заново\":[\"russian\"],\"занять\":[\"russian\"],\"заодно\":[\"russian\"],\"запись\":[\"russian\"],\"запрос\":[\"russian\"],\"запуск\":[\"russian\"],\"запястье\":[\"russian\"],\"заранее\":[\"russian\"],\"заросль\":[\"russian\"],\"зарплата\":[\"russian\"],\"заря\":[\"russian\"],\"засада\":[\"russian\"],\"заслуга\":[\"russian\"],\"заснуть\":[\"russian\"],\"застать\":[\"russian\"],\"затвор\":[\"russian\"],\"затеять\":[\"russian\"],\"затрата\":[\"russian\"],\"затылок\":[\"russian\"],\"захват\":[\"russian\"],\"зачем\":[\"russian\"],\"защита\":[\"russian\"],\"заявить\":[\"russian\"],\"заяц\":[\"russian\"],\"звезда\":[\"russian\"],\"звено\":[\"russian\"],\"звонить\":[\"russian\"],\"здесь\":[\"russian\"],\"зелень\":[\"russian\"],\"земля\":[\"russian\"],\"зеркало\":[\"russian\"],\"зерно\":[\"russian\"],\"зима\":[\"russian\"],\"злой\":[\"russian\"],\"змея\":[\"russian\"],\"знамя\":[\"russian\"],\"знание\":[\"russian\"],\"значит\":[\"russian\"],\"золотой\":[\"russian\"],\"зона\":[\"russian\"],\"зонтик\":[\"russian\"],\"зоопарк\":[\"russian\"],\"зрачок\":[\"russian\"],\"зрение\":[\"russian\"],\"зритель\":[\"russian\"],\"зубной\":[\"russian\"],\"зубр\":[\"russian\"],\"игла\":[\"russian\"],\"идеал\":[\"russian\"],\"идеолог\":[\"russian\"],\"идея\":[\"russian\"],\"идол\":[\"russian\"],\"идти\":[\"russian\"],\"изба\":[\"russian\"],\"избить\":[\"russian\"],\"избрать\":[\"russian\"],\"избыток\":[\"russian\"],\"извлечь\":[\"russian\"],\"извне\":[\"russian\"],\"изгиб\":[\"russian\"],\"изгнать\":[\"russian\"],\"издание\":[\"russian\"],\"изделие\":[\"russian\"],\"изнутри\":[\"russian\"],\"изобилие\":[\"russian\"],\"изоляция\":[\"russian\"],\"изредка\":[\"russian\"],\"изрядно\":[\"russian\"],\"изучение\":[\"russian\"],\"изъять\":[\"russian\"],\"изящный\":[\"russian\"],\"икона\":[\"russian\"],\"икра\":[\"russian\"],\"иллюзия\":[\"russian\"],\"именно\":[\"russian\"],\"иметь\":[\"russian\"],\"имидж\":[\"russian\"],\"империя\":[\"russian\"],\"импульс\":[\"russian\"],\"иначе\":[\"russian\"],\"инвалид\":[\"russian\"],\"индекс\":[\"russian\"],\"индивид\":[\"russian\"],\"инерция\":[\"russian\"],\"инженер\":[\"russian\"],\"иногда\":[\"russian\"],\"иной\":[\"russian\"],\"институт\":[\"russian\"],\"интерес\":[\"russian\"],\"интрига\":[\"russian\"],\"интуиция\":[\"russian\"],\"инфаркт\":[\"russian\"],\"инцидент\":[\"russian\"],\"ирония\":[\"russian\"],\"искать\":[\"russian\"],\"испуг\":[\"russian\"],\"история\":[\"russian\"],\"итог\":[\"russian\"],\"июнь\":[\"russian\"],\"кабель\":[\"russian\"],\"кабинет\":[\"russian\"],\"каблук\":[\"russian\"],\"кавалер\":[\"russian\"],\"кадр\":[\"russian\"],\"каждый\":[\"russian\"],\"кажется\":[\"russian\"],\"казино\":[\"russian\"],\"калитка\":[\"russian\"],\"камень\":[\"russian\"],\"камин\":[\"russian\"],\"канал\":[\"russian\"],\"кандидат\":[\"russian\"],\"каникулы\":[\"russian\"],\"канон\":[\"russian\"],\"капитан\":[\"russian\"],\"капля\":[\"russian\"],\"капот\":[\"russian\"],\"капуста\":[\"russian\"],\"карандаш\":[\"russian\"],\"карета\":[\"russian\"],\"каркас\":[\"russian\"],\"карман\":[\"russian\"],\"картина\":[\"russian\"],\"карьера\":[\"russian\"],\"каска\":[\"russian\"],\"кассета\":[\"russian\"],\"кастрюля\":[\"russian\"],\"каталог\":[\"russian\"],\"катер\":[\"russian\"],\"каток\":[\"russian\"],\"катушка\":[\"russian\"],\"кафедра\":[\"russian\"],\"качество\":[\"russian\"],\"каша\":[\"russian\"],\"кашлять\":[\"russian\"],\"каюта\":[\"russian\"],\"квадрат\":[\"russian\"],\"квартира\":[\"russian\"],\"квота\":[\"russian\"],\"кепка\":[\"russian\"],\"кивнуть\":[\"russian\"],\"километр\":[\"russian\"],\"кино\":[\"russian\"],\"киоск\":[\"russian\"],\"кипяток\":[\"russian\"],\"кирпич\":[\"russian\"],\"кислота\":[\"russian\"],\"кисть\":[\"russian\"],\"клавиша\":[\"russian\"],\"клапан\":[\"russian\"],\"класс\":[\"russian\"],\"клей\":[\"russian\"],\"клетка\":[\"russian\"],\"клиент\":[\"russian\"],\"климат\":[\"russian\"],\"клиника\":[\"russian\"],\"кличка\":[\"russian\"],\"клоун\":[\"russian\"],\"клочок\":[\"russian\"],\"клуб\":[\"russian\"],\"клумба\":[\"russian\"],\"ключ\":[\"russian\"],\"книга\":[\"russian\"],\"кнопка\":[\"russian\"],\"кнут\":[\"russian\"],\"княгиня\":[\"russian\"],\"князь\":[\"russian\"],\"кобура\":[\"russian\"],\"когда\":[\"russian\"],\"кодекс\":[\"russian\"],\"кожа\":[\"russian\"],\"коктейль\":[\"russian\"],\"колено\":[\"russian\"],\"коллега\":[\"russian\"],\"колонна\":[\"russian\"],\"колпак\":[\"russian\"],\"кольцо\":[\"russian\"],\"колючий\":[\"russian\"],\"коляска\":[\"russian\"],\"команда\":[\"russian\"],\"комедия\":[\"russian\"],\"комиссия\":[\"russian\"],\"коммуна\":[\"russian\"],\"комната\":[\"russian\"],\"комок\":[\"russian\"],\"компания\":[\"russian\"],\"комфорт\":[\"russian\"],\"конвейер\":[\"russian\"],\"конгресс\":[\"russian\"],\"конечно\":[\"russian\"],\"конкурс\":[\"russian\"],\"контроль\":[\"russian\"],\"концерт\":[\"russian\"],\"конь\":[\"russian\"],\"конюшня\":[\"russian\"],\"копать\":[\"russian\"],\"копейка\":[\"russian\"],\"копыто\":[\"russian\"],\"корабль\":[\"russian\"],\"корень\":[\"russian\"],\"корзина\":[\"russian\"],\"коридор\":[\"russian\"],\"кормить\":[\"russian\"],\"корпус\":[\"russian\"],\"космос\":[\"russian\"],\"костюм\":[\"russian\"],\"косяк\":[\"russian\"],\"котел\":[\"russian\"],\"котлета\":[\"russian\"],\"который\":[\"russian\"],\"коттедж\":[\"russian\"],\"кофе\":[\"russian\"],\"кофта\":[\"russian\"],\"кошка\":[\"russian\"],\"кража\":[\"russian\"],\"край\":[\"russian\"],\"красный\":[\"russian\"],\"краткий\":[\"russian\"],\"кредит\":[\"russian\"],\"крем\":[\"russian\"],\"крепкий\":[\"russian\"],\"кресло\":[\"russian\"],\"кривой\":[\"russian\"],\"кризис\":[\"russian\"],\"кристалл\":[\"russian\"],\"критерий\":[\"russian\"],\"кричать\":[\"russian\"],\"кровь\":[\"russian\"],\"крокодил\":[\"russian\"],\"кролик\":[\"russian\"],\"кроме\":[\"russian\"],\"крона\":[\"russian\"],\"круг\":[\"russian\"],\"кружка\":[\"russian\"],\"крупный\":[\"russian\"],\"крутой\":[\"russian\"],\"крушение\":[\"russian\"],\"крыло\":[\"russian\"],\"крыша\":[\"russian\"],\"крючок\":[\"russian\"],\"кстати\":[\"russian\"],\"кубик\":[\"russian\"],\"куда\":[\"russian\"],\"кузов\":[\"russian\"],\"кукла\":[\"russian\"],\"кулак\":[\"russian\"],\"кулиса\":[\"russian\"],\"культура\":[\"russian\"],\"кумир\":[\"russian\"],\"купе\":[\"russian\"],\"купить\":[\"russian\"],\"купол\":[\"russian\"],\"купюра\":[\"russian\"],\"курица\":[\"russian\"],\"курорт\":[\"russian\"],\"курс\":[\"russian\"],\"куртка\":[\"russian\"],\"кусок\":[\"russian\"],\"куст\":[\"russian\"],\"кухня\":[\"russian\"],\"кушать\":[\"russian\"],\"лабиринт\":[\"russian\"],\"лавка\":[\"russian\"],\"лагерь\":[\"russian\"],\"ладно\":[\"russian\"],\"ладонь\":[\"russian\"],\"лапа\":[\"russian\"],\"лауреат\":[\"russian\"],\"лгать\":[\"russian\"],\"лебедь\":[\"russian\"],\"левый\":[\"russian\"],\"легенда\":[\"russian\"],\"легкий\":[\"russian\"],\"ледяной\":[\"russian\"],\"лежать\":[\"russian\"],\"лезвие\":[\"russian\"],\"лезть\":[\"russian\"],\"лекция\":[\"russian\"],\"ленивый\":[\"russian\"],\"лента\":[\"russian\"],\"лепесток\":[\"russian\"],\"лесной\":[\"russian\"],\"лестница\":[\"russian\"],\"лететь\":[\"russian\"],\"лето\":[\"russian\"],\"лечить\":[\"russian\"],\"лига\":[\"russian\"],\"лидер\":[\"russian\"],\"лиловый\":[\"russian\"],\"лимон\":[\"russian\"],\"линия\":[\"russian\"],\"липкий\":[\"russian\"],\"лист\":[\"russian\"],\"литр\":[\"russian\"],\"лихой\":[\"russian\"],\"лицо\":[\"russian\"],\"лишить\":[\"russian\"],\"лишний\":[\"russian\"],\"ловить\":[\"russian\"],\"логика\":[\"russian\"],\"лодка\":[\"russian\"],\"ложь\":[\"russian\"],\"лозунг\":[\"russian\"],\"локоть\":[\"russian\"],\"лопата\":[\"russian\"],\"лошадь\":[\"russian\"],\"лукавый\":[\"russian\"],\"луна\":[\"russian\"],\"лучший\":[\"russian\"],\"лысый\":[\"russian\"],\"льгота\":[\"russian\"],\"любить\":[\"russian\"],\"любой\":[\"russian\"],\"людской\":[\"russian\"],\"люстра\":[\"russian\"],\"лютый\":[\"russian\"],\"лягушка\":[\"russian\"],\"магазин\":[\"russian\"],\"магия\":[\"russian\"],\"майор\":[\"russian\"],\"майский\":[\"russian\"],\"максимум\":[\"russian\"],\"макушка\":[\"russian\"],\"мало\":[\"russian\"],\"мальчик\":[\"russian\"],\"мама\":[\"russian\"],\"манера\":[\"russian\"],\"марка\":[\"russian\"],\"март\":[\"russian\"],\"маршрут\":[\"russian\"],\"масса\":[\"russian\"],\"мастер\":[\"russian\"],\"масштаб\":[\"russian\"],\"материал\":[\"russian\"],\"матч\":[\"russian\"],\"махать\":[\"russian\"],\"машина\":[\"russian\"],\"маяк\":[\"russian\"],\"мебель\":[\"russian\"],\"медаль\":[\"russian\"],\"медведь\":[\"russian\"],\"медицина\":[\"russian\"],\"медь\":[\"russian\"],\"между\":[\"russian\"],\"мелкий\":[\"russian\"],\"мелочь\":[\"russian\"],\"мемуары\":[\"russian\"],\"меньше\":[\"russian\"],\"меню\":[\"russian\"],\"менять\":[\"russian\"],\"мера\":[\"russian\"],\"мерцать\":[\"russian\"],\"место\":[\"russian\"],\"месяц\":[\"russian\"],\"металл\":[\"russian\"],\"метод\":[\"russian\"],\"метр\":[\"russian\"],\"механизм\":[\"russian\"],\"меховой\":[\"russian\"],\"мечтать\":[\"russian\"],\"мешать\":[\"russian\"],\"мешок\":[\"russian\"],\"миграция\":[\"russian\"],\"микрофон\":[\"russian\"],\"милиция\":[\"russian\"],\"миллион\":[\"russian\"],\"милость\":[\"russian\"],\"миля\":[\"russian\"],\"мимо\":[\"russian\"],\"минерал\":[\"russian\"],\"министр\":[\"russian\"],\"минута\":[\"russian\"],\"мирный\":[\"russian\"],\"миска\":[\"russian\"],\"миссия\":[\"russian\"],\"митинг\":[\"russian\"],\"мишень\":[\"russian\"],\"младший\":[\"russian\"],\"мнение\":[\"russian\"],\"мнимый\":[\"russian\"],\"много\":[\"russian\"],\"могучий\":[\"russian\"],\"модель\":[\"russian\"],\"может\":[\"russian\"],\"мозг\":[\"russian\"],\"мокрый\":[\"russian\"],\"молекула\":[\"russian\"],\"молния\":[\"russian\"],\"молодой\":[\"russian\"],\"молчать\":[\"russian\"],\"момент\":[\"russian\"],\"монета\":[\"russian\"],\"монитор\":[\"russian\"],\"монолог\":[\"russian\"],\"монстр\":[\"russian\"],\"монтаж\":[\"russian\"],\"мораль\":[\"russian\"],\"море\":[\"russian\"],\"морковь\":[\"russian\"],\"мороз\":[\"russian\"],\"морщина\":[\"russian\"],\"мостовая\":[\"russian\"],\"мотать\":[\"russian\"],\"мотив\":[\"russian\"],\"мотор\":[\"russian\"],\"мохнатый\":[\"russian\"],\"мрамор\":[\"russian\"],\"мрачный\":[\"russian\"],\"мстить\":[\"russian\"],\"мудрый\":[\"russian\"],\"мужество\":[\"russian\"],\"мужчина\":[\"russian\"],\"музей\":[\"russian\"],\"музыка\":[\"russian\"],\"мундир\":[\"russian\"],\"муравей\":[\"russian\"],\"мусор\":[\"russian\"],\"муха\":[\"russian\"],\"мчаться\":[\"russian\"],\"мысль\":[\"russian\"],\"мыться\":[\"russian\"],\"мышца\":[\"russian\"],\"мышь\":[\"russian\"],\"мюзикл\":[\"russian\"],\"мягкий\":[\"russian\"],\"мясо\":[\"russian\"],\"набор\":[\"russian\"],\"навык\":[\"russian\"],\"наглый\":[\"russian\"],\"нагрузка\":[\"russian\"],\"надежда\":[\"russian\"],\"надзор\":[\"russian\"],\"надо\":[\"russian\"],\"наедине\":[\"russian\"],\"назад\":[\"russian\"],\"название\":[\"russian\"],\"назло\":[\"russian\"],\"наивный\":[\"russian\"],\"найти\":[\"russian\"],\"наконец\":[\"russian\"],\"налево\":[\"russian\"],\"наличие\":[\"russian\"],\"налог\":[\"russian\"],\"намерен\":[\"russian\"],\"нанести\":[\"russian\"],\"напасть\":[\"russian\"],\"например\":[\"russian\"],\"народ\":[\"russian\"],\"наследие\":[\"russian\"],\"натура\":[\"russian\"],\"наука\":[\"russian\"],\"наутро\":[\"russian\"],\"начать\":[\"russian\"],\"небо\":[\"russian\"],\"неважно\":[\"russian\"],\"невеста\":[\"russian\"],\"негодяй\":[\"russian\"],\"недавно\":[\"russian\"],\"неделя\":[\"russian\"],\"недолго\":[\"russian\"],\"недра\":[\"russian\"],\"недуг\":[\"russian\"],\"нежный\":[\"russian\"],\"незачем\":[\"russian\"],\"некто\":[\"russian\"],\"нелепый\":[\"russian\"],\"неловко\":[\"russian\"],\"нельзя\":[\"russian\"],\"немало\":[\"russian\"],\"немой\":[\"russian\"],\"неплохо\":[\"russian\"],\"нервный\":[\"russian\"],\"нередко\":[\"russian\"],\"нестись\":[\"russian\"],\"неудача\":[\"russian\"],\"неужели\":[\"russian\"],\"нефть\":[\"russian\"],\"неясный\":[\"russian\"],\"нигде\":[\"russian\"],\"низкий\":[\"russian\"],\"никакой\":[\"russian\"],\"никогда\":[\"russian\"],\"никуда\":[\"russian\"],\"ничто\":[\"russian\"],\"ничуть\":[\"russian\"],\"ниша\":[\"russian\"],\"нищий\":[\"russian\"],\"новость\":[\"russian\"],\"новый\":[\"russian\"],\"нога\":[\"russian\"],\"ноготь\":[\"russian\"],\"ножницы\":[\"russian\"],\"ноздря\":[\"russian\"],\"номер\":[\"russian\"],\"носить\":[\"russian\"],\"носок\":[\"russian\"],\"ночь\":[\"russian\"],\"ноябрь\":[\"russian\"],\"нрав\":[\"russian\"],\"нуль\":[\"russian\"],\"нынче\":[\"russian\"],\"нырять\":[\"russian\"],\"нюанс\":[\"russian\"],\"няня\":[\"russian\"],\"обаяние\":[\"russian\"],\"обед\":[\"russian\"],\"обезьяна\":[\"russian\"],\"обещать\":[\"russian\"],\"обжечь\":[\"russian\"],\"обзор\":[\"russian\"],\"обилие\":[\"russian\"],\"обитать\":[\"russian\"],\"область\":[\"russian\"],\"облик\":[\"russian\"],\"обложка\":[\"russian\"],\"обмен\":[\"russian\"],\"обморок\":[\"russian\"],\"обожать\":[\"russian\"],\"обои\":[\"russian\"],\"оболочка\":[\"russian\"],\"оборона\":[\"russian\"],\"обочина\":[\"russian\"],\"образ\":[\"russian\"],\"обрести\":[\"russian\"],\"обрыв\":[\"russian\"],\"обувь\":[\"russian\"],\"обучение\":[\"russian\"],\"обход\":[\"russian\"],\"общество\":[\"russian\"],\"общий\":[\"russian\"],\"объект\":[\"russian\"],\"обыск\":[\"russian\"],\"обычно\":[\"russian\"],\"обязать\":[\"russian\"],\"овощи\":[\"russian\"],\"овраг\":[\"russian\"],\"овца\":[\"russian\"],\"оговорка\":[\"russian\"],\"ограда\":[\"russian\"],\"огурец\":[\"russian\"],\"одежда\":[\"russian\"],\"одеяло\":[\"russian\"],\"один\":[\"russian\"],\"однако\":[\"russian\"],\"одолеть\":[\"russian\"],\"ожидать\":[\"russian\"],\"озеро\":[\"russian\"],\"океан\":[\"russian\"],\"окно\":[\"russian\"],\"около\":[\"russian\"],\"окоп\":[\"russian\"],\"окраина\":[\"russian\"],\"октябрь\":[\"russian\"],\"опасный\":[\"russian\"],\"опека\":[\"russian\"],\"операция\":[\"russian\"],\"описание\":[\"russian\"],\"оплата\":[\"russian\"],\"опора\":[\"russian\"],\"оппонент\":[\"russian\"],\"оптимизм\":[\"russian\"],\"оптовый\":[\"russian\"],\"опухоль\":[\"russian\"],\"опыт\":[\"russian\"],\"оратор\":[\"russian\"],\"орбита\":[\"russian\"],\"орган\":[\"russian\"],\"орден\":[\"russian\"],\"орел\":[\"russian\"],\"оригинал\":[\"russian\"],\"ориентир\":[\"russian\"],\"оркестр\":[\"russian\"],\"оружие\":[\"russian\"],\"осенний\":[\"russian\"],\"осколок\":[\"russian\"],\"осмотр\":[\"russian\"],\"остров\":[\"russian\"],\"отбор\":[\"russian\"],\"отбыть\":[\"russian\"],\"отвлечь\":[\"russian\"],\"отдать\":[\"russian\"],\"отдел\":[\"russian\"],\"отдых\":[\"russian\"],\"отель\":[\"russian\"],\"отец\":[\"russian\"],\"отзыв\":[\"russian\"],\"отказ\":[\"russian\"],\"отклик\":[\"russian\"],\"открыть\":[\"russian\"],\"откуда\":[\"russian\"],\"отличие\":[\"russian\"],\"отныне\":[\"russian\"],\"отойти\":[\"russian\"],\"отпуск\":[\"russian\"],\"отрасль\":[\"russian\"],\"отросток\":[\"russian\"],\"отрывок\":[\"russian\"],\"отряд\":[\"russian\"],\"отсек\":[\"russian\"],\"отставка\":[\"russian\"],\"отсюда\":[\"russian\"],\"оттенок\":[\"russian\"],\"оттого\":[\"russian\"],\"отчего\":[\"russian\"],\"отъезд\":[\"russian\"],\"офис\":[\"russian\"],\"офицер\":[\"russian\"],\"охота\":[\"russian\"],\"охрана\":[\"russian\"],\"оценка\":[\"russian\"],\"очаг\":[\"russian\"],\"очень\":[\"russian\"],\"очередь\":[\"russian\"],\"очищать\":[\"russian\"],\"ошибка\":[\"russian\"],\"ощущение\":[\"russian\"],\"павильон\":[\"russian\"],\"падать\":[\"russian\"],\"пазуха\":[\"russian\"],\"пакет\":[\"russian\"],\"палата\":[\"russian\"],\"палец\":[\"russian\"],\"палуба\":[\"russian\"],\"пальто\":[\"russian\"],\"память\":[\"russian\"],\"панель\":[\"russian\"],\"паника\":[\"russian\"],\"пара\":[\"russian\"],\"парень\":[\"russian\"],\"пароход\":[\"russian\"],\"партия\":[\"russian\"],\"парус\":[\"russian\"],\"паспорт\":[\"russian\"],\"пассажир\":[\"russian\"],\"пастух\":[\"russian\"],\"патент\":[\"russian\"],\"патрон\":[\"russian\"],\"пауза\":[\"russian\"],\"паук\":[\"russian\"],\"паутина\":[\"russian\"],\"пафос\":[\"russian\"],\"пахнуть\":[\"russian\"],\"пациент\":[\"russian\"],\"пачка\":[\"russian\"],\"певец\":[\"russian\"],\"педагог\":[\"russian\"],\"пейзаж\":[\"russian\"],\"пенсия\":[\"russian\"],\"пепел\":[\"russian\"],\"первый\":[\"russian\"],\"перед\":[\"russian\"],\"период\":[\"russian\"],\"перо\":[\"russian\"],\"перрон\":[\"russian\"],\"персонаж\":[\"russian\"],\"перчатка\":[\"russian\"],\"песня\":[\"russian\"],\"песок\":[\"russian\"],\"петля\":[\"russian\"],\"петрушка\":[\"russian\"],\"петух\":[\"russian\"],\"пехота\":[\"russian\"],\"печать\":[\"russian\"],\"печень\":[\"russian\"],\"пешком\":[\"russian\"],\"пещера\":[\"russian\"],\"пианист\":[\"russian\"],\"пиджак\":[\"russian\"],\"пилот\":[\"russian\"],\"пионер\":[\"russian\"],\"пирамида\":[\"russian\"],\"пирожок\":[\"russian\"],\"письмо\":[\"russian\"],\"пища\":[\"russian\"],\"плавание\":[\"russian\"],\"плакать\":[\"russian\"],\"пламя\":[\"russian\"],\"план\":[\"russian\"],\"пласт\":[\"russian\"],\"платить\":[\"russian\"],\"пленный\":[\"russian\"],\"плечо\":[\"russian\"],\"плита\":[\"russian\"],\"плод\":[\"russian\"],\"плоский\":[\"russian\"],\"плотный\":[\"russian\"],\"плохой\":[\"russian\"],\"площадь\":[\"russian\"],\"плыть\":[\"russian\"],\"плюс\":[\"russian\"],\"пляж\":[\"russian\"],\"плясать\":[\"russian\"],\"победа\":[\"russian\"],\"повар\":[\"russian\"],\"повод\":[\"russian\"],\"повсюду\":[\"russian\"],\"повязка\":[\"russian\"],\"погода\":[\"russian\"],\"погреб\":[\"russian\"],\"подбор\":[\"russian\"],\"подвиг\":[\"russian\"],\"подделка\":[\"russian\"],\"поджать\":[\"russian\"],\"поднос\":[\"russian\"],\"подпись\":[\"russian\"],\"подруга\":[\"russian\"],\"подход\":[\"russian\"],\"подчас\":[\"russian\"],\"подъезд\":[\"russian\"],\"поединок\":[\"russian\"],\"поезд\":[\"russian\"],\"поесть\":[\"russian\"],\"поехать\":[\"russian\"],\"пожалуй\":[\"russian\"],\"пожилой\":[\"russian\"],\"позади\":[\"russian\"],\"позвать\":[\"russian\"],\"поздний\":[\"russian\"],\"позиция\":[\"russian\"],\"позор\":[\"russian\"],\"поиск\":[\"russian\"],\"поймать\":[\"russian\"],\"пойти\":[\"russian\"],\"поклон\":[\"russian\"],\"покой\":[\"russian\"],\"покрыть\":[\"russian\"],\"полдень\":[\"russian\"],\"полезный\":[\"russian\"],\"ползти\":[\"russian\"],\"полк\":[\"russian\"],\"полный\":[\"russian\"],\"половина\":[\"russian\"],\"полтора\":[\"russian\"],\"польза\":[\"russian\"],\"поляна\":[\"russian\"],\"помидор\":[\"russian\"],\"помнить\":[\"russian\"],\"помощь\":[\"russian\"],\"попасть\":[\"russian\"],\"поперек\":[\"russian\"],\"поплыть\":[\"russian\"],\"пополам\":[\"russian\"],\"поправка\":[\"russian\"],\"попугай\":[\"russian\"],\"попытка\":[\"russian\"],\"порог\":[\"russian\"],\"портрет\":[\"russian\"],\"порция\":[\"russian\"],\"порыв\":[\"russian\"],\"порядок\":[\"russian\"],\"после\":[\"russian\"],\"посол\":[\"russian\"],\"посреди\":[\"russian\"],\"постель\":[\"russian\"],\"посуда\":[\"russian\"],\"потом\":[\"russian\"],\"похвала\":[\"russian\"],\"похожий\":[\"russian\"],\"поцелуй\":[\"russian\"],\"почва\":[\"russian\"],\"почему\":[\"russian\"],\"пошлина\":[\"russian\"],\"поэма\":[\"russian\"],\"поэтому\":[\"russian\"],\"право\":[\"russian\"],\"праздник\":[\"russian\"],\"практика\":[\"russian\"],\"прах\":[\"russian\"],\"преграда\":[\"russian\"],\"предмет\":[\"russian\"],\"прежде\":[\"russian\"],\"прелесть\":[\"russian\"],\"премия\":[\"russian\"],\"препарат\":[\"russian\"],\"пресса\":[\"russian\"],\"прибыть\":[\"russian\"],\"прижать\":[\"russian\"],\"прийти\":[\"russian\"],\"приказ\":[\"russian\"],\"прилавок\":[\"russian\"],\"пример\":[\"russian\"],\"принять\":[\"russian\"],\"природа\":[\"russian\"],\"притом\":[\"russian\"],\"прихожая\":[\"russian\"],\"прицел\":[\"russian\"],\"причина\":[\"russian\"],\"приют\":[\"russian\"],\"прогноз\":[\"russian\"],\"продукт\":[\"russian\"],\"проект\":[\"russian\"],\"прожить\":[\"russian\"],\"прокат\":[\"russian\"],\"промысел\":[\"russian\"],\"пропуск\":[\"russian\"],\"просто\":[\"russian\"],\"против\":[\"russian\"],\"профиль\":[\"russian\"],\"процесс\":[\"russian\"],\"прочий\":[\"russian\"],\"прошлый\":[\"russian\"],\"прощать\":[\"russian\"],\"пружина\":[\"russian\"],\"прут\":[\"russian\"],\"прыжок\":[\"russian\"],\"прямой\":[\"russian\"],\"птица\":[\"russian\"],\"публика\":[\"russian\"],\"пугать\":[\"russian\"],\"пуговица\":[\"russian\"],\"пузырь\":[\"russian\"],\"пульт\":[\"russian\"],\"пуля\":[\"russian\"],\"пункт\":[\"russian\"],\"пускать\":[\"russian\"],\"пустой\":[\"russian\"],\"путь\":[\"russian\"],\"пухлый\":[\"russian\"],\"пучок\":[\"russian\"],\"пушистый\":[\"russian\"],\"пушка\":[\"russian\"],\"пчела\":[\"russian\"],\"пшеница\":[\"russian\"],\"пылать\":[\"russian\"],\"пыль\":[\"russian\"],\"пышный\":[\"russian\"],\"пьеса\":[\"russian\"],\"пятка\":[\"russian\"],\"пятно\":[\"russian\"],\"пятый\":[\"russian\"],\"пятьсот\":[\"russian\"],\"работа\":[\"russian\"],\"равнина\":[\"russian\"],\"ради\":[\"russian\"],\"радость\":[\"russian\"],\"радуга\":[\"russian\"],\"разбить\":[\"russian\"],\"развитие\":[\"russian\"],\"разговор\":[\"russian\"],\"раздел\":[\"russian\"],\"различие\":[\"russian\"],\"размер\":[\"russian\"],\"разный\":[\"russian\"],\"разрыв\":[\"russian\"],\"разум\":[\"russian\"],\"район\":[\"russian\"],\"ракета\":[\"russian\"],\"раковина\":[\"russian\"],\"рамка\":[\"russian\"],\"рано\":[\"russian\"],\"рапорт\":[\"russian\"],\"распад\":[\"russian\"],\"рассказ\":[\"russian\"],\"расти\":[\"russian\"],\"расход\":[\"russian\"],\"расцвет\":[\"russian\"],\"рация\":[\"russian\"],\"рвануть\":[\"russian\"],\"рваться\":[\"russian\"],\"реакция\":[\"russian\"],\"ребро\":[\"russian\"],\"реветь\":[\"russian\"],\"редактор\":[\"russian\"],\"редкий\":[\"russian\"],\"реестр\":[\"russian\"],\"режим\":[\"russian\"],\"резать\":[\"russian\"],\"резерв\":[\"russian\"],\"резина\":[\"russian\"],\"резко\":[\"russian\"],\"резной\":[\"russian\"],\"рейс\":[\"russian\"],\"реклама\":[\"russian\"],\"рекорд\":[\"russian\"],\"религия\":[\"russian\"],\"рельс\":[\"russian\"],\"ремень\":[\"russian\"],\"ремонт\":[\"russian\"],\"реплика\":[\"russian\"],\"репортаж\":[\"russian\"],\"ресница\":[\"russian\"],\"ресторан\":[\"russian\"],\"реформа\":[\"russian\"],\"рецепт\":[\"russian\"],\"речь\":[\"russian\"],\"решение\":[\"russian\"],\"ржавый\":[\"russian\"],\"риск\":[\"russian\"],\"рисунок\":[\"russian\"],\"ритуал\":[\"russian\"],\"рифма\":[\"russian\"],\"робко\":[\"russian\"],\"робот\":[\"russian\"],\"ровесник\":[\"russian\"],\"ровно\":[\"russian\"],\"родной\":[\"russian\"],\"рождение\":[\"russian\"],\"роза\":[\"russian\"],\"розовый\":[\"russian\"],\"розыск\":[\"russian\"],\"роль\":[\"russian\"],\"роман\":[\"russian\"],\"роскошь\":[\"russian\"],\"роспись\":[\"russian\"],\"рост\":[\"russian\"],\"рубашка\":[\"russian\"],\"рубеж\":[\"russian\"],\"рубить\":[\"russian\"],\"рубрика\":[\"russian\"],\"рудник\":[\"russian\"],\"рука\":[\"russian\"],\"рукопись\":[\"russian\"],\"румяный\":[\"russian\"],\"русло\":[\"russian\"],\"рухнуть\":[\"russian\"],\"ручей\":[\"russian\"],\"ручной\":[\"russian\"],\"рыба\":[\"russian\"],\"рыжий\":[\"russian\"],\"рынок\":[\"russian\"],\"рыхлый\":[\"russian\"],\"рыцарь\":[\"russian\"],\"рычаг\":[\"russian\"],\"рюкзак\":[\"russian\"],\"рядом\":[\"russian\"],\"садовый\":[\"russian\"],\"сажать\":[\"russian\"],\"салон\":[\"russian\"],\"салфетка\":[\"russian\"],\"салют\":[\"russian\"],\"самец\":[\"russian\"],\"самовар\":[\"russian\"],\"самый\":[\"russian\"],\"сани\":[\"russian\"],\"санкция\":[\"russian\"],\"сапог\":[\"russian\"],\"сарай\":[\"russian\"],\"сатира\":[\"russian\"],\"сахар\":[\"russian\"],\"сбить\":[\"russian\"],\"сбоку\":[\"russian\"],\"сборная\":[\"russian\"],\"сбыт\":[\"russian\"],\"свадьба\":[\"russian\"],\"свалка\":[\"russian\"],\"сварить\":[\"russian\"],\"свежий\":[\"russian\"],\"сверху\":[\"russian\"],\"свет\":[\"russian\"],\"свеча\":[\"russian\"],\"свинья\":[\"russian\"],\"свист\":[\"russian\"],\"свитер\":[\"russian\"],\"свобода\":[\"russian\"],\"сводка\":[\"russian\"],\"свой\":[\"russian\"],\"свыше\":[\"russian\"],\"связь\":[\"russian\"],\"сдаться\":[\"russian\"],\"сделать\":[\"russian\"],\"сегмент\":[\"russian\"],\"сегодня\":[\"russian\"],\"седло\":[\"russian\"],\"седой\":[\"russian\"],\"седьмой\":[\"russian\"],\"сезон\":[\"russian\"],\"сейф\":[\"russian\"],\"сейчас\":[\"russian\"],\"секрет\":[\"russian\"],\"сектор\":[\"russian\"],\"секунда\":[\"russian\"],\"семинар\":[\"russian\"],\"семья\":[\"russian\"],\"сенатор\":[\"russian\"],\"сено\":[\"russian\"],\"сенсация\":[\"russian\"],\"сентябрь\":[\"russian\"],\"сервис\":[\"russian\"],\"сердце\":[\"russian\"],\"середина\":[\"russian\"],\"сержант\":[\"russian\"],\"серия\":[\"russian\"],\"серый\":[\"russian\"],\"сессия\":[\"russian\"],\"сесть\":[\"russian\"],\"сетевой\":[\"russian\"],\"сжатый\":[\"russian\"],\"сжечь\":[\"russian\"],\"сзади\":[\"russian\"],\"сигнал\":[\"russian\"],\"сиденье\":[\"russian\"],\"сила\":[\"russian\"],\"силуэт\":[\"russian\"],\"сильный\":[\"russian\"],\"символ\":[\"russian\"],\"симпатия\":[\"russian\"],\"симфония\":[\"russian\"],\"синий\":[\"russian\"],\"синтез\":[\"russian\"],\"синяк\":[\"russian\"],\"сирень\":[\"russian\"],\"система\":[\"russian\"],\"ситуация\":[\"russian\"],\"сияние\":[\"russian\"],\"сказать\":[\"russian\"],\"скала\":[\"russian\"],\"скамейка\":[\"russian\"],\"скандал\":[\"russian\"],\"скатерть\":[\"russian\"],\"скачок\":[\"russian\"],\"скважина\":[\"russian\"],\"сквер\":[\"russian\"],\"сквозь\":[\"russian\"],\"скелет\":[\"russian\"],\"скидка\":[\"russian\"],\"склад\":[\"russian\"],\"сколько\":[\"russian\"],\"скорый\":[\"russian\"],\"скосить\":[\"russian\"],\"скот\":[\"russian\"],\"скрипка\":[\"russian\"],\"скудный\":[\"russian\"],\"скука\":[\"russian\"],\"слабый\":[\"russian\"],\"слава\":[\"russian\"],\"сладкий\":[\"russian\"],\"слегка\":[\"russian\"],\"след\":[\"russian\"],\"слеза\":[\"russian\"],\"слепой\":[\"russian\"],\"слесарь\":[\"russian\"],\"слишком\":[\"russian\"],\"слово\":[\"russian\"],\"слог\":[\"russian\"],\"сложный\":[\"russian\"],\"сломать\":[\"russian\"],\"служба\":[\"russian\"],\"слух\":[\"russian\"],\"случай\":[\"russian\"],\"слышать\":[\"russian\"],\"слюна\":[\"russian\"],\"смежный\":[\"russian\"],\"смелый\":[\"russian\"],\"сменить\":[\"russian\"],\"смесь\":[\"russian\"],\"сметана\":[\"russian\"],\"смех\":[\"russian\"],\"смола\":[\"russian\"],\"смуглый\":[\"russian\"],\"смутный\":[\"russian\"],\"смущать\":[\"russian\"],\"смысл\":[\"russian\"],\"снайпер\":[\"russian\"],\"снаряд\":[\"russian\"],\"сначала\":[\"russian\"],\"снег\":[\"russian\"],\"снизу\":[\"russian\"],\"сниться\":[\"russian\"],\"сно��а\":[\"russian\"],\"снять\":[\"russian\"],\"собака\":[\"russian\"],\"соблазн\":[\"russian\"],\"собрание\":[\"russian\"],\"событие\":[\"russian\"],\"совесть\":[\"russian\"],\"совсем\":[\"russian\"],\"согласие\":[\"russian\"],\"создать\":[\"russian\"],\"сознание\":[\"russian\"],\"созреть\":[\"russian\"],\"сойтись\":[\"russian\"],\"сокол\":[\"russian\"],\"солдат\":[\"russian\"],\"соленый\":[\"russian\"],\"солнце\":[\"russian\"],\"солома\":[\"russian\"],\"сомнение\":[\"russian\"],\"сонный\":[\"russian\"],\"соперник\":[\"russian\"],\"соратник\":[\"russian\"],\"сорвать\":[\"russian\"],\"сосед\":[\"russian\"],\"сосиска\":[\"russian\"],\"состав\":[\"russian\"],\"сотня\":[\"russian\"],\"соус\":[\"russian\"],\"союз\":[\"russian\"],\"спад\":[\"russian\"],\"спальня\":[\"russian\"],\"спасти\":[\"russian\"],\"спектр\":[\"russian\"],\"сперва\":[\"russian\"],\"спешить\":[\"russian\"],\"спина\":[\"russian\"],\"спирт\":[\"russian\"],\"список\":[\"russian\"],\"спичка\":[\"russian\"],\"сплав\":[\"russian\"],\"спонсор\":[\"russian\"],\"спор\":[\"russian\"],\"способ\":[\"russian\"],\"справка\":[\"russian\"],\"спустя\":[\"russian\"],\"спутник\":[\"russian\"],\"сразу\":[\"russian\"],\"средство\":[\"russian\"],\"срок\":[\"russian\"],\"срыв\":[\"russian\"],\"ссора\":[\"russian\"],\"ссылка\":[\"russian\"],\"ставить\":[\"russian\"],\"стадия\":[\"russian\"],\"стакан\":[\"russian\"],\"станция\":[\"russian\"],\"старый\":[\"russian\"],\"стая\":[\"russian\"],\"стебель\":[\"russian\"],\"стекло\":[\"russian\"],\"стена\":[\"russian\"],\"степень\":[\"russian\"],\"стереть\":[\"russian\"],\"стиль\":[\"russian\"],\"стимул\":[\"russian\"],\"стирать\":[\"russian\"],\"стихи\":[\"russian\"],\"стоить\":[\"russian\"],\"стойка\":[\"russian\"],\"стол\":[\"russian\"],\"стонать\":[\"russian\"],\"стопа\":[\"russian\"],\"сторона\":[\"russian\"],\"стоянка\":[\"russian\"],\"страна\":[\"russian\"],\"стричь\":[\"russian\"],\"строгий\":[\"russian\"],\"струя\":[\"russian\"],\"студент\":[\"russian\"],\"стук\":[\"russian\"],\"ступня\":[\"russian\"],\"стыдно\":[\"russian\"],\"суббота\":[\"russian\"],\"субъект\":[\"russian\"],\"сувенир\":[\"russian\"],\"сугроб\":[\"russian\"],\"сугубо\":[\"russian\"],\"судить\":[\"russian\"],\"судно\":[\"russian\"],\"судьба\":[\"russian\"],\"суета\":[\"russian\"],\"суметь\":[\"russian\"],\"сумма\":[\"russian\"],\"сумрак\":[\"russian\"],\"сундук\":[\"russian\"],\"супруг\":[\"russian\"],\"суровый\":[\"russian\"],\"сутки\":[\"russian\"],\"сухой\":[\"russian\"],\"суша\":[\"russian\"],\"существо\":[\"russian\"],\"сфера\":[\"russian\"],\"схема\":[\"russian\"],\"схожий\":[\"russian\"],\"сценарий\":[\"russian\"],\"счастье\":[\"russian\"],\"считать\":[\"russian\"],\"съезд\":[\"russian\"],\"сыграть\":[\"russian\"],\"сырой\":[\"russian\"],\"сытый\":[\"russian\"],\"сыщик\":[\"russian\"],\"сюда\":[\"russian\"],\"сюжет\":[\"russian\"],\"сюрприз\":[\"russian\"],\"тайна\":[\"russian\"],\"также\":[\"russian\"],\"такой\":[\"russian\"],\"такси\":[\"russian\"],\"тактика\":[\"russian\"],\"талия\":[\"russian\"],\"таможня\":[\"russian\"],\"танец\":[\"russian\"],\"таракан\":[\"russian\"],\"тарелка\":[\"russian\"],\"тариф\":[\"russian\"],\"тащить\":[\"russian\"],\"таять\":[\"russian\"],\"тварь\":[\"russian\"],\"театр\":[\"russian\"],\"тезис\":[\"russian\"],\"текст\":[\"russian\"],\"текущий\":[\"russian\"],\"телефон\":[\"russian\"],\"тема\":[\"russian\"],\"темнота\":[\"russian\"],\"теневой\":[\"russian\"],\"теннис\":[\"russian\"],\"теория\":[\"russian\"],\"теперь\":[\"russian\"],\"тепло\":[\"russian\"],\"терапия\":[\"russian\"],\"терзать\":[\"russian\"],\"термин\":[\"russian\"],\"терпеть\":[\"russian\"],\"терраса\":[\"russian\"],\"терять\":[\"russian\"],\"тесный\":[\"russian\"],\"тетрадь\":[\"russian\"],\"техника\":[\"russian\"],\"течение\":[\"russian\"],\"тигр\":[\"russian\"],\"типовой\":[\"russian\"],\"тираж\":[\"russian\"],\"титул\":[\"russian\"],\"тихий\":[\"russian\"],\"ткань\":[\"russian\"],\"товарищ\":[\"russian\"],\"тоже\":[\"russian\"],\"толпа\":[\"russian\"],\"толстый\":[\"russian\"],\"толчок\":[\"russian\"],\"толщина\":[\"russian\"],\"только\":[\"russian\"],\"тонкий\":[\"russian\"],\"тонна\":[\"russian\"],\"топить\":[\"russian\"],\"топор\":[\"russian\"],\"торговля\":[\"russian\"],\"тормоз\":[\"russian\"],\"торчать\":[\"russian\"],\"тотчас\":[\"russian\"],\"точка\":[\"russian\"],\"точно\":[\"russian\"],\"тощий\":[\"russian\"],\"трава\":[\"russian\"],\"традиция\":[\"russian\"],\"трактор\":[\"russian\"],\"трамвай\":[\"russian\"],\"траншея\":[\"russian\"],\"трасса\":[\"russian\"],\"тревога\":[\"russian\"],\"трезвый\":[\"russian\"],\"тренер\":[\"russian\"],\"трепет\":[\"russian\"],\"треск\":[\"russian\"],\"третий\":[\"russian\"],\"трещина\":[\"russian\"],\"трибуна\":[\"russian\"],\"тридцать\":[\"russian\"],\"триста\":[\"russian\"],\"триумф\":[\"russian\"],\"трогать\":[\"russian\"],\"тройка\":[\"russian\"],\"тронуть\":[\"russian\"],\"тропа\":[\"russian\"],\"тротуар\":[\"russian\"],\"трубка\":[\"russian\"],\"труд\":[\"russian\"],\"трюк\":[\"russian\"],\"тряпка\":[\"russian\"],\"туго\":[\"russian\"],\"туловище\":[\"russian\"],\"туман\":[\"russian\"],\"тумбочка\":[\"russian\"],\"тундра\":[\"russian\"],\"тупик\":[\"russian\"],\"турист\":[\"russian\"],\"турнир\":[\"russian\"],\"тусклый\":[\"russian\"],\"туфля\":[\"russian\"],\"туча\":[\"russian\"],\"тысяча\":[\"russian\"],\"тяга\":[\"russian\"],\"тяжело\":[\"russian\"],\"убежать\":[\"russian\"],\"убогий\":[\"russian\"],\"уборка\":[\"russian\"],\"уважение\":[\"russian\"],\"увезти\":[\"russian\"],\"уволить\":[\"russian\"],\"угадать\":[\"russian\"],\"угол\":[\"russian\"],\"угощать\":[\"russian\"],\"угроза\":[\"russian\"],\"угрюмый\":[\"russian\"],\"удар\":[\"russian\"],\"удачный\":[\"russian\"],\"уделять\":[\"russian\"],\"удивить\":[\"russian\"],\"удобный\":[\"russian\"],\"удочка\":[\"russian\"],\"уезжать\":[\"russian\"],\"ужин\":[\"russian\"],\"узел\":[\"russian\"],\"узкий\":[\"russian\"],\"уйти\":[\"russian\"],\"указание\":[\"russian\"],\"уклон\":[\"russian\"],\"украсть\":[\"russian\"],\"укусить\":[\"russian\"],\"улетать\":[\"russian\"],\"улица\":[\"russian\"],\"улыбка\":[\"russian\"],\"умело\":[\"russian\"],\"умение\":[\"russian\"],\"умный\":[\"russian\"],\"умолять\":[\"russian\"],\"унести\":[\"russian\"],\"унижать\":[\"russian\"],\"унылый\":[\"russian\"],\"упаковка\":[\"russian\"],\"упасть\":[\"russian\"],\"упорно\":[\"russian\"],\"упрек\":[\"russian\"],\"урна\":[\"russian\"],\"уровень\":[\"russian\"],\"урожай\":[\"russian\"],\"уронить\":[\"russian\"],\"усадьба\":[\"russian\"],\"усатый\":[\"russian\"],\"усвоить\":[\"russian\"],\"усилие\":[\"russian\"],\"условие\":[\"russian\"],\"услуга\":[\"russian\"],\"усмешка\":[\"russian\"],\"успеть\":[\"russian\"],\"устав\":[\"russian\"],\"устоять\":[\"russian\"],\"утечка\":[\"russian\"],\"утешать\":[\"russian\"],\"утро\":[\"russian\"],\"уцелеть\":[\"russian\"],\"участие\":[\"russian\"],\"ученик\":[\"russian\"],\"учесть\":[\"russian\"],\"ущелье\":[\"russian\"],\"ущерб\":[\"russian\"],\"уютный\":[\"russian\"],\"фабрика\":[\"russian\"],\"фаворит\":[\"russian\"],\"факел\":[\"russian\"],\"факт\":[\"russian\"],\"фамилия\":[\"russian\"],\"фантазия\":[\"russian\"],\"фасад\":[\"russian\"],\"февраль\":[\"russian\"],\"феномен\":[\"russian\"],\"фермер\":[\"russian\"],\"фигура\":[\"russian\"],\"физика\":[\"russian\"],\"филиал\":[\"russian\"],\"философ\":[\"russian\"],\"фильм\":[\"russian\"],\"финал\":[\"russian\"],\"флаг\":[\"russian\"],\"флот\":[\"russian\"],\"фойе\":[\"russian\"],\"фокус\":[\"russian\"],\"фонарь\":[\"russian\"],\"фонд\":[\"russian\"],\"фонтан\":[\"russian\"],\"форма\":[\"russian\"],\"форум\":[\"russian\"],\"фото\":[\"russian\"],\"фрагмент\":[\"russian\"],\"фраза\":[\"russian\"],\"фракция\":[\"russian\"],\"фронт\":[\"russian\"],\"фрукт\":[\"russian\"],\"функция\":[\"russian\"],\"фуражка\":[\"russian\"],\"футбол\":[\"russian\"],\"футляр\":[\"russian\"],\"халат\":[\"russian\"],\"хаос\":[\"russian\"],\"характер\":[\"russian\"],\"хата\":[\"russian\"],\"хвалить\":[\"russian\"],\"хватать\":[\"russian\"],\"хвойный\":[\"russian\"],\"хвост\":[\"russian\"],\"химия\":[\"russian\"],\"хирург\":[\"russian\"],\"хитрый\":[\"russian\"],\"хищник\":[\"russian\"],\"хлеб\":[\"russian\"],\"хлынуть\":[\"russian\"],\"хмурый\":[\"russian\"],\"ходить\":[\"russian\"],\"хозяин\":[\"russian\"],\"хоккей\":[\"russian\"],\"холм\":[\"russian\"],\"холст\":[\"russian\"],\"хорошо\":[\"russian\"],\"хотеть\":[\"russian\"],\"храбрый\":[\"russian\"],\"храм\":[\"russian\"],\"хранить\":[\"russian\"],\"хребет\":[\"russian\"],\"хрен\":[\"russian\"],\"хрипло\":[\"russian\"],\"хроника\":[\"russian\"],\"хрупкий\":[\"russian\"],\"художник\":[\"russian\"],\"худший\":[\"russian\"],\"хулиган\":[\"russian\"],\"хутор\":[\"russian\"],\"царь\":[\"russian\"],\"цветок\":[\"russian\"],\"целевой\":[\"russian\"],\"целиком\":[\"russian\"],\"целое\":[\"russian\"],\"цель\":[\"russian\"],\"цензура\":[\"russian\"],\"ценить\":[\"russian\"],\"центр\":[\"russian\"],\"цепной\":[\"russian\"],\"цикл\":[\"russian\"],\"цилиндр\":[\"russian\"],\"цирк\":[\"russian\"],\"цитата\":[\"russian\"],\"цифра\":[\"russian\"],\"чайник\":[\"russian\"],\"часы\":[\"russian\"],\"чашка\":[\"russian\"],\"человек\":[\"russian\"],\"челюсть\":[\"russian\"],\"чемодан\":[\"russian\"],\"чемпион\":[\"russian\"],\"чепуха\":[\"russian\"],\"червь\":[\"russian\"],\"чердак\":[\"russian\"],\"через\":[\"russian\"],\"чернила\":[\"russian\"],\"черта\":[\"russian\"],\"чеснок\":[\"russian\"],\"честно\":[\"russian\"],\"четверть\":[\"russian\"],\"четыре\":[\"russian\"],\"число\":[\"russian\"],\"чистый\":[\"russian\"],\"читатель\":[\"russian\"],\"чтение\":[\"russian\"],\"чтобы\":[\"russian\"],\"чувство\":[\"russian\"],\"чудак\":[\"russian\"],\"чудный\":[\"russian\"],\"чудо\":[\"russian\"],\"чужой\":[\"russian\"],\"чулок\":[\"russian\"],\"чума\":[\"russian\"],\"чушь\":[\"russian\"],\"чуять\":[\"russian\"],\"шагать\":[\"russian\"],\"шанс\":[\"russian\"],\"шапка\":[\"russian\"],\"шарик\":[\"russian\"],\"шарф\":[\"russian\"],\"шахматы\":[\"russian\"],\"шашлык\":[\"russian\"],\"шедевр\":[\"russian\"],\"шептать\":[\"russian\"],\"шерсть\":[\"russian\"],\"шестой\":[\"russian\"],\"шинель\":[\"russian\"],\"ширина\":[\"russian\"],\"шишка\":[\"russian\"],\"шкаф\":[\"russian\"],\"школа\":[\"russian\"],\"шкура\":[\"russian\"],\"шланг\":[\"russian\"],\"шлем\":[\"russian\"],\"шнур\":[\"russian\"],\"шоколад\":[\"russian\"],\"шорох\":[\"russian\"],\"шоссе\":[\"russian\"],\"шпион\":[\"russian\"],\"шприц\":[\"russian\"],\"штаб\":[\"russian\"],\"штамм\":[\"russian\"],\"штаны\":[\"russian\"],\"штатный\":[\"russian\"],\"штора\":[\"russian\"],\"штраф\":[\"russian\"],\"штурм\":[\"russian\"],\"штык\":[\"russian\"],\"шумно\":[\"russian\"],\"шуршать\":[\"russian\"],\"шутить\":[\"russian\"],\"шутка\":[\"russian\"],\"щедрый\":[\"russian\"],\"щека\":[\"russian\"],\"щенок\":[\"russian\"],\"экзамен\":[\"russian\"],\"экипаж\":[\"russian\"],\"экономия\":[\"russian\"],\"экран\":[\"russian\"],\"эксперт\":[\"russian\"],\"элемент\":[\"russian\"],\"элитный\":[\"russian\"],\"эмоция\":[\"russian\"],\"энергия\":[\"russian\"],\"эпизод\":[\"russian\"],\"эпоха\":[\"russian\"],\"эскиз\":[\"russian\"],\"эстрада\":[\"russian\"],\"этап\":[\"russian\"],\"этика\":[\"russian\"],\"этот\":[\"russian\"],\"эфир\":[\"russian\"],\"эффект\":[\"russian\"],\"эшелон\":[\"russian\"],\"юбилей\":[\"russian\"],\"юбка\":[\"russian\"],\"южный\":[\"russian\"],\"юмор\":[\"russian\"],\"юность\":[\"russian\"],\"юрист\":[\"russian\"],\"юстиция\":[\"russian\"],\"яблоко\":[\"russian\"],\"явление\":[\"russian\"],\"ягода\":[\"russian\"],\"ядро\":[\"russian\"],\"язык\":[\"russian\"],\"яйцо\":[\"russian\"],\"якобы\":[\"russian\"],\"якорь\":[\"russian\"],\"январь\":[\"russian\"],\"яркий\":[\"russian\"],\"ярмарка\":[\"russian\"],\"ярость\":[\"russian\"],\"ясный\":[\"russian\"],\"яхта\":[\"russian\"],\"ячейка\":[\"russian\"],\"ящик\":[\"russian\"],\"ábaco\":[\"spanish\"],\"abdomen\":[\"spanish\"],\"abeja\":[\"spanish\"],\"abierto\":[\"spanish\"],\"abogado\":[\"spanish\"],\"abono\":[\"spanish\"],\"aborto\":[\"spanish\"],\"abrazo\":[\"spanish\"],\"abrir\":[\"spanish\"],\"abuelo\":[\"spanish\"],\"abuso\":[\"spanish\"],\"acabar\":[\"spanish\"],\"academia\":[\"spanish\"],\"acceso\":[\"spanish\"],\"acción\":[\"spanish\"],\"aceite\":[\"spanish\"],\"acelga\":[\"spanish\"],\"acento\":[\"spanish\"],\"aceptar\":[\"spanish\"],\"ácido\":[\"spanish\"],\"aclarar\":[\"spanish\"],\"acné\":[\"spanish\"],\"acoger\":[\"spanish\"],\"acoso\":[\"spanish\"],\"activo\":[\"spanish\"],\"acto\":[\"spanish\"],\"actriz\":[\"spanish\"],\"actuar\":[\"spanish\"],\"acudir\":[\"spanish\"],\"acuerdo\":[\"spanish\"],\"acusar\":[\"spanish\"],\"adicto\":[\"spanish\"],\"admitir\":[\"spanish\"],\"adoptar\":[\"spanish\"],\"adorno\":[\"spanish\"],\"aduana\":[\"spanish\"],\"adulto\":[\"spanish\"],\"aéreo\":[\"spanish\"],\"afectar\":[\"spanish\"],\"afición\":[\"spanish\"],\"afinar\":[\"spanish\"],\"afirmar\":[\"spanish\"],\"ágil\":[\"spanish\"],\"agitar\":[\"spanish\"],\"agonía\":[\"spanish\"],\"agosto\":[\"spanish\"],\"agotar\":[\"spanish\"],\"agregar\":[\"spanish\"],\"agrio\":[\"spanish\"],\"agua\":[\"spanish\"],\"agudo\":[\"spanish\"],\"águila\":[\"spanish\"],\"aguja\":[\"spanish\"],\"ahogo\":[\"spanish\"],\"ahorro\":[\"spanish\"],\"aire\":[\"spanish\"],\"aislar\":[\"spanish\"],\"ajedrez\":[\"spanish\"],\"ajeno\":[\"spanish\"],\"ajuste\":[\"spanish\"],\"alacrán\":[\"spanish\"],\"alambre\":[\"spanish\"],\"alarma\":[\"spanish\"],\"alba\":[\"spanish\"],\"álbum\":[\"spanish\"],\"alcalde\":[\"spanish\"],\"aldea\":[\"spanish\"],\"alegre\":[\"spanish\"],\"alejar\":[\"spanish\"],\"alerta\":[\"spanish\"],\"aleta\":[\"spanish\"],\"alfiler\":[\"spanish\"],\"alga\":[\"spanish\"],\"algodón\":[\"spanish\"],\"aliado\":[\"spanish\"],\"aliento\":[\"spanish\"],\"alivio\":[\"spanish\"],\"alma\":[\"spanish\"],\"almeja\":[\"spanish\"],\"almíbar\":[\"spanish\"],\"altar\":[\"spanish\"],\"alteza\":[\"spanish\"],\"altivo\":[\"spanish\"],\"alto\":[\"spanish\"],\"altura\":[\"spanish\"],\"alumno\":[\"spanish\"],\"alzar\":[\"spanish\"],\"amable\":[\"spanish\"],\"amante\":[\"spanish\"],\"amapola\":[\"spanish\"],\"amargo\":[\"spanish\"],\"amasar\":[\"spanish\"],\"ámbar\":[\"spanish\"],\"ámbito\":[\"spanish\"],\"ameno\":[\"spanish\"],\"amigo\":[\"spanish\",\"turkish\"],\"amistad\":[\"spanish\"],\"amor\":[\"spanish\"],\"amparo\":[\"spanish\"],\"amplio\":[\"spanish\"],\"ancho\":[\"spanish\"],\"anciano\":[\"spanish\"],\"ancla\":[\"spanish\"],\"andar\":[\"spanish\"],\"andén\":[\"spanish\"],\"anemia\":[\"spanish\"],\"ángulo\":[\"spanish\"],\"anillo\":[\"spanish\"],\"ánimo\":[\"spanish\"],\"anís\":[\"spanish\"],\"anotar\":[\"spanish\"],\"antena\":[\"spanish\"],\"antiguo\":[\"spanish\"],\"antojo\":[\"spanish\"],\"anual\":[\"spanish\"],\"anular\":[\"spanish\"],\"anuncio\":[\"spanish\"],\"añadir\":[\"spanish\"],\"añejo\":[\"spanish\"],\"año\":[\"spanish\"],\"apagar\":[\"spanish\"],\"aparato\":[\"spanish\"],\"apetito\":[\"spanish\"],\"apio\":[\"spanish\"],\"aplicar\":[\"spanish\"],\"apodo\":[\"spanish\"],\"aporte\":[\"spanish\"],\"apoyo\":[\"spanish\"],\"aprender\":[\"spanish\"],\"aprobar\":[\"spanish\"],\"apuesta\":[\"spanish\"],\"apuro\":[\"spanish\"],\"arado\":[\"spanish\"],\"araña\":[\"spanish\"],\"arar\":[\"spanish\"],\"árbitro\":[\"spanish\"],\"árbol\":[\"spanish\"],\"arbusto\":[\"spanish\"],\"archivo\":[\"spanish\"],\"arco\":[\"spanish\"],\"arder\":[\"spanish\"],\"ardilla\":[\"spanish\"],\"arduo\":[\"spanish\"],\"área\":[\"spanish\"],\"árido\":[\"spanish\"],\"aries\":[\"spanish\"],\"armonía\":[\"spanish\"],\"arnés\":[\"spanish\"],\"aroma\":[\"spanish\",\"turkish\"],\"arpa\":[\"spanish\"],\"arpón\":[\"spanish\"],\"arreglo\":[\"spanish\"],\"arroz\":[\"spanish\"],\"arruga\":[\"spanish\"],\"arte\":[\"spanish\"],\"artista\":[\"spanish\"],\"asa\":[\"spanish\"],\"asado\":[\"spanish\"],\"asalto\":[\"spanish\"],\"ascenso\":[\"spanish\"],\"asegurar\":[\"spanish\"],\"aseo\":[\"spanish\"],\"asesor\":[\"spanish\"],\"asiento\":[\"spanish\"],\"asilo\":[\"spanish\"],\"asistir\":[\"spanish\"],\"asno\":[\"spanish\"],\"asombro\":[\"spanish\"],\"áspero\":[\"spanish\"],\"astilla\":[\"spanish\"],\"astro\":[\"spanish\"],\"astuto\":[\"spanish\"],\"asumir\":[\"spanish\"],\"asunto\":[\"spanish\"],\"atajo\":[\"spanish\"],\"ataque\":[\"spanish\"],\"atar\":[\"spanish\"],\"atento\":[\"spanish\"],\"ateo\":[\"spanish\"],\"ático\":[\"spanish\"],\"atleta\":[\"spanish\"],\"átomo\":[\"spanish\"],\"atraer\":[\"spanish\"],\"atroz\":[\"spanish\"],\"atún\":[\"spanish\"],\"audaz\":[\"spanish\"],\"audio\":[\"spanish\"],\"auge\":[\"spanish\"],\"aula\":[\"spanish\"],\"aumento\":[\"spanish\"],\"ausente\":[\"spanish\"],\"autor\":[\"spanish\"],\"aval\":[\"spanish\"],\"avance\":[\"spanish\"],\"avaro\":[\"spanish\"],\"ave\":[\"spanish\"],\"avellana\":[\"spanish\"],\"avena\":[\"spanish\"],\"avestruz\":[\"spanish\"],\"avión\":[\"spanish\"],\"aviso\":[\"spanish\"],\"ayer\":[\"spanish\"],\"ayuda\":[\"spanish\"],\"ayuno\":[\"spanish\"],\"azafrán\":[\"spanish\"],\"azar\":[\"spanish\"],\"azote\":[\"spanish\"],\"azúcar\":[\"spanish\"],\"azufre\":[\"spanish\"],\"azul\":[\"spanish\"],\"baba\":[\"spanish\"],\"babor\":[\"spanish\"],\"bache\":[\"spanish\"],\"bahía\":[\"spanish\"],\"baile\":[\"spanish\"],\"bajar\":[\"spanish\"],\"balanza\":[\"spanish\"],\"balcón\":[\"spanish\"],\"balde\":[\"spanish\"],\"bambú\":[\"spanish\"],\"banco\":[\"spanish\"],\"banda\":[\"spanish\"],\"baño\":[\"spanish\"],\"barba\":[\"spanish\"],\"barco\":[\"spanish\"],\"barniz\":[\"spanish\"],\"barro\":[\"spanish\"],\"báscula\":[\"spanish\"],\"bastón\":[\"spanish\"],\"basura\":[\"spanish\"],\"batalla\":[\"spanish\"],\"batería\":[\"spanish\"],\"batir\":[\"spanish\"],\"batuta\":[\"spanish\"],\"baúl\":[\"spanish\"],\"bazar\":[\"spanish\"],\"bebé\":[\"spanish\"],\"bebida\":[\"spanish\"],\"bello\":[\"spanish\"],\"besar\":[\"spanish\"],\"beso\":[\"spanish\"],\"bestia\":[\"spanish\"],\"bicho\":[\"spanish\"],\"bien\":[\"spanish\"],\"bingo\":[\"spanish\"],\"blanco\":[\"spanish\"],\"bloque\":[\"spanish\"],\"blusa\":[\"spanish\"],\"boa\":[\"spanish\"],\"bobina\":[\"spanish\"],\"bobo\":[\"spanish\"],\"boca\":[\"spanish\"],\"bocina\":[\"spanish\"],\"boda\":[\"spanish\"],\"bodega\":[\"spanish\"],\"boina\":[\"spanish\"],\"bola\":[\"spanish\"],\"bolero\":[\"spanish\",\"turkish\"],\"bolsa\":[\"spanish\"],\"bomba\":[\"spanish\"],\"bondad\":[\"spanish\"],\"bonito\":[\"spanish\"],\"bono\":[\"spanish\"],\"bonsái\":[\"spanish\"],\"borde\":[\"spanish\"],\"borrar\":[\"spanish\"],\"bosque\":[\"spanish\"],\"bote\":[\"spanish\"],\"botín\":[\"spanish\"],\"bóveda\":[\"spanish\"],\"bozal\":[\"spanish\"],\"bravo\":[\"spanish\"],\"brazo\":[\"spanish\"],\"brecha\":[\"spanish\"],\"breve\":[\"spanish\"],\"brillo\":[\"spanish\"],\"brinco\":[\"spanish\"],\"brisa\":[\"spanish\"],\"broca\":[\"spanish\"],\"broma\":[\"spanish\"],\"bronce\":[\"spanish\"],\"brote\":[\"spanish\"],\"bruja\":[\"spanish\"],\"brusco\":[\"spanish\"],\"bruto\":[\"spanish\"],\"buceo\":[\"spanish\"],\"bucle\":[\"spanish\"],\"bueno\":[\"spanish\"],\"buey\":[\"spanish\"],\"bufanda\":[\"spanish\"],\"bufón\":[\"spanish\"],\"búho\":[\"spanish\"],\"buitre\":[\"spanish\"],\"bulto\":[\"spanish\"],\"burbuja\":[\"spanish\"],\"burla\":[\"spanish\"],\"burro\":[\"spanish\"],\"buscar\":[\"spanish\"],\"butaca\":[\"spanish\"],\"buzón\":[\"spanish\"],\"caballo\":[\"spanish\"],\"cabeza\":[\"spanish\"],\"cabina\":[\"spanish\"],\"cabra\":[\"spanish\"],\"cacao\":[\"spanish\"],\"cadáver\":[\"spanish\"],\"cadena\":[\"spanish\"],\"caer\":[\"spanish\"],\"café\":[\"spanish\"],\"caída\":[\"spanish\"],\"caimán\":[\"spanish\"],\"caja\":[\"spanish\"],\"cajón\":[\"spanish\"],\"cal\":[\"spanish\"],\"calamar\":[\"spanish\"],\"calcio\":[\"spanish\"],\"caldo\":[\"spanish\"],\"calidad\":[\"spanish\"],\"calle\":[\"spanish\"],\"calma\":[\"spanish\"],\"calor\":[\"spanish\"],\"calvo\":[\"spanish\"],\"cama\":[\"spanish\"],\"cambio\":[\"spanish\"],\"camello\":[\"spanish\"],\"camino\":[\"spanish\"],\"campo\":[\"spanish\"],\"cáncer\":[\"spanish\"],\"candil\":[\"spanish\"],\"canela\":[\"spanish\"],\"canguro\":[\"spanish\"],\"canica\":[\"spanish\"],\"canto\":[\"spanish\"],\"caña\":[\"spanish\"],\"cañón\":[\"spanish\"],\"caoba\":[\"spanish\"],\"caos\":[\"spanish\"],\"capaz\":[\"spanish\"],\"capitán\":[\"spanish\"],\"capote\":[\"spanish\"],\"captar\":[\"spanish\"],\"capucha\":[\"spanish\"],\"cara\":[\"spanish\"],\"carbón\":[\"spanish\"],\"cárcel\":[\"spanish\"],\"careta\":[\"spanish\"],\"carga\":[\"spanish\"],\"cariño\":[\"spanish\"],\"carne\":[\"spanish\"],\"carpeta\":[\"spanish\"],\"carro\":[\"spanish\"],\"carta\":[\"spanish\"],\"casa\":[\"spanish\"],\"casco\":[\"spanish\"],\"casero\":[\"spanish\"],\"caspa\":[\"spanish\"],\"castor\":[\"spanish\"],\"catorce\":[\"spanish\"],\"catre\":[\"spanish\"],\"caudal\":[\"spanish\"],\"causa\":[\"spanish\"],\"cazo\":[\"spanish\"],\"cebolla\":[\"spanish\"],\"ceder\":[\"spanish\"],\"cedro\":[\"spanish\"],\"celda\":[\"spanish\"],\"célebre\":[\"spanish\"],\"celoso\":[\"spanish\"],\"célula\":[\"spanish\"],\"cemento\":[\"spanish\"],\"ceniza\":[\"spanish\"],\"centro\":[\"spanish\"],\"cerca\":[\"spanish\"],\"cerdo\":[\"spanish\"],\"cereza\":[\"spanish\"],\"cero\":[\"spanish\"],\"cerrar\":[\"spanish\"],\"certeza\":[\"spanish\"],\"césped\":[\"spanish\"],\"cetro\":[\"spanish\"],\"chacal\":[\"spanish\"],\"chaleco\":[\"spanish\"],\"champú\":[\"spanish\"],\"chancla\":[\"spanish\"],\"chapa\":[\"spanish\"],\"charla\":[\"spanish\"],\"chico\":[\"spanish\"],\"chiste\":[\"spanish\"],\"chivo\":[\"spanish\"],\"choque\":[\"spanish\"],\"choza\":[\"spanish\"],\"chuleta\":[\"spanish\"],\"chupar\":[\"spanish\"],\"ciclón\":[\"spanish\"],\"ciego\":[\"spanish\"],\"cielo\":[\"spanish\"],\"cien\":[\"spanish\"],\"cierto\":[\"spanish\"],\"cifra\":[\"spanish\"],\"cigarro\":[\"spanish\"],\"cima\":[\"spanish\"],\"cinco\":[\"spanish\"],\"cine\":[\"spanish\"],\"cinta\":[\"spanish\"],\"ciprés\":[\"spanish\"],\"circo\":[\"spanish\"],\"ciruela\":[\"spanish\"],\"cisne\":[\"spanish\"],\"cita\":[\"spanish\"],\"ciudad\":[\"spanish\"],\"clamor\":[\"spanish\"],\"clan\":[\"spanish\"],\"claro\":[\"spanish\"],\"clase\":[\"spanish\"],\"clave\":[\"spanish\"],\"cliente\":[\"spanish\"],\"clima\":[\"spanish\"],\"clínica\":[\"spanish\"],\"cobre\":[\"spanish\"],\"cocción\":[\"spanish\"],\"cochino\":[\"spanish\"],\"cocina\":[\"spanish\"],\"coco\":[\"spanish\"],\"código\":[\"spanish\"],\"codo\":[\"spanish\"],\"cofre\":[\"spanish\"],\"coger\":[\"spanish\"],\"cohete\":[\"spanish\"],\"cojín\":[\"spanish\"],\"cojo\":[\"spanish\"],\"cola\":[\"spanish\"],\"colcha\":[\"spanish\"],\"colegio\":[\"spanish\"],\"colgar\":[\"spanish\"],\"colina\":[\"spanish\"],\"collar\":[\"spanish\"],\"colmo\":[\"spanish\"],\"columna\":[\"spanish\"],\"combate\":[\"spanish\"],\"comer\":[\"spanish\"],\"comida\":[\"spanish\"],\"cómodo\":[\"spanish\"],\"compra\":[\"spanish\"],\"conde\":[\"spanish\"],\"conejo\":[\"spanish\"],\"conga\":[\"spanish\"],\"conocer\":[\"spanish\"],\"consejo\":[\"spanish\"],\"contar\":[\"spanish\"],\"copa\":[\"spanish\"],\"copia\":[\"spanish\"],\"corazón\":[\"spanish\"],\"corbata\":[\"spanish\"],\"corcho\":[\"spanish\"],\"cordón\":[\"spanish\"],\"corona\":[\"spanish\"],\"correr\":[\"spanish\"],\"coser\":[\"spanish\"],\"cosmos\":[\"spanish\"],\"costa\":[\"spanish\"],\"cráneo\":[\"spanish\"],\"cráter\":[\"spanish\"],\"crear\":[\"spanish\"],\"crecer\":[\"spanish\"],\"creído\":[\"spanish\"],\"crema\":[\"spanish\"],\"cría\":[\"spanish\"],\"crimen\":[\"spanish\"],\"cripta\":[\"spanish\"],\"crisis\":[\"spanish\"],\"cromo\":[\"spanish\"],\"crónica\":[\"spanish\"],\"croqueta\":[\"spanish\"],\"crudo\":[\"spanish\"],\"cruz\":[\"spanish\"],\"cuadro\":[\"spanish\"],\"cuarto\":[\"spanish\"],\"cuatro\":[\"spanish\"],\"cubo\":[\"spanish\"],\"cubrir\":[\"spanish\"],\"cuchara\":[\"spanish\"],\"cuello\":[\"spanish\"],\"cuento\":[\"spanish\"],\"cuerda\":[\"spanish\"],\"cuesta\":[\"spanish\"],\"cueva\":[\"spanish\"],\"cuidar\":[\"spanish\"],\"culebra\":[\"spanish\"],\"culpa\":[\"spanish\"],\"culto\":[\"spanish\"],\"cumbre\":[\"spanish\"],\"cumplir\":[\"spanish\"],\"cuna\":[\"spanish\"],\"cuneta\":[\"spanish\"],\"cuota\":[\"spanish\"],\"cupón\":[\"spanish\"],\"cúpula\":[\"spanish\"],\"curar\":[\"spanish\"],\"curioso\":[\"spanish\"],\"curso\":[\"spanish\"],\"curva\":[\"spanish\"],\"cutis\":[\"spanish\"],\"dama\":[\"spanish\"],\"danza\":[\"spanish\"],\"dar\":[\"spanish\"],\"dardo\":[\"spanish\"],\"dátil\":[\"spanish\"],\"deber\":[\"spanish\"],\"débil\":[\"spanish\"],\"década\":[\"spanish\"],\"decir\":[\"spanish\"],\"dedo\":[\"spanish\"],\"defensa\":[\"spanish\"],\"definir\":[\"spanish\"],\"dejar\":[\"spanish\"],\"delfín\":[\"spanish\"],\"delgado\":[\"spanish\"],\"delito\":[\"spanish\"],\"demora\":[\"spanish\"],\"denso\":[\"spanish\"],\"dental\":[\"spanish\"],\"deporte\":[\"spanish\"],\"derecho\":[\"spanish\"],\"derrota\":[\"spanish\"],\"desayuno\":[\"spanish\"],\"deseo\":[\"spanish\"],\"desfile\":[\"spanish\"],\"desnudo\":[\"spanish\"],\"destino\":[\"spanish\"],\"desvío\":[\"spanish\"],\"detalle\":[\"spanish\"],\"detener\":[\"spanish\"],\"deuda\":[\"spanish\"],\"día\":[\"spanish\"],\"diablo\":[\"spanish\"],\"diadema\":[\"spanish\"],\"diamante\":[\"spanish\"],\"diana\":[\"spanish\"],\"diario\":[\"spanish\"],\"dibujo\":[\"spanish\"],\"dictar\":[\"spanish\"],\"diente\":[\"spanish\"],\"dieta\":[\"spanish\"],\"diez\":[\"spanish\"],\"difícil\":[\"spanish\"],\"digno\":[\"spanish\"],\"dilema\":[\"spanish\"],\"diluir\":[\"spanish\"],\"dinero\":[\"spanish\"],\"directo\":[\"spanish\"],\"dirigir\":[\"spanish\"],\"disco\":[\"spanish\"],\"diseño\":[\"spanish\"],\"disfraz\":[\"spanish\"],\"diva\":[\"spanish\"],\"divino\":[\"spanish\"],\"doble\":[\"spanish\"],\"doce\":[\"spanish\"],\"dolor\":[\"spanish\"],\"domingo\":[\"spanish\"],\"don\":[\"spanish\"],\"donar\":[\"spanish\"],\"dorado\":[\"spanish\"],\"dormir\":[\"spanish\"],\"dorso\":[\"spanish\"],\"dos\":[\"spanish\"],\"dosis\":[\"spanish\"],\"dragón\":[\"spanish\"],\"droga\":[\"spanish\"],\"ducha\":[\"spanish\"],\"duda\":[\"spanish\"],\"duelo\":[\"spanish\"],\"dueño\":[\"spanish\"],\"dulce\":[\"spanish\"],\"dúo\":[\"spanish\"],\"duque\":[\"spanish\"],\"durar\":[\"spanish\"],\"dureza\":[\"spanish\"],\"duro\":[\"spanish\"],\"ébano\":[\"spanish\"],\"ebrio\":[\"spanish\"],\"echar\":[\"spanish\"],\"eco\":[\"spanish\"],\"ecuador\":[\"spanish\"],\"edad\":[\"spanish\"],\"edición\":[\"spanish\"],\"edificio\":[\"spanish\"],\"editor\":[\"spanish\"],\"educar\":[\"spanish\"],\"efecto\":[\"spanish\"],\"eficaz\":[\"spanish\"],\"eje\":[\"spanish\"],\"ejemplo\":[\"spanish\"],\"elefante\":[\"spanish\"],\"elegir\":[\"spanish\"],\"elemento\":[\"spanish\"],\"elevar\":[\"spanish\"],\"elipse\":[\"spanish\"],\"élite\":[\"spanish\"],\"elixir\":[\"spanish\"],\"elogio\":[\"spanish\"],\"eludir\":[\"spanish\"],\"embudo\":[\"spanish\"],\"emitir\":[\"spanish\"],\"emoción\":[\"spanish\"],\"empate\":[\"spanish\"],\"empeño\":[\"spanish\"],\"empleo\":[\"spanish\"],\"empresa\":[\"spanish\"],\"enano\":[\"spanish\"],\"encargo\":[\"spanish\"],\"enchufe\":[\"spanish\"],\"encía\":[\"spanish\"],\"enemigo\":[\"spanish\"],\"enero\":[\"spanish\"],\"enfado\":[\"spanish\"],\"enfermo\":[\"spanish\"],\"engaño\":[\"spanish\"],\"enigma\":[\"spanish\"],\"enlace\":[\"spanish\"],\"enorme\":[\"spanish\"],\"enredo\":[\"spanish\"],\"ensayo\":[\"spanish\"],\"enseñar\":[\"spanish\"],\"entero\":[\"spanish\"],\"entrar\":[\"spanish\"],\"envase\":[\"spanish\"],\"envío\":[\"spanish\"],\"época\":[\"spanish\"],\"equipo\":[\"spanish\"],\"erizo\":[\"spanish\"],\"escala\":[\"spanish\"],\"escena\":[\"spanish\"],\"escolar\":[\"spanish\"],\"escribir\":[\"spanish\"],\"escudo\":[\"spanish\"],\"esencia\":[\"spanish\"],\"esfera\":[\"spanish\"],\"esfuerzo\":[\"spanish\"],\"espada\":[\"spanish\"],\"espejo\":[\"spanish\"],\"espía\":[\"spanish\"],\"esposa\":[\"spanish\"],\"espuma\":[\"spanish\"],\"esquí\":[\"spanish\"],\"estar\":[\"spanish\"],\"este\":[\"spanish\"],\"estilo\":[\"spanish\"],\"estufa\":[\"spanish\"],\"etapa\":[\"spanish\"],\"eterno\":[\"spanish\"],\"ética\":[\"spanish\"],\"etnia\":[\"spanish\"],\"evadir\":[\"spanish\"],\"evaluar\":[\"spanish\"],\"evento\":[\"spanish\"],\"evitar\":[\"spanish\"],\"exacto\":[\"spanish\"],\"examen\":[\"spanish\"],\"exceso\":[\"spanish\"],\"excusa\":[\"spanish\"],\"exento\":[\"spanish\"],\"exigir\":[\"spanish\"],\"exilio\":[\"spanish\"],\"existir\":[\"spanish\"],\"éxito\":[\"spanish\"],\"experto\":[\"spanish\"],\"explicar\":[\"spanish\"],\"exponer\":[\"spanish\"],\"extremo\":[\"spanish\"],\"fábrica\":[\"spanish\"],\"fábula\":[\"spanish\"],\"fachada\":[\"spanish\"],\"fácil\":[\"spanish\"],\"factor\":[\"spanish\"],\"faena\":[\"spanish\"],\"faja\":[\"spanish\"],\"falda\":[\"spanish\"],\"fallo\":[\"spanish\"],\"falso\":[\"spanish\"],\"faltar\":[\"spanish\"],\"fama\":[\"spanish\"],\"familia\":[\"spanish\"],\"famoso\":[\"spanish\"],\"faraón\":[\"spanish\"],\"farmacia\":[\"spanish\"],\"farol\":[\"spanish\"],\"farsa\":[\"spanish\"],\"fase\":[\"spanish\"],\"fatiga\":[\"spanish\"],\"fauna\":[\"spanish\",\"turkish\"],\"favor\":[\"spanish\"],\"fax\":[\"spanish\"],\"febrero\":[\"spanish\"],\"fecha\":[\"spanish\"],\"feliz\":[\"spanish\"],\"feo\":[\"spanish\"],\"feria\":[\"spanish\"],\"feroz\":[\"spanish\"],\"fértil\":[\"spanish\"],\"fervor\":[\"spanish\"],\"festín\":[\"spanish\"],\"fiable\":[\"spanish\"],\"fianza\":[\"spanish\"],\"fiar\":[\"spanish\"],\"fibra\":[\"spanish\"],\"ficción\":[\"spanish\"],\"ficha\":[\"spanish\"],\"fideo\":[\"spanish\"],\"fiebre\":[\"spanish\"],\"fiel\":[\"spanish\"],\"fiera\":[\"spanish\"],\"fiesta\":[\"spanish\"],\"figura\":[\"spanish\"],\"fijar\":[\"spanish\"],\"fijo\":[\"spanish\"],\"fila\":[\"spanish\"],\"filete\":[\"spanish\"],\"filial\":[\"spanish\"],\"filtro\":[\"spanish\"],\"fin\":[\"spanish\"],\"finca\":[\"spanish\"],\"fingir\":[\"spanish\"],\"finito\":[\"spanish\"],\"firma\":[\"spanish\"],\"flaco\":[\"spanish\"],\"flauta\":[\"spanish\"],\"flecha\":[\"spanish\"],\"flor\":[\"spanish\"],\"flota\":[\"spanish\"],\"fluir\":[\"spanish\"],\"flujo\":[\"spanish\"],\"flúor\":[\"spanish\"],\"fobia\":[\"spanish\"],\"foca\":[\"spanish\"],\"fogata\":[\"spanish\"],\"fogón\":[\"spanish\"],\"folio\":[\"spanish\"],\"folleto\":[\"spanish\"],\"fondo\":[\"spanish\"],\"forma\":[\"spanish\"],\"forro\":[\"spanish\"],\"fortuna\":[\"spanish\"],\"forzar\":[\"spanish\"],\"fosa\":[\"spanish\"],\"foto\":[\"spanish\"],\"fracaso\":[\"spanish\"],\"frágil\":[\"spanish\"],\"franja\":[\"spanish\"],\"frase\":[\"spanish\"],\"fraude\":[\"spanish\"],\"freír\":[\"spanish\"],\"freno\":[\"spanish\"],\"fresa\":[\"spanish\"],\"frío\":[\"spanish\"],\"frito\":[\"spanish\"],\"fruta\":[\"spanish\"],\"fuego\":[\"spanish\"],\"fuente\":[\"spanish\"],\"fuerza\":[\"spanish\"],\"fuga\":[\"spanish\"],\"fumar\":[\"spanish\"],\"función\":[\"spanish\"],\"funda\":[\"spanish\"],\"furgón\":[\"spanish\"],\"furia\":[\"spanish\"],\"fusil\":[\"spanish\"],\"fútbol\":[\"spanish\"],\"futuro\":[\"spanish\"],\"gacela\":[\"spanish\"],\"gafas\":[\"spanish\"],\"gaita\":[\"spanish\"],\"gajo\":[\"spanish\"],\"gala\":[\"spanish\"],\"galería\":[\"spanish\"],\"gallo\":[\"spanish\"],\"gamba\":[\"spanish\"],\"ganar\":[\"spanish\"],\"gancho\":[\"spanish\"],\"ganga\":[\"spanish\"],\"ganso\":[\"spanish\"],\"garaje\":[\"spanish\"],\"garza\":[\"spanish\"],\"gasolina\":[\"spanish\"],\"gastar\":[\"spanish\"],\"gato\":[\"spanish\"],\"gavilán\":[\"spanish\"],\"gemelo\":[\"spanish\"],\"gemir\":[\"spanish\"],\"gen\":[\"spanish\"],\"género\":[\"spanish\"],\"genio\":[\"spanish\"],\"gente\":[\"spanish\"],\"geranio\":[\"spanish\"],\"gerente\":[\"spanish\"],\"germen\":[\"spanish\"],\"gesto\":[\"spanish\"],\"gigante\":[\"spanish\"],\"gimnasio\":[\"spanish\"],\"girar\":[\"spanish\"],\"giro\":[\"spanish\"],\"glaciar\":[\"spanish\"],\"globo\":[\"spanish\"],\"gloria\":[\"spanish\"],\"gol\":[\"spanish\"],\"golfo\":[\"spanish\"],\"goloso\":[\"spanish\"],\"golpe\":[\"spanish\"],\"goma\":[\"spanish\"],\"gordo\":[\"spanish\"],\"gorila\":[\"spanish\"],\"gorra\":[\"spanish\"],\"gota\":[\"spanish\"],\"goteo\":[\"spanish\"],\"gozar\":[\"spanish\"],\"grada\":[\"spanish\"],\"gráfico\":[\"spanish\"],\"grano\":[\"spanish\"],\"grasa\":[\"spanish\"],\"gratis\":[\"spanish\"],\"grave\":[\"spanish\"],\"grieta\":[\"spanish\"],\"grillo\":[\"spanish\"],\"gripe\":[\"spanish\"],\"gris\":[\"spanish\"],\"grito\":[\"spanish\"],\"grosor\":[\"spanish\"],\"grúa\":[\"spanish\"],\"grueso\":[\"spanish\"],\"grumo\":[\"spanish\"],\"grupo\":[\"spanish\"],\"guante\":[\"spanish\"],\"guapo\":[\"spanish\"],\"guardia\":[\"spanish\"],\"guerra\":[\"spanish\"],\"guía\":[\"spanish\"],\"guiño\":[\"spanish\"],\"guion\":[\"spanish\"],\"guiso\":[\"spanish\"],\"guitarra\":[\"spanish\"],\"gusano\":[\"spanish\"],\"gustar\":[\"spanish\"],\"haber\":[\"spanish\",\"turkish\"],\"hábil\":[\"spanish\"],\"hablar\":[\"spanish\"],\"hacer\":[\"spanish\"],\"hacha\":[\"spanish\"],\"hada\":[\"spanish\"],\"hallar\":[\"spanish\"],\"hamaca\":[\"spanish\"],\"harina\":[\"spanish\"],\"haz\":[\"spanish\"],\"hazaña\":[\"spanish\"],\"hebilla\":[\"spanish\"],\"hebra\":[\"spanish\"],\"hecho\":[\"spanish\"],\"helado\":[\"spanish\"],\"helio\":[\"spanish\"],\"hembra\":[\"spanish\"],\"herir\":[\"spanish\"],\"hermano\":[\"spanish\"],\"héroe\":[\"spanish\"],\"hervir\":[\"spanish\"],\"hielo\":[\"spanish\"],\"hierro\":[\"spanish\"],\"hígado\":[\"spanish\"],\"higiene\":[\"spanish\"],\"hijo\":[\"spanish\"],\"himno\":[\"spanish\"],\"historia\":[\"spanish\"],\"hocico\":[\"spanish\"],\"hogar\":[\"spanish\"],\"hoguera\":[\"spanish\"],\"hoja\":[\"spanish\"],\"hombre\":[\"spanish\"],\"hongo\":[\"spanish\"],\"honor\":[\"spanish\"],\"honra\":[\"spanish\"],\"hora\":[\"spanish\"],\"hormiga\":[\"spanish\"],\"horno\":[\"spanish\"],\"hostil\":[\"spanish\"],\"hoyo\":[\"spanish\"],\"hueco\":[\"spanish\"],\"huelga\":[\"spanish\"],\"huerta\":[\"spanish\"],\"hueso\":[\"spanish\"],\"huevo\":[\"spanish\"],\"huida\":[\"spanish\"],\"huir\":[\"spanish\"],\"humano\":[\"spanish\"],\"húmedo\":[\"spanish\"],\"humilde\":[\"spanish\"],\"humo\":[\"spanish\"],\"hundir\":[\"spanish\"],\"huracán\":[\"spanish\"],\"hurto\":[\"spanish\"],\"icono\":[\"spanish\"],\"ideal\":[\"spanish\"],\"idioma\":[\"spanish\"],\"ídolo\":[\"spanish\"],\"iglesia\":[\"spanish\"],\"iglú\":[\"spanish\"],\"igual\":[\"spanish\"],\"ilegal\":[\"spanish\"],\"ilusión\":[\"spanish\"],\"imagen\":[\"spanish\"],\"imán\":[\"spanish\"],\"imitar\":[\"spanish\"],\"impar\":[\"spanish\"],\"imperio\":[\"spanish\"],\"imponer\":[\"spanish\"],\"impulso\":[\"spanish\"],\"incapaz\":[\"spanish\"],\"índice\":[\"spanish\"],\"inerte\":[\"spanish\"],\"infiel\":[\"spanish\"],\"informe\":[\"spanish\"],\"ingenio\":[\"spanish\"],\"inicio\":[\"spanish\"],\"inmenso\":[\"spanish\"],\"inmune\":[\"spanish\"],\"innato\":[\"spanish\"],\"insecto\":[\"spanish\"],\"instante\":[\"spanish\"],\"interés\":[\"spanish\"],\"íntimo\":[\"spanish\"],\"intuir\":[\"spanish\"],\"inútil\":[\"spanish\"],\"invierno\":[\"spanish\"],\"ira\":[\"spanish\"],\"iris\":[\"spanish\"],\"ironía\":[\"spanish\"],\"isla\":[\"spanish\"],\"islote\":[\"spanish\"],\"jabalí\":[\"spanish\"],\"jabón\":[\"spanish\"],\"jamón\":[\"spanish\"],\"jarabe\":[\"spanish\"],\"jardín\":[\"spanish\"],\"jarra\":[\"spanish\"],\"jaula\":[\"spanish\"],\"jazmín\":[\"spanish\"],\"jefe\":[\"spanish\"],\"jeringa\":[\"spanish\"],\"jinete\":[\"spanish\"],\"jornada\":[\"spanish\"],\"joroba\":[\"spanish\"],\"joven\":[\"spanish\"],\"joya\":[\"spanish\"],\"juerga\":[\"spanish\"],\"jueves\":[\"spanish\"],\"juez\":[\"spanish\"],\"jugador\":[\"spanish\"],\"jugo\":[\"spanish\"],\"juguete\":[\"spanish\"],\"juicio\":[\"spanish\"],\"junco\":[\"spanish\"],\"jungla\":[\"spanish\"],\"junio\":[\"spanish\"],\"juntar\":[\"spanish\"],\"júpiter\":[\"spanish\"],\"jurar\":[\"spanish\"],\"justo\":[\"spanish\"],\"juvenil\":[\"spanish\"],\"juzgar\":[\"spanish\"],\"kilo\":[\"spanish\"],\"koala\":[\"spanish\"],\"labio\":[\"spanish\"],\"lacio\":[\"spanish\"],\"lacra\":[\"spanish\"],\"lado\":[\"spanish\"],\"ladrón\":[\"spanish\"],\"lagarto\":[\"spanish\"],\"lágrima\":[\"spanish\"],\"laguna\":[\"spanish\"],\"laico\":[\"spanish\"],\"lamer\":[\"spanish\"],\"lámina\":[\"spanish\"],\"lámpara\":[\"spanish\"],\"lana\":[\"spanish\"],\"lancha\":[\"spanish\"],\"langosta\":[\"spanish\"],\"lanza\":[\"spanish\"],\"lápiz\":[\"spanish\"],\"largo\":[\"spanish\"],\"larva\":[\"spanish\"],\"lástima\":[\"spanish\"],\"lata\":[\"spanish\"],\"látex\":[\"spanish\"],\"latir\":[\"spanish\"],\"laurel\":[\"spanish\"],\"lavar\":[\"spanish\"],\"lazo\":[\"spanish\"],\"leal\":[\"spanish\"],\"lección\":[\"spanish\"],\"leche\":[\"spanish\"],\"lector\":[\"spanish\"],\"leer\":[\"spanish\"],\"legión\":[\"spanish\"],\"legumbre\":[\"spanish\"],\"lejano\":[\"spanish\"],\"lengua\":[\"spanish\"],\"lento\":[\"spanish\"],\"leña\":[\"spanish\"],\"león\":[\"spanish\"],\"leopardo\":[\"spanish\"],\"lesión\":[\"spanish\"],\"letal\":[\"spanish\"],\"letra\":[\"spanish\"],\"leve\":[\"spanish\"],\"leyenda\":[\"spanish\"],\"libertad\":[\"spanish\"],\"libro\":[\"spanish\"],\"licor\":[\"spanish\"],\"líder\":[\"spanish\"],\"lidiar\":[\"spanish\"],\"lienzo\":[\"spanish\"],\"liga\":[\"spanish\"],\"ligero\":[\"spanish\"],\"lima\":[\"spanish\"],\"límite\":[\"spanish\"],\"limón\":[\"spanish\"],\"limpio\":[\"spanish\"],\"lince\":[\"spanish\"],\"lindo\":[\"spanish\"],\"línea\":[\"spanish\"],\"lingote\":[\"spanish\"],\"lino\":[\"spanish\"],\"linterna\":[\"spanish\"],\"líquido\":[\"spanish\"],\"liso\":[\"spanish\"],\"lista\":[\"spanish\"],\"litera\":[\"spanish\"],\"litio\":[\"spanish\"],\"litro\":[\"spanish\"],\"llaga\":[\"spanish\"],\"llama\":[\"spanish\"],\"llanto\":[\"spanish\"],\"llave\":[\"spanish\"],\"llegar\":[\"spanish\"],\"llenar\":[\"spanish\"],\"llevar\":[\"spanish\"],\"llorar\":[\"spanish\"],\"llover\":[\"spanish\"],\"lluvia\":[\"spanish\"],\"lobo\":[\"spanish\"],\"loción\":[\"spanish\"],\"loco\":[\"spanish\"],\"locura\":[\"spanish\"],\"lógica\":[\"spanish\"],\"logro\":[\"spanish\"],\"lombriz\":[\"spanish\"],\"lomo\":[\"spanish\"],\"lonja\":[\"spanish\"],\"lote\":[\"spanish\"],\"lucha\":[\"spanish\"],\"lucir\":[\"spanish\"],\"lugar\":[\"spanish\"],\"lujo\":[\"spanish\"],\"luna\":[\"spanish\"],\"lunes\":[\"spanish\"],\"lupa\":[\"spanish\"],\"lustro\":[\"spanish\"],\"luto\":[\"spanish\"],\"luz\":[\"spanish\"],\"maceta\":[\"spanish\"],\"macho\":[\"spanish\"],\"madera\":[\"spanish\"],\"madre\":[\"spanish\"],\"maduro\":[\"spanish\"],\"maestro\":[\"spanish\"],\"mafia\":[\"spanish\"],\"magia\":[\"spanish\"],\"mago\":[\"spanish\"],\"maíz\":[\"spanish\"],\"maldad\":[\"spanish\"],\"maleta\":[\"spanish\"],\"malla\":[\"spanish\"],\"malo\":[\"spanish\"],\"mamá\":[\"spanish\"],\"mambo\":[\"spanish\"],\"mamut\":[\"spanish\"],\"manco\":[\"spanish\"],\"mando\":[\"spanish\"],\"manejar\":[\"spanish\"],\"manga\":[\"spanish\"],\"maniquí\":[\"spanish\"],\"manjar\":[\"spanish\"],\"mano\":[\"spanish\"],\"manso\":[\"spanish\"],\"manta\":[\"spanish\"],\"mañana\":[\"spanish\"],\"mapa\":[\"spanish\"],\"máquina\":[\"spanish\"],\"mar\":[\"spanish\"],\"marco\":[\"spanish\"],\"marea\":[\"spanish\"],\"marfil\":[\"spanish\"],\"margen\":[\"spanish\"],\"marido\":[\"spanish\"],\"mármol\":[\"spanish\"],\"marrón\":[\"spanish\"],\"martes\":[\"spanish\"],\"marzo\":[\"spanish\"],\"masa\":[\"spanish\"],\"máscara\":[\"spanish\"],\"masivo\":[\"spanish\"],\"matar\":[\"spanish\"],\"materia\":[\"spanish\"],\"matiz\":[\"spanish\"],\"matriz\":[\"spanish\"],\"máximo\":[\"spanish\"],\"mayor\":[\"spanish\"],\"mazorca\":[\"spanish\"],\"mecha\":[\"spanish\"],\"medalla\":[\"spanish\"],\"medio\":[\"spanish\"],\"médula\":[\"spanish\"],\"mejilla\":[\"spanish\"],\"mejor\":[\"spanish\"],\"melena\":[\"spanish\"],\"melón\":[\"spanish\"],\"memoria\":[\"spanish\"],\"menor\":[\"spanish\"],\"mensaje\":[\"spanish\"],\"mente\":[\"spanish\"],\"menú\":[\"spanish\"],\"mercado\":[\"spanish\"],\"merengue\":[\"spanish\"],\"mérito\":[\"spanish\"],\"mes\":[\"spanish\"],\"mesón\":[\"spanish\"],\"meta\":[\"spanish\"],\"meter\":[\"spanish\"],\"método\":[\"spanish\"],\"metro\":[\"spanish\"],\"mezcla\":[\"spanish\"],\"miedo\":[\"spanish\"],\"miel\":[\"spanish\"],\"miembro\":[\"spanish\"],\"miga\":[\"spanish\"],\"mil\":[\"spanish\"],\"milagro\":[\"spanish\"],\"militar\":[\"spanish\"],\"millón\":[\"spanish\"],\"mimo\":[\"spanish\"],\"mina\":[\"spanish\"],\"minero\":[\"spanish\"],\"mínimo\":[\"spanish\"],\"minuto\":[\"spanish\"],\"miope\":[\"spanish\"],\"mirar\":[\"spanish\"],\"misa\":[\"spanish\"],\"miseria\":[\"spanish\"],\"misil\":[\"spanish\"],\"mismo\":[\"spanish\"],\"mitad\":[\"spanish\"],\"mito\":[\"spanish\"],\"mochila\":[\"spanish\"],\"moción\":[\"spanish\"],\"moda\":[\"spanish\"],\"modelo\":[\"spanish\"],\"moho\":[\"spanish\"],\"mojar\":[\"spanish\"],\"molde\":[\"spanish\"],\"moler\":[\"spanish\"],\"molino\":[\"spanish\"],\"momento\":[\"spanish\"],\"momia\":[\"spanish\"],\"monarca\":[\"spanish\"],\"moneda\":[\"spanish\"],\"monja\":[\"spanish\"],\"monto\":[\"spanish\"],\"moño\":[\"spanish\"],\"morada\":[\"spanish\"],\"morder\":[\"spanish\"],\"moreno\":[\"spanish\"],\"morir\":[\"spanish\"],\"morro\":[\"spanish\"],\"morsa\":[\"spanish\"],\"mortal\":[\"spanish\"],\"mosca\":[\"spanish\"],\"mostrar\":[\"spanish\"],\"motivo\":[\"spanish\"],\"mover\":[\"spanish\"],\"móvil\":[\"spanish\"],\"mozo\":[\"spanish\"],\"mucho\":[\"spanish\"],\"mudar\":[\"spanish\"],\"mueble\":[\"spanish\"],\"muela\":[\"spanish\"],\"muerte\":[\"spanish\"],\"muestra\":[\"spanish\"],\"mugre\":[\"spanish\"],\"mujer\":[\"spanish\"],\"mula\":[\"spanish\"],\"muleta\":[\"spanish\"],\"multa\":[\"spanish\"],\"mundo\":[\"spanish\"],\"muñeca\":[\"spanish\"],\"mural\":[\"spanish\"],\"muro\":[\"spanish\"],\"músculo\":[\"spanish\"],\"museo\":[\"spanish\"],\"musgo\":[\"spanish\"],\"música\":[\"spanish\"],\"muslo\":[\"spanish\"],\"nácar\":[\"spanish\"],\"nación\":[\"spanish\"],\"nadar\":[\"spanish\"],\"naipe\":[\"spanish\"],\"naranja\":[\"spanish\"],\"nariz\":[\"spanish\"],\"narrar\":[\"spanish\"],\"nasal\":[\"spanish\"],\"natal\":[\"spanish\"],\"nativo\":[\"spanish\"],\"natural\":[\"spanish\"],\"náusea\":[\"spanish\"],\"naval\":[\"spanish\"],\"nave\":[\"spanish\"],\"navidad\":[\"spanish\"],\"necio\":[\"spanish\"],\"néctar\":[\"spanish\"],\"negar\":[\"spanish\"],\"negocio\":[\"spanish\"],\"negro\":[\"spanish\"],\"neón\":[\"spanish\"],\"nervio\":[\"spanish\"],\"neto\":[\"spanish\"],\"neutro\":[\"spanish\"],\"nevar\":[\"spanish\"],\"nevera\":[\"spanish\"],\"nicho\":[\"spanish\"],\"nido\":[\"spanish\"],\"niebla\":[\"spanish\"],\"nieto\":[\"spanish\"],\"niñez\":[\"spanish\"],\"niño\":[\"spanish\"],\"nítido\":[\"spanish\"],\"nivel\":[\"spanish\"],\"nobleza\":[\"spanish\"],\"noche\":[\"spanish\"],\"nómina\":[\"spanish\"],\"noria\":[\"spanish\"],\"norma\":[\"spanish\"],\"norte\":[\"spanish\"],\"nota\":[\"spanish\"],\"noticia\":[\"spanish\"],\"novato\":[\"spanish\"],\"novela\":[\"spanish\"],\"novio\":[\"spanish\"],\"nube\":[\"spanish\"],\"nuca\":[\"spanish\"],\"núcleo\":[\"spanish\"],\"nudillo\":[\"spanish\"],\"nudo\":[\"spanish\"],\"nuera\":[\"spanish\"],\"nueve\":[\"spanish\"],\"nuez\":[\"spanish\"],\"nulo\":[\"spanish\"],\"número\":[\"spanish\"],\"nutria\":[\"spanish\"],\"oasis\":[\"spanish\"],\"obeso\":[\"spanish\"],\"obispo\":[\"spanish\"],\"objeto\":[\"spanish\"],\"obra\":[\"spanish\"],\"obrero\":[\"spanish\"],\"observar\":[\"spanish\"],\"obtener\":[\"spanish\"],\"obvio\":[\"spanish\"],\"oca\":[\"spanish\"],\"ocaso\":[\"spanish\"],\"océano\":[\"spanish\"],\"ochenta\":[\"spanish\"],\"ocho\":[\"spanish\"],\"ocio\":[\"spanish\"],\"ocre\":[\"spanish\"],\"octavo\":[\"spanish\"],\"octubre\":[\"spanish\"],\"oculto\":[\"spanish\"],\"ocupar\":[\"spanish\"],\"ocurrir\":[\"spanish\"],\"odiar\":[\"spanish\"],\"odio\":[\"spanish\"],\"odisea\":[\"spanish\"],\"oeste\":[\"spanish\"],\"ofensa\":[\"spanish\"],\"oferta\":[\"spanish\"],\"oficio\":[\"spanish\"],\"ofrecer\":[\"spanish\"],\"ogro\":[\"spanish\"],\"oído\":[\"spanish\"],\"oír\":[\"spanish\"],\"ojo\":[\"spanish\"],\"ola\":[\"spanish\"],\"oleada\":[\"spanish\"],\"olfato\":[\"spanish\"],\"olivo\":[\"spanish\"],\"olla\":[\"spanish\"],\"olmo\":[\"spanish\"],\"olor\":[\"spanish\"],\"olvido\":[\"spanish\"],\"ombligo\":[\"spanish\"],\"onda\":[\"spanish\"],\"onza\":[\"spanish\"],\"opaco\":[\"spanish\"],\"opción\":[\"spanish\"],\"ópera\":[\"spanish\"],\"opinar\":[\"spanish\"],\"oponer\":[\"spanish\"],\"optar\":[\"spanish\"],\"óptica\":[\"spanish\"],\"opuesto\":[\"spanish\"],\"oración\":[\"spanish\"],\"orador\":[\"spanish\"],\"oral\":[\"spanish\",\"turkish\"],\"órbita\":[\"spanish\"],\"orca\":[\"spanish\"],\"orden\":[\"spanish\"],\"oreja\":[\"spanish\"],\"órgano\":[\"spanish\"],\"orgía\":[\"spanish\"],\"orgullo\":[\"spanish\"],\"oriente\":[\"spanish\"],\"origen\":[\"spanish\"],\"orilla\":[\"spanish\"],\"oro\":[\"spanish\"],\"orquesta\":[\"spanish\"],\"oruga\":[\"spanish\"],\"osadía\":[\"spanish\"],\"oscuro\":[\"spanish\"],\"osezno\":[\"spanish\"],\"oso\":[\"spanish\"],\"ostra\":[\"spanish\"],\"otoño\":[\"spanish\"],\"otro\":[\"spanish\"],\"oveja\":[\"spanish\"],\"óvulo\":[\"spanish\"],\"óxido\":[\"spanish\"],\"oxígeno\":[\"spanish\"],\"oyente\":[\"spanish\"],\"ozono\":[\"spanish\"],\"pacto\":[\"spanish\"],\"padre\":[\"spanish\"],\"paella\":[\"spanish\"],\"página\":[\"spanish\"],\"pago\":[\"spanish\"],\"país\":[\"spanish\"],\"pájaro\":[\"spanish\"],\"palabra\":[\"spanish\"],\"palco\":[\"spanish\"],\"paleta\":[\"spanish\"],\"pálido\":[\"spanish\"],\"palma\":[\"spanish\"],\"paloma\":[\"spanish\"],\"palpar\":[\"spanish\"],\"pan\":[\"spanish\"],\"panal\":[\"spanish\"],\"pánico\":[\"spanish\"],\"pantera\":[\"spanish\"],\"pañuelo\":[\"spanish\"],\"papá\":[\"spanish\"],\"papel\":[\"spanish\"],\"papilla\":[\"spanish\"],\"paquete\":[\"spanish\"],\"parar\":[\"spanish\"],\"parcela\":[\"spanish\"],\"pared\":[\"spanish\"],\"parir\":[\"spanish\"],\"paro\":[\"spanish\"],\"párpado\":[\"spanish\"],\"parque\":[\"spanish\"],\"párrafo\":[\"spanish\"],\"parte\":[\"spanish\"],\"pasar\":[\"spanish\"],\"paseo\":[\"spanish\"],\"pasión\":[\"spanish\"],\"paso\":[\"spanish\"],\"pasta\":[\"spanish\"],\"pata\":[\"spanish\"],\"patio\":[\"spanish\"],\"patria\":[\"spanish\"],\"pausa\":[\"spanish\"],\"pauta\":[\"spanish\"],\"pavo\":[\"spanish\"],\"payaso\":[\"spanish\"],\"peatón\":[\"spanish\"],\"pecado\":[\"spanish\"],\"pecera\":[\"spanish\"],\"pecho\":[\"spanish\"],\"pedal\":[\"spanish\",\"turkish\"],\"pedir\":[\"spanish\"],\"pegar\":[\"spanish\"],\"peine\":[\"spanish\"],\"pelar\":[\"spanish\"],\"peldaño\":[\"spanish\"],\"pelea\":[\"spanish\"],\"peligro\":[\"spanish\"],\"pellejo\":[\"spanish\"],\"pelo\":[\"spanish\"],\"peluca\":[\"spanish\"],\"pena\":[\"spanish\",\"turkish\"],\"pensar\":[\"spanish\"],\"peñón\":[\"spanish\"],\"peón\":[\"spanish\"],\"peor\":[\"spanish\"],\"pepino\":[\"spanish\"],\"pequeño\":[\"spanish\"],\"pera\":[\"spanish\"],\"percha\":[\"spanish\"],\"perder\":[\"spanish\"],\"pereza\":[\"spanish\"],\"perfil\":[\"spanish\"],\"perico\":[\"spanish\"],\"perla\":[\"spanish\"],\"permiso\":[\"spanish\"],\"perro\":[\"spanish\"],\"persona\":[\"spanish\"],\"pesa\":[\"spanish\"],\"pesca\":[\"spanish\"],\"pésimo\":[\"spanish\"],\"pestaña\":[\"spanish\"],\"pétalo\":[\"spanish\"],\"petróleo\":[\"spanish\"],\"pez\":[\"spanish\"],\"pezuña\":[\"spanish\"],\"picar\":[\"spanish\"],\"pichón\":[\"spanish\"],\"pie\":[\"spanish\"],\"piedra\":[\"spanish\"],\"pierna\":[\"spanish\"],\"pieza\":[\"spanish\"],\"pijama\":[\"spanish\"],\"pilar\":[\"spanish\"],\"piloto\":[\"spanish\"],\"pimienta\":[\"spanish\"],\"pino\":[\"spanish\"],\"pintor\":[\"spanish\"],\"pinza\":[\"spanish\"],\"piña\":[\"spanish\"],\"piojo\":[\"spanish\"],\"pipa\":[\"spanish\"],\"pirata\":[\"spanish\"],\"pisar\":[\"spanish\"],\"piscina\":[\"spanish\"],\"piso\":[\"spanish\"],\"pista\":[\"spanish\"],\"pitón\":[\"spanish\"],\"pizca\":[\"spanish\"],\"placa\":[\"spanish\"],\"plan\":[\"spanish\"],\"plata\":[\"spanish\"],\"playa\":[\"spanish\"],\"plaza\":[\"spanish\"],\"pleito\":[\"spanish\"],\"pleno\":[\"spanish\"],\"plomo\":[\"spanish\"],\"pluma\":[\"spanish\"],\"plural\":[\"spanish\"],\"pobre\":[\"spanish\"],\"poco\":[\"spanish\"],\"poder\":[\"spanish\"],\"podio\":[\"spanish\"],\"poema\":[\"spanish\"],\"poesía\":[\"spanish\"],\"poeta\":[\"spanish\"],\"polen\":[\"spanish\",\"turkish\"],\"policía\":[\"spanish\"],\"pollo\":[\"spanish\"],\"polvo\":[\"spanish\"],\"pomada\":[\"spanish\"],\"pomelo\":[\"spanish\"],\"pomo\":[\"spanish\"],\"pompa\":[\"spanish\",\"turkish\"],\"poner\":[\"spanish\"],\"porción\":[\"spanish\"],\"portal\":[\"spanish\"],\"posada\":[\"spanish\"],\"poseer\":[\"spanish\"],\"posible\":[\"spanish\"],\"poste\":[\"spanish\"],\"potencia\":[\"spanish\"],\"potro\":[\"spanish\"],\"pozo\":[\"spanish\"],\"prado\":[\"spanish\"],\"precoz\":[\"spanish\"],\"pregunta\":[\"spanish\"],\"premio\":[\"spanish\"],\"prensa\":[\"spanish\"],\"preso\":[\"spanish\"],\"previo\":[\"spanish\"],\"primo\":[\"spanish\"],\"príncipe\":[\"spanish\"],\"prisión\":[\"spanish\"],\"privar\":[\"spanish\"],\"proa\":[\"spanish\"],\"probar\":[\"spanish\"],\"proceso\":[\"spanish\"],\"producto\":[\"spanish\"],\"proeza\":[\"spanish\"],\"profesor\":[\"spanish\"],\"programa\":[\"spanish\"],\"prole\":[\"spanish\"],\"promesa\":[\"spanish\"],\"pronto\":[\"spanish\"],\"propio\":[\"spanish\"],\"próximo\":[\"spanish\"],\"prueba\":[\"spanish\"],\"público\":[\"spanish\"],\"puchero\":[\"spanish\"],\"pudor\":[\"spanish\"],\"pueblo\":[\"spanish\"],\"puerta\":[\"spanish\"],\"puesto\":[\"spanish\"],\"pulga\":[\"spanish\"],\"pulir\":[\"spanish\"],\"pulmón\":[\"spanish\"],\"pulpo\":[\"spanish\"],\"pulso\":[\"spanish\"],\"puma\":[\"spanish\"],\"punto\":[\"spanish\"],\"puñal\":[\"spanish\"],\"puño\":[\"spanish\"],\"pupa\":[\"spanish\"],\"pupila\":[\"spanish\"],\"puré\":[\"spanish\"],\"quedar\":[\"spanish\"],\"queja\":[\"spanish\"],\"quemar\":[\"spanish\"],\"querer\":[\"spanish\"],\"queso\":[\"spanish\"],\"quieto\":[\"spanish\"],\"química\":[\"spanish\"],\"quince\":[\"spanish\"],\"quitar\":[\"spanish\"],\"rábano\":[\"spanish\"],\"rabia\":[\"spanish\"],\"rabo\":[\"spanish\"],\"ración\":[\"spanish\"],\"radical\":[\"spanish\"],\"raíz\":[\"spanish\"],\"rama\":[\"spanish\"],\"rampa\":[\"spanish\",\"turkish\"],\"rancho\":[\"spanish\"],\"rango\":[\"spanish\"],\"rapaz\":[\"spanish\"],\"rápido\":[\"spanish\"],\"rapto\":[\"spanish\"],\"rasgo\":[\"spanish\"],\"raspa\":[\"spanish\"],\"rato\":[\"spanish\"],\"rayo\":[\"spanish\"],\"raza\":[\"spanish\"],\"razón\":[\"spanish\"],\"reacción\":[\"spanish\"],\"realidad\":[\"spanish\"],\"rebaño\":[\"spanish\"],\"rebote\":[\"spanish\"],\"recaer\":[\"spanish\"],\"receta\":[\"spanish\"],\"rechazo\":[\"spanish\"],\"recoger\":[\"spanish\"],\"recreo\":[\"spanish\"],\"recto\":[\"spanish\"],\"recurso\":[\"spanish\"],\"red\":[\"spanish\"],\"redondo\":[\"spanish\"],\"reducir\":[\"spanish\"],\"reflejo\":[\"spanish\"],\"reforma\":[\"spanish\"],\"refrán\":[\"spanish\"],\"refugio\":[\"spanish\"],\"regalo\":[\"spanish\"],\"regir\":[\"spanish\"],\"regla\":[\"spanish\"],\"regreso\":[\"spanish\"],\"rehén\":[\"spanish\"],\"reino\":[\"spanish\"],\"reír\":[\"spanish\"],\"reja\":[\"spanish\"],\"relato\":[\"spanish\"],\"relevo\":[\"spanish\"],\"relieve\":[\"spanish\"],\"relleno\":[\"spanish\"],\"reloj\":[\"spanish\"],\"remar\":[\"spanish\"],\"remedio\":[\"spanish\"],\"remo\":[\"spanish\"],\"rencor\":[\"spanish\"],\"rendir\":[\"spanish\"],\"renta\":[\"spanish\"],\"reparto\":[\"spanish\"],\"repetir\":[\"spanish\"],\"reposo\":[\"spanish\"],\"reptil\":[\"spanish\"],\"res\":[\"spanish\"],\"rescate\":[\"spanish\"],\"resina\":[\"spanish\"],\"respeto\":[\"spanish\"],\"resto\":[\"spanish\"],\"resumen\":[\"spanish\"],\"retiro\":[\"spanish\"],\"retorno\":[\"spanish\"],\"retrato\":[\"spanish\"],\"reunir\":[\"spanish\"],\"revés\":[\"spanish\"],\"revista\":[\"spanish\"],\"rey\":[\"spanish\"],\"rezar\":[\"spanish\"],\"rico\":[\"spanish\"],\"riego\":[\"spanish\"],\"rienda\":[\"spanish\"],\"riesgo\":[\"spanish\"],\"rifa\":[\"spanish\"],\"rígido\":[\"spanish\"],\"rigor\":[\"spanish\"],\"rincón\":[\"spanish\"],\"riñón\":[\"spanish\"],\"río\":[\"spanish\"],\"riqueza\":[\"spanish\"],\"risa\":[\"spanish\"],\"ritmo\":[\"spanish\"],\"rito\":[\"spanish\"],\"rizo\":[\"spanish\"],\"roble\":[\"spanish\"],\"roce\":[\"spanish\"],\"rociar\":[\"spanish\"],\"rodar\":[\"spanish\"],\"rodeo\":[\"spanish\"],\"rodilla\":[\"spanish\"],\"roer\":[\"spanish\"],\"rojizo\":[\"spanish\"],\"rojo\":[\"spanish\"],\"romero\":[\"spanish\"],\"romper\":[\"spanish\"],\"ron\":[\"spanish\"],\"ronco\":[\"spanish\"],\"ronda\":[\"spanish\"],\"ropa\":[\"spanish\"],\"ropero\":[\"spanish\"],\"rosa\":[\"spanish\"],\"rosca\":[\"spanish\"],\"rostro\":[\"spanish\"],\"rotar\":[\"spanish\"],\"rubí\":[\"spanish\"],\"rubor\":[\"spanish\"],\"rudo\":[\"spanish\"],\"rueda\":[\"spanish\"],\"rugir\":[\"spanish\"],\"ruido\":[\"spanish\"],\"ruina\":[\"spanish\"],\"ruleta\":[\"spanish\"],\"rulo\":[\"spanish\",\"turkish\"],\"rumbo\":[\"spanish\"],\"rumor\":[\"spanish\"],\"ruptura\":[\"spanish\"],\"ruta\":[\"spanish\"],\"rutina\":[\"spanish\"],\"sábado\":[\"spanish\"],\"saber\":[\"spanish\"],\"sabio\":[\"spanish\"],\"sable\":[\"spanish\"],\"sacar\":[\"spanish\"],\"sagaz\":[\"spanish\"],\"sagrado\":[\"spanish\"],\"sala\":[\"spanish\"],\"saldo\":[\"spanish\"],\"salero\":[\"spanish\"],\"salir\":[\"spanish\"],\"salmón\":[\"spanish\"],\"salón\":[\"spanish\"],\"salsa\":[\"spanish\"],\"salto\":[\"spanish\"],\"salud\":[\"spanish\"],\"salvar\":[\"spanish\"],\"samba\":[\"spanish\"],\"sanción\":[\"spanish\"],\"sandía\":[\"spanish\"],\"sanear\":[\"spanish\"],\"sangre\":[\"spanish\"],\"sanidad\":[\"spanish\"],\"sano\":[\"spanish\"],\"santo\":[\"spanish\"],\"sapo\":[\"spanish\"],\"saque\":[\"spanish\"],\"sardina\":[\"spanish\"],\"sartén\":[\"spanish\"],\"sastre\":[\"spanish\"],\"satán\":[\"spanish\"],\"sauna\":[\"spanish\"],\"saxofón\":[\"spanish\"],\"sección\":[\"spanish\"],\"seco\":[\"spanish\"],\"secreto\":[\"spanish\"],\"secta\":[\"spanish\"],\"sed\":[\"spanish\"],\"seguir\":[\"spanish\"],\"seis\":[\"spanish\"],\"sello\":[\"spanish\"],\"selva\":[\"spanish\"],\"semana\":[\"spanish\"],\"semilla\":[\"spanish\"],\"senda\":[\"spanish\"],\"sensor\":[\"spanish\"],\"señal\":[\"spanish\"],\"señor\":[\"spanish\"],\"separar\":[\"spanish\"],\"sepia\":[\"spanish\"],\"sequía\":[\"spanish\"],\"ser\":[\"spanish\"],\"serie\":[\"spanish\"],\"sermón\":[\"spanish\"],\"servir\":[\"spanish\"],\"sesenta\":[\"spanish\"],\"sesión\":[\"spanish\"],\"seta\":[\"spanish\"],\"setenta\":[\"spanish\"],\"severo\":[\"spanish\"],\"sexo\":[\"spanish\"],\"sexto\":[\"spanish\"],\"sidra\":[\"spanish\"],\"siesta\":[\"spanish\"],\"siete\":[\"spanish\"],\"siglo\":[\"spanish\"],\"signo\":[\"spanish\"],\"sílaba\":[\"spanish\"],\"silbar\":[\"spanish\"],\"silencio\":[\"spanish\"],\"silla\":[\"spanish\"],\"símbolo\":[\"spanish\"],\"simio\":[\"spanish\"],\"sirena\":[\"spanish\"],\"sistema\":[\"spanish\"],\"sitio\":[\"spanish\"],\"situar\":[\"spanish\"],\"sobre\":[\"spanish\"],\"socio\":[\"spanish\"],\"sodio\":[\"spanish\"],\"sol\":[\"spanish\"],\"solapa\":[\"spanish\"],\"soldado\":[\"spanish\"],\"soledad\":[\"spanish\"],\"sólido\":[\"spanish\"],\"soltar\":[\"spanish\"],\"solución\":[\"spanish\"],\"sombra\":[\"spanish\"],\"sondeo\":[\"spanish\"],\"sonido\":[\"spanish\"],\"sonoro\":[\"spanish\"],\"sonrisa\":[\"spanish\"],\"sopa\":[\"spanish\"],\"soplar\":[\"spanish\"],\"soporte\":[\"spanish\"],\"sordo\":[\"spanish\"],\"sorpresa\":[\"spanish\"],\"sorteo\":[\"spanish\"],\"sostén\":[\"spanish\"],\"sótano\":[\"spanish\"],\"suave\":[\"spanish\"],\"subir\":[\"spanish\"],\"suceso\":[\"spanish\"],\"sudor\":[\"spanish\"],\"suegra\":[\"spanish\"],\"suelo\":[\"spanish\"],\"sueño\":[\"spanish\"],\"suerte\":[\"spanish\"],\"sufrir\":[\"spanish\"],\"sujeto\":[\"spanish\"],\"sultán\":[\"spanish\"],\"sumar\":[\"spanish\"],\"superar\":[\"spanish\"],\"suplir\":[\"spanish\"],\"suponer\":[\"spanish\"],\"supremo\":[\"spanish\"],\"sur\":[\"spanish\"],\"surco\":[\"spanish\"],\"sureño\":[\"spanish\"],\"surgir\":[\"spanish\"],\"susto\":[\"spanish\"],\"sutil\":[\"spanish\"],\"tabaco\":[\"spanish\"],\"tabique\":[\"spanish\"],\"tabla\":[\"spanish\"],\"tabú\":[\"spanish\"],\"taco\":[\"spanish\"],\"tacto\":[\"spanish\"],\"tajo\":[\"spanish\"],\"talar\":[\"spanish\"],\"talco\":[\"spanish\"],\"talento\":[\"spanish\"],\"talla\":[\"spanish\"],\"talón\":[\"spanish\"],\"tamaño\":[\"spanish\"],\"tambor\":[\"spanish\"],\"tango\":[\"spanish\"],\"tanque\":[\"spanish\"],\"tapa\":[\"spanish\"],\"tapete\":[\"spanish\"],\"tapia\":[\"spanish\"],\"tapón\":[\"spanish\"],\"taquilla\":[\"spanish\"],\"tarde\":[\"spanish\"],\"tarea\":[\"spanish\"],\"tarifa\":[\"spanish\"],\"tarjeta\":[\"spanish\"],\"tarot\":[\"spanish\"],\"tarro\":[\"spanish\"],\"tarta\":[\"spanish\"],\"tatuaje\":[\"spanish\"],\"tauro\":[\"spanish\"],\"taza\":[\"spanish\"],\"tazón\":[\"spanish\"],\"teatro\":[\"spanish\"],\"techo\":[\"spanish\"],\"tecla\":[\"spanish\"],\"técnica\":[\"spanish\"],\"tejado\":[\"spanish\"],\"tejer\":[\"spanish\"],\"tejido\":[\"spanish\"],\"tela\":[\"spanish\"],\"teléfono\":[\"spanish\"],\"tema\":[\"spanish\"],\"temor\":[\"spanish\"],\"templo\":[\"spanish\"],\"tenaz\":[\"spanish\"],\"tender\":[\"spanish\"],\"tener\":[\"spanish\"],\"tenis\":[\"spanish\"],\"tenso\":[\"spanish\"],\"teoría\":[\"spanish\"],\"terapia\":[\"spanish\"],\"terco\":[\"spanish\"],\"término\":[\"spanish\"],\"ternura\":[\"spanish\"],\"terror\":[\"spanish\"],\"tesis\":[\"spanish\"],\"tesoro\":[\"spanish\"],\"testigo\":[\"spanish\"],\"tetera\":[\"spanish\"],\"texto\":[\"spanish\"],\"tez\":[\"spanish\"],\"tibio\":[\"spanish\"],\"tiburón\":[\"spanish\"],\"tiempo\":[\"spanish\"],\"tienda\":[\"spanish\"],\"tierra\":[\"spanish\"],\"tieso\":[\"spanish\"],\"tigre\":[\"spanish\"],\"tijera\":[\"spanish\"],\"tilde\":[\"spanish\"],\"timbre\":[\"spanish\"],\"tímido\":[\"spanish\"],\"timo\":[\"spanish\"],\"tinta\":[\"spanish\"],\"tío\":[\"spanish\"],\"típico\":[\"spanish\"],\"tipo\":[\"spanish\"],\"tira\":[\"spanish\"],\"tirón\":[\"spanish\"],\"titán\":[\"spanish\"],\"títere\":[\"spanish\"],\"título\":[\"spanish\"],\"tiza\":[\"spanish\"],\"toalla\":[\"spanish\"],\"tobillo\":[\"spanish\"],\"tocar\":[\"spanish\"],\"tocino\":[\"spanish\"],\"todo\":[\"spanish\"],\"toga\":[\"spanish\"],\"toldo\":[\"spanish\"],\"tomar\":[\"spanish\",\"turkish\"],\"tono\":[\"spanish\"],\"tonto\":[\"spanish\"],\"topar\":[\"spanish\"],\"tope\":[\"spanish\"],\"toque\":[\"spanish\"],\"tórax\":[\"spanish\"],\"torero\":[\"spanish\"],\"tormenta\":[\"spanish\"],\"torneo\":[\"spanish\"],\"toro\":[\"spanish\"],\"torpedo\":[\"spanish\"],\"torre\":[\"spanish\"],\"torso\":[\"spanish\"],\"tortuga\":[\"spanish\"],\"tos\":[\"spanish\"],\"tosco\":[\"spanish\"],\"toser\":[\"spanish\"],\"tóxico\":[\"spanish\"],\"trabajo\":[\"spanish\"],\"tractor\":[\"spanish\"],\"traer\":[\"spanish\"],\"tráfico\":[\"spanish\"],\"trago\":[\"spanish\"],\"traje\":[\"spanish\"],\"tramo\":[\"spanish\"],\"trance\":[\"spanish\"],\"trato\":[\"spanish\"],\"trauma\":[\"spanish\"],\"trazar\":[\"spanish\"],\"trébol\":[\"spanish\"],\"tregua\":[\"spanish\"],\"treinta\":[\"spanish\"],\"tren\":[\"spanish\"],\"trepar\":[\"spanish\"],\"tres\":[\"spanish\"],\"tribu\":[\"spanish\"],\"trigo\":[\"spanish\"],\"tripa\":[\"spanish\"],\"triste\":[\"spanish\"],\"triunfo\":[\"spanish\"],\"trofeo\":[\"spanish\"],\"trompa\":[\"spanish\"],\"tronco\":[\"spanish\"],\"tropa\":[\"spanish\"],\"trote\":[\"spanish\"],\"trozo\":[\"spanish\"],\"truco\":[\"spanish\"],\"trueno\":[\"spanish\"],\"trufa\":[\"spanish\"],\"tubería\":[\"spanish\"],\"tubo\":[\"spanish\"],\"tuerto\":[\"spanish\"],\"tumba\":[\"spanish\"],\"tumor\":[\"spanish\"],\"túnel\":[\"spanish\"],\"túnica\":[\"spanish\"],\"turbina\":[\"spanish\"],\"turismo\":[\"spanish\"],\"turno\":[\"spanish\"],\"tutor\":[\"spanish\"],\"ubicar\":[\"spanish\"],\"úlcera\":[\"spanish\"],\"umbral\":[\"spanish\"],\"unidad\":[\"spanish\"],\"unir\":[\"spanish\"],\"universo\":[\"spanish\"],\"uno\":[\"spanish\"],\"untar\":[\"spanish\"],\"uña\":[\"spanish\"],\"urbano\":[\"spanish\"],\"urbe\":[\"spanish\"],\"urgente\":[\"spanish\"],\"urna\":[\"spanish\"],\"usar\":[\"spanish\"],\"usuario\":[\"spanish\"],\"útil\":[\"spanish\"],\"utopía\":[\"spanish\"],\"uva\":[\"spanish\"],\"vaca\":[\"spanish\"],\"vacío\":[\"spanish\"],\"vacuna\":[\"spanish\"],\"vagar\":[\"spanish\"],\"vago\":[\"spanish\"],\"vaina\":[\"spanish\"],\"vajilla\":[\"spanish\"],\"vale\":[\"spanish\"],\"válido\":[\"spanish\"],\"valle\":[\"spanish\"],\"valor\":[\"spanish\"],\"válvula\":[\"spanish\"],\"vampiro\":[\"spanish\"],\"vara\":[\"spanish\"],\"variar\":[\"spanish\"],\"varón\":[\"spanish\"],\"vaso\":[\"spanish\"],\"vecino\":[\"spanish\"],\"vector\":[\"spanish\"],\"vehículo\":[\"spanish\"],\"veinte\":[\"spanish\"],\"vejez\":[\"spanish\"],\"vela\":[\"spanish\"],\"velero\":[\"spanish\"],\"veloz\":[\"spanish\"],\"vena\":[\"spanish\"],\"vencer\":[\"spanish\"],\"venda\":[\"spanish\"],\"veneno\":[\"spanish\"],\"vengar\":[\"spanish\"],\"venir\":[\"spanish\"],\"venta\":[\"spanish\"],\"venus\":[\"spanish\"],\"ver\":[\"spanish\"],\"verano\":[\"spanish\"],\"verbo\":[\"spanish\"],\"verde\":[\"spanish\"],\"vereda\":[\"spanish\"],\"verja\":[\"spanish\"],\"verso\":[\"spanish\"],\"verter\":[\"spanish\"],\"vía\":[\"spanish\"],\"viaje\":[\"spanish\"],\"vibrar\":[\"spanish\"],\"vicio\":[\"spanish\"],\"víctima\":[\"spanish\"],\"vida\":[\"spanish\"],\"vídeo\":[\"spanish\"],\"vidrio\":[\"spanish\"],\"viejo\":[\"spanish\"],\"viernes\":[\"spanish\"],\"vigor\":[\"spanish\"],\"vil\":[\"spanish\"],\"villa\":[\"spanish\"],\"vinagre\":[\"spanish\"],\"vino\":[\"spanish\"],\"viñedo\":[\"spanish\"],\"violín\":[\"spanish\"],\"viral\":[\"spanish\"],\"virgo\":[\"spanish\"],\"virtud\":[\"spanish\"],\"visor\":[\"spanish\"],\"víspera\":[\"spanish\"],\"vista\":[\"spanish\"],\"vitamina\":[\"spanish\"],\"viudo\":[\"spanish\"],\"vivaz\":[\"spanish\"],\"vivero\":[\"spanish\"],\"vivir\":[\"spanish\"],\"vivo\":[\"spanish\"],\"volcán\":[\"spanish\"],\"volumen\":[\"spanish\"],\"volver\":[\"spanish\"],\"voraz\":[\"spanish\"],\"votar\":[\"spanish\"],\"voto\":[\"spanish\"],\"voz\":[\"spanish\"],\"vuelo\":[\"spanish\"],\"vulgar\":[\"spanish\"],\"yacer\":[\"spanish\"],\"yate\":[\"spanish\"],\"yegua\":[\"spanish\"],\"yema\":[\"spanish\"],\"yerno\":[\"spanish\"],\"yeso\":[\"spanish\"],\"yodo\":[\"spanish\"],\"yoga\":[\"spanish\"],\"yogur\":[\"spanish\"],\"zafiro\":[\"spanish\"],\"zanja\":[\"spanish\"],\"zapato\":[\"spanish\"],\"zarza\":[\"spanish\"],\"zona\":[\"spanish\"],\"zorro\":[\"spanish\"],\"zumo\":[\"spanish\"],\"zurdo\":[\"spanish\"],\"abajur\":[\"turkish\"],\"abaküs\":[\"turkish\"],\"abartı\":[\"turkish\"],\"abdal\":[\"turkish\"],\"abdest\":[\"turkish\"],\"abiye\":[\"turkish\"],\"abluka\":[\"turkish\"],\"abone\":[\"turkish\"],\"absorbe\":[\"turkish\"],\"absürt\":[\"turkish\"],\"acayip\":[\"turkish\"],\"acele\":[\"turkish\"],\"acemi\":[\"turkish\"],\"açıkgöz\":[\"turkish\"],\"adalet\":[\"turkish\"],\"adam\":[\"turkish\"],\"adezyon\":[\"turkish\"],\"adisyon\":[\"turkish\"],\"adliye\":[\"turkish\"],\"adres\":[\"turkish\"],\"afacan\":[\"turkish\"],\"afili\":[\"turkish\"],\"afiş\":[\"turkish\"],\"afiyet\":[\"turkish\"],\"aforizm\":[\"turkish\"],\"afra\":[\"turkish\"],\"ağaç\":[\"turkish\"],\"ağır\":[\"turkish\"],\"ahbap\":[\"turkish\"],\"ahkam\":[\"turkish\"],\"ahlak\":[\"turkish\"],\"ahtapot\":[\"turkish\"],\"aidat\":[\"turkish\"],\"aile\":[\"turkish\"],\"ajan\":[\"turkish\"],\"akademi\":[\"turkish\"],\"akarsu\":[\"turkish\"],\"akbaş\":[\"turkish\"],\"akciğer\":[\"turkish\"],\"akdeniz\":[\"turkish\"],\"akıbet\":[\"turkish\"],\"akıl\":[\"turkish\"],\"akıntı\":[\"turkish\"],\"akide\":[\"turkish\"],\"akrep\":[\"turkish\"],\"akrobasi\":[\"turkish\"],\"aksiyon\":[\"turkish\"],\"akşam\":[\"turkish\"],\"aktif\":[\"turkish\"],\"aktör\":[\"turkish\"],\"aktris\":[\"turkish\"],\"akustik\":[\"turkish\"],\"alaca\":[\"turkish\"],\"albüm\":[\"turkish\"],\"alçak\":[\"turkish\"],\"aldanma\":[\"turkish\"],\"aleni\":[\"turkish\"],\"alet\":[\"turkish\"],\"alfabe\":[\"turkish\"],\"algılama\":[\"turkish\"],\"alıngan\":[\"turkish\"],\"alkış\":[\"turkish\"],\"alkol\":[\"turkish\"],\"alpay\":[\"turkish\"],\"alperen\":[\"turkish\"],\"altın\":[\"turkish\"],\"altüst\":[\"turkish\"],\"altyapı\":[\"turkish\"],\"alyuvar\":[\"turkish\"],\"amade\":[\"turkish\"],\"amatör\":[\"turkish\"],\"amazon\":[\"turkish\"],\"ambalaj\":[\"turkish\"],\"amblem\":[\"turkish\"],\"ambulans\":[\"turkish\"],\"amca\":[\"turkish\"],\"amel\":[\"turkish\"],\"amir\":[\"turkish\"],\"amiyane\":[\"turkish\"],\"amorti\":[\"turkish\"],\"ampul\":[\"turkish\"],\"anadolu\":[\"turkish\"],\"anahtar\":[\"turkish\"],\"anakonda\":[\"turkish\"],\"anaokul\":[\"turkish\"],\"anapara\":[\"turkish\"],\"anarşi\":[\"turkish\"],\"anatomi\":[\"turkish\"],\"anayasa\":[\"turkish\"],\"anekdot\":[\"turkish\"],\"anestezi\":[\"turkish\"],\"angaje\":[\"turkish\"],\"anka\":[\"turkish\"],\"anket\":[\"turkish\"],\"anlamlı\":[\"turkish\"],\"anne\":[\"turkish\"],\"anomali\":[\"turkish\"],\"anonim\":[\"turkish\"],\"anten\":[\"turkish\"],\"antlaşma\":[\"turkish\"],\"apse\":[\"turkish\"],\"araba\":[\"turkish\"],\"aracı\":[\"turkish\"],\"araf\":[\"turkish\"],\"arbede\":[\"turkish\"],\"arda\":[\"turkish\"],\"arefe\":[\"turkish\"],\"argo\":[\"turkish\"],\"argüman\":[\"turkish\"],\"arkadaş\":[\"turkish\"],\"armoni\":[\"turkish\"],\"arsa\":[\"turkish\"],\"arsız\":[\"turkish\"],\"artı\":[\"turkish\"],\"aruz\":[\"turkish\"],\"asansör\":[\"turkish\"],\"asayiş\":[\"turkish\"],\"asgari\":[\"turkish\"],\"asil\":[\"turkish\"],\"asker\":[\"turkish\"],\"askı\":[\"turkish\"],\"aslan\":[\"turkish\"],\"asosyal\":[\"turkish\"],\"astsubay\":[\"turkish\"],\"asya\":[\"turkish\"],\"aşçı\":[\"turkish\"],\"aşırı\":[\"turkish\"],\"aşure\":[\"turkish\"],\"atabey\":[\"turkish\"],\"ataman\":[\"turkish\"],\"ateş\":[\"turkish\"],\"atmaca\":[\"turkish\"],\"atmosfer\":[\"turkish\"],\"atölye\":[\"turkish\"],\"avcı\":[\"turkish\"],\"avdet\":[\"turkish\"],\"avize\":[\"turkish\"],\"avlu\":[\"turkish\"],\"avokado\":[\"turkish\"],\"avrupa\":[\"turkish\"],\"avukat\":[\"turkish\"],\"ayaz\":[\"turkish\"],\"ayçiçeği\":[\"turkish\"],\"aydın\":[\"turkish\"],\"aygıt\":[\"turkish\"],\"ayna\":[\"turkish\"],\"ayran\":[\"turkish\"],\"ayrıntı\":[\"turkish\"],\"azim\":[\"turkish\"],\"baca\":[\"turkish\"],\"bagaj\":[\"turkish\"],\"bağlantı\":[\"turkish\"],\"bahadır\":[\"turkish\"],\"bahçe\":[\"turkish\"],\"baki\":[\"turkish\"],\"bakkal\":[\"turkish\"],\"baklava\":[\"turkish\"],\"bakteri\":[\"turkish\"],\"balçık\":[\"turkish\"],\"balina\":[\"turkish\"],\"balo\":[\"turkish\"],\"balta\":[\"turkish\"],\"bant\":[\"turkish\"],\"banyo\":[\"turkish\"],\"bardak\":[\"turkish\"],\"barış\":[\"turkish\"],\"başbuğ\":[\"turkish\"],\"başıboş\":[\"turkish\"],\"başkan\":[\"turkish\"],\"başlık\":[\"turkish\"],\"bavul\":[\"turkish\"],\"bayındır\":[\"turkish\"],\"baykuş\":[\"turkish\"],\"bazlama\":[\"turkish\"],\"bedel\":[\"turkish\"],\"begüm\":[\"turkish\"],\"bekçi\":[\"turkish\"],\"bekle\":[\"turkish\"],\"belge\":[\"turkish\"],\"belki\":[\"turkish\"],\"bencil\":[\"turkish\"],\"benek\":[\"turkish\"],\"bengi\":[\"turkish\"],\"berjer\":[\"turkish\"],\"berk\":[\"turkish\"],\"berrak\":[\"turkish\"],\"beşik\":[\"turkish\"],\"beyin\":[\"turkish\"],\"beyoğlu\":[\"turkish\"],\"bıçak\":[\"turkish\"],\"biberiye\":[\"turkish\"],\"bidon\":[\"turkish\"],\"bihaber\":[\"turkish\"],\"bikini\":[\"turkish\"],\"bilezik\":[\"turkish\"],\"bilinç\":[\"turkish\"],\"bilye\":[\"turkish\"],\"bina\":[\"turkish\"],\"binbaşı\":[\"turkish\"],\"binyıl\":[\"turkish\"],\"bisiklet\":[\"turkish\"],\"bisküvi\":[\"turkish\"],\"bitki\":[\"turkish\"],\"bizzat\":[\"turkish\"],\"bodrum\":[\"turkish\"],\"boğaz\":[\"turkish\"],\"bohça\":[\"turkish\"],\"boncuk\":[\"turkish\"],\"bonfile\":[\"turkish\"],\"borsa\":[\"turkish\"],\"boru\":[\"turkish\"],\"bostan\":[\"turkish\"],\"boşboğaz\":[\"turkish\"],\"botanik\":[\"turkish\"],\"boya\":[\"turkish\"],\"boykot\":[\"turkish\"],\"boynuz\":[\"turkish\"],\"bozgun\":[\"turkish\"],\"bozkır\":[\"turkish\"],\"bölüm\":[\"turkish\"],\"börek\":[\"turkish\"],\"buçuk\":[\"turkish\"],\"bugün\":[\"turkish\"],\"buğday\":[\"turkish\"],\"buhar\":[\"turkish\"],\"buhran\":[\"turkish\"],\"bulvar\":[\"turkish\"],\"buram\":[\"turkish\"],\"burçak\":[\"turkish\"],\"burs\":[\"turkish\"],\"burun\":[\"turkish\"],\"buzdağı\":[\"turkish\"],\"buzkıran\":[\"turkish\"],\"bücür\":[\"turkish\"],\"büfe\":[\"turkish\"],\"bülten\":[\"turkish\"],\"bütçe\":[\"turkish\"],\"bütün\":[\"turkish\"],\"büyük\":[\"turkish\"],\"cacık\":[\"turkish\"],\"cadı\":[\"turkish\"],\"cahil\":[\"turkish\"],\"cambaz\":[\"turkish\"],\"canhıraş\":[\"turkish\"],\"casus\":[\"turkish\"],\"cazibe\":[\"turkish\"],\"cehalet\":[\"turkish\"],\"cehennem\":[\"turkish\"],\"ceket\":[\"turkish\"],\"cemre\":[\"turkish\"],\"cenin\":[\"turkish\"],\"cennet\":[\"turkish\"],\"cepken\":[\"turkish\"],\"cerrah\":[\"turkish\"],\"cesur\":[\"turkish\"],\"cetvel\":[\"turkish\"],\"cevher\":[\"turkish\"],\"ceylan\":[\"turkish\"],\"cılız\":[\"turkish\"],\"cıva\":[\"turkish\"],\"cilt\":[\"turkish\"],\"cisim\":[\"turkish\"],\"ciyak\":[\"turkish\"],\"coğrafya\":[\"turkish\"],\"cömert\":[\"turkish\"],\"cumba\":[\"turkish\"],\"cüzdan\":[\"turkish\"],\"çabucak\":[\"turkish\"],\"çadır\":[\"turkish\"],\"çağdaş\":[\"turkish\"],\"çağlayan\":[\"turkish\"],\"çağrı\":[\"turkish\"],\"çakmak\":[\"turkish\"],\"çalışkan\":[\"turkish\"],\"çamaşır\":[\"turkish\"],\"çapa\":[\"turkish\"],\"çaput\":[\"turkish\"],\"çarık\":[\"turkish\"],\"çarpan\":[\"turkish\"],\"çarşaf\":[\"turkish\"],\"çayhane\":[\"turkish\"],\"çekirdek\":[\"turkish\"],\"çelebi\":[\"turkish\"],\"çember\":[\"turkish\"],\"çenet\":[\"turkish\"],\"çengel\":[\"turkish\"],\"çerçeve\":[\"turkish\"],\"çerez\":[\"turkish\"],\"çeşit\":[\"turkish\"],\"çeşme\":[\"turkish\"],\"çete\":[\"turkish\"],\"çevre\":[\"turkish\"],\"çeyiz\":[\"turkish\"],\"çeyrek\":[\"turkish\"],\"çığır\":[\"turkish\"],\"çılgın\":[\"turkish\"],\"çıngırak\":[\"turkish\"],\"çift\":[\"turkish\"],\"çiğdem\":[\"turkish\"],\"çikolata\":[\"turkish\"],\"çilek\":[\"turkish\"],\"çimen\":[\"turkish\"],\"çivi\":[\"turkish\"],\"çoban\":[\"turkish\"],\"çocuk\":[\"turkish\"],\"çokgen\":[\"turkish\"],\"çomak\":[\"turkish\"],\"çorba\":[\"turkish\"],\"çözelti\":[\"turkish\"],\"çubuk\":[\"turkish\"],\"çukur\":[\"turkish\"],\"çuval\":[\"turkish\"],\"çürük\":[\"turkish\"],\"dağbaşı\":[\"turkish\"],\"dağılım\":[\"turkish\"],\"daktilo\":[\"turkish\"],\"daldırış\":[\"turkish\"],\"dalga\":[\"turkish\"],\"dalkavuk\":[\"turkish\"],\"damak\":[\"turkish\"],\"damıtma\":[\"turkish\"],\"damla\":[\"turkish\"],\"dana\":[\"turkish\"],\"dandik\":[\"turkish\"],\"danışman\":[\"turkish\"],\"daniska\":[\"turkish\"],\"dantel\":[\"turkish\"],\"dargeçit\":[\"turkish\"],\"darphane\":[\"turkish\"],\"davet\":[\"turkish\"],\"dayı\":[\"turkish\"],\"defter\":[\"turkish\"],\"değer\":[\"turkish\"],\"değirmen\":[\"turkish\"],\"dehşet\":[\"turkish\"],\"delgeç\":[\"turkish\"],\"demir\":[\"turkish\"],\"deneyim\":[\"turkish\"],\"denge\":[\"turkish\"],\"depo\":[\"turkish\"],\"deprem\":[\"turkish\"],\"derdest\":[\"turkish\"],\"dere\":[\"turkish\"],\"derhal\":[\"turkish\"],\"derman\":[\"turkish\"],\"dernek\":[\"turkish\"],\"derviş\":[\"turkish\"],\"desen\":[\"turkish\"],\"destan\":[\"turkish\"],\"dışarı\":[\"turkish\"],\"dışbükey\":[\"turkish\"],\"dijital\":[\"turkish\"],\"dikbaşlı\":[\"turkish\"],\"dilekçe\":[\"turkish\"],\"dimağ\":[\"turkish\"],\"dinamik\":[\"turkish\"],\"dindar\":[\"turkish\"],\"dinleme\":[\"turkish\"],\"dinozor\":[\"turkish\"],\"dipçik\":[\"turkish\"],\"dipnot\":[\"turkish\"],\"direniş\":[\"turkish\"],\"dirsek\":[\"turkish\"],\"disiplin\":[\"turkish\"],\"divriği\":[\"turkish\"],\"dizüstü\":[\"turkish\"],\"dobra\":[\"turkish\"],\"dodurga\":[\"turkish\"],\"doğalgaz\":[\"turkish\"],\"doküman\":[\"turkish\"],\"dolap\":[\"turkish\"],\"donanım\":[\"turkish\"],\"dondurma\":[\"turkish\"],\"donör\":[\"turkish\"],\"doruk\":[\"turkish\"],\"dosdoğru\":[\"turkish\"],\"dost\":[\"turkish\"],\"dosya\":[\"turkish\"],\"dozer\":[\"turkish\"],\"döküm\":[\"turkish\"],\"dönence\":[\"turkish\"],\"dörtyol\":[\"turkish\"],\"dövme\":[\"turkish\"],\"dram\":[\"turkish\"],\"dublaj\":[\"turkish\"],\"durum\":[\"turkish\"],\"duvak\":[\"turkish\"],\"duyarga\":[\"turkish\"],\"duyma\":[\"turkish\"],\"duyuru\":[\"turkish\"],\"düğme\":[\"turkish\"],\"düğüm\":[\"turkish\"],\"dükkan\":[\"turkish\"],\"dünür\":[\"turkish\"],\"düpedüz\":[\"turkish\"],\"dürbün\":[\"turkish\"],\"düşünür\":[\"turkish\"],\"düzayak\":[\"turkish\"],\"düzeltme\":[\"turkish\"],\"ebeveyn\":[\"turkish\"],\"ebru\":[\"turkish\"],\"ecel\":[\"turkish\"],\"ecnebi\":[\"turkish\"],\"ecza\":[\"turkish\"],\"edat\":[\"turkish\"],\"edilgen\":[\"turkish\"],\"efendi\":[\"turkish\"],\"efor\":[\"turkish\"],\"efsane\":[\"turkish\"],\"egemen\":[\"turkish\"],\"egzersiz\":[\"turkish\"],\"eğrelti\":[\"turkish\"],\"ekarte\":[\"turkish\"],\"ekip\":[\"turkish\"],\"eklem\":[\"turkish\"],\"ekmek\":[\"turkish\"],\"ekol\":[\"turkish\"],\"ekonomi\":[\"turkish\"],\"ekose\":[\"turkish\"],\"ekran\":[\"turkish\"],\"ekvator\":[\"turkish\"],\"elaman\":[\"turkish\"],\"elastik\":[\"turkish\"],\"elbet\":[\"turkish\"],\"elbise\":[\"turkish\"],\"elçi\":[\"turkish\"],\"eldiven\":[\"turkish\"],\"elebaşı\":[\"turkish\"],\"eleştiri\":[\"turkish\"],\"elma\":[\"turkish\"],\"eloğlu\":[\"turkish\"],\"elveda\":[\"turkish\"],\"emare\":[\"turkish\"],\"emekçi\":[\"turkish\"],\"emisyon\":[\"turkish\"],\"emniyet\":[\"turkish\"],\"empati\":[\"turkish\"],\"emsal\":[\"turkish\"],\"emzik\":[\"turkish\"],\"endüstri\":[\"turkish\"],\"enerji\":[\"turkish\"],\"engebe\":[\"turkish\"],\"enişte\":[\"turkish\"],\"enkaz\":[\"turkish\"],\"entari\":[\"turkish\"],\"entegre\":[\"turkish\"],\"entrika\":[\"turkish\"],\"enzim\":[\"turkish\"],\"erdem\":[\"turkish\"],\"ergen\":[\"turkish\"],\"erguvan\":[\"turkish\"],\"erkek\":[\"turkish\"],\"erozyon\":[\"turkish\"],\"ertesi\":[\"turkish\"],\"erzak\":[\"turkish\"],\"esaret\":[\"turkish\"],\"esenlik\":[\"turkish\"],\"eser\":[\"turkish\"],\"eski\":[\"turkish\"],\"esnek\":[\"turkish\"],\"eşarp\":[\"turkish\"],\"eşofman\":[\"turkish\"],\"eşraf\":[\"turkish\"],\"eşya\":[\"turkish\"],\"eşzaman\":[\"turkish\"],\"etik\":[\"turkish\"],\"etken\":[\"turkish\"],\"etkinlik\":[\"turkish\"],\"etüt\":[\"turkish\"],\"evet\":[\"turkish\"],\"evire\":[\"turkish\"],\"evrak\":[\"turkish\"],\"evrim\":[\"turkish\"],\"eyalet\":[\"turkish\"],\"eyvah\":[\"turkish\"],\"ezber\":[\"turkish\"],\"fabrika\":[\"turkish\"],\"fanus\":[\"turkish\"],\"fason\":[\"turkish\"],\"fasulye\":[\"turkish\"],\"fatih\":[\"turkish\"],\"fatura\":[\"turkish\"],\"fayans\":[\"turkish\"],\"fayton\":[\"turkish\"],\"fazıl\":[\"turkish\"],\"fazilet\":[\"turkish\"],\"felsefe\":[\"turkish\"],\"fener\":[\"turkish\"],\"feribot\":[\"turkish\"],\"fersah\":[\"turkish\"],\"fesih\":[\"turkish\"],\"feveran\":[\"turkish\"],\"feza\":[\"turkish\"],\"fıçı\":[\"turkish\"],\"fıldır\":[\"turkish\"],\"fındık\":[\"turkish\"],\"fırça\":[\"turkish\"],\"fırsat\":[\"turkish\"],\"fırtına\":[\"turkish\"],\"fıtık\":[\"turkish\"],\"fidan\":[\"turkish\"],\"fidye\":[\"turkish\"],\"figür\":[\"turkish\"],\"fihrist\":[\"turkish\"],\"fikir\":[\"turkish\"],\"fildişi\":[\"turkish\"],\"filtre\":[\"turkish\"],\"fincan\":[\"turkish\"],\"firuze\":[\"turkish\"],\"fitil\":[\"turkish\"],\"fiyaka\":[\"turkish\"],\"fizik\":[\"turkish\"],\"flaş\":[\"turkish\"],\"flüt\":[\"turkish\"],\"fosil\":[\"turkish\"],\"fren\":[\"turkish\"],\"fukara\":[\"turkish\"],\"futbol\":[\"turkish\"],\"garabet\":[\"turkish\"],\"gariban\":[\"turkish\"],\"garnitür\":[\"turkish\"],\"gazi\":[\"turkish\"],\"gece\":[\"turkish\"],\"gedik\":[\"turkish\"],\"gelenek\":[\"turkish\"],\"gelin\":[\"turkish\"],\"gemi\":[\"turkish\"],\"genç\":[\"turkish\"],\"geniş\":[\"turkish\"],\"geometri\":[\"turkish\"],\"gerçek\":[\"turkish\"],\"gevrek\":[\"turkish\"],\"gezegen\":[\"turkish\"],\"gezgin\":[\"turkish\"],\"geziyolu\":[\"turkish\"],\"gıcık\":[\"turkish\"],\"gıda\":[\"turkish\"],\"gıybet\":[\"turkish\"],\"girdap\":[\"turkish\"],\"girişim\":[\"turkish\"],\"gitar\":[\"turkish\"],\"giyecek\":[\"turkish\"],\"giysi\":[\"turkish\"],\"gizem\":[\"turkish\"],\"gofret\":[\"turkish\"],\"goril\":[\"turkish\"],\"göbek\":[\"turkish\"],\"göçebe\":[\"turkish\"],\"göğüs\":[\"turkish\"],\"gökdelen\":[\"turkish\"],\"gökmen\":[\"turkish\"],\"gökyüzü\":[\"turkish\"],\"gölge\":[\"turkish\"],\"gömlek\":[\"turkish\"],\"gönül\":[\"turkish\"],\"görenek\":[\"turkish\"],\"görkemli\":[\"turkish\"],\"görsel\":[\"turkish\"],\"gösteri\":[\"turkish\"],\"gövde\":[\"turkish\"],\"gözaltı\":[\"turkish\"],\"gözcü\":[\"turkish\"],\"gözdağı\":[\"turkish\"],\"gözleme\":[\"turkish\"],\"gözyaşı\":[\"turkish\"],\"grup\":[\"turkish\"],\"gurbet\":[\"turkish\"],\"gusül\":[\"turkish\"],\"gübre\":[\"turkish\"],\"güfte\":[\"turkish\"],\"gümüş\":[\"turkish\"],\"günaydın\":[\"turkish\"],\"güncel\":[\"turkish\"],\"gündüz\":[\"turkish\"],\"güneş\":[\"turkish\"],\"günyüzü\":[\"turkish\"],\"gürbüz\":[\"turkish\"],\"güvercin\":[\"turkish\"],\"güzel\":[\"turkish\"],\"hacamat\":[\"turkish\"],\"hacim\":[\"turkish\"],\"hademe\":[\"turkish\"],\"hafız\":[\"turkish\"],\"hafriyat\":[\"turkish\"],\"hafta\":[\"turkish\"],\"hakan\":[\"turkish\"],\"hakem\":[\"turkish\"],\"hakikat\":[\"turkish\"],\"haksever\":[\"turkish\"],\"halı\":[\"turkish\"],\"hançer\":[\"turkish\"],\"hane\":[\"turkish\"],\"hapis\":[\"turkish\"],\"hapşırık\":[\"turkish\"],\"harf\":[\"turkish\"],\"haseki\":[\"turkish\"],\"hasret\":[\"turkish\"],\"hatun\":[\"turkish\"],\"havuç\":[\"turkish\"],\"haylaz\":[\"turkish\"],\"haysiyet\":[\"turkish\"],\"hayvan\":[\"turkish\"],\"hedef\":[\"turkish\"],\"hemen\":[\"turkish\"],\"hemfikir\":[\"turkish\"],\"hendek\":[\"turkish\"],\"hepsi\":[\"turkish\"],\"hergele\":[\"turkish\"],\"herhangi\":[\"turkish\"],\"hesap\":[\"turkish\"],\"heyecan\":[\"turkish\"],\"heykel\":[\"turkish\"],\"hezimet\":[\"turkish\"],\"hıçkırık\":[\"turkish\"],\"hızölçer\":[\"turkish\"],\"hicviye\":[\"turkish\"],\"hikaye\":[\"turkish\"],\"hikmet\":[\"turkish\"],\"hile\":[\"turkish\"],\"hisse\":[\"turkish\"],\"hobi\":[\"turkish\"],\"hoca\":[\"turkish\"],\"horlama\":[\"turkish\"],\"hoşbeş\":[\"turkish\"],\"hoşgörü\":[\"turkish\"],\"hoyrat\":[\"turkish\"],\"hörgüç\":[\"turkish\"],\"höyük\":[\"turkish\"],\"hudut\":[\"turkish\"],\"hukuk\":[\"turkish\"],\"hunhar\":[\"turkish\"],\"hurda\":[\"turkish\"],\"huysuz\":[\"turkish\"],\"huzur\":[\"turkish\"],\"hücum\":[\"turkish\"],\"hükümet\":[\"turkish\"],\"hünkar\":[\"turkish\"],\"hüviyet\":[\"turkish\"],\"ırmak\":[\"turkish\"],\"ısıölçer\":[\"turkish\"],\"ısıtıcı\":[\"turkish\"],\"ıspanak\":[\"turkish\"],\"ısrar\":[\"turkish\"],\"ışıldak\":[\"turkish\"],\"ızdırap\":[\"turkish\"],\"ızgara\":[\"turkish\"],\"ibadet\":[\"turkish\"],\"icat\":[\"turkish\"],\"içbükey\":[\"turkish\"],\"içecek\":[\"turkish\"],\"içgüdü\":[\"turkish\"],\"içsel\":[\"turkish\"],\"idman\":[\"turkish\"],\"iftihar\":[\"turkish\"],\"iğne\":[\"turkish\"],\"ihanet\":[\"turkish\"],\"ihbar\":[\"turkish\"],\"ihdas\":[\"turkish\"],\"ihmal\":[\"turkish\"],\"ihracat\":[\"turkish\"],\"ihsan\":[\"turkish\"],\"ikilem\":[\"turkish\"],\"ikindi\":[\"turkish\"],\"ikircik\":[\"turkish\"],\"iklim\":[\"turkish\"],\"iksir\":[\"turkish\"],\"iktibas\":[\"turkish\"],\"ilaç\":[\"turkish\"],\"ilçe\":[\"turkish\"],\"ileri\":[\"turkish\"],\"iletişim\":[\"turkish\"],\"ilgi\":[\"turkish\"],\"ilhak\":[\"turkish\"],\"ilkbahar\":[\"turkish\"],\"ilkokul\":[\"turkish\"],\"ilmek\":[\"turkish\"],\"imkan\":[\"turkish\"],\"imleç\":[\"turkish\"],\"imsak\":[\"turkish\"],\"imtihan\":[\"turkish\"],\"imza\":[\"turkish\"],\"ince\":[\"turkish\"],\"inkar\":[\"turkish\"],\"inşa\":[\"turkish\"],\"ipek\":[\"turkish\"],\"ipucu\":[\"turkish\"],\"irade\":[\"turkish\"],\"irfan\":[\"turkish\"],\"irmik\":[\"turkish\"],\"isabet\":[\"turkish\"],\"iskele\":[\"turkish\"],\"israf\":[\"turkish\"],\"isyan\":[\"turkish\"],\"işçi\":[\"turkish\"],\"işgal\":[\"turkish\"],\"işgüzar\":[\"turkish\"],\"işlem\":[\"turkish\"],\"itibar\":[\"turkish\"],\"itiraf\":[\"turkish\"],\"ivedi\":[\"turkish\"],\"ivme\":[\"turkish\"],\"iyileşme\":[\"turkish\"],\"iyimser\":[\"turkish\"],\"izbandut\":[\"turkish\"],\"izci\":[\"turkish\"],\"izdiham\":[\"turkish\"],\"izin\":[\"turkish\"],\"jakoben\":[\"turkish\"],\"jandarma\":[\"turkish\"],\"jargon\":[\"turkish\"],\"kabadayı\":[\"turkish\"],\"kablo\":[\"turkish\"],\"kabus\":[\"turkish\"],\"kaçamak\":[\"turkish\"],\"kadeh\":[\"turkish\"],\"kadın\":[\"turkish\"],\"kadraj\":[\"turkish\"],\"kafa\":[\"turkish\"],\"kafkas\":[\"turkish\"],\"kağıt\":[\"turkish\"],\"kağnı\":[\"turkish\"],\"kahkaha\":[\"turkish\"],\"kahraman\":[\"turkish\"],\"kahvaltı\":[\"turkish\"],\"kakül\":[\"turkish\"],\"kaldırım\":[\"turkish\"],\"kale\":[\"turkish\"],\"kalibre\":[\"turkish\"],\"kalkan\":[\"turkish\"],\"kalpak\":[\"turkish\"],\"kamış\":[\"turkish\"],\"kamyon\":[\"turkish\"],\"kanat\":[\"turkish\"],\"kandaş\":[\"turkish\"],\"kanepe\":[\"turkish\"],\"kanser\":[\"turkish\"],\"kanun\":[\"turkish\"],\"kaos\":[\"turkish\"],\"kapı\":[\"turkish\"],\"kaplıca\":[\"turkish\"],\"kaptan\":[\"turkish\"],\"karanlık\":[\"turkish\"],\"kardeş\":[\"turkish\"],\"karga\":[\"turkish\"],\"karınca\":[\"turkish\"],\"karmaşa\":[\"turkish\"],\"karşıt\":[\"turkish\"],\"kasırga\":[\"turkish\"],\"kask\":[\"turkish\"],\"kasvet\":[\"turkish\"],\"katkı\":[\"turkish\"],\"katman\":[\"turkish\"],\"kavram\":[\"turkish\"],\"kaygan\":[\"turkish\"],\"kaynakça\":[\"turkish\"],\"kayyum\":[\"turkish\"],\"kedi\":[\"turkish\"],\"kehanet\":[\"turkish\"],\"kekik\":[\"turkish\"],\"kelebek\":[\"turkish\"],\"kenar\":[\"turkish\"],\"kerkenez\":[\"turkish\"],\"kerpiç\":[\"turkish\"],\"kesirli\":[\"turkish\"],\"kesmece\":[\"turkish\"],\"kestane\":[\"turkish\"],\"keşkek\":[\"turkish\"],\"ketçap\":[\"turkish\"],\"keyfiyet\":[\"turkish\"],\"kıble\":[\"turkish\"],\"kıdemli\":[\"turkish\"],\"kılavuz\":[\"turkish\"],\"kılçık\":[\"turkish\"],\"kılıf\":[\"turkish\"],\"kıraç\":[\"turkish\"],\"kırmızı\":[\"turkish\"],\"kırsal\":[\"turkish\"],\"kısayol\":[\"turkish\"],\"kısım\":[\"turkish\"],\"kıskanç\":[\"turkish\"],\"kısmet\":[\"turkish\"],\"kışla\":[\"turkish\"],\"kıvanç\":[\"turkish\"],\"kıvılcım\":[\"turkish\"],\"kıvrık\":[\"turkish\"],\"kıyafet\":[\"turkish\"],\"kıymetli\":[\"turkish\"],\"kızak\":[\"turkish\"],\"kızılcık\":[\"turkish\"],\"kibar\":[\"turkish\"],\"kinaye\":[\"turkish\"],\"kira\":[\"turkish\"],\"kiremit\":[\"turkish\"],\"kirli\":[\"turkish\"],\"kirpik\":[\"turkish\"],\"kişisel\":[\"turkish\"],\"kitap\":[\"turkish\"],\"koçbaşı\":[\"turkish\"],\"kodaman\":[\"turkish\"],\"koğuş\":[\"turkish\"],\"kokteyl\":[\"turkish\"],\"kolaycı\":[\"turkish\"],\"kolbastı\":[\"turkish\"],\"kolonya\":[\"turkish\"],\"koltuk\":[\"turkish\"],\"kolye\":[\"turkish\"],\"kombine\":[\"turkish\"],\"komedyen\":[\"turkish\"],\"komiser\":[\"turkish\"],\"komposto\":[\"turkish\"],\"komşu\":[\"turkish\"],\"komuta\":[\"turkish\"],\"konak\":[\"turkish\"],\"konfor\":[\"turkish\"],\"koni\":[\"turkish\"],\"konsül\":[\"turkish\"],\"kopya\":[\"turkish\"],\"korkusuz\":[\"turkish\"],\"korna\":[\"turkish\"],\"korse\":[\"turkish\"],\"korunak\":[\"turkish\"],\"korvet\":[\"turkish\"],\"kostüm\":[\"turkish\"],\"koşul\":[\"turkish\"],\"koyu\":[\"turkish\"],\"kozmik\":[\"turkish\"],\"köfte\":[\"turkish\"],\"kökensel\":[\"turkish\"],\"köprücük\":[\"turkish\"],\"köpük\":[\"turkish\"],\"kördüğüm\":[\"turkish\"],\"körfez\":[\"turkish\"],\"köstebek\":[\"turkish\"],\"köşegen\":[\"turkish\"],\"kötü\":[\"turkish\"],\"kravat\":[\"turkish\"],\"kriter\":[\"turkish\"],\"kuantum\":[\"turkish\"],\"kudurma\":[\"turkish\"],\"kuluçka\":[\"turkish\"],\"kulübe\":[\"turkish\"],\"kumanya\":[\"turkish\"],\"kumbara\":[\"turkish\"],\"kumlu\":[\"turkish\"],\"kumpir\":[\"turkish\"],\"kumral\":[\"turkish\"],\"kundura\":[\"turkish\"],\"kupa\":[\"turkish\"],\"kupkuru\":[\"turkish\"],\"kuramsal\":[\"turkish\"],\"kurbağa\":[\"turkish\"],\"kurdele\":[\"turkish\"],\"kurgu\":[\"turkish\"],\"kurmay\":[\"turkish\"],\"kurşun\":[\"turkish\"],\"kurtuluş\":[\"turkish\"],\"kurultay\":[\"turkish\"],\"kurye\":[\"turkish\"],\"kusursuz\":[\"turkish\"],\"kuşak\":[\"turkish\"],\"kuşbaşı\":[\"turkish\"],\"kuşkulu\":[\"turkish\"],\"kutlama\":[\"turkish\"],\"kutsal\":[\"turkish\"],\"kutup\":[\"turkish\"],\"kuver\":[\"turkish\"],\"kuyruk\":[\"turkish\"],\"kuzey\":[\"turkish\"],\"kuzgun\":[\"turkish\"],\"küçük\":[\"turkish\"],\"külçe\":[\"turkish\"],\"külfet\":[\"turkish\"],\"külliye\":[\"turkish\"],\"kültürel\":[\"turkish\"],\"kümes\":[\"turkish\"],\"künefe\":[\"turkish\"],\"küresel\":[\"turkish\"],\"kütle\":[\"turkish\"],\"lahana\":[\"turkish\"],\"lahmacun\":[\"turkish\"],\"lamba\":[\"turkish\"],\"lansman\":[\"turkish\"],\"lavaş\":[\"turkish\"],\"layık\":[\"turkish\"],\"leğen\":[\"turkish\"],\"levent\":[\"turkish\"],\"leziz\":[\"turkish\"],\"lezzet\":[\"turkish\"],\"lider\":[\"turkish\"],\"likide\":[\"turkish\"],\"liman\":[\"turkish\"],\"liste\":[\"turkish\"],\"litre\":[\"turkish\"],\"liyakat\":[\"turkish\"],\"lodos\":[\"turkish\"],\"lokanta\":[\"turkish\"],\"lokman\":[\"turkish\"],\"lokum\":[\"turkish\"],\"lunapark\":[\"turkish\"],\"lütfen\":[\"turkish\"],\"lüzum\":[\"turkish\"],\"nokta\":[\"turkish\"],\"mabet\":[\"turkish\"],\"macera\":[\"turkish\"],\"macun\":[\"turkish\"],\"madalya\":[\"turkish\"],\"madde\":[\"turkish\"],\"madem\":[\"turkish\"],\"mağara\":[\"turkish\"],\"mağdur\":[\"turkish\"],\"mağfiret\":[\"turkish\"],\"mağlup\":[\"turkish\"],\"mahalle\":[\"turkish\"],\"mahcup\":[\"turkish\"],\"mahir\":[\"turkish\"],\"mahkeme\":[\"turkish\"],\"mahlas\":[\"turkish\"],\"mahrum\":[\"turkish\"],\"mahsul\":[\"turkish\"],\"makas\":[\"turkish\"],\"makbuz\":[\"turkish\"],\"makine\":[\"turkish\"],\"makro\":[\"turkish\"],\"maksat\":[\"turkish\"],\"makul\":[\"turkish\"],\"maliye\":[\"turkish\"],\"manav\":[\"turkish\"],\"mangal\":[\"turkish\"],\"manidar\":[\"turkish\"],\"manken\":[\"turkish\"],\"mantık\":[\"turkish\"],\"manzara\":[\"turkish\"],\"mareşal\":[\"turkish\"],\"margarin\":[\"turkish\"],\"marifet\":[\"turkish\"],\"marmelat\":[\"turkish\"],\"masaüstü\":[\"turkish\"],\"masmavi\":[\"turkish\"],\"masraf\":[\"turkish\"],\"masum\":[\"turkish\"],\"matah\":[\"turkish\"],\"materyal\":[\"turkish\"],\"matrak\":[\"turkish\"],\"maval\":[\"turkish\"],\"mavra\":[\"turkish\"],\"maydanoz\":[\"turkish\"],\"mayhoş\":[\"turkish\"],\"maytap\":[\"turkish\"],\"mazbata\":[\"turkish\"],\"mazeret\":[\"turkish\"],\"mazlum\":[\"turkish\"],\"mazot\":[\"turkish\"],\"mazur\":[\"turkish\"],\"meblağ\":[\"turkish\"],\"mebus\":[\"turkish\"],\"mecaz\":[\"turkish\"],\"mecbur\":[\"turkish\"],\"meclis\":[\"turkish\"],\"mecmua\":[\"turkish\"],\"mecnun\":[\"turkish\"],\"meçhul\":[\"turkish\"],\"medeni\":[\"turkish\"],\"mehtap\":[\"turkish\"],\"mekanik\":[\"turkish\"],\"melodi\":[\"turkish\"],\"meltem\":[\"turkish\"],\"memur\":[\"turkish\"],\"mendil\":[\"turkish\"],\"menekşe\":[\"turkish\"],\"menteşe\":[\"turkish\"],\"meraklı\":[\"turkish\"],\"mercek\":[\"turkish\"],\"merdiven\":[\"turkish\"],\"merhaba\":[\"turkish\"],\"merinos\":[\"turkish\"],\"merkez\":[\"turkish\"],\"mermi\":[\"turkish\"],\"mert\":[\"turkish\"],\"mesafe\":[\"turkish\"],\"mesele\":[\"turkish\"],\"mesken\":[\"turkish\"],\"meslek\":[\"turkish\"],\"meşale\":[\"turkish\"],\"meşgul\":[\"turkish\"],\"meşhur\":[\"turkish\"],\"metafor\":[\"turkish\"],\"metin\":[\"turkish\"],\"metre\":[\"turkish\"],\"mevcut\":[\"turkish\"],\"mevkidaş\":[\"turkish\"],\"meydan\":[\"turkish\"],\"meyil\":[\"turkish\"],\"meyve\":[\"turkish\"],\"meziyet\":[\"turkish\"],\"mezun\":[\"turkish\"],\"mıknatıs\":[\"turkish\"],\"mısra\":[\"turkish\"],\"mızıka\":[\"turkish\"],\"miğfer\":[\"turkish\"],\"mihrak\":[\"turkish\"],\"miktar\":[\"turkish\"],\"milat\":[\"turkish\"],\"milli\":[\"turkish\"],\"mimar\":[\"turkish\"],\"minare\":[\"turkish\"],\"mineral\":[\"turkish\"],\"minik\":[\"turkish\"],\"minyon\":[\"turkish\"],\"mirliva\":[\"turkish\"],\"misafir\":[\"turkish\"],\"miskin\":[\"turkish\"],\"miting\":[\"turkish\"],\"miyop\":[\"turkish\"],\"mizah\":[\"turkish\"],\"mobilya\":[\"turkish\"],\"monitör\":[\"turkish\"],\"morötesi\":[\"turkish\"],\"motive\":[\"turkish\"],\"mozaik\":[\"turkish\"],\"muavin\":[\"turkish\"],\"mucize\":[\"turkish\"],\"muhafız\":[\"turkish\"],\"muhteşem\":[\"turkish\"],\"mukayese\":[\"turkish\"],\"mumya\":[\"turkish\"],\"musluk\":[\"turkish\"],\"muşamba\":[\"turkish\"],\"mutabık\":[\"turkish\"],\"mutfak\":[\"turkish\"],\"mutlu\":[\"turkish\"],\"muzaffer\":[\"turkish\"],\"muzdarip\":[\"turkish\"],\"mübarek\":[\"turkish\"],\"mücadele\":[\"turkish\"],\"müdür\":[\"turkish\"],\"müfredat\":[\"turkish\"],\"müftü\":[\"turkish\"],\"mühendis\":[\"turkish\"],\"mühim\":[\"turkish\"],\"mühlet\":[\"turkish\"],\"mükemmel\":[\"turkish\"],\"mülk\":[\"turkish\"],\"mümkün\":[\"turkish\"],\"mümtaz\":[\"turkish\"],\"müsrif\":[\"turkish\"],\"müstesna\":[\"turkish\"],\"müşahit\":[\"turkish\"],\"müşteri\":[\"turkish\"],\"mütercim\":[\"turkish\"],\"müthiş\":[\"turkish\"],\"müze\":[\"turkish\"],\"müzik\":[\"turkish\"],\"nabız\":[\"turkish\"],\"nadas\":[\"turkish\"],\"nadir\":[\"turkish\"],\"nahoş\":[\"turkish\"],\"nakarat\":[\"turkish\"],\"nakış\":[\"turkish\"],\"nalbur\":[\"turkish\"],\"namlu\":[\"turkish\"],\"namus\":[\"turkish\"],\"nankör\":[\"turkish\"],\"nargile\":[\"turkish\"],\"narkoz\":[\"turkish\"],\"nasıl\":[\"turkish\"],\"nasip\":[\"turkish\"],\"naylon\":[\"turkish\"],\"nazar\":[\"turkish\"],\"nazım\":[\"turkish\"],\"nazik\":[\"turkish\"],\"neden\":[\"turkish\"],\"nefes\":[\"turkish\"],\"negatif\":[\"turkish\"],\"neon\":[\"turkish\"],\"neptün\":[\"turkish\"],\"nerede\":[\"turkish\"],\"nesil\":[\"turkish\"],\"nesnel\":[\"turkish\"],\"neşeli\":[\"turkish\"],\"netice\":[\"turkish\"],\"nevresim\":[\"turkish\"],\"neyse\":[\"turkish\"],\"neyzen\":[\"turkish\"],\"nezaket\":[\"turkish\"],\"nezih\":[\"turkish\"],\"nezle\":[\"turkish\"],\"nicel\":[\"turkish\"],\"nilüfer\":[\"turkish\"],\"nimet\":[\"turkish\"],\"nisan\":[\"turkish\"],\"nispet\":[\"turkish\"],\"nitekim\":[\"turkish\"],\"nizam\":[\"turkish\"],\"nohut\":[\"turkish\"],\"noksan\":[\"turkish\"],\"nostalji\":[\"turkish\"],\"noter\":[\"turkish\"],\"nöbet\":[\"turkish\"],\"numara\":[\"turkish\"],\"numune\":[\"turkish\"],\"nutuk\":[\"turkish\"],\"nüfus\":[\"turkish\"],\"obabaşı\":[\"turkish\"],\"obez\":[\"turkish\"],\"obje\":[\"turkish\"],\"ocak\":[\"turkish\"],\"odun\":[\"turkish\"],\"ofansif\":[\"turkish\"],\"ofis\":[\"turkish\"],\"oğlak\":[\"turkish\"],\"oğuz\":[\"turkish\"],\"okçu\":[\"turkish\"],\"oklava\":[\"turkish\"],\"oksijen\":[\"turkish\"],\"okul\":[\"turkish\"],\"okumuş\":[\"turkish\"],\"okutman\":[\"turkish\"],\"okuyucu\":[\"turkish\"],\"okyanus\":[\"turkish\"],\"olağan\":[\"turkish\"],\"olanak\":[\"turkish\"],\"olası\":[\"turkish\"],\"olay\":[\"turkish\"],\"olgun\":[\"turkish\"],\"olimpik\":[\"turkish\"],\"olumlu\":[\"turkish\"],\"omlet\":[\"turkish\"],\"omurga\":[\"turkish\"],\"onarım\":[\"turkish\"],\"onursal\":[\"turkish\"],\"optik\":[\"turkish\"],\"orantı\":[\"turkish\"],\"ordu\":[\"turkish\"],\"organik\":[\"turkish\"],\"orijin\":[\"turkish\"],\"orkide\":[\"turkish\"],\"orman\":[\"turkish\"],\"orta\":[\"turkish\"],\"oruç\":[\"turkish\"],\"otağ\":[\"turkish\"],\"otantik\":[\"turkish\"],\"otel\":[\"turkish\"],\"otoban\":[\"turkish\"],\"otogar\":[\"turkish\"],\"otomobil\":[\"turkish\"],\"otonom\":[\"turkish\"],\"otopark\":[\"turkish\"],\"otorite\":[\"turkish\"],\"otoyol\":[\"turkish\"],\"oturum\":[\"turkish\"],\"oyuk\":[\"turkish\"],\"oyuncak\":[\"turkish\"],\"ozan\":[\"turkish\"],\"ödeme\":[\"turkish\"],\"ödenek\":[\"turkish\"],\"ödev\":[\"turkish\"],\"ödül\":[\"turkish\"],\"ödünç\":[\"turkish\"],\"öfke\":[\"turkish\"],\"öğlen\":[\"turkish\"],\"öğrenci\":[\"turkish\"],\"öğün\":[\"turkish\"],\"öğütücü\":[\"turkish\"],\"öksürük\":[\"turkish\"],\"ölçme\":[\"turkish\"],\"ölçü\":[\"turkish\"],\"ölümsüz\":[\"turkish\"],\"ömür\":[\"turkish\"],\"önayak\":[\"turkish\"],\"öncü\":[\"turkish\"],\"önder\":[\"turkish\"],\"önem\":[\"turkish\"],\"önerge\":[\"turkish\"],\"öngörü\":[\"turkish\"],\"önlük\":[\"turkish\"],\"önsezi\":[\"turkish\"],\"öpücük\":[\"turkish\"],\"ördek\":[\"turkish\"],\"örgü\":[\"turkish\"],\"örtbas\":[\"turkish\"],\"örtme\":[\"turkish\"],\"örtü\":[\"turkish\"],\"örümcek\":[\"turkish\"],\"örüntü\":[\"turkish\"],\"öteberi\":[\"turkish\"],\"öteki\":[\"turkish\"],\"övünç\":[\"turkish\"],\"öykü\":[\"turkish\"],\"öyleyse\":[\"turkish\"],\"özçekim\":[\"turkish\"],\"özdeyiş\":[\"turkish\"],\"özel\":[\"turkish\"],\"özenti\":[\"turkish\"],\"özerk\":[\"turkish\"],\"özgürlük\":[\"turkish\"],\"özlem\":[\"turkish\"],\"özlü\":[\"turkish\"],\"özne\":[\"turkish\"],\"özsever\":[\"turkish\"],\"özümseme\":[\"turkish\"],\"özür\":[\"turkish\"],\"özveri\":[\"turkish\"],\"pabuç\":[\"turkish\"],\"padişah\":[\"turkish\"],\"palamut\":[\"turkish\"],\"palmiye\":[\"turkish\"],\"palto\":[\"turkish\"],\"palyaço\":[\"turkish\"],\"pamuk\":[\"turkish\"],\"panayır\":[\"turkish\"],\"pancar\":[\"turkish\"],\"panik\":[\"turkish\"],\"panjur\":[\"turkish\"],\"pankart\":[\"turkish\"],\"pano\":[\"turkish\"],\"pansuman\":[\"turkish\"],\"pantolon\":[\"turkish\"],\"panzehir\":[\"turkish\"],\"papatya\":[\"turkish\"],\"papyon\":[\"turkish\"],\"paraşüt\":[\"turkish\"],\"parça\":[\"turkish\"],\"pardösü\":[\"turkish\"],\"parfüm\":[\"turkish\"],\"parıltı\":[\"turkish\"],\"parkur\":[\"turkish\"],\"parmak\":[\"turkish\"],\"parodi\":[\"turkish\"],\"parsel\":[\"turkish\"],\"partner\":[\"turkish\"],\"pasaport\":[\"turkish\"],\"pasif\":[\"turkish\"],\"paskalya\":[\"turkish\"],\"pastırma\":[\"turkish\"],\"paşa\":[\"turkish\"],\"patates\":[\"turkish\"],\"paten\":[\"turkish\"],\"patika\":[\"turkish\"],\"patlıcan\":[\"turkish\"],\"patolog\":[\"turkish\"],\"payanda\":[\"turkish\"],\"paydaş\":[\"turkish\"],\"payidar\":[\"turkish\"],\"paylaşma\":[\"turkish\"],\"paytak\":[\"turkish\"],\"peçete\":[\"turkish\"],\"peder\":[\"turkish\"],\"pehlivan\":[\"turkish\"],\"pekala\":[\"turkish\"],\"pekmez\":[\"turkish\"],\"pelerin\":[\"turkish\"],\"pelikan\":[\"turkish\"],\"pelüş\":[\"turkish\"],\"pembe\":[\"turkish\"],\"pencere\":[\"turkish\"],\"pense\":[\"turkish\"],\"perçin\":[\"turkish\"],\"perde\":[\"turkish\"],\"pergel\":[\"turkish\"],\"perişan\":[\"turkish\"],\"peron\":[\"turkish\"],\"personel\":[\"turkish\"],\"perşembe\":[\"turkish\"],\"peruk\":[\"turkish\"],\"pervane\":[\"turkish\"],\"pespaye\":[\"turkish\"],\"pestil\":[\"turkish\"],\"peşin\":[\"turkish\"],\"petek\":[\"turkish\"],\"petrol\":[\"turkish\"],\"petunya\":[\"turkish\"],\"peynir\":[\"turkish\"],\"peyzaj\":[\"turkish\"],\"pınar\":[\"turkish\"],\"pırasa\":[\"turkish\"],\"pırlanta\":[\"turkish\"],\"pide\":[\"turkish\"],\"pikap\":[\"turkish\"],\"pilav\":[\"turkish\"],\"piliç\":[\"turkish\"],\"pipet\":[\"turkish\"],\"pipo\":[\"turkish\"],\"piramit\":[\"turkish\"],\"pirinç\":[\"turkish\"],\"pirzola\":[\"turkish\"],\"pist\":[\"turkish\"],\"pişik\":[\"turkish\"],\"pişman\":[\"turkish\"],\"piyasa\":[\"turkish\"],\"piyes\":[\"turkish\"],\"plaj\":[\"turkish\"],\"plaket\":[\"turkish\"],\"planlama\":[\"turkish\"],\"platform\":[\"turkish\"],\"plazma\":[\"turkish\"],\"podyum\":[\"turkish\"],\"poğaça\":[\"turkish\"],\"polat\":[\"turkish\"],\"politika\":[\"turkish\"],\"popüler\":[\"turkish\"],\"porselen\":[\"turkish\"],\"portakal\":[\"turkish\"],\"poster\":[\"turkish\"],\"poşet\":[\"turkish\"],\"poyraz\":[\"turkish\"],\"pozitif\":[\"turkish\"],\"pranga\":[\"turkish\"],\"pratik\":[\"turkish\"],\"prenses\":[\"turkish\"],\"prim\":[\"turkish\"],\"profil\":[\"turkish\"],\"proje\":[\"turkish\"],\"protokol\":[\"turkish\"],\"puan\":[\"turkish\"],\"pudra\":[\"turkish\"],\"pusula\":[\"turkish\"],\"püre\":[\"turkish\"],\"pürüz\":[\"turkish\"],\"püstül\":[\"turkish\"],\"püsür\":[\"turkish\"],\"racon\":[\"turkish\"],\"radikal\":[\"turkish\"],\"radyo\":[\"turkish\"],\"rafadan\":[\"turkish\"],\"rafine\":[\"turkish\"],\"rağbet\":[\"turkish\"],\"rahat\":[\"turkish\"],\"rahle\":[\"turkish\"],\"rakam\":[\"turkish\"],\"raket\":[\"turkish\"],\"rakip\":[\"turkish\"],\"rakun\":[\"turkish\"],\"ralli\":[\"turkish\"],\"randevu\":[\"turkish\"],\"ranza\":[\"turkish\"],\"rapor\":[\"turkish\"],\"rastgele\":[\"turkish\"],\"rasyonel\":[\"turkish\"],\"razı\":[\"turkish\"],\"realite\":[\"turkish\"],\"reçine\":[\"turkish\"],\"refah\":[\"turkish\"],\"referans\":[\"turkish\"],\"refik\":[\"turkish\"],\"rehber\":[\"turkish\"],\"rehin\":[\"turkish\"],\"reis\":[\"turkish\"],\"rekabet\":[\"turkish\"],\"reklam\":[\"turkish\"],\"rekor\":[\"turkish\"],\"rektör\":[\"turkish\"],\"renk\":[\"turkish\"],\"resim\":[\"turkish\"],\"resmen\":[\"turkish\"],\"restoran\":[\"turkish\"],\"retorik\":[\"turkish\"],\"revaç\":[\"turkish\"],\"reyon\":[\"turkish\"],\"rezalet\":[\"turkish\"],\"rezerv\":[\"turkish\"],\"rezil\":[\"turkish\"],\"rıhtım\":[\"turkish\"],\"rıza\":[\"turkish\"],\"ritim\":[\"turkish\"],\"ritüel\":[\"turkish\"],\"rivayet\":[\"turkish\"],\"roman\":[\"turkish\"],\"rozet\":[\"turkish\"],\"röportaj\":[\"turkish\"],\"rötar\":[\"turkish\"],\"ruble\":[\"turkish\"],\"ruhban\":[\"turkish\"],\"ruhsat\":[\"turkish\"],\"rulet\":[\"turkish\"],\"runik\":[\"turkish\"],\"rutin\":[\"turkish\"],\"rutubet\":[\"turkish\"],\"rüşvet\":[\"turkish\"],\"rütbe\":[\"turkish\"],\"rüya\":[\"turkish\"],\"rüzgar\":[\"turkish\"],\"sabah\":[\"turkish\"],\"sabıka\":[\"turkish\"],\"sabit\":[\"turkish\"],\"sabun\":[\"turkish\"],\"saçma\":[\"turkish\"],\"sade\":[\"turkish\"],\"sadık\":[\"turkish\"],\"safahat\":[\"turkish\"],\"safdil\":[\"turkish\"],\"safkan\":[\"turkish\"],\"sağanak\":[\"turkish\"],\"sağduyu\":[\"turkish\"],\"sağlam\":[\"turkish\"],\"saha\":[\"turkish\"],\"sahiden\":[\"turkish\"],\"sahne\":[\"turkish\"],\"sakal\":[\"turkish\"],\"sakız\":[\"turkish\"],\"sakin\":[\"turkish\"],\"saklama\":[\"turkish\"],\"saksağan\":[\"turkish\"],\"salamura\":[\"turkish\"],\"salça\":[\"turkish\"],\"salgı\":[\"turkish\"],\"salınım\":[\"turkish\"],\"salkım\":[\"turkish\"],\"saltanat\":[\"turkish\"],\"sanatçı\":[\"turkish\"],\"sancak\":[\"turkish\"],\"sandalye\":[\"turkish\"],\"saniye\":[\"turkish\"],\"saplantı\":[\"turkish\"],\"sapsız\":[\"turkish\"],\"saray\":[\"turkish\"],\"sarışın\":[\"turkish\"],\"sarkık\":[\"turkish\"],\"sarmaşık\":[\"turkish\"],\"satır\":[\"turkish\"],\"savaşım\":[\"turkish\"],\"savunma\":[\"turkish\"],\"saydam\":[\"turkish\"],\"sayfa\":[\"turkish\"],\"saygın\":[\"turkish\"],\"sayısal\":[\"turkish\"],\"sebep\":[\"turkish\"],\"seçenek\":[\"turkish\"],\"seçim\":[\"turkish\"],\"seçkin\":[\"turkish\"],\"seçmen\":[\"turkish\"],\"sedir\":[\"turkish\"],\"sedye\":[\"turkish\"],\"sefer\":[\"turkish\"],\"sehpa\":[\"turkish\"],\"sekizgen\":[\"turkish\"],\"selektör\":[\"turkish\"],\"selvi\":[\"turkish\"],\"semavi\":[\"turkish\"],\"sembol\":[\"turkish\"],\"seminer\":[\"turkish\"],\"senaryo\":[\"turkish\"],\"sendika\":[\"turkish\"],\"senkron\":[\"turkish\"],\"sensör\":[\"turkish\"],\"sentez\":[\"turkish\"],\"sepet\":[\"turkish\"],\"seramik\":[\"turkish\"],\"serbest\":[\"turkish\"],\"serdar\":[\"turkish\"],\"seremoni\":[\"turkish\"],\"sergi\":[\"turkish\"],\"serhat\":[\"turkish\"],\"serin\":[\"turkish\"],\"sermaye\":[\"turkish\"],\"serpuş\":[\"turkish\"],\"sersem\":[\"turkish\"],\"serüven\":[\"turkish\"],\"sesli\":[\"turkish\"],\"sesteş\":[\"turkish\"],\"sevap\":[\"turkish\"],\"seviye\":[\"turkish\"],\"seyahat\":[\"turkish\"],\"seyirci\":[\"turkish\"],\"sezon\":[\"turkish\"],\"sıcak\":[\"turkish\"],\"sıfat\":[\"turkish\"],\"sıhhi\":[\"turkish\"],\"sınanma\":[\"turkish\"],\"sınır\":[\"turkish\"],\"sıradan\":[\"turkish\"],\"sırdaş\":[\"turkish\"],\"sırma\":[\"turkish\"],\"sırtüstü\":[\"turkish\"],\"sızgıt\":[\"turkish\"],\"siftah\":[\"turkish\"],\"sigorta\":[\"turkish\"],\"sihirbaz\":[\"turkish\"],\"silah\":[\"turkish\"],\"silecek\":[\"turkish\"],\"silindir\":[\"turkish\"],\"simetri\":[\"turkish\"],\"simge\":[\"turkish\"],\"simit\":[\"turkish\"],\"sincap\":[\"turkish\"],\"sindirim\":[\"turkish\"],\"sinema\":[\"turkish\"],\"sinirli\":[\"turkish\"],\"sipariş\":[\"turkish\"],\"sirke\":[\"turkish\"],\"siroz\":[\"turkish\"],\"sistem\":[\"turkish\"],\"sivilce\":[\"turkish\"],\"siyasi\":[\"turkish\"],\"soba\":[\"turkish\"],\"sofra\":[\"turkish\"],\"soğuk\":[\"turkish\"],\"sohbet\":[\"turkish\"],\"sokak\":[\"turkish\"],\"solfej\":[\"turkish\"],\"solunum\":[\"turkish\"],\"somut\":[\"turkish\"],\"sonbahar\":[\"turkish\"],\"sonraki\":[\"turkish\"],\"sonsuz\":[\"turkish\"],\"sorunsuz\":[\"turkish\"],\"sosyete\":[\"turkish\"],\"soyağacı\":[\"turkish\"],\"soydaş\":[\"turkish\"],\"soygun\":[\"turkish\"],\"soytarı\":[\"turkish\"],\"söğüş\":[\"turkish\"],\"sömürge\":[\"turkish\"],\"sönük\":[\"turkish\"],\"söylem\":[\"turkish\"],\"sözcük\":[\"turkish\"],\"sözde\":[\"turkish\"],\"spatula\":[\"turkish\"],\"spektrum\":[\"turkish\"],\"spiker\":[\"turkish\"],\"sporcu\":[\"turkish\"],\"sprey\":[\"turkish\"],\"stabil\":[\"turkish\"],\"statü\":[\"turkish\"],\"stok\":[\"turkish\"],\"stopaj\":[\"turkish\"],\"strateji\":[\"turkish\"],\"subay\":[\"turkish\"],\"sucuk\":[\"turkish\"],\"suçüstü\":[\"turkish\"],\"suhulet\":[\"turkish\"],\"sulama\":[\"turkish\"],\"sungur\":[\"turkish\"],\"sunucu\":[\"turkish\"],\"surat\":[\"turkish\"],\"susam\":[\"turkish\"],\"suskun\":[\"turkish\"],\"sükse\":[\"turkish\"],\"sükut\":[\"turkish\"],\"sülale\":[\"turkish\"],\"sünger\":[\"turkish\"],\"süpürge\":[\"turkish\"],\"sürahi\":[\"turkish\"],\"süreç\":[\"turkish\"],\"sürgün\":[\"turkish\"],\"sürüm\":[\"turkish\"],\"süsleme\":[\"turkish\"],\"sütanne\":[\"turkish\"],\"sütlaç\":[\"turkish\"],\"sütun\":[\"turkish\"],\"süvari\":[\"turkish\"],\"şahane\":[\"turkish\"],\"şahbaz\":[\"turkish\"],\"şahit\":[\"turkish\"],\"şahsiyet\":[\"turkish\"],\"şakıma\":[\"turkish\"],\"şaklaban\":[\"turkish\"],\"şakrak\":[\"turkish\"],\"şamar\":[\"turkish\"],\"şampiyon\":[\"turkish\"],\"şanslı\":[\"turkish\"],\"şantiye\":[\"turkish\"],\"şapka\":[\"turkish\"],\"şarkıcı\":[\"turkish\"],\"şartname\":[\"turkish\"],\"şaşırma\":[\"turkish\"],\"şaşkın\":[\"turkish\"],\"şatafat\":[\"turkish\"],\"şayet\":[\"turkish\"],\"şebeke\":[\"turkish\"],\"şefkat\":[\"turkish\"],\"şeftali\":[\"turkish\"],\"şehir\":[\"turkish\"],\"şehvet\":[\"turkish\"],\"şeker\":[\"turkish\"],\"şekil\":[\"turkish\"],\"şelale\":[\"turkish\"],\"şema\":[\"turkish\"],\"şemsiye\":[\"turkish\"],\"şerbet\":[\"turkish\"],\"şeref\":[\"turkish\"],\"şerit\":[\"turkish\"],\"şımarık\":[\"turkish\"],\"şıpıdık\":[\"turkish\"],\"şifre\":[\"turkish\"],\"şimdi\":[\"turkish\"],\"şimşek\":[\"turkish\"],\"şipşak\":[\"turkish\"],\"şirin\":[\"turkish\"],\"şişe\":[\"turkish\"],\"şişirme\":[\"turkish\"],\"şofben\":[\"turkish\"],\"şöhret\":[\"turkish\"],\"şölen\":[\"turkish\"],\"şüphe\":[\"turkish\"],\"tabaka\":[\"turkish\"],\"tabure\":[\"turkish\"],\"tadilat\":[\"turkish\"],\"taharet\":[\"turkish\"],\"tahıl\":[\"turkish\"],\"tahkim\":[\"turkish\"],\"tahlil\":[\"turkish\"],\"tahmin\":[\"turkish\"],\"tahrifat\":[\"turkish\"],\"tahsilat\":[\"turkish\"],\"tahta\":[\"turkish\"],\"taklit\":[\"turkish\"],\"takoz\":[\"turkish\"],\"taksici\":[\"turkish\"],\"taktik\":[\"turkish\"],\"takvim\":[\"turkish\"],\"talebe\":[\"turkish\"],\"talip\":[\"turkish\"],\"tamamen\":[\"turkish\"],\"tamirci\":[\"turkish\"],\"tamtakır\":[\"turkish\"],\"tandır\":[\"turkish\"],\"tanecik\":[\"turkish\"],\"tanıtım\":[\"turkish\"],\"tanrı\":[\"turkish\"],\"tansiyon\":[\"turkish\"],\"tapan\":[\"turkish\"],\"tapınak\":[\"turkish\"],\"taptaze\":[\"turkish\"],\"tapu\":[\"turkish\"],\"tarafgir\":[\"turkish\"],\"tarhana\":[\"turkish\"],\"tarım\":[\"turkish\"],\"tarih\":[\"turkish\"],\"tarla\":[\"turkish\"],\"tartak\":[\"turkish\"],\"tarumar\":[\"turkish\"],\"tasarım\":[\"turkish\"],\"tasdik\":[\"turkish\"],\"taslak\":[\"turkish\"],\"tastamam\":[\"turkish\"],\"taşeron\":[\"turkish\"],\"taşınmaz\":[\"turkish\"],\"taşra\":[\"turkish\"],\"tatava\":[\"turkish\"],\"tatbikat\":[\"turkish\"],\"tatil\":[\"turkish\"],\"tatlı\":[\"turkish\"],\"tavsiye\":[\"turkish\"],\"tavşan\":[\"turkish\"],\"tavuk\":[\"turkish\"],\"taze\":[\"turkish\"],\"taziye\":[\"turkish\"],\"tazminat\":[\"turkish\"],\"tebeşir\":[\"turkish\"],\"tebrik\":[\"turkish\"],\"tecrübe\":[\"turkish\"],\"teçhizat\":[\"turkish\"],\"tedarik\":[\"turkish\"],\"tedbir\":[\"turkish\"],\"teftiş\":[\"turkish\"],\"teğet\":[\"turkish\"],\"teğmen\":[\"turkish\"],\"tehdit\":[\"turkish\"],\"tehlike\":[\"turkish\"],\"tekdüze\":[\"turkish\"],\"tekerlek\":[\"turkish\"],\"tekme\":[\"turkish\"],\"teknik\":[\"turkish\"],\"tekrar\":[\"turkish\"],\"telef\":[\"turkish\"],\"telsiz\":[\"turkish\"],\"telve\":[\"turkish\"],\"temas\":[\"turkish\"],\"tembel\":[\"turkish\"],\"temiz\":[\"turkish\"],\"temkin\":[\"turkish\"],\"temsilci\":[\"turkish\"],\"tendon\":[\"turkish\"],\"teneke\":[\"turkish\"],\"tenha\":[\"turkish\"],\"tenkit\":[\"turkish\"],\"tepegöz\":[\"turkish\"],\"tepki\":[\"turkish\"],\"terazi\":[\"turkish\"],\"terbiye\":[\"turkish\"],\"tercih\":[\"turkish\"],\"tereyağı\":[\"turkish\"],\"terfi\":[\"turkish\"],\"terim\":[\"turkish\"],\"terminal\":[\"turkish\"],\"tersane\":[\"turkish\"],\"tertip\":[\"turkish\"],\"tesadüf\":[\"turkish\"],\"tescil\":[\"turkish\"],\"tesir\":[\"turkish\"],\"teslimat\":[\"turkish\"],\"tespit\":[\"turkish\"],\"testere\":[\"turkish\"],\"teşekkür\":[\"turkish\"],\"teşhir\":[\"turkish\"],\"teşrif\":[\"turkish\"],\"teşvik\":[\"turkish\"],\"teyze\":[\"turkish\"],\"tezahür\":[\"turkish\"],\"tezgah\":[\"turkish\"],\"tıbbi\":[\"turkish\"],\"tıkaç\":[\"turkish\"],\"tıkışık\":[\"turkish\"],\"tıknaz\":[\"turkish\"],\"tılsım\":[\"turkish\"],\"tıpkı\":[\"turkish\"],\"tıraş\":[\"turkish\"],\"tırışka\":[\"turkish\"],\"tırmanış\":[\"turkish\"],\"tırnak\":[\"turkish\"],\"tırpan\":[\"turkish\"],\"tıslama\":[\"turkish\"],\"ticaret\":[\"turkish\"],\"tilki\":[\"turkish\"],\"tiryaki\":[\"turkish\"],\"titreşim\":[\"turkish\"],\"tohum\":[\"turkish\"],\"tokat\":[\"turkish\"],\"tolere\":[\"turkish\"],\"tombak\":[\"turkish\"],\"tomurcuk\":[\"turkish\"],\"topaç\":[\"turkish\"],\"toplum\":[\"turkish\"],\"toprak\":[\"turkish\"],\"toptan\":[\"turkish\"],\"toraman\":[\"turkish\"],\"torpido\":[\"turkish\"],\"tortu\":[\"turkish\"],\"tosbağa\":[\"turkish\"],\"toynak\":[\"turkish\"],\"tören\":[\"turkish\"],\"trafik\":[\"turkish\"],\"trajedi\":[\"turkish\"],\"tramvay\":[\"turkish\"],\"tribün\":[\"turkish\"],\"triko\":[\"turkish\"],\"tugay\":[\"turkish\"],\"tuğla\":[\"turkish\"],\"tuğrul\":[\"turkish\"],\"tuhaf\":[\"turkish\"],\"tulumba\":[\"turkish\"],\"tunç\":[\"turkish\"],\"turan\":[\"turkish\"],\"turkuaz\":[\"turkish\"],\"turnusol\":[\"turkish\"],\"turşu\":[\"turkish\"],\"turuncu\":[\"turkish\"],\"tutanak\":[\"turkish\"],\"tutkal\":[\"turkish\"],\"tutsak\":[\"turkish\"],\"tutum\":[\"turkish\"],\"tuyuğ\":[\"turkish\"],\"tuzlu\":[\"turkish\"],\"tüccar\":[\"turkish\"],\"tüfek\":[\"turkish\"],\"tükenmez\":[\"turkish\"],\"tülbent\":[\"turkish\"],\"tümleç\":[\"turkish\"],\"tünel\":[\"turkish\"],\"türbin\":[\"turkish\"],\"türev\":[\"turkish\"],\"türk\":[\"turkish\"],\"tüzük\":[\"turkish\"],\"ucube\":[\"turkish\"],\"ucuz\":[\"turkish\"],\"uçak\":[\"turkish\"],\"uçurtma\":[\"turkish\"],\"ufuk\":[\"turkish\"],\"uğrak\":[\"turkish\"],\"uğur\":[\"turkish\"],\"ukala\":[\"turkish\"],\"ulaşım\":[\"turkish\"],\"ulema\":[\"turkish\"],\"ulus\":[\"turkish\"],\"ulvi\":[\"turkish\"],\"umursama\":[\"turkish\"],\"umut\":[\"turkish\"],\"unutkan\":[\"turkish\"],\"uslu\":[\"turkish\"],\"ustabaşı\":[\"turkish\"],\"ustura\":[\"turkish\"],\"usul\":[\"turkish\"],\"utangaç\":[\"turkish\"],\"uyanık\":[\"turkish\"],\"uyarı\":[\"turkish\"],\"uydu\":[\"turkish\"],\"uygar\":[\"turkish\"],\"uygulama\":[\"turkish\"],\"uykusuz\":[\"turkish\"],\"uysal\":[\"turkish\"],\"uyuşma\":[\"turkish\"],\"uzantı\":[\"turkish\"],\"uzay\":[\"turkish\"],\"uzgören\":[\"turkish\"],\"uzlaşma\":[\"turkish\"],\"uzman\":[\"turkish\"],\"uzun\":[\"turkish\"],\"ücra\":[\"turkish\"],\"ücret\":[\"turkish\"],\"üçbudak\":[\"turkish\"],\"üçgen\":[\"turkish\"],\"üçkağıt\":[\"turkish\"],\"üçleme\":[\"turkish\"],\"üfürük\":[\"turkish\"],\"ülke\":[\"turkish\"],\"ümit\":[\"turkish\"],\"üniforma\":[\"turkish\"],\"ünite\":[\"turkish\"],\"ünlem\":[\"turkish\"],\"üretken\":[\"turkish\"],\"ürün\":[\"turkish\"],\"üslup\":[\"turkish\"],\"üstel\":[\"turkish\"],\"üstün\":[\"turkish\"],\"üşengeç\":[\"turkish\"],\"üşüme\":[\"turkish\"],\"ütopya\":[\"turkish\"],\"üvey\":[\"turkish\"],\"üzengi\":[\"turkish\"],\"üzgün\":[\"turkish\"],\"üzüm\":[\"turkish\"],\"vaka\":[\"turkish\"],\"vakfiye\":[\"turkish\"],\"vakıf\":[\"turkish\"],\"vakit\":[\"turkish\"],\"vakum\":[\"turkish\"],\"vapur\":[\"turkish\"],\"varil\":[\"turkish\"],\"varlık\":[\"turkish\"],\"varsayım\":[\"turkish\"],\"varyemez\":[\"turkish\"],\"vasıta\":[\"turkish\"],\"vasiyet\":[\"turkish\"],\"vatandaş\":[\"turkish\"],\"vazife\":[\"turkish\"],\"vazo\":[\"turkish\"],\"veciz\":[\"turkish\"],\"vefa\":[\"turkish\"],\"vehim\":[\"turkish\"],\"veliaht\":[\"turkish\"],\"veresiye\":[\"turkish\"],\"verimli\":[\"turkish\"],\"verkaç\":[\"turkish\"],\"vernik\":[\"turkish\"],\"vertigo\":[\"turkish\"],\"vesait\":[\"turkish\"],\"vesika\":[\"turkish\"],\"vestiyer\":[\"turkish\"],\"veznedar\":[\"turkish\"],\"vicdan\":[\"turkish\"],\"vilayet\":[\"turkish\"],\"virane\":[\"turkish\"],\"virgül\":[\"turkish\"],\"vişne\":[\"turkish\"],\"vites\":[\"turkish\"],\"vokal\":[\"turkish\"],\"volkan\":[\"turkish\"],\"vurma\":[\"turkish\"],\"vurucu\":[\"turkish\"],\"vücut\":[\"turkish\"],\"yabancı\":[\"turkish\"],\"yabgu\":[\"turkish\"],\"yağış\":[\"turkish\"],\"yağlı\":[\"turkish\"],\"yağmur\":[\"turkish\"],\"yakamoz\":[\"turkish\"],\"yakın\":[\"turkish\"],\"yaklaşık\":[\"turkish\"],\"yalçın\":[\"turkish\"],\"yalıtım\":[\"turkish\"],\"yaman\":[\"turkish\"],\"yanardağ\":[\"turkish\"],\"yangın\":[\"turkish\"],\"yanıt\":[\"turkish\"],\"yankı\":[\"turkish\"],\"yanlış\":[\"turkish\"],\"yansıma\":[\"turkish\"],\"yapay\":[\"turkish\"],\"yapboz\":[\"turkish\"],\"yapımcı\":[\"turkish\"],\"yaprak\":[\"turkish\"],\"yaratık\":[\"turkish\"],\"yarbay\":[\"turkish\"],\"yardım\":[\"turkish\"],\"yargıç\":[\"turkish\"],\"yarıçap\":[\"turkish\"],\"yasemin\":[\"turkish\"],\"yastık\":[\"turkish\"],\"yaşam\":[\"turkish\"],\"yatak\":[\"turkish\"],\"yatırım\":[\"turkish\"],\"yavru\":[\"turkish\"],\"yaygara\":[\"turkish\"],\"yayıncı\":[\"turkish\"],\"yayla\":[\"turkish\"],\"yazılım\":[\"turkish\"],\"yekpare\":[\"turkish\"],\"yekvücut\":[\"turkish\"],\"yelkovan\":[\"turkish\"],\"yelpaze\":[\"turkish\"],\"yemek\":[\"turkish\"],\"yemiş\":[\"turkish\"],\"yengeç\":[\"turkish\"],\"yeniçeri\":[\"turkish\"],\"yeraltı\":[\"turkish\"],\"yerküre\":[\"turkish\"],\"yerleşke\":[\"turkish\"],\"yeryüzü\":[\"turkish\"],\"yeşil\":[\"turkish\"],\"yetenek\":[\"turkish\"],\"yetkili\":[\"turkish\"],\"yığınak\":[\"turkish\"],\"yıkama\":[\"turkish\"],\"yılbaşı\":[\"turkish\"],\"yıldırım\":[\"turkish\"],\"yılkı\":[\"turkish\"],\"yılmaz\":[\"turkish\"],\"yırtıcı\":[\"turkish\"],\"yiğit\":[\"turkish\"],\"yoğurt\":[\"turkish\"],\"yokuş\":[\"turkish\"],\"yolcu\":[\"turkish\"],\"yoldaş\":[\"turkish\"],\"yolgeçen\":[\"turkish\"],\"yolkesen\":[\"turkish\"],\"yolüstü\":[\"turkish\"],\"yordam\":[\"turkish\"],\"yorgan\":[\"turkish\"],\"yorumcu\":[\"turkish\"],\"yosun\":[\"turkish\"],\"yöndeş\":[\"turkish\"],\"yönetim\":[\"turkish\"],\"yönlü\":[\"turkish\"],\"yöntem\":[\"turkish\"],\"yöresel\":[\"turkish\"],\"yörünge\":[\"turkish\"],\"yufka\":[\"turkish\"],\"yukarı\":[\"turkish\"],\"yumruk\":[\"turkish\"],\"yumurta\":[\"turkish\"],\"yuvarlak\":[\"turkish\"],\"yücelme\":[\"turkish\"],\"yükçeker\":[\"turkish\"],\"yüklem\":[\"turkish\"],\"yüksek\":[\"turkish\"],\"yürek\":[\"turkish\"],\"yürütme\":[\"turkish\"],\"yüzde\":[\"turkish\"],\"yüzeysel\":[\"turkish\"],\"yüzgeç\":[\"turkish\"],\"yüzüstü\":[\"turkish\"],\"yüzyıl\":[\"turkish\"],\"zabıta\":[\"turkish\"],\"zafer\":[\"turkish\"],\"zahmet\":[\"turkish\"],\"zambak\":[\"turkish\"],\"zaptiye\":[\"turkish\"],\"zarafet\":[\"turkish\"],\"zaruret\":[\"turkish\"],\"zeka\":[\"turkish\"],\"zekice\":[\"turkish\"],\"zemberek\":[\"turkish\"],\"zemin\":[\"turkish\"],\"zencefil\":[\"turkish\"],\"zeplin\":[\"turkish\"],\"zeytin\":[\"turkish\"],\"zıbın\":[\"turkish\"],\"zılgıt\":[\"turkish\"],\"zımbırtı\":[\"turkish\"],\"zımpara\":[\"turkish\"],\"zıpkın\":[\"turkish\"],\"zigon\":[\"turkish\"],\"zihinsel\":[\"turkish\"],\"zihniyet\":[\"turkish\"],\"zincir\":[\"turkish\"],\"zindan\":[\"turkish\"],\"zirzop\":[\"turkish\"],\"ziyaret\":[\"turkish\"],\"ziynet\":[\"turkish\"],\"zoraki\":[\"turkish\"],\"zorlu\":[\"turkish\"],\"zorunlu\":[\"turkish\"],\"züğürt\":[\"turkish\"],\"zümre\":[\"turkish\"]}[\"abacate\",\"abaixo\",\"abalar\",\"abater\",\"abduzir\",\"abelha\",\"aberto\",\"abismo\",\"abotoar\",\"abranger\",\"abreviar\",\"abrigar\",\"abrupto\",\"absinto\",\"absoluto\",\"absurdo\",\"abutre\",\"acabado\",\"acalmar\",\"acampar\",\"acanhar\",\"acaso\",\"aceitar\",\"acelerar\",\"acenar\",\"acervo\",\"acessar\",\"acetona\",\"achatar\",\"acidez\",\"acima\",\"acionado\",\"acirrar\",\"aclamar\",\"aclive\",\"acolhida\",\"acomodar\",\"acoplar\",\"acordar\",\"acumular\",\"acusador\",\"adaptar\",\"adega\",\"adentro\",\"adepto\",\"adequar\",\"aderente\",\"adesivo\",\"adeus\",\"adiante\",\"aditivo\",\"adjetivo\",\"adjunto\",\"admirar\",\"adorar\",\"adquirir\",\"adubo\",\"adverso\",\"advogado\",\"aeronave\",\"afastar\",\"aferir\",\"afetivo\",\"afinador\",\"afivelar\",\"aflito\",\"afluente\",\"afrontar\",\"agachar\",\"agarrar\",\"agasalho\",\"agenciar\",\"agilizar\",\"agiota\",\"agitado\",\"agora\",\"agradar\",\"agreste\",\"agrupar\",\"aguardar\",\"agulha\",\"ajoelhar\",\"ajudar\",\"ajustar\",\"alameda\",\"alarme\",\"alastrar\",\"alavanca\",\"albergue\",\"albino\",\"alcatra\",\"aldeia\",\"alecrim\",\"alegria\",\"alertar\",\"alface\",\"alfinete\",\"algum\",\"alheio\",\"aliar\",\"alicate\",\"alienar\",\"alinhar\",\"aliviar\",\"almofada\",\"alocar\",\"alpiste\",\"alterar\",\"altitude\",\"alucinar\",\"alugar\",\"aluno\",\"alusivo\",\"alvo\",\"amaciar\",\"amador\",\"amarelo\",\"amassar\",\"ambas\",\"ambiente\",\"ameixa\",\"amenizar\",\"amido\",\"amistoso\",\"amizade\",\"amolador\",\"amontoar\",\"amoroso\",\"amostra\",\"amparar\",\"ampliar\",\"ampola\",\"anagrama\",\"analisar\",\"anarquia\",\"anatomia\",\"andaime\",\"anel\",\"anexo\",\"angular\",\"animar\",\"anjo\",\"anomalia\",\"anotado\",\"ansioso\",\"anterior\",\"anuidade\",\"anunciar\",\"anzol\",\"apagador\",\"apalpar\",\"apanhado\",\"apego\",\"apelido\",\"apertada\",\"apesar\",\"apetite\",\"apito\",\"aplauso\",\"aplicada\",\"apoio\",\"apontar\",\"aposta\",\"aprendiz\",\"aprovar\",\"aquecer\",\"arame\",\"aranha\",\"arara\",\"arcada\",\"ardente\",\"areia\",\"arejar\",\"arenito\",\"aresta\",\"argiloso\",\"argola\",\"arma\",\"arquivo\",\"arraial\",\"arrebate\",\"arriscar\",\"arroba\",\"arrumar\",\"arsenal\",\"arterial\",\"artigo\",\"arvoredo\",\"asfaltar\",\"asilado\",\"aspirar\",\"assador\",\"assinar\",\"assoalho\",\"assunto\",\"astral\",\"atacado\",\"atadura\",\"atalho\",\"atarefar\",\"atear\",\"atender\",\"aterro\",\"ateu\",\"atingir\",\"atirador\",\"ativo\",\"atoleiro\",\"atracar\",\"atrevido\",\"atriz\",\"atual\",\"atum\",\"auditor\",\"aumentar\",\"aura\",\"aurora\",\"autismo\",\"autoria\",\"autuar\",\"avaliar\",\"avante\",\"avaria\",\"avental\",\"avesso\",\"aviador\",\"avisar\",\"avulso\",\"axila\",\"azarar\",\"azedo\",\"azeite\",\"azulejo\",\"babar\",\"babosa\",\"bacalhau\",\"bacharel\",\"bacia\",\"bagagem\",\"baiano\",\"bailar\",\"baioneta\",\"bairro\",\"baixista\",\"bajular\",\"baleia\",\"baliza\",\"balsa\",\"banal\",\"bandeira\",\"banho\",\"banir\",\"banquete\",\"barato\",\"barbado\",\"baronesa\",\"barraca\",\"barulho\",\"baseado\",\"bastante\",\"batata\",\"batedor\",\"batida\",\"batom\",\"batucar\",\"baunilha\",\"beber\",\"beijo\",\"beirada\",\"beisebol\",\"beldade\",\"beleza\",\"belga\",\"beliscar\",\"bendito\",\"bengala\",\"benzer\",\"berimbau\",\"berlinda\",\"berro\",\"besouro\",\"bexiga\",\"bezerro\",\"bico\",\"bicudo\",\"bienal\",\"bifocal\",\"bifurcar\",\"bigorna\",\"bilhete\",\"bimestre\",\"bimotor\",\"biologia\",\"biombo\",\"biosfera\",\"bipolar\",\"birrento\",\"biscoito\",\"bisneto\",\"bispo\",\"bissexto\",\"bitola\",\"bizarro\",\"blindado\",\"bloco\",\"bloquear\",\"boato\",\"bobagem\",\"bocado\",\"bocejo\",\"bochecha\",\"boicotar\",\"bolada\",\"boletim\",\"bolha\",\"bolo\",\"bombeiro\",\"bonde\",\"boneco\",\"bonita\",\"borbulha\",\"borda\",\"boreal\",\"borracha\",\"bovino\",\"boxeador\",\"branco\",\"brasa\",\"braveza\",\"breu\",\"briga\",\"brilho\",\"brincar\",\"broa\",\"brochura\",\"bronzear\",\"broto\",\"bruxo\",\"bucha\",\"budismo\",\"bufar\",\"bule\",\"buraco\",\"busca\",\"busto\",\"buzina\",\"cabana\",\"cabelo\",\"cabide\",\"cabo\",\"cabrito\",\"cacau\",\"cacetada\",\"cachorro\",\"cacique\",\"cadastro\",\"cadeado\",\"cafezal\",\"caiaque\",\"caipira\",\"caixote\",\"cajado\",\"caju\",\"calafrio\",\"calcular\",\"caldeira\",\"calibrar\",\"calmante\",\"calota\",\"camada\",\"cambista\",\"camisa\",\"camomila\",\"campanha\",\"camuflar\",\"canavial\",\"cancelar\",\"caneta\",\"canguru\",\"canhoto\",\"canivete\",\"canoa\",\"cansado\",\"cantar\",\"canudo\",\"capacho\",\"capela\",\"capinar\",\"capotar\",\"capricho\",\"captador\",\"capuz\",\"caracol\",\"carbono\",\"cardeal\",\"careca\",\"carimbar\",\"carneiro\",\"carpete\",\"carreira\",\"cartaz\",\"carvalho\",\"casaco\",\"casca\",\"casebre\",\"castelo\",\"casulo\",\"catarata\",\"cativar\",\"caule\",\"causador\",\"cautelar\",\"cavalo\",\"caverna\",\"cebola\",\"cedilha\",\"cegonha\",\"celebrar\",\"celular\",\"cenoura\",\"censo\",\"centeio\",\"cercar\",\"cerrado\",\"certeiro\",\"cerveja\",\"cetim\",\"cevada\",\"chacota\",\"chaleira\",\"chamado\",\"chapada\",\"charme\",\"chatice\",\"chave\",\"chefe\",\"chegada\",\"cheiro\",\"cheque\",\"chicote\",\"chifre\",\"chinelo\",\"chocalho\",\"chover\",\"chumbo\",\"chutar\",\"chuva\",\"cicatriz\",\"ciclone\",\"cidade\",\"cidreira\",\"ciente\",\"cigana\",\"cimento\",\"cinto\",\"cinza\",\"ciranda\",\"circuito\",\"cirurgia\",\"citar\",\"clareza\",\"clero\",\"clicar\",\"clone\",\"clube\",\"coado\",\"coagir\",\"cobaia\",\"cobertor\",\"cobrar\",\"cocada\",\"coelho\",\"coentro\",\"coeso\",\"cogumelo\",\"coibir\",\"coifa\",\"coiote\",\"colar\",\"coleira\",\"colher\",\"colidir\",\"colmeia\",\"colono\",\"coluna\",\"comando\",\"combinar\",\"comentar\",\"comitiva\",\"comover\",\"complexo\",\"comum\",\"concha\",\"condor\",\"conectar\",\"confuso\",\"congelar\",\"conhecer\",\"conjugar\",\"consumir\",\"contrato\",\"convite\",\"cooperar\",\"copeiro\",\"copiador\",\"copo\",\"coquetel\",\"coragem\",\"cordial\",\"corneta\",\"coronha\",\"corporal\",\"correio\",\"cortejo\",\"coruja\",\"corvo\",\"cosseno\",\"costela\",\"cotonete\",\"couro\",\"couve\",\"covil\",\"cozinha\",\"cratera\",\"cravo\",\"creche\",\"credor\",\"creme\",\"crer\",\"crespo\",\"criada\",\"criminal\",\"crioulo\",\"crise\",\"criticar\",\"crosta\",\"crua\",\"cruzeiro\",\"cubano\",\"cueca\",\"cuidado\",\"cujo\",\"culatra\",\"culminar\",\"culpar\",\"cultura\",\"cumprir\",\"cunhado\",\"cupido\",\"curativo\",\"curral\",\"cursar\",\"curto\",\"cuspir\",\"custear\",\"cutelo\",\"damasco\",\"datar\",\"debater\",\"debitar\",\"deboche\",\"debulhar\",\"decalque\",\"decimal\",\"declive\",\"decote\",\"decretar\",\"dedal\",\"dedicado\",\"deduzir\",\"defesa\",\"defumar\",\"degelo\",\"degrau\",\"degustar\",\"deitado\",\"deixar\",\"delator\",\"delegado\",\"delinear\",\"delonga\",\"demanda\",\"demitir\",\"demolido\",\"dentista\",\"depenado\",\"depilar\",\"depois\",\"depressa\",\"depurar\",\"deriva\",\"derramar\",\"desafio\",\"desbotar\",\"descanso\",\"desenho\",\"desfiado\",\"desgaste\",\"desigual\",\"deslize\",\"desmamar\",\"desova\",\"despesa\",\"destaque\",\"desviar\",\"detalhar\",\"detentor\",\"detonar\",\"detrito\",\"deusa\",\"dever\",\"devido\",\"devotado\",\"dezena\",\"diagrama\",\"dialeto\",\"didata\",\"difuso\",\"digitar\",\"dilatado\",\"diluente\",\"diminuir\",\"dinastia\",\"dinheiro\",\"diocese\",\"direto\",\"discreta\",\"disfarce\",\"disparo\",\"disquete\",\"dissipar\",\"distante\",\"ditador\",\"diurno\",\"diverso\",\"divisor\",\"divulgar\",\"dizer\",\"dobrador\",\"dolorido\",\"domador\",\"dominado\",\"donativo\",\"donzela\",\"dormente\",\"dorsal\",\"dosagem\",\"dourado\",\"doutor\",\"drenagem\",\"drible\",\"drogaria\",\"duelar\",\"duende\",\"dueto\",\"duplo\",\"duquesa\",\"durante\",\"duvidoso\",\"eclodir\",\"ecoar\",\"ecologia\",\"edificar\",\"edital\",\"educado\",\"efeito\",\"efetivar\",\"ejetar\",\"elaborar\",\"eleger\",\"eleitor\",\"elenco\",\"elevador\",\"eliminar\",\"elogiar\",\"embargo\",\"embolado\",\"embrulho\",\"embutido\",\"emenda\",\"emergir\",\"emissor\",\"empatia\",\"empenho\",\"empinado\",\"empolgar\",\"emprego\",\"empurrar\",\"emulador\",\"encaixe\",\"encenado\",\"enchente\",\"encontro\",\"endeusar\",\"endossar\",\"enfaixar\",\"enfeite\",\"enfim\",\"engajado\",\"engenho\",\"englobar\",\"engomado\",\"engraxar\",\"enguia\",\"enjoar\",\"enlatar\",\"enquanto\",\"enraizar\",\"enrolado\",\"enrugar\",\"ensaio\",\"enseada\",\"ensino\",\"ensopado\",\"entanto\",\"enteado\",\"entidade\",\"entortar\",\"entrada\",\"entulho\",\"envergar\",\"enviado\",\"envolver\",\"enxame\",\"enxerto\",\"enxofre\",\"enxuto\",\"epiderme\",\"equipar\",\"ereto\",\"erguido\",\"errata\",\"erva\",\"ervilha\",\"esbanjar\",\"esbelto\",\"escama\",\"escola\",\"escrita\",\"escuta\",\"esfinge\",\"esfolar\",\"esfregar\",\"esfumado\",\"esgrima\",\"esmalte\",\"espanto\",\"espelho\",\"espiga\",\"esponja\",\"espreita\",\"espumar\",\"esquerda\",\"estaca\",\"esteira\",\"esticar\",\"estofado\",\"estrela\",\"estudo\",\"esvaziar\",\"etanol\",\"etiqueta\",\"euforia\",\"europeu\",\"evacuar\",\"evaporar\",\"evasivo\",\"eventual\",\"evidente\",\"evoluir\",\"exagero\",\"exalar\",\"examinar\",\"exato\",\"exausto\",\"excesso\",\"excitar\",\"exclamar\",\"executar\",\"exemplo\",\"exibir\",\"exigente\",\"exonerar\",\"expandir\",\"expelir\",\"expirar\",\"explanar\",\"exposto\",\"expresso\",\"expulsar\",\"externo\",\"extinto\",\"extrato\",\"fabricar\",\"fabuloso\",\"faceta\",\"facial\",\"fada\",\"fadiga\",\"faixa\",\"falar\",\"falta\",\"familiar\",\"fandango\",\"fanfarra\",\"fantoche\",\"fardado\",\"farelo\",\"farinha\",\"farofa\",\"farpa\",\"fartura\",\"fatia\",\"fator\",\"favorita\",\"faxina\",\"fazenda\",\"fechado\",\"feijoada\",\"feirante\",\"felino\",\"feminino\",\"fenda\",\"feno\",\"fera\",\"feriado\",\"ferrugem\",\"ferver\",\"festejar\",\"fetal\",\"feudal\",\"fiapo\",\"fibrose\",\"ficar\",\"ficheiro\",\"figurado\",\"fileira\",\"filho\",\"filme\",\"filtrar\",\"firmeza\",\"fisgada\",\"fissura\",\"fita\",\"fivela\",\"fixador\",\"fixo\",\"flacidez\",\"flamingo\",\"flanela\",\"flechada\",\"flora\",\"flutuar\",\"fluxo\",\"focal\",\"focinho\",\"fofocar\",\"fogo\",\"foguete\",\"foice\",\"folgado\",\"folheto\",\"forjar\",\"formiga\",\"forno\",\"forte\",\"fosco\",\"fossa\",\"fragata\",\"fralda\",\"frango\",\"frasco\",\"fraterno\",\"freira\",\"frente\",\"fretar\",\"frieza\",\"friso\",\"fritura\",\"fronha\",\"frustrar\",\"fruteira\",\"fugir\",\"fulano\",\"fuligem\",\"fundar\",\"fungo\",\"funil\",\"furador\",\"furioso\",\"futebol\",\"gabarito\",\"gabinete\",\"gado\",\"gaiato\",\"gaiola\",\"gaivota\",\"galega\",\"galho\",\"galinha\",\"galocha\",\"ganhar\",\"garagem\",\"garfo\",\"gargalo\",\"garimpo\",\"garoupa\",\"garrafa\",\"gasoduto\",\"gasto\",\"gata\",\"gatilho\",\"gaveta\",\"gazela\",\"gelado\",\"geleia\",\"gelo\",\"gemada\",\"gemer\",\"gemido\",\"generoso\",\"gengiva\",\"genial\",\"genoma\",\"genro\",\"geologia\",\"gerador\",\"germinar\",\"gesso\",\"gestor\",\"ginasta\",\"gincana\",\"gingado\",\"girafa\",\"girino\",\"glacial\",\"glicose\",\"global\",\"glorioso\",\"goela\",\"goiaba\",\"golfe\",\"golpear\",\"gordura\",\"gorjeta\",\"gorro\",\"gostoso\",\"goteira\",\"governar\",\"gracejo\",\"gradual\",\"grafite\",\"gralha\",\"grampo\",\"granada\",\"gratuito\",\"graveto\",\"graxa\",\"grego\",\"grelhar\",\"greve\",\"grilo\",\"grisalho\",\"gritaria\",\"grosso\",\"grotesco\",\"grudado\",\"grunhido\",\"gruta\",\"guache\",\"guarani\",\"guaxinim\",\"guerrear\",\"guiar\",\"guincho\",\"guisado\",\"gula\",\"guloso\",\"guru\",\"habitar\",\"harmonia\",\"haste\",\"haver\",\"hectare\",\"herdar\",\"heresia\",\"hesitar\",\"hiato\",\"hibernar\",\"hidratar\",\"hiena\",\"hino\",\"hipismo\",\"hipnose\",\"hipoteca\",\"hoje\",\"holofote\",\"homem\",\"honesto\",\"honrado\",\"hormonal\",\"hospedar\",\"humorado\",\"iate\",\"ideia\",\"idoso\",\"ignorado\",\"igreja\",\"iguana\",\"ileso\",\"ilha\",\"iludido\",\"iluminar\",\"ilustrar\",\"imagem\",\"imediato\",\"imenso\",\"imersivo\",\"iminente\",\"imitador\",\"imortal\",\"impacto\",\"impedir\",\"implante\",\"impor\",\"imprensa\",\"impune\",\"imunizar\",\"inalador\",\"inapto\",\"inativo\",\"incenso\",\"inchar\",\"incidir\",\"incluir\",\"incolor\",\"indeciso\",\"indireto\",\"indutor\",\"ineficaz\",\"inerente\",\"infantil\",\"infestar\",\"infinito\",\"inflamar\",\"informal\",\"infrator\",\"ingerir\",\"inibido\",\"inicial\",\"inimigo\",\"injetar\",\"inocente\",\"inodoro\",\"inovador\",\"inox\",\"inquieto\",\"inscrito\",\"inseto\",\"insistir\",\"inspetor\",\"instalar\",\"insulto\",\"intacto\",\"integral\",\"intimar\",\"intocado\",\"intriga\",\"invasor\",\"inverno\",\"invicto\",\"invocar\",\"iogurte\",\"iraniano\",\"ironizar\",\"irreal\",\"irritado\",\"isca\",\"isento\",\"isolado\",\"isqueiro\",\"italiano\",\"janeiro\",\"jangada\",\"janta\",\"jararaca\",\"jardim\",\"jarro\",\"jasmim\",\"jato\",\"javali\",\"jazida\",\"jejum\",\"joaninha\",\"joelhada\",\"jogador\",\"joia\",\"jornal\",\"jorrar\",\"jovem\",\"juba\",\"judeu\",\"judoca\",\"juiz\",\"julgador\",\"julho\",\"jurado\",\"jurista\",\"juro\",\"justa\",\"labareda\",\"laboral\",\"lacre\",\"lactante\",\"ladrilho\",\"lagarta\",\"lagoa\",\"laje\",\"lamber\",\"lamentar\",\"laminar\",\"lampejo\",\"lanche\",\"lapidar\",\"lapso\",\"laranja\",\"lareira\",\"largura\",\"lasanha\",\"lastro\",\"lateral\",\"latido\",\"lavanda\",\"lavoura\",\"lavrador\",\"laxante\",\"lazer\",\"lealdade\",\"lebre\",\"legado\",\"legendar\",\"legista\",\"leigo\",\"leiloar\",\"leitura\",\"lembrete\",\"leme\",\"lenhador\",\"lentilha\",\"leoa\",\"lesma\",\"leste\",\"letivo\",\"letreiro\",\"levar\",\"leveza\",\"levitar\",\"liberal\",\"libido\",\"liderar\",\"ligar\",\"ligeiro\",\"limitar\",\"limoeiro\",\"limpador\",\"linda\",\"linear\",\"linhagem\",\"liquidez\",\"listagem\",\"lisura\",\"litoral\",\"livro\",\"lixa\",\"lixeira\",\"locador\",\"locutor\",\"lojista\",\"lombo\",\"lona\",\"longe\",\"lontra\",\"lorde\",\"lotado\",\"loteria\",\"loucura\",\"lousa\",\"louvar\",\"luar\",\"lucidez\",\"lucro\",\"luneta\",\"lustre\",\"lutador\",\"luva\",\"macaco\",\"macete\",\"machado\",\"macio\",\"madeira\",\"madrinha\",\"magnata\",\"magreza\",\"maior\",\"mais\",\"malandro\",\"malha\",\"malote\",\"maluco\",\"mamilo\",\"mamoeiro\",\"mamute\",\"manada\",\"mancha\",\"mandato\",\"manequim\",\"manhoso\",\"manivela\",\"manobrar\",\"mansa\",\"manter\",\"manusear\",\"mapeado\",\"maquinar\",\"marcador\",\"maresia\",\"marfim\",\"margem\",\"marinho\",\"marmita\",\"maroto\",\"marquise\",\"marreco\",\"martelo\",\"marujo\",\"mascote\",\"masmorra\",\"massagem\",\"mastigar\",\"matagal\",\"materno\",\"matinal\",\"matutar\",\"maxilar\",\"medalha\",\"medida\",\"medusa\",\"megafone\",\"meiga\",\"melancia\",\"melhor\",\"membro\",\"memorial\",\"menino\",\"menos\",\"mensagem\",\"mental\",\"merecer\",\"mergulho\",\"mesada\",\"mesclar\",\"mesmo\",\"mesquita\",\"mestre\",\"metade\",\"meteoro\",\"metragem\",\"mexer\",\"mexicano\",\"micro\",\"migalha\",\"migrar\",\"milagre\",\"milenar\",\"milhar\",\"mimado\",\"minerar\",\"minhoca\",\"ministro\",\"minoria\",\"miolo\",\"mirante\",\"mirtilo\",\"misturar\",\"mocidade\",\"moderno\",\"modular\",\"moeda\",\"moer\",\"moinho\",\"moita\",\"moldura\",\"moleza\",\"molho\",\"molinete\",\"molusco\",\"montanha\",\"moqueca\",\"morango\",\"morcego\",\"mordomo\",\"morena\",\"mosaico\",\"mosquete\",\"mostarda\",\"motel\",\"motim\",\"moto\",\"motriz\",\"muda\",\"muito\",\"mulata\",\"mulher\",\"multar\",\"mundial\",\"munido\",\"muralha\",\"murcho\",\"muscular\",\"museu\",\"musical\",\"nacional\",\"nadador\",\"naja\",\"namoro\",\"narina\",\"narrado\",\"nascer\",\"nativa\",\"natureza\",\"navalha\",\"navegar\",\"navio\",\"neblina\",\"nebuloso\",\"negativa\",\"negociar\",\"negrito\",\"nervoso\",\"neta\",\"neural\",\"nevasca\",\"nevoeiro\",\"ninar\",\"ninho\",\"nitidez\",\"nivelar\",\"nobreza\",\"noite\",\"noiva\",\"nomear\",\"nominal\",\"nordeste\",\"nortear\",\"notar\",\"noticiar\",\"noturno\",\"novelo\",\"novilho\",\"novo\",\"nublado\",\"nudez\",\"numeral\",\"nupcial\",\"nutrir\",\"nuvem\",\"obcecado\",\"obedecer\",\"objetivo\",\"obrigado\",\"obscuro\",\"obstetra\",\"obter\",\"obturar\",\"ocidente\",\"ocioso\",\"ocorrer\",\"oculista\",\"ocupado\",\"ofegante\",\"ofensiva\",\"oferenda\",\"oficina\",\"ofuscado\",\"ogiva\",\"olaria\",\"oleoso\",\"olhar\",\"oliveira\",\"ombro\",\"omelete\",\"omisso\",\"omitir\",\"ondulado\",\"oneroso\",\"ontem\",\"opcional\",\"operador\",\"oponente\",\"oportuno\",\"oposto\",\"orar\",\"orbitar\",\"ordem\",\"ordinal\",\"orfanato\",\"orgasmo\",\"orgulho\",\"oriental\",\"origem\",\"oriundo\",\"orla\",\"ortodoxo\",\"orvalho\",\"oscilar\",\"ossada\",\"osso\",\"ostentar\",\"otimismo\",\"ousadia\",\"outono\",\"outubro\",\"ouvido\",\"ovelha\",\"ovular\",\"oxidar\",\"oxigenar\",\"pacato\",\"paciente\",\"pacote\",\"pactuar\",\"padaria\",\"padrinho\",\"pagar\",\"pagode\",\"painel\",\"pairar\",\"paisagem\",\"palavra\",\"palestra\",\"palheta\",\"palito\",\"palmada\",\"palpitar\",\"pancada\",\"panela\",\"panfleto\",\"panqueca\",\"pantanal\",\"papagaio\",\"papelada\",\"papiro\",\"parafina\",\"parcial\",\"pardal\",\"parede\",\"partida\",\"pasmo\",\"passado\",\"pastel\",\"patamar\",\"patente\",\"patinar\",\"patrono\",\"paulada\",\"pausar\",\"peculiar\",\"pedalar\",\"pedestre\",\"pediatra\",\"pedra\",\"pegada\",\"peitoral\",\"peixe\",\"pele\",\"pelicano\",\"penca\",\"pendurar\",\"peneira\",\"penhasco\",\"pensador\",\"pente\",\"perceber\",\"perfeito\",\"pergunta\",\"perito\",\"permitir\",\"perna\",\"perplexo\",\"persiana\",\"pertence\",\"peruca\",\"pescado\",\"pesquisa\",\"pessoa\",\"petiscar\",\"piada\",\"picado\",\"piedade\",\"pigmento\",\"pilastra\",\"pilhado\",\"pilotar\",\"pimenta\",\"pincel\",\"pinguim\",\"pinha\",\"pinote\",\"pintar\",\"pioneiro\",\"pipoca\",\"piquete\",\"piranha\",\"pires\",\"pirueta\",\"piscar\",\"pistola\",\"pitanga\",\"pivete\",\"planta\",\"plaqueta\",\"platina\",\"plebeu\",\"plumagem\",\"pluvial\",\"pneu\",\"poda\",\"poeira\",\"poetisa\",\"polegada\",\"policiar\",\"poluente\",\"polvilho\",\"pomar\",\"pomba\",\"ponderar\",\"pontaria\",\"populoso\",\"porta\",\"possuir\",\"postal\",\"pote\",\"poupar\",\"pouso\",\"povoar\",\"praia\",\"prancha\",\"prato\",\"praxe\",\"prece\",\"predador\",\"prefeito\",\"premiar\",\"prensar\",\"preparar\",\"presilha\",\"pretexto\",\"prevenir\",\"prezar\",\"primata\",\"princesa\",\"prisma\",\"privado\",\"processo\",\"produto\",\"profeta\",\"proibido\",\"projeto\",\"prometer\",\"propagar\",\"prosa\",\"protetor\",\"provador\",\"publicar\",\"pudim\",\"pular\",\"pulmonar\",\"pulseira\",\"punhal\",\"punir\",\"pupilo\",\"pureza\",\"puxador\",\"quadra\",\"quantia\",\"quarto\",\"quase\",\"quebrar\",\"queda\",\"queijo\",\"quente\",\"querido\",\"quimono\",\"quina\",\"quiosque\",\"rabanada\",\"rabisco\",\"rachar\",\"racionar\",\"radial\",\"raiar\",\"rainha\",\"raio\",\"raiva\",\"rajada\",\"ralado\",\"ramal\",\"ranger\",\"ranhura\",\"rapadura\",\"rapel\",\"rapidez\",\"raposa\",\"raquete\",\"raridade\",\"rasante\",\"rascunho\",\"rasgar\",\"raspador\",\"rasteira\",\"rasurar\",\"ratazana\",\"ratoeira\",\"realeza\",\"reanimar\",\"reaver\",\"rebaixar\",\"rebelde\",\"rebolar\",\"recado\",\"recente\",\"recheio\",\"recibo\",\"recordar\",\"recrutar\",\"recuar\",\"rede\",\"redimir\",\"redonda\",\"reduzida\",\"reenvio\",\"refinar\",\"refletir\",\"refogar\",\"refresco\",\"refugiar\",\"regalia\",\"regime\",\"regra\",\"reinado\",\"reitor\",\"rejeitar\",\"relativo\",\"remador\",\"remendo\",\"remorso\",\"renovado\",\"reparo\",\"repelir\",\"repleto\",\"repolho\",\"represa\",\"repudiar\",\"requerer\",\"resenha\",\"resfriar\",\"resgatar\",\"residir\",\"resolver\",\"respeito\",\"ressaca\",\"restante\",\"resumir\",\"retalho\",\"reter\",\"retirar\",\"retomada\",\"retratar\",\"revelar\",\"revisor\",\"revolta\",\"riacho\",\"rica\",\"rigidez\",\"rigoroso\",\"rimar\",\"ringue\",\"risada\",\"risco\",\"risonho\",\"robalo\",\"rochedo\",\"rodada\",\"rodeio\",\"rodovia\",\"roedor\",\"roleta\",\"romano\",\"roncar\",\"rosado\",\"roseira\",\"rosto\",\"rota\",\"roteiro\",\"rotina\",\"rotular\",\"rouco\",\"roupa\",\"roxo\",\"rubro\",\"rugido\",\"rugoso\",\"ruivo\",\"rumo\",\"rupestre\",\"russo\",\"sabor\",\"saciar\",\"sacola\",\"sacudir\",\"sadio\",\"safira\",\"saga\",\"sagrada\",\"saibro\",\"salada\",\"saleiro\",\"salgado\",\"saliva\",\"salpicar\",\"salsicha\",\"saltar\",\"salvador\",\"sambar\",\"samurai\",\"sanar\",\"sanfona\",\"sangue\",\"sanidade\",\"sapato\",\"sarda\",\"sargento\",\"sarjeta\",\"saturar\",\"saudade\",\"saxofone\",\"sazonal\",\"secar\",\"secular\",\"seda\",\"sedento\",\"sediado\",\"sedoso\",\"sedutor\",\"segmento\",\"segredo\",\"segundo\",\"seiva\",\"seleto\",\"selvagem\",\"semanal\",\"semente\",\"senador\",\"senhor\",\"sensual\",\"sentado\",\"separado\",\"sereia\",\"seringa\",\"serra\",\"servo\",\"setembro\",\"setor\",\"sigilo\",\"silhueta\",\"silicone\",\"simetria\",\"simpatia\",\"simular\",\"sinal\",\"sincero\",\"singular\",\"sinopse\",\"sintonia\",\"sirene\",\"siri\",\"situado\",\"soberano\",\"sobra\",\"socorro\",\"sogro\",\"soja\",\"solda\",\"soletrar\",\"solteiro\",\"sombrio\",\"sonata\",\"sondar\",\"sonegar\",\"sonhador\",\"sono\",\"soprano\",\"soquete\",\"sorrir\",\"sorteio\",\"sossego\",\"sotaque\",\"soterrar\",\"sovado\",\"sozinho\",\"suavizar\",\"subida\",\"submerso\",\"subsolo\",\"subtrair\",\"sucata\",\"sucesso\",\"suco\",\"sudeste\",\"sufixo\",\"sugador\",\"sugerir\",\"sujeito\",\"sulfato\",\"sumir\",\"suor\",\"superior\",\"suplicar\",\"suposto\",\"suprimir\",\"surdina\",\"surfista\",\"surpresa\",\"surreal\",\"surtir\",\"suspiro\",\"sustento\",\"tabela\",\"tablete\",\"tabuada\",\"tacho\",\"tagarela\",\"talher\",\"talo\",\"talvez\",\"tamanho\",\"tamborim\",\"tampa\",\"tangente\",\"tanto\",\"tapar\",\"tapioca\",\"tardio\",\"tarefa\",\"tarja\",\"tarraxa\",\"tatuagem\",\"taurino\",\"taxativo\",\"taxista\",\"teatral\",\"tecer\",\"tecido\",\"teclado\",\"tedioso\",\"teia\",\"teimar\",\"telefone\",\"telhado\",\"tempero\",\"tenente\",\"tensor\",\"tentar\",\"termal\",\"terno\",\"terreno\",\"tese\",\"tesoura\",\"testado\",\"teto\",\"textura\",\"texugo\",\"tiara\",\"tigela\",\"tijolo\",\"timbrar\",\"timidez\",\"tingido\",\"tinteiro\",\"tiragem\",\"titular\",\"toalha\",\"tocha\",\"tolerar\",\"tolice\",\"tomada\",\"tomilho\",\"tonel\",\"tontura\",\"topete\",\"tora\",\"torcido\",\"torneio\",\"torque\",\"torrada\",\"torto\",\"tostar\",\"touca\",\"toupeira\",\"toxina\",\"trabalho\",\"tracejar\",\"tradutor\",\"trafegar\",\"trajeto\",\"trama\",\"trancar\",\"trapo\",\"traseiro\",\"tratador\",\"travar\",\"treino\",\"tremer\",\"trepidar\",\"trevo\",\"triagem\",\"tribo\",\"triciclo\",\"tridente\",\"trilogia\",\"trindade\",\"triplo\",\"triturar\",\"triunfal\",\"trocar\",\"trombeta\",\"trova\",\"trunfo\",\"truque\",\"tubular\",\"tucano\",\"tudo\",\"tulipa\",\"tupi\",\"turbo\",\"turma\",\"turquesa\",\"tutelar\",\"tutorial\",\"uivar\",\"umbigo\",\"unha\",\"unidade\",\"uniforme\",\"urologia\",\"urso\",\"urtiga\",\"urubu\",\"usado\",\"usina\",\"usufruir\",\"vacina\",\"vadiar\",\"vagaroso\",\"vaidoso\",\"vala\",\"valente\",\"validade\",\"valores\",\"vantagem\",\"vaqueiro\",\"varanda\",\"vareta\",\"varrer\",\"vascular\",\"vasilha\",\"vassoura\",\"vazar\",\"vazio\",\"veado\",\"vedar\",\"vegetar\",\"veicular\",\"veleiro\",\"velhice\",\"veludo\",\"vencedor\",\"vendaval\",\"venerar\",\"ventre\",\"verbal\",\"verdade\",\"vereador\",\"vergonha\",\"vermelho\",\"verniz\",\"versar\",\"vertente\",\"vespa\",\"vestido\",\"vetorial\",\"viaduto\",\"viagem\",\"viajar\",\"viatura\",\"vibrador\",\"videira\",\"vidraria\",\"viela\",\"viga\",\"vigente\",\"vigiar\",\"vigorar\",\"vilarejo\",\"vinco\",\"vinheta\",\"vinil\",\"violeta\",\"virada\",\"virtude\",\"visitar\",\"visto\",\"vitral\",\"viveiro\",\"vizinho\",\"voador\",\"voar\",\"vogal\",\"volante\",\"voleibol\",\"voltagem\",\"volumoso\",\"vontade\",\"vulto\",\"vuvuzela\",\"xadrez\",\"xarope\",\"xeque\",\"xeretar\",\"xerife\",\"xingar\",\"zangado\",\"zarpar\",\"zebu\",\"zelador\",\"zombar\",\"zoologia\",\"zumbido\"][\"абзац\",\"абонент\",\"абсурд\",\"авангард\",\"авария\",\"август\",\"авиация\",\"автор\",\"агент\",\"агитация\",\"агрегат\",\"адвокат\",\"адмирал\",\"адрес\",\"азарт\",\"азот\",\"академия\",\"аквариум\",\"аксиома\",\"акула\",\"акцент\",\"акция\",\"аллея\",\"алмаз\",\"алтарь\",\"альбом\",\"альянс\",\"амбиция\",\"анализ\",\"анекдот\",\"анкета\",\"ансамбль\",\"антенна\",\"апельсин\",\"аппарат\",\"аппетит\",\"апрель\",\"аптека\",\"арбуз\",\"аргумент\",\"аренда\",\"арест\",\"армия\",\"аромат\",\"арсенал\",\"артерия\",\"артист\",\"архив\",\"аспирант\",\"асфальт\",\"атака\",\"атомный\",\"атрибут\",\"аукцион\",\"афиша\",\"аэропорт\",\"бабочка\",\"бабушка\",\"багаж\",\"база\",\"бактерия\",\"баланс\",\"балерина\",\"балкон\",\"бандит\",\"банк\",\"барабан\",\"барон\",\"барышня\",\"барьер\",\"бассейн\",\"батарея\",\"башмак\",\"башня\",\"бедный\",\"беженец\",\"бездна\",\"белка\",\"белый\",\"бензин\",\"берег\",\"беседа\",\"бешеный\",\"билет\",\"бинокль\",\"биржа\",\"битва\",\"благо\",\"блеск\",\"близкий\",\"блин\",\"блок\",\"блюдо\",\"богатый\",\"бодрый\",\"боец\",\"бокал\",\"боковой\",\"бокс\",\"более\",\"болото\",\"болтать\",\"большой\",\"бомба\",\"борт\",\"борьба\",\"босой\",\"ботинок\",\"бояться\",\"брак\",\"брать\",\"бревно\",\"бред\",\"бригада\",\"бродяга\",\"броня\",\"бросить\",\"брызги\",\"брюки\",\"брюхо\",\"бугор\",\"будка\",\"будни\",\"будущее\",\"буква\",\"букет\",\"бульвар\",\"бумага\",\"бунт\",\"бурный\",\"буря\",\"бутылка\",\"бухта\",\"бывший\",\"быстро\",\"бытовой\",\"быть\",\"бюджет\",\"бюро\",\"бюст\",\"вагон\",\"важный\",\"вакцина\",\"валенок\",\"вальс\",\"валюта\",\"ванная\",\"варенье\",\"вариант\",\"вблизи\",\"вверх\",\"вводить\",\"вдали\",\"вдвое\",\"вдова\",\"вдоль\",\"вдруг\",\"ведро\",\"ведущий\",\"ведьма\",\"вежливо\",\"везде\",\"веко\",\"вексель\",\"велеть\",\"великий\",\"венец\",\"веник\",\"веранда\",\"верблюд\",\"верить\",\"верный\",\"версия\",\"вертеть\",\"верхний\",\"вершина\",\"весело\",\"весна\",\"весомый\",\"вести\",\"весь\",\"ветеран\",\"ветхий\",\"вечер\",\"вечно\",\"вешалка\",\"вещество\",\"взамен\",\"взгляд\",\"вздох\",\"взнос\",\"взойти\",\"взор\",\"взрыв\",\"взять\",\"видеть\",\"видимо\",\"визг\",\"визит\",\"вилка\",\"вина\",\"вирус\",\"висок\",\"витамин\",\"витрина\",\"вихрь\",\"вишня\",\"вкус\",\"влага\",\"владелец\",\"власть\",\"влево\",\"влияние\",\"вложить\",\"вместе\",\"внешний\",\"вникать\",\"внимание\",\"вновь\",\"внук\",\"внутри\",\"внучка\",\"внушать\",\"вовлечь\",\"вовремя\",\"вовсю\",\"вода\",\"водород\",\"водяной\",\"воевать\",\"возврат\",\"возглас\",\"воздух\",\"возить\",\"возле\",\"возня\",\"возраст\",\"война\",\"войско\",\"вокзал\",\"волос\",\"волчий\",\"вольный\",\"воля\",\"вообще\",\"вопль\",\"вопрос\",\"ворота\",\"восемь\",\"восток\",\"вплоть\",\"вполне\",\"вправе\",\"впредь\",\"впрочем\",\"врач\",\"вредный\",\"время\",\"вручить\",\"всадник\",\"всегда\",\"вскоре\",\"вскрыть\",\"всплеск\",\"вспышка\",\"встреча\",\"всюду\",\"всякий\",\"второй\",\"вход\",\"вчера\",\"выбор\",\"вывод\",\"выгнать\",\"выдать\",\"выехать\",\"вызов\",\"выйти\",\"выкуп\",\"вылезти\",\"вымыть\",\"выпасть\",\"выпить\",\"выплата\",\"выпуск\",\"вырасти\",\"выручка\",\"выслать\",\"высокий\",\"выставка\",\"вышка\",\"вязать\",\"вялый\",\"газета\",\"газовый\",\"галерея\",\"галстук\",\"гамма\",\"гарантия\",\"гармония\",\"гарнизон\",\"гастроли\",\"гвардия\",\"гвоздь\",\"гектар\",\"генерал\",\"гений\",\"геном\",\"геолог\",\"герб\",\"герой\",\"гибкий\",\"гигант\",\"гимн\",\"гипотеза\",\"гитара\",\"главный\",\"глагол\",\"гладить\",\"глаз\",\"глина\",\"глоток\",\"глубокий\",\"глупый\",\"глухой\",\"глыба\",\"глядеть\",\"гнев\",\"гнездо\",\"гнилой\",\"годовой\",\"голова\",\"голубой\",\"голый\",\"гонорар\",\"гордость\",\"горизонт\",\"горло\",\"горный\",\"город\",\"горшок\",\"горький\",\"горючее\",\"горячий\",\"готовый\",\"градус\",\"грамм\",\"граница\",\"граф\",\"гребень\",\"гриб\",\"гримаса\",\"грозить\",\"грохот\",\"грош\",\"грубый\",\"грудь\",\"груз\",\"грунт\",\"группа\",\"груша\",\"грязный\",\"губа\",\"гудок\",\"гулкий\",\"гулять\",\"гусеница\",\"густо\",\"гусь\",\"давление\",\"давно\",\"даже\",\"дальний\",\"данный\",\"дарить\",\"датчик\",\"дать\",\"дача\",\"двадцать\",\"дважды\",\"дверь\",\"двигать\",\"движение\",\"двойной\",\"двор\",\"дебют\",\"девятый\",\"дежурный\",\"действие\",\"декабрь\",\"деление\",\"дело\",\"дельфин\",\"день\",\"дерево\",\"держать\",\"дерзкий\",\"десять\",\"деталь\",\"детский\",\"дефект\",\"дефицит\",\"деятель\",\"джаз\",\"джинсы\",\"джунгли\",\"диагноз\",\"диалог\",\"диапазон\",\"диван\",\"дивизия\",\"дивный\",\"диета\",\"дизайн\",\"дикарь\",\"дилер\",\"динамика\",\"диплом\",\"директор\",\"дитя\",\"длинный\",\"дневник\",\"добрый\",\"добыча\",\"доверие\",\"догадка\",\"догнать\",\"дождь\",\"доклад\",\"доктор\",\"документ\",\"долго\",\"должен\",\"долина\",\"донос\",\"дорога\",\"досада\",\"доска\",\"достать\",\"досуг\",\"доход\",\"доцент\",\"дощатый\",\"драка\",\"древний\",\"дремать\",\"дробный\",\"дрова\",\"дрожать\",\"другой\",\"дружба\",\"дубовый\",\"дуга\",\"думать\",\"дурной\",\"духи\",\"душный\",\"дуэль\",\"дуэт\",\"дыра\",\"дыхание\",\"дюжина\",\"дядя\",\"едва\",\"единый\",\"ерунда\",\"если\",\"ехать\",\"жадный\",\"жажда\",\"жалеть\",\"жалоба\",\"жанр\",\"жареный\",\"жаркий\",\"жгучий\",\"жевать\",\"желание\",\"желудок\",\"жена\",\"женщина\",\"жертва\",\"жест\",\"жидкость\",\"житель\",\"жить\",\"жрец\",\"жулик\",\"журнал\",\"жуткий\",\"забрать\",\"забыть\",\"завести\",\"завод\",\"завтра\",\"загадка\",\"загнать\",\"заговор\",\"задача\",\"задеть\",\"задний\",\"задолго\",\"заехать\",\"заказ\",\"закон\",\"закрыть\",\"закуска\",\"залезть\",\"залить\",\"залп\",\"замок\",\"замуж\",\"замысел\",\"занавес\",\"заново\",\"занять\",\"заодно\",\"запись\",\"запрос\",\"запуск\",\"запястье\",\"заранее\",\"заросль\",\"зарплата\",\"заря\",\"засада\",\"заслуга\",\"заснуть\",\"застать\",\"затвор\",\"затеять\",\"затрата\",\"затылок\",\"захват\",\"зачем\",\"защита\",\"заявить\",\"заяц\",\"звезда\",\"звено\",\"звонить\",\"здесь\",\"зелень\",\"земля\",\"зеркало\",\"зерно\",\"зима\",\"злой\",\"змея\",\"знамя\",\"знание\",\"значит\",\"золотой\",\"зона\",\"зонтик\",\"зоопарк\",\"зрачок\",\"зрение\",\"зритель\",\"зубной\",\"зубр\",\"игла\",\"идеал\",\"идеолог\",\"идея\",\"идол\",\"идти\",\"изба\",\"избить\",\"избрать\",\"избыток\",\"извлечь\",\"извне\",\"изгиб\",\"изгнать\",\"издание\",\"изделие\",\"изнутри\",\"изобилие\",\"изоляция\",\"изредка\",\"изрядно\",\"изучение\",\"изъять\",\"изящный\",\"икона\",\"икра\",\"иллюзия\",\"именно\",\"иметь\",\"имидж\",\"империя\",\"импульс\",\"иначе\",\"инвалид\",\"индекс\",\"индивид\",\"инерция\",\"инженер\",\"иногда\",\"иной\",\"институт\",\"интерес\",\"интрига\",\"интуиция\",\"инфаркт\",\"инцидент\",\"ирония\",\"искать\",\"испуг\",\"история\",\"итог\",\"июнь\",\"кабель\",\"кабинет\",\"каблук\",\"кавалер\",\"кадр\",\"каждый\",\"кажется\",\"казино\",\"калитка\",\"камень\",\"камин\",\"канал\",\"кандидат\",\"каникулы\",\"канон\",\"капитан\",\"капля\",\"капот\",\"капуста\",\"карандаш\",\"карета\",\"каркас\",\"карман\",\"картина\",\"карьера\",\"каска\",\"кассета\",\"кастрюля\",\"каталог\",\"катер\",\"каток\",\"катушка\",\"кафедра\",\"качество\",\"каша\",\"кашлять\",\"каюта\",\"квадрат\",\"квартира\",\"квота\",\"кепка\",\"кивнуть\",\"километр\",\"кино\",\"киоск\",\"кипяток\",\"кирпич\",\"кислота\",\"кисть\",\"клавиша\",\"клапан\",\"класс\",\"клей\",\"клетка\",\"клиент\",\"климат\",\"клиника\",\"кличка\",\"клоун\",\"клочок\",\"клуб\",\"клумба\",\"ключ\",\"книга\",\"кнопка\",\"кнут\",\"княгиня\",\"князь\",\"кобура\",\"когда\",\"кодекс\",\"кожа\",\"коктейль\",\"колено\",\"коллега\",\"колонна\",\"колпак\",\"кольцо\",\"колючий\",\"коляска\",\"команда\",\"комедия\",\"комиссия\",\"коммуна\",\"комната\",\"комок\",\"компания\",\"комфорт\",\"конвейер\",\"конгресс\",\"конечно\",\"конкурс\",\"контроль\",\"концерт\",\"конь\",\"конюшня\",\"копать\",\"копейка\",\"копыто\",\"корабль\",\"корень\",\"корзина\",\"коридор\",\"кормить\",\"корпус\",\"космос\",\"костюм\",\"косяк\",\"котел\",\"котлета\",\"который\",\"коттедж\",\"кофе\",\"кофта\",\"кошка\",\"кража\",\"край\",\"красный\",\"краткий\",\"кредит\",\"крем\",\"крепкий\",\"кресло\",\"кривой\",\"кризис\",\"кристалл\",\"критерий\",\"кричать\",\"кровь\",\"крокодил\",\"кролик\",\"кроме\",\"крона\",\"круг\",\"кружка\",\"крупный\",\"крутой\",\"крушение\",\"крыло\",\"крыша\",\"крючок\",\"кстати\",\"кубик\",\"куда\",\"кузов\",\"кукла\",\"кулак\",\"кулиса\",\"культура\",\"кумир\",\"купе\",\"купить\",\"купол\",\"купюра\",\"курица\",\"курорт\",\"курс\",\"куртка\",\"кусок\",\"куст\",\"кухня\",\"кушать\",\"лабиринт\",\"лавка\",\"лагерь\",\"ладно\",\"ладонь\",\"лапа\",\"лауреат\",\"лгать\",\"лебедь\",\"левый\",\"легенда\",\"легкий\",\"ледяной\",\"лежать\",\"лезвие\",\"лезть\",\"лекция\",\"ленивый\",\"лента\",\"лепесток\",\"лесной\",\"лестница\",\"лететь\",\"лето\",\"лечить\",\"лига\",\"лидер\",\"лиловый\",\"лимон\",\"линия\",\"липкий\",\"лист\",\"литр\",\"лихой\",\"лицо\",\"лишить\",\"лишний\",\"ловить\",\"логика\",\"лодка\",\"ложь\",\"лозунг\",\"локоть\",\"лопата\",\"лошадь\",\"лукавый\",\"луна\",\"лучший\",\"лысый\",\"льгота\",\"любить\",\"любой\",\"людской\",\"люстра\",\"лютый\",\"лягушка\",\"магазин\",\"магия\",\"майор\",\"майский\",\"максимум\",\"макушка\",\"мало\",\"мальчик\",\"мама\",\"манера\",\"марка\",\"март\",\"маршрут\",\"масса\",\"мастер\",\"масштаб\",\"материал\",\"матч\",\"махать\",\"машина\",\"маяк\",\"мебель\",\"медаль\",\"медведь\",\"медицина\",\"медь\",\"между\",\"мелкий\",\"мелочь\",\"мемуары\",\"меньше\",\"меню\",\"менять\",\"мера\",\"мерцать\",\"место\",\"месяц\",\"металл\",\"метод\",\"метр\",\"механизм\",\"меховой\",\"мечтать\",\"мешать\",\"мешок\",\"миграция\",\"микрофон\",\"милиция\",\"миллион\",\"милость\",\"миля\",\"мимо\",\"минерал\",\"министр\",\"минута\",\"мирный\",\"миска\",\"миссия\",\"митинг\",\"мишень\",\"младший\",\"мнение\",\"мнимый\",\"много\",\"могучий\",\"модель\",\"может\",\"мозг\",\"мокрый\",\"молекула\",\"молния\",\"молодой\",\"молчать\",\"момент\",\"монета\",\"монитор\",\"монолог\",\"монстр\",\"монтаж\",\"мораль\",\"море\",\"морковь\",\"мороз\",\"морщина\",\"мостовая\",\"мотать\",\"мотив\",\"мотор\",\"мохнатый\",\"мрамор\",\"мрачный\",\"мстить\",\"мудрый\",\"мужество\",\"мужчина\",\"музей\",\"музыка\",\"мундир\",\"муравей\",\"мусор\",\"муха\",\"мчаться\",\"мысль\",\"мыться\",\"мышца\",\"мышь\",\"мюзикл\",\"мягкий\",\"мясо\",\"набор\",\"навык\",\"наглый\",\"нагрузка\",\"надежда\",\"надзор\",\"надо\",\"наедине\",\"назад\",\"название\",\"назло\",\"наивный\",\"найти\",\"наконец\",\"налево\",\"наличие\",\"налог\",\"намерен\",\"нанести\",\"напасть\",\"например\",\"народ\",\"наследие\",\"натура\",\"наука\",\"наутро\",\"начать\",\"небо\",\"неважно\",\"невеста\",\"негодяй\",\"недавно\",\"неделя\",\"недолго\",\"недра\",\"недуг\",\"нежный\",\"незачем\",\"некто\",\"нелепый\",\"неловко\",\"нельзя\",\"немало\",\"немой\",\"неплохо\",\"нервный\",\"нередко\",\"нестись\",\"неудача\",\"неужели\",\"нефть\",\"неясный\",\"нигде\",\"низкий\",\"никакой\",\"никогда\",\"никуда\",\"ничто\",\"ничуть\",\"ниша\",\"нищий\",\"новость\",\"новый\",\"нога\",\"ноготь\",\"ножницы\",\"ноздря\",\"номер\",\"носить\",\"носок\",\"ночь\",\"ноябрь\",\"нрав\",\"нуль\",\"нынче\",\"нырять\",\"нюанс\",\"няня\",\"обаяние\",\"обед\",\"обезьяна\",\"обещать\",\"обжечь\",\"обзор\",\"обилие\",\"обитать\",\"область\",\"облик\",\"обложка\",\"обмен\",\"обморок\",\"обожать\",\"обои\",\"оболочка\",\"оборона\",\"обочина\",\"образ\",\"обрести\",\"обрыв\",\"обувь\",\"обучение\",\"обход\",\"общество\",\"общий\",\"объект\",\"обыск\",\"обычно\",\"обязать\",\"овощи\",\"овраг\",\"овца\",\"оговорка\",\"ограда\",\"огурец\",\"одежда\",\"одеяло\",\"один\",\"однако\",\"одолеть\",\"ожидать\",\"озеро\",\"океан\",\"окно\",\"около\",\"окоп\",\"окраина\",\"октябрь\",\"опасный\",\"опека\",\"операция\",\"описание\",\"оплата\",\"опора\",\"оппонент\",\"оптимизм\",\"оптовый\",\"опухоль\",\"опыт\",\"оратор\",\"орбита\",\"орган\",\"орден\",\"орел\",\"оригинал\",\"ориентир\",\"оркестр\",\"оружие\",\"осенний\",\"осколок\",\"осмотр\",\"остров\",\"отбор\",\"отбыть\",\"отвлечь\",\"отдать\",\"отдел\",\"отдых\",\"отель\",\"отец\",\"отзыв\",\"отказ\",\"отклик\",\"открыть\",\"откуда\",\"отличие\",\"отныне\",\"отойти\",\"отпуск\",\"отрасль\",\"отросток\",\"отрывок\",\"отряд\",\"отсек\",\"отставка\",\"отсюда\",\"оттенок\",\"оттого\",\"отчего\",\"отъезд\",\"офис\",\"офицер\",\"охота\",\"охрана\",\"оценка\",\"очаг\",\"очень\",\"очередь\",\"очищать\",\"ошибка\",\"ощущение\",\"павильон\",\"падать\",\"пазуха\",\"пакет\",\"палата\",\"палец\",\"палуба\",\"пальто\",\"память\",\"панель\",\"паника\",\"пара\",\"парень\",\"пароход\",\"партия\",\"парус\",\"паспорт\",\"пассажир\",\"пастух\",\"патент\",\"патрон\",\"пауза\",\"паук\",\"паутина\",\"пафос\",\"пахнуть\",\"пациент\",\"пачка\",\"певец\",\"педагог\",\"пейзаж\",\"пенсия\",\"пепел\",\"первый\",\"перед\",\"период\",\"перо\",\"перрон\",\"персонаж\",\"перчатка\",\"песня\",\"песок\",\"петля\",\"петрушка\",\"петух\",\"пехота\",\"печать\",\"печень\",\"пешком\",\"пещера\",\"пианист\",\"пиджак\",\"пилот\",\"пионер\",\"пирамида\",\"пирожок\",\"письмо\",\"пища\",\"плавание\",\"плакать\",\"пламя\",\"план\",\"пласт\",\"платить\",\"пленный\",\"плечо\",\"плита\",\"плод\",\"плоский\",\"плотный\",\"плохой\",\"площадь\",\"плыть\",\"плюс\",\"пляж\",\"плясать\",\"победа\",\"повар\",\"повод\",\"повсюду\",\"повязка\",\"погода\",\"погреб\",\"подбор\",\"подвиг\",\"подделка\",\"поджать\",\"поднос\",\"подпись\",\"подруга\",\"подход\",\"подчас\",\"подъезд\",\"поединок\",\"поезд\",\"поесть\",\"поехать\",\"пожалуй\",\"пожилой\",\"позади\",\"позвать\",\"поздний\",\"позиция\",\"позор\",\"поиск\",\"поймать\",\"пойти\",\"поклон\",\"покой\",\"покрыть\",\"полдень\",\"полезный\",\"ползти\",\"полк\",\"полный\",\"половина\",\"полтора\",\"польза\",\"поляна\",\"помидор\",\"помнить\",\"помощь\",\"попасть\",\"поперек\",\"поплыть\",\"пополам\",\"поправка\",\"попугай\",\"попытка\",\"порог\",\"портрет\",\"порция\",\"порыв\",\"порядок\",\"после\",\"посол\",\"посреди\",\"постель\",\"посуда\",\"потом\",\"похвала\",\"похожий\",\"поцелуй\",\"почва\",\"почему\",\"пошлина\",\"поэма\",\"поэтому\",\"право\",\"праздник\",\"практика\",\"прах\",\"преграда\",\"предмет\",\"прежде\",\"прелесть\",\"премия\",\"препарат\",\"пресса\",\"прибыть\",\"прижать\",\"прийти\",\"приказ\",\"прилавок\",\"пример\",\"принять\",\"природа\",\"притом\",\"прихожая\",\"прицел\",\"причина\",\"приют\",\"прогноз\",\"продукт\",\"проект\",\"прожить\",\"прокат\",\"промысел\",\"пропуск\",\"просто\",\"против\",\"профиль\",\"процесс\",\"прочий\",\"прошлый\",\"прощать\",\"пружина\",\"прут\",\"прыжок\",\"прямой\",\"птица\",\"публика\",\"пугать\",\"пуговица\",\"пузырь\",\"пульт\",\"пуля\",\"пункт\",\"пускать\",\"пустой\",\"путь\",\"пухлый\",\"пучок\",\"пушистый\",\"пушка\",\"пчела\",\"пшеница\",\"пылать\",\"пыль\",\"пышный\",\"пьеса\",\"пятка\",\"пятно\",\"пятый\",\"пятьсот\",\"работа\",\"равнина\",\"ради\",\"радость\",\"радуга\",\"разбить\",\"развитие\",\"разговор\",\"раздел\",\"различие\",\"размер\",\"разный\",\"разрыв\",\"разум\",\"район\",\"ракета\",\"раковина\",\"рамка\",\"рано\",\"рапорт\",\"распад\",\"рассказ\",\"расти\",\"расход\",\"расцвет\",\"рация\",\"рвануть\",\"рваться\",\"реакция\",\"ребро\",\"реветь\",\"редактор\",\"редкий\",\"реестр\",\"режим\",\"резать\",\"резерв\",\"резина\",\"резко\",\"резной\",\"рейс\",\"реклама\",\"рекорд\",\"религия\",\"рельс\",\"ремень\",\"ремонт\",\"реплика\",\"репортаж\",\"ресница\",\"ресторан\",\"реформа\",\"рецепт\",\"речь\",\"решение\",\"ржавый\",\"риск\",\"рисунок\",\"ритуал\",\"рифма\",\"робко\",\"робот\",\"ровесник\",\"ровно\",\"родной\",\"рождение\",\"роза\",\"розовый\",\"розыск\",\"роль\",\"роман\",\"роскошь\",\"роспись\",\"рост\",\"рубашка\",\"рубеж\",\"рубить\",\"рубрика\",\"рудник\",\"рука\",\"рукопись\",\"румяный\",\"русло\",\"рухнуть\",\"ручей\",\"ручной\",\"рыба\",\"рыжий\",\"рынок\",\"рыхлый\",\"рыцарь\",\"рычаг\",\"рюкзак\",\"рядом\",\"садовый\",\"сажать\",\"салон\",\"салфетка\",\"салют\",\"самец\",\"самовар\",\"самый\",\"сани\",\"санкция\",\"сапог\",\"сарай\",\"сатира\",\"сахар\",\"сбить\",\"сбоку\",\"сборная\",\"сбыт\",\"свадьба\",\"свалка\",\"сварить\",\"свежий\",\"сверху\",\"свет\",\"свеча\",\"свинья\",\"свист\",\"свитер\",\"свобода\",\"сводка\",\"свой\",\"свыше\",\"связь\",\"сдаться\",\"сделать\",\"сегмент\",\"сегодня\",\"седло\",\"седой\",\"седьмой\",\"сезон\",\"сейф\",\"сейчас\",\"секрет\",\"сектор\",\"секунда\",\"семинар\",\"семья\",\"сенатор\",\"сено\",\"сенсация\",\"сентябрь\",\"сервис\",\"сердце\",\"середина\",\"сержант\",\"серия\",\"серый\",\"сессия\",\"сесть\",\"сетевой\",\"сжатый\",\"сжечь\",\"сзади\",\"сигнал\",\"сиденье\",\"сила\",\"силуэт\",\"сильный\",\"символ\",\"симпатия\",\"симфония\",\"синий\",\"синтез\",\"синяк\",\"сирень\",\"система\",\"ситуация\",\"сияние\",\"сказать\",\"скала\",\"скамейка\",\"скандал\",\"скатерть\",\"скачок\",\"скважина\",\"сквер\",\"сквозь\",\"скелет\",\"скидка\",\"склад\",\"сколько\",\"скорый\",\"скосить\",\"скот\",\"скрипка\",\"скудный\",\"скука\",\"слабый\",\"слава\",\"сладкий\",\"слегка\",\"след\",\"слеза\",\"слепой\",\"слесарь\",\"слишком\",\"слово\",\"слог\",\"сложный\",\"сломать\",\"служба\",\"слух\",\"случай\",\"слышать\",\"слюна\",\"смежный\",\"смелый\",\"сменить\",\"смесь\",\"сметана\",\"смех\",\"смола\",\"смуглый\",\"смутный\",\"смущать\",\"смысл\",\"снайпер\",\"снаряд\",\"сначала\",\"снег\",\"снизу\",\"сниться\",\"сно��а\",\"снять\",\"собака\",\"соблазн\",\"собрание\",\"событие\",\"совесть\",\"совсем\",\"согласие\",\"создать\",\"сознание\",\"созреть\",\"сойтись\",\"сокол\",\"солдат\",\"соленый\",\"солнце\",\"солома\",\"сомнение\",\"сонный\",\"соперник\",\"соратник\",\"сорвать\",\"сосед\",\"сосиска\",\"состав\",\"сотня\",\"соус\",\"союз\",\"спад\",\"спальня\",\"спасти\",\"спектр\",\"сперва\",\"спешить\",\"спина\",\"спирт\",\"список\",\"спичка\",\"сплав\",\"спонсор\",\"спор\",\"способ\",\"справка\",\"спустя\",\"спутник\",\"сразу\",\"средство\",\"срок\",\"срыв\",\"ссора\",\"ссылка\",\"ставить\",\"стадия\",\"стакан\",\"станция\",\"старый\",\"стая\",\"стебель\",\"стекло\",\"стена\",\"степень\",\"стереть\",\"стиль\",\"стимул\",\"стирать\",\"стихи\",\"стоить\",\"стойка\",\"стол\",\"стонать\",\"стопа\",\"сторона\",\"стоянка\",\"страна\",\"стричь\",\"строгий\",\"струя\",\"студент\",\"стук\",\"ступня\",\"стыдно\",\"суббота\",\"субъект\",\"сувенир\",\"сугроб\",\"сугубо\",\"судить\",\"судно\",\"судьба\",\"суета\",\"суметь\",\"сумма\",\"сумрак\",\"сундук\",\"супруг\",\"суровый\",\"сутки\",\"сухой\",\"суша\",\"существо\",\"сфера\",\"схема\",\"схожий\",\"сценарий\",\"счастье\",\"считать\",\"съезд\",\"сыграть\",\"сырой\",\"сытый\",\"сыщик\",\"сюда\",\"сюжет\",\"сюрприз\",\"тайна\",\"также\",\"такой\",\"такси\",\"тактика\",\"талия\",\"таможня\",\"танец\",\"таракан\",\"тарелка\",\"тариф\",\"тащить\",\"таять\",\"тварь\",\"театр\",\"тезис\",\"текст\",\"текущий\",\"телефон\",\"тема\",\"темнота\",\"теневой\",\"теннис\",\"теория\",\"теперь\",\"тепло\",\"терапия\",\"терзать\",\"термин\",\"терпеть\",\"терраса\",\"терять\",\"тесный\",\"тетрадь\",\"техника\",\"течение\",\"тигр\",\"типовой\",\"тираж\",\"титул\",\"тихий\",\"ткань\",\"товарищ\",\"тоже\",\"толпа\",\"толстый\",\"толчок\",\"толщина\",\"только\",\"тонкий\",\"тонна\",\"топить\",\"топор\",\"торговля\",\"тормоз\",\"торчать\",\"тотчас\",\"точка\",\"точно\",\"тощий\",\"трава\",\"традиция\",\"трактор\",\"трамвай\",\"траншея\",\"трасса\",\"тревога\",\"трезвый\",\"тренер\",\"трепет\",\"треск\",\"третий\",\"трещина\",\"трибуна\",\"тридцать\",\"триста\",\"триумф\",\"трогать\",\"тройка\",\"тронуть\",\"тропа\",\"тротуар\",\"трубка\",\"труд\",\"трюк\",\"тряпка\",\"туго\",\"туловище\",\"туман\",\"тумбочка\",\"тундра\",\"тупик\",\"турист\",\"турнир\",\"тусклый\",\"туфля\",\"туча\",\"тысяча\",\"тяга\",\"тяжело\",\"убежать\",\"убогий\",\"уборка\",\"уважение\",\"увезти\",\"уволить\",\"угадать\",\"угол\",\"угощать\",\"угроза\",\"угрюмый\",\"удар\",\"удачный\",\"уделять\",\"удивить\",\"удобный\",\"удочка\",\"уезжать\",\"ужин\",\"узел\",\"узкий\",\"уйти\",\"указание\",\"уклон\",\"украсть\",\"укусить\",\"улетать\",\"улица\",\"улыбка\",\"умело\",\"умение\",\"умный\",\"умолять\",\"унести\",\"унижать\",\"унылый\",\"упаковка\",\"упасть\",\"упорно\",\"упрек\",\"урна\",\"уровень\",\"урожай\",\"уронить\",\"усадьба\",\"усатый\",\"усвоить\",\"усилие\",\"условие\",\"услуга\",\"усмешка\",\"успеть\",\"устав\",\"устоять\",\"утечка\",\"утешать\",\"утро\",\"уцелеть\",\"участие\",\"ученик\",\"учесть\",\"ущелье\",\"ущерб\",\"уютный\",\"фабрика\",\"фаворит\",\"факел\",\"факт\",\"фамилия\",\"фантазия\",\"фасад\",\"февраль\",\"феномен\",\"фермер\",\"фигура\",\"физика\",\"филиал\",\"философ\",\"фильм\",\"финал\",\"флаг\",\"флот\",\"фойе\",\"фокус\",\"фонарь\",\"фонд\",\"фонтан\",\"форма\",\"форум\",\"фото\",\"фрагмент\",\"фраза\",\"фракция\",\"фронт\",\"фрукт\",\"функция\",\"фуражка\",\"футбол\",\"футляр\",\"халат\",\"хаос\",\"характер\",\"хата\",\"хвалить\",\"хватать\",\"хвойный\",\"хвост\",\"химия\",\"хирург\",\"хитрый\",\"хищник\",\"хлеб\",\"хлынуть\",\"хмурый\",\"ходить\",\"хозяин\",\"хоккей\",\"холм\",\"холст\",\"хорошо\",\"хотеть\",\"храбрый\",\"храм\",\"хранить\",\"хребет\",\"хрен\",\"хрипло\",\"хроника\",\"хрупкий\",\"художник\",\"худший\",\"хулиган\",\"хутор\",\"царь\",\"цветок\",\"целевой\",\"целиком\",\"целое\",\"цель\",\"цензура\",\"ценить\",\"центр\",\"цепной\",\"цикл\",\"цилиндр\",\"цирк\",\"цитата\",\"цифра\",\"чайник\",\"часы\",\"чашка\",\"человек\",\"челюсть\",\"чемодан\",\"чемпион\",\"чепуха\",\"червь\",\"чердак\",\"через\",\"чернила\",\"черта\",\"чеснок\",\"честно\",\"четверть\",\"четыре\",\"число\",\"чистый\",\"читатель\",\"чтение\",\"чтобы\",\"чувство\",\"чудак\",\"чудный\",\"чудо\",\"чужой\",\"чулок\",\"чума\",\"чушь\",\"чуять\",\"шагать\",\"шанс\",\"шапка\",\"шарик\",\"шарф\",\"шахматы\",\"шашлык\",\"шедевр\",\"шептать\",\"шерсть\",\"шестой\",\"шинель\",\"ширина\",\"шишка\",\"шкаф\",\"школа\",\"шкура\",\"шланг\",\"шлем\",\"шнур\",\"шоколад\",\"шорох\",\"шоссе\",\"шпион\",\"шприц\",\"штаб\",\"штамм\",\"штаны\",\"штатный\",\"штора\",\"штраф\",\"штурм\",\"штык\",\"шумно\",\"шуршать\",\"шутить\",\"шутка\",\"щедрый\",\"щека\",\"щенок\",\"экзамен\",\"экипаж\",\"экономия\",\"экран\",\"эксперт\",\"элемент\",\"элитный\",\"эмоция\",\"энергия\",\"эпизод\",\"эпоха\",\"эскиз\",\"эстрада\",\"этап\",\"этика\",\"этот\",\"эфир\",\"эффект\",\"эшелон\",\"юбилей\",\"юбка\",\"южный\",\"юмор\",\"юность\",\"юрист\",\"юстиция\",\"яблоко\",\"явление\",\"ягода\",\"ядро\",\"язык\",\"яйцо\",\"якобы\",\"якорь\",\"январь\",\"яркий\",\"ярмарка\",\"ярость\",\"ясный\",\"яхта\",\"ячейка\",\"ящик\"][\"ábaco\",\"abdomen\",\"abeja\",\"abierto\",\"abogado\",\"abono\",\"aborto\",\"abrazo\",\"abrir\",\"abuelo\",\"abuso\",\"acabar\",\"academia\",\"acceso\",\"acción\",\"aceite\",\"acelga\",\"acento\",\"aceptar\",\"ácido\",\"aclarar\",\"acné\",\"acoger\",\"acoso\",\"activo\",\"acto\",\"actriz\",\"actuar\",\"acudir\",\"acuerdo\",\"acusar\",\"adicto\",\"admitir\",\"adoptar\",\"adorno\",\"aduana\",\"adulto\",\"aéreo\",\"afectar\",\"afición\",\"afinar\",\"afirmar\",\"ágil\",\"agitar\",\"agonía\",\"agosto\",\"agotar\",\"agregar\",\"agrio\",\"agua\",\"agudo\",\"águila\",\"aguja\",\"ahogo\",\"ahorro\",\"aire\",\"aislar\",\"ajedrez\",\"ajeno\",\"ajuste\",\"alacrán\",\"alambre\",\"alarma\",\"alba\",\"álbum\",\"alcalde\",\"aldea\",\"alegre\",\"alejar\",\"alerta\",\"aleta\",\"alfiler\",\"alga\",\"algodón\",\"aliado\",\"aliento\",\"alivio\",\"alma\",\"almeja\",\"almíbar\",\"altar\",\"alteza\",\"altivo\",\"alto\",\"altura\",\"alumno\",\"alzar\",\"amable\",\"amante\",\"amapola\",\"amargo\",\"amasar\",\"ámbar\",\"ámbito\",\"ameno\",\"amigo\",\"amistad\",\"amor\",\"amparo\",\"amplio\",\"ancho\",\"anciano\",\"ancla\",\"andar\",\"andén\",\"anemia\",\"ángulo\",\"anillo\",\"ánimo\",\"anís\",\"anotar\",\"antena\",\"antiguo\",\"antojo\",\"anual\",\"anular\",\"anuncio\",\"añadir\",\"añejo\",\"año\",\"apagar\",\"aparato\",\"apetito\",\"apio\",\"aplicar\",\"apodo\",\"aporte\",\"apoyo\",\"aprender\",\"aprobar\",\"apuesta\",\"apuro\",\"arado\",\"araña\",\"arar\",\"árbitro\",\"árbol\",\"arbusto\",\"archivo\",\"arco\",\"arder\",\"ardilla\",\"arduo\",\"área\",\"árido\",\"aries\",\"armonía\",\"arnés\",\"aroma\",\"arpa\",\"arpón\",\"arreglo\",\"arroz\",\"arruga\",\"arte\",\"artista\",\"asa\",\"asado\",\"asalto\",\"ascenso\",\"asegurar\",\"aseo\",\"asesor\",\"asiento\",\"asilo\",\"asistir\",\"asno\",\"asombro\",\"áspero\",\"astilla\",\"astro\",\"astuto\",\"asumir\",\"asunto\",\"atajo\",\"ataque\",\"atar\",\"atento\",\"ateo\",\"ático\",\"atleta\",\"átomo\",\"atraer\",\"atroz\",\"atún\",\"audaz\",\"audio\",\"auge\",\"aula\",\"aumento\",\"ausente\",\"autor\",\"aval\",\"avance\",\"avaro\",\"ave\",\"avellana\",\"avena\",\"avestruz\",\"avión\",\"aviso\",\"ayer\",\"ayuda\",\"ayuno\",\"azafrán\",\"azar\",\"azote\",\"azúcar\",\"azufre\",\"azul\",\"baba\",\"babor\",\"bache\",\"bahía\",\"baile\",\"bajar\",\"balanza\",\"balcón\",\"balde\",\"bambú\",\"banco\",\"banda\",\"baño\",\"barba\",\"barco\",\"barniz\",\"barro\",\"báscula\",\"bastón\",\"basura\",\"batalla\",\"batería\",\"batir\",\"batuta\",\"baúl\",\"bazar\",\"bebé\",\"bebida\",\"bello\",\"besar\",\"beso\",\"bestia\",\"bicho\",\"bien\",\"bingo\",\"blanco\",\"bloque\",\"blusa\",\"boa\",\"bobina\",\"bobo\",\"boca\",\"bocina\",\"boda\",\"bodega\",\"boina\",\"bola\",\"bolero\",\"bolsa\",\"bomba\",\"bondad\",\"bonito\",\"bono\",\"bonsái\",\"borde\",\"borrar\",\"bosque\",\"bote\",\"botín\",\"bóveda\",\"bozal\",\"bravo\",\"brazo\",\"brecha\",\"breve\",\"brillo\",\"brinco\",\"brisa\",\"broca\",\"broma\",\"bronce\",\"brote\",\"bruja\",\"brusco\",\"bruto\",\"buceo\",\"bucle\",\"bueno\",\"buey\",\"bufanda\",\"bufón\",\"búho\",\"buitre\",\"bulto\",\"burbuja\",\"burla\",\"burro\",\"buscar\",\"butaca\",\"buzón\",\"caballo\",\"cabeza\",\"cabina\",\"cabra\",\"cacao\",\"cadáver\",\"cadena\",\"caer\",\"café\",\"caída\",\"caimán\",\"caja\",\"cajón\",\"cal\",\"calamar\",\"calcio\",\"caldo\",\"calidad\",\"calle\",\"calma\",\"calor\",\"calvo\",\"cama\",\"cambio\",\"camello\",\"camino\",\"campo\",\"cáncer\",\"candil\",\"canela\",\"canguro\",\"canica\",\"canto\",\"caña\",\"cañón\",\"caoba\",\"caos\",\"capaz\",\"capitán\",\"capote\",\"captar\",\"capucha\",\"cara\",\"carbón\",\"cárcel\",\"careta\",\"carga\",\"cariño\",\"carne\",\"carpeta\",\"carro\",\"carta\",\"casa\",\"casco\",\"casero\",\"caspa\",\"castor\",\"catorce\",\"catre\",\"caudal\",\"causa\",\"cazo\",\"cebolla\",\"ceder\",\"cedro\",\"celda\",\"célebre\",\"celoso\",\"célula\",\"cemento\",\"ceniza\",\"centro\",\"cerca\",\"cerdo\",\"cereza\",\"cero\",\"cerrar\",\"certeza\",\"césped\",\"cetro\",\"chacal\",\"chaleco\",\"champú\",\"chancla\",\"chapa\",\"charla\",\"chico\",\"chiste\",\"chivo\",\"choque\",\"choza\",\"chuleta\",\"chupar\",\"ciclón\",\"ciego\",\"cielo\",\"cien\",\"cierto\",\"cifra\",\"cigarro\",\"cima\",\"cinco\",\"cine\",\"cinta\",\"ciprés\",\"circo\",\"ciruela\",\"cisne\",\"cita\",\"ciudad\",\"clamor\",\"clan\",\"claro\",\"clase\",\"clave\",\"cliente\",\"clima\",\"clínica\",\"cobre\",\"cocción\",\"cochino\",\"cocina\",\"coco\",\"código\",\"codo\",\"cofre\",\"coger\",\"cohete\",\"cojín\",\"cojo\",\"cola\",\"colcha\",\"colegio\",\"colgar\",\"colina\",\"collar\",\"colmo\",\"columna\",\"combate\",\"comer\",\"comida\",\"cómodo\",\"compra\",\"conde\",\"conejo\",\"conga\",\"conocer\",\"consejo\",\"contar\",\"copa\",\"copia\",\"corazón\",\"corbata\",\"corcho\",\"cordón\",\"corona\",\"correr\",\"coser\",\"cosmos\",\"costa\",\"cráneo\",\"cráter\",\"crear\",\"crecer\",\"creído\",\"crema\",\"cría\",\"crimen\",\"cripta\",\"crisis\",\"cromo\",\"crónica\",\"croqueta\",\"crudo\",\"cruz\",\"cuadro\",\"cuarto\",\"cuatro\",\"cubo\",\"cubrir\",\"cuchara\",\"cuello\",\"cuento\",\"cuerda\",\"cuesta\",\"cueva\",\"cuidar\",\"culebra\",\"culpa\",\"culto\",\"cumbre\",\"cumplir\",\"cuna\",\"cuneta\",\"cuota\",\"cupón\",\"cúpula\",\"curar\",\"curioso\",\"curso\",\"curva\",\"cutis\",\"dama\",\"danza\",\"dar\",\"dardo\",\"dátil\",\"deber\",\"débil\",\"década\",\"decir\",\"dedo\",\"defensa\",\"definir\",\"dejar\",\"delfín\",\"delgado\",\"delito\",\"demora\",\"denso\",\"dental\",\"deporte\",\"derecho\",\"derrota\",\"desayuno\",\"deseo\",\"desfile\",\"desnudo\",\"destino\",\"desvío\",\"detalle\",\"detener\",\"deuda\",\"día\",\"diablo\",\"diadema\",\"diamante\",\"diana\",\"diario\",\"dibujo\",\"dictar\",\"diente\",\"dieta\",\"diez\",\"difícil\",\"digno\",\"dilema\",\"diluir\",\"dinero\",\"directo\",\"dirigir\",\"disco\",\"diseño\",\"disfraz\",\"diva\",\"divino\",\"doble\",\"doce\",\"dolor\",\"domingo\",\"don\",\"donar\",\"dorado\",\"dormir\",\"dorso\",\"dos\",\"dosis\",\"dragón\",\"droga\",\"ducha\",\"duda\",\"duelo\",\"dueño\",\"dulce\",\"dúo\",\"duque\",\"durar\",\"dureza\",\"duro\",\"ébano\",\"ebrio\",\"echar\",\"eco\",\"ecuador\",\"edad\",\"edición\",\"edificio\",\"editor\",\"educar\",\"efecto\",\"eficaz\",\"eje\",\"ejemplo\",\"elefante\",\"elegir\",\"elemento\",\"elevar\",\"elipse\",\"élite\",\"elixir\",\"elogio\",\"eludir\",\"embudo\",\"emitir\",\"emoción\",\"empate\",\"empeño\",\"empleo\",\"empresa\",\"enano\",\"encargo\",\"enchufe\",\"encía\",\"enemigo\",\"enero\",\"enfado\",\"enfermo\",\"engaño\",\"enigma\",\"enlace\",\"enorme\",\"enredo\",\"ensayo\",\"enseñar\",\"entero\",\"entrar\",\"envase\",\"envío\",\"época\",\"equipo\",\"erizo\",\"escala\",\"escena\",\"escolar\",\"escribir\",\"escudo\",\"esencia\",\"esfera\",\"esfuerzo\",\"espada\",\"espejo\",\"espía\",\"esposa\",\"espuma\",\"esquí\",\"estar\",\"este\",\"estilo\",\"estufa\",\"etapa\",\"eterno\",\"ética\",\"etnia\",\"evadir\",\"evaluar\",\"evento\",\"evitar\",\"exacto\",\"examen\",\"exceso\",\"excusa\",\"exento\",\"exigir\",\"exilio\",\"existir\",\"éxito\",\"experto\",\"explicar\",\"exponer\",\"extremo\",\"fábrica\",\"fábula\",\"fachada\",\"fácil\",\"factor\",\"faena\",\"faja\",\"falda\",\"fallo\",\"falso\",\"faltar\",\"fama\",\"familia\",\"famoso\",\"faraón\",\"farmacia\",\"farol\",\"farsa\",\"fase\",\"fatiga\",\"fauna\",\"favor\",\"fax\",\"febrero\",\"fecha\",\"feliz\",\"feo\",\"feria\",\"feroz\",\"fértil\",\"fervor\",\"festín\",\"fiable\",\"fianza\",\"fiar\",\"fibra\",\"ficción\",\"ficha\",\"fideo\",\"fiebre\",\"fiel\",\"fiera\",\"fiesta\",\"figura\",\"fijar\",\"fijo\",\"fila\",\"filete\",\"filial\",\"filtro\",\"fin\",\"finca\",\"fingir\",\"finito\",\"firma\",\"flaco\",\"flauta\",\"flecha\",\"flor\",\"flota\",\"fluir\",\"flujo\",\"flúor\",\"fobia\",\"foca\",\"fogata\",\"fogón\",\"folio\",\"folleto\",\"fondo\",\"forma\",\"forro\",\"fortuna\",\"forzar\",\"fosa\",\"foto\",\"fracaso\",\"frágil\",\"franja\",\"frase\",\"fraude\",\"freír\",\"freno\",\"fresa\",\"frío\",\"frito\",\"fruta\",\"fuego\",\"fuente\",\"fuerza\",\"fuga\",\"fumar\",\"función\",\"funda\",\"furgón\",\"furia\",\"fusil\",\"fútbol\",\"futuro\",\"gacela\",\"gafas\",\"gaita\",\"gajo\",\"gala\",\"galería\",\"gallo\",\"gamba\",\"ganar\",\"gancho\",\"ganga\",\"ganso\",\"garaje\",\"garza\",\"gasolina\",\"gastar\",\"gato\",\"gavilán\",\"gemelo\",\"gemir\",\"gen\",\"género\",\"genio\",\"gente\",\"geranio\",\"gerente\",\"germen\",\"gesto\",\"gigante\",\"gimnasio\",\"girar\",\"giro\",\"glaciar\",\"globo\",\"gloria\",\"gol\",\"golfo\",\"goloso\",\"golpe\",\"goma\",\"gordo\",\"gorila\",\"gorra\",\"gota\",\"goteo\",\"gozar\",\"grada\",\"gráfico\",\"grano\",\"grasa\",\"gratis\",\"grave\",\"grieta\",\"grillo\",\"gripe\",\"gris\",\"grito\",\"grosor\",\"grúa\",\"grueso\",\"grumo\",\"grupo\",\"guante\",\"guapo\",\"guardia\",\"guerra\",\"guía\",\"guiño\",\"guion\",\"guiso\",\"guitarra\",\"gusano\",\"gustar\",\"haber\",\"hábil\",\"hablar\",\"hacer\",\"hacha\",\"hada\",\"hallar\",\"hamaca\",\"harina\",\"haz\",\"hazaña\",\"hebilla\",\"hebra\",\"hecho\",\"helado\",\"helio\",\"hembra\",\"herir\",\"hermano\",\"héroe\",\"hervir\",\"hielo\",\"hierro\",\"hígado\",\"higiene\",\"hijo\",\"himno\",\"historia\",\"hocico\",\"hogar\",\"hoguera\",\"hoja\",\"hombre\",\"hongo\",\"honor\",\"honra\",\"hora\",\"hormiga\",\"horno\",\"hostil\",\"hoyo\",\"hueco\",\"huelga\",\"huerta\",\"hueso\",\"huevo\",\"huida\",\"huir\",\"humano\",\"húmedo\",\"humilde\",\"humo\",\"hundir\",\"huracán\",\"hurto\",\"icono\",\"ideal\",\"idioma\",\"ídolo\",\"iglesia\",\"iglú\",\"igual\",\"ilegal\",\"ilusión\",\"imagen\",\"imán\",\"imitar\",\"impar\",\"imperio\",\"imponer\",\"impulso\",\"incapaz\",\"índice\",\"inerte\",\"infiel\",\"informe\",\"ingenio\",\"inicio\",\"inmenso\",\"inmune\",\"innato\",\"insecto\",\"instante\",\"interés\",\"íntimo\",\"intuir\",\"inútil\",\"invierno\",\"ira\",\"iris\",\"ironía\",\"isla\",\"islote\",\"jabalí\",\"jabón\",\"jamón\",\"jarabe\",\"jardín\",\"jarra\",\"jaula\",\"jazmín\",\"jefe\",\"jeringa\",\"jinete\",\"jornada\",\"joroba\",\"joven\",\"joya\",\"juerga\",\"jueves\",\"juez\",\"jugador\",\"jugo\",\"juguete\",\"juicio\",\"junco\",\"jungla\",\"junio\",\"juntar\",\"júpiter\",\"jurar\",\"justo\",\"juvenil\",\"juzgar\",\"kilo\",\"koala\",\"labio\",\"lacio\",\"lacra\",\"lado\",\"ladrón\",\"lagarto\",\"lágrima\",\"laguna\",\"laico\",\"lamer\",\"lámina\",\"lámpara\",\"lana\",\"lancha\",\"langosta\",\"lanza\",\"lápiz\",\"largo\",\"larva\",\"lástima\",\"lata\",\"látex\",\"latir\",\"laurel\",\"lavar\",\"lazo\",\"leal\",\"lección\",\"leche\",\"lector\",\"leer\",\"legión\",\"legumbre\",\"lejano\",\"lengua\",\"lento\",\"leña\",\"león\",\"leopardo\",\"lesión\",\"letal\",\"letra\",\"leve\",\"leyenda\",\"libertad\",\"libro\",\"licor\",\"líder\",\"lidiar\",\"lienzo\",\"liga\",\"ligero\",\"lima\",\"límite\",\"limón\",\"limpio\",\"lince\",\"lindo\",\"línea\",\"lingote\",\"lino\",\"linterna\",\"líquido\",\"liso\",\"lista\",\"litera\",\"litio\",\"litro\",\"llaga\",\"llama\",\"llanto\",\"llave\",\"llegar\",\"llenar\",\"llevar\",\"llorar\",\"llover\",\"lluvia\",\"lobo\",\"loción\",\"loco\",\"locura\",\"lógica\",\"logro\",\"lombriz\",\"lomo\",\"lonja\",\"lote\",\"lucha\",\"lucir\",\"lugar\",\"lujo\",\"luna\",\"lunes\",\"lupa\",\"lustro\",\"luto\",\"luz\",\"maceta\",\"macho\",\"madera\",\"madre\",\"maduro\",\"maestro\",\"mafia\",\"magia\",\"mago\",\"maíz\",\"maldad\",\"maleta\",\"malla\",\"malo\",\"mamá\",\"mambo\",\"mamut\",\"manco\",\"mando\",\"manejar\",\"manga\",\"maniquí\",\"manjar\",\"mano\",\"manso\",\"manta\",\"mañana\",\"mapa\",\"máquina\",\"mar\",\"marco\",\"marea\",\"marfil\",\"margen\",\"marido\",\"mármol\",\"marrón\",\"martes\",\"marzo\",\"masa\",\"máscara\",\"masivo\",\"matar\",\"materia\",\"matiz\",\"matriz\",\"máximo\",\"mayor\",\"mazorca\",\"mecha\",\"medalla\",\"medio\",\"médula\",\"mejilla\",\"mejor\",\"melena\",\"melón\",\"memoria\",\"menor\",\"mensaje\",\"mente\",\"menú\",\"mercado\",\"merengue\",\"mérito\",\"mes\",\"mesón\",\"meta\",\"meter\",\"método\",\"metro\",\"mezcla\",\"miedo\",\"miel\",\"miembro\",\"miga\",\"mil\",\"milagro\",\"militar\",\"millón\",\"mimo\",\"mina\",\"minero\",\"mínimo\",\"minuto\",\"miope\",\"mirar\",\"misa\",\"miseria\",\"misil\",\"mismo\",\"mitad\",\"mito\",\"mochila\",\"moción\",\"moda\",\"modelo\",\"moho\",\"mojar\",\"molde\",\"moler\",\"molino\",\"momento\",\"momia\",\"monarca\",\"moneda\",\"monja\",\"monto\",\"moño\",\"morada\",\"morder\",\"moreno\",\"morir\",\"morro\",\"morsa\",\"mortal\",\"mosca\",\"mostrar\",\"motivo\",\"mover\",\"móvil\",\"mozo\",\"mucho\",\"mudar\",\"mueble\",\"muela\",\"muerte\",\"muestra\",\"mugre\",\"mujer\",\"mula\",\"muleta\",\"multa\",\"mundo\",\"muñeca\",\"mural\",\"muro\",\"músculo\",\"museo\",\"musgo\",\"música\",\"muslo\",\"nácar\",\"nación\",\"nadar\",\"naipe\",\"naranja\",\"nariz\",\"narrar\",\"nasal\",\"natal\",\"nativo\",\"natural\",\"náusea\",\"naval\",\"nave\",\"navidad\",\"necio\",\"néctar\",\"negar\",\"negocio\",\"negro\",\"neón\",\"nervio\",\"neto\",\"neutro\",\"nevar\",\"nevera\",\"nicho\",\"nido\",\"niebla\",\"nieto\",\"niñez\",\"niño\",\"nítido\",\"nivel\",\"nobleza\",\"noche\",\"nómina\",\"noria\",\"norma\",\"norte\",\"nota\",\"noticia\",\"novato\",\"novela\",\"novio\",\"nube\",\"nuca\",\"núcleo\",\"nudillo\",\"nudo\",\"nuera\",\"nueve\",\"nuez\",\"nulo\",\"número\",\"nutria\",\"oasis\",\"obeso\",\"obispo\",\"objeto\",\"obra\",\"obrero\",\"observar\",\"obtener\",\"obvio\",\"oca\",\"ocaso\",\"océano\",\"ochenta\",\"ocho\",\"ocio\",\"ocre\",\"octavo\",\"octubre\",\"oculto\",\"ocupar\",\"ocurrir\",\"odiar\",\"odio\",\"odisea\",\"oeste\",\"ofensa\",\"oferta\",\"oficio\",\"ofrecer\",\"ogro\",\"oído\",\"oír\",\"ojo\",\"ola\",\"oleada\",\"olfato\",\"olivo\",\"olla\",\"olmo\",\"olor\",\"olvido\",\"ombligo\",\"onda\",\"onza\",\"opaco\",\"opción\",\"ópera\",\"opinar\",\"oponer\",\"optar\",\"óptica\",\"opuesto\",\"oración\",\"orador\",\"oral\",\"órbita\",\"orca\",\"orden\",\"oreja\",\"órgano\",\"orgía\",\"orgullo\",\"oriente\",\"origen\",\"orilla\",\"oro\",\"orquesta\",\"oruga\",\"osadía\",\"oscuro\",\"osezno\",\"oso\",\"ostra\",\"otoño\",\"otro\",\"oveja\",\"óvulo\",\"óxido\",\"oxígeno\",\"oyente\",\"ozono\",\"pacto\",\"padre\",\"paella\",\"página\",\"pago\",\"país\",\"pájaro\",\"palabra\",\"palco\",\"paleta\",\"pálido\",\"palma\",\"paloma\",\"palpar\",\"pan\",\"panal\",\"pánico\",\"pantera\",\"pañuelo\",\"papá\",\"papel\",\"papilla\",\"paquete\",\"parar\",\"parcela\",\"pared\",\"parir\",\"paro\",\"párpado\",\"parque\",\"párrafo\",\"parte\",\"pasar\",\"paseo\",\"pasión\",\"paso\",\"pasta\",\"pata\",\"patio\",\"patria\",\"pausa\",\"pauta\",\"pavo\",\"payaso\",\"peatón\",\"pecado\",\"pecera\",\"pecho\",\"pedal\",\"pedir\",\"pegar\",\"peine\",\"pelar\",\"peldaño\",\"pelea\",\"peligro\",\"pellejo\",\"pelo\",\"peluca\",\"pena\",\"pensar\",\"peñón\",\"peón\",\"peor\",\"pepino\",\"pequeño\",\"pera\",\"percha\",\"perder\",\"pereza\",\"perfil\",\"perico\",\"perla\",\"permiso\",\"perro\",\"persona\",\"pesa\",\"pesca\",\"pésimo\",\"pestaña\",\"pétalo\",\"petróleo\",\"pez\",\"pezuña\",\"picar\",\"pichón\",\"pie\",\"piedra\",\"pierna\",\"pieza\",\"pijama\",\"pilar\",\"piloto\",\"pimienta\",\"pino\",\"pintor\",\"pinza\",\"piña\",\"piojo\",\"pipa\",\"pirata\",\"pisar\",\"piscina\",\"piso\",\"pista\",\"pitón\",\"pizca\",\"placa\",\"plan\",\"plata\",\"playa\",\"plaza\",\"pleito\",\"pleno\",\"plomo\",\"pluma\",\"plural\",\"pobre\",\"poco\",\"poder\",\"podio\",\"poema\",\"poesía\",\"poeta\",\"polen\",\"policía\",\"pollo\",\"polvo\",\"pomada\",\"pomelo\",\"pomo\",\"pompa\",\"poner\",\"porción\",\"portal\",\"posada\",\"poseer\",\"posible\",\"poste\",\"potencia\",\"potro\",\"pozo\",\"prado\",\"precoz\",\"pregunta\",\"premio\",\"prensa\",\"preso\",\"previo\",\"primo\",\"príncipe\",\"prisión\",\"privar\",\"proa\",\"probar\",\"proceso\",\"producto\",\"proeza\",\"profesor\",\"programa\",\"prole\",\"promesa\",\"pronto\",\"propio\",\"próximo\",\"prueba\",\"público\",\"puchero\",\"pudor\",\"pueblo\",\"puerta\",\"puesto\",\"pulga\",\"pulir\",\"pulmón\",\"pulpo\",\"pulso\",\"puma\",\"punto\",\"puñal\",\"puño\",\"pupa\",\"pupila\",\"puré\",\"quedar\",\"queja\",\"quemar\",\"querer\",\"queso\",\"quieto\",\"química\",\"quince\",\"quitar\",\"rábano\",\"rabia\",\"rabo\",\"ración\",\"radical\",\"raíz\",\"rama\",\"rampa\",\"rancho\",\"rango\",\"rapaz\",\"rápido\",\"rapto\",\"rasgo\",\"raspa\",\"rato\",\"rayo\",\"raza\",\"razón\",\"reacción\",\"realidad\",\"rebaño\",\"rebote\",\"recaer\",\"receta\",\"rechazo\",\"recoger\",\"recreo\",\"recto\",\"recurso\",\"red\",\"redondo\",\"reducir\",\"reflejo\",\"reforma\",\"refrán\",\"refugio\",\"regalo\",\"regir\",\"regla\",\"regreso\",\"rehén\",\"reino\",\"reír\",\"reja\",\"relato\",\"relevo\",\"relieve\",\"relleno\",\"reloj\",\"remar\",\"remedio\",\"remo\",\"rencor\",\"rendir\",\"renta\",\"reparto\",\"repetir\",\"reposo\",\"reptil\",\"res\",\"rescate\",\"resina\",\"respeto\",\"resto\",\"resumen\",\"retiro\",\"retorno\",\"retrato\",\"reunir\",\"revés\",\"revista\",\"rey\",\"rezar\",\"rico\",\"riego\",\"rienda\",\"riesgo\",\"rifa\",\"rígido\",\"rigor\",\"rincón\",\"riñón\",\"río\",\"riqueza\",\"risa\",\"ritmo\",\"rito\",\"rizo\",\"roble\",\"roce\",\"rociar\",\"rodar\",\"rodeo\",\"rodilla\",\"roer\",\"rojizo\",\"rojo\",\"romero\",\"romper\",\"ron\",\"ronco\",\"ronda\",\"ropa\",\"ropero\",\"rosa\",\"rosca\",\"rostro\",\"rotar\",\"rubí\",\"rubor\",\"rudo\",\"rueda\",\"rugir\",\"ruido\",\"ruina\",\"ruleta\",\"rulo\",\"rumbo\",\"rumor\",\"ruptura\",\"ruta\",\"rutina\",\"sábado\",\"saber\",\"sabio\",\"sable\",\"sacar\",\"sagaz\",\"sagrado\",\"sala\",\"saldo\",\"salero\",\"salir\",\"salmón\",\"salón\",\"salsa\",\"salto\",\"salud\",\"salvar\",\"samba\",\"sanción\",\"sandía\",\"sanear\",\"sangre\",\"sanidad\",\"sano\",\"santo\",\"sapo\",\"saque\",\"sardina\",\"sartén\",\"sastre\",\"satán\",\"sauna\",\"saxofón\",\"sección\",\"seco\",\"secreto\",\"secta\",\"sed\",\"seguir\",\"seis\",\"sello\",\"selva\",\"semana\",\"semilla\",\"senda\",\"sensor\",\"señal\",\"señor\",\"separar\",\"sepia\",\"sequía\",\"ser\",\"serie\",\"sermón\",\"servir\",\"sesenta\",\"sesión\",\"seta\",\"setenta\",\"severo\",\"sexo\",\"sexto\",\"sidra\",\"siesta\",\"siete\",\"siglo\",\"signo\",\"sílaba\",\"silbar\",\"silencio\",\"silla\",\"símbolo\",\"simio\",\"sirena\",\"sistema\",\"sitio\",\"situar\",\"sobre\",\"socio\",\"sodio\",\"sol\",\"solapa\",\"soldado\",\"soledad\",\"sólido\",\"soltar\",\"solución\",\"sombra\",\"sondeo\",\"sonido\",\"sonoro\",\"sonrisa\",\"sopa\",\"soplar\",\"soporte\",\"sordo\",\"sorpresa\",\"sorteo\",\"sostén\",\"sótano\",\"suave\",\"subir\",\"suceso\",\"sudor\",\"suegra\",\"suelo\",\"sueño\",\"suerte\",\"sufrir\",\"sujeto\",\"sultán\",\"sumar\",\"superar\",\"suplir\",\"suponer\",\"supremo\",\"sur\",\"surco\",\"sureño\",\"surgir\",\"susto\",\"sutil\",\"tabaco\",\"tabique\",\"tabla\",\"tabú\",\"taco\",\"tacto\",\"tajo\",\"talar\",\"talco\",\"talento\",\"talla\",\"talón\",\"tamaño\",\"tambor\",\"tango\",\"tanque\",\"tapa\",\"tapete\",\"tapia\",\"tapón\",\"taquilla\",\"tarde\",\"tarea\",\"tarifa\",\"tarjeta\",\"tarot\",\"tarro\",\"tarta\",\"tatuaje\",\"tauro\",\"taza\",\"tazón\",\"teatro\",\"techo\",\"tecla\",\"técnica\",\"tejado\",\"tejer\",\"tejido\",\"tela\",\"teléfono\",\"tema\",\"temor\",\"templo\",\"tenaz\",\"tender\",\"tener\",\"tenis\",\"tenso\",\"teoría\",\"terapia\",\"terco\",\"término\",\"ternura\",\"terror\",\"tesis\",\"tesoro\",\"testigo\",\"tetera\",\"texto\",\"tez\",\"tibio\",\"tiburón\",\"tiempo\",\"tienda\",\"tierra\",\"tieso\",\"tigre\",\"tijera\",\"tilde\",\"timbre\",\"tímido\",\"timo\",\"tinta\",\"tío\",\"típico\",\"tipo\",\"tira\",\"tirón\",\"titán\",\"títere\",\"título\",\"tiza\",\"toalla\",\"tobillo\",\"tocar\",\"tocino\",\"todo\",\"toga\",\"toldo\",\"tomar\",\"tono\",\"tonto\",\"topar\",\"tope\",\"toque\",\"tórax\",\"torero\",\"tormenta\",\"torneo\",\"toro\",\"torpedo\",\"torre\",\"torso\",\"tortuga\",\"tos\",\"tosco\",\"toser\",\"tóxico\",\"trabajo\",\"tractor\",\"traer\",\"tráfico\",\"trago\",\"traje\",\"tramo\",\"trance\",\"trato\",\"trauma\",\"trazar\",\"trébol\",\"tregua\",\"treinta\",\"tren\",\"trepar\",\"tres\",\"tribu\",\"trigo\",\"tripa\",\"triste\",\"triunfo\",\"trofeo\",\"trompa\",\"tronco\",\"tropa\",\"trote\",\"trozo\",\"truco\",\"trueno\",\"trufa\",\"tubería\",\"tubo\",\"tuerto\",\"tumba\",\"tumor\",\"túnel\",\"túnica\",\"turbina\",\"turismo\",\"turno\",\"tutor\",\"ubicar\",\"úlcera\",\"umbral\",\"unidad\",\"unir\",\"universo\",\"uno\",\"untar\",\"uña\",\"urbano\",\"urbe\",\"urgente\",\"urna\",\"usar\",\"usuario\",\"útil\",\"utopía\",\"uva\",\"vaca\",\"vacío\",\"vacuna\",\"vagar\",\"vago\",\"vaina\",\"vajilla\",\"vale\",\"válido\",\"valle\",\"valor\",\"válvula\",\"vampiro\",\"vara\",\"variar\",\"varón\",\"vaso\",\"vecino\",\"vector\",\"vehículo\",\"veinte\",\"vejez\",\"vela\",\"velero\",\"veloz\",\"vena\",\"vencer\",\"venda\",\"veneno\",\"vengar\",\"venir\",\"venta\",\"venus\",\"ver\",\"verano\",\"verbo\",\"verde\",\"vereda\",\"verja\",\"verso\",\"verter\",\"vía\",\"viaje\",\"vibrar\",\"vicio\",\"víctima\",\"vida\",\"vídeo\",\"vidrio\",\"viejo\",\"viernes\",\"vigor\",\"vil\",\"villa\",\"vinagre\",\"vino\",\"viñedo\",\"violín\",\"viral\",\"virgo\",\"virtud\",\"visor\",\"víspera\",\"vista\",\"vitamina\",\"viudo\",\"vivaz\",\"vivero\",\"vivir\",\"vivo\",\"volcán\",\"volumen\",\"volver\",\"voraz\",\"votar\",\"voto\",\"voz\",\"vuelo\",\"vulgar\",\"yacer\",\"yate\",\"yegua\",\"yema\",\"yerno\",\"yeso\",\"yodo\",\"yoga\",\"yogur\",\"zafiro\",\"zanja\",\"zapato\",\"zarza\",\"zona\",\"zorro\",\"zumo\",\"zurdo\"][\"abajur\",\"abaküs\",\"abartı\",\"abdal\",\"abdest\",\"abiye\",\"abluka\",\"abone\",\"absorbe\",\"absürt\",\"acayip\",\"acele\",\"acemi\",\"açıkgöz\",\"adalet\",\"adam\",\"adezyon\",\"adisyon\",\"adliye\",\"adres\",\"afacan\",\"afili\",\"afiş\",\"afiyet\",\"aforizm\",\"afra\",\"ağaç\",\"ağır\",\"ahbap\",\"ahkam\",\"ahlak\",\"ahtapot\",\"aidat\",\"aile\",\"ajan\",\"akademi\",\"akarsu\",\"akbaş\",\"akciğer\",\"akdeniz\",\"akıbet\",\"akıl\",\"akıntı\",\"akide\",\"akrep\",\"akrobasi\",\"aksiyon\",\"akşam\",\"aktif\",\"aktör\",\"aktris\",\"akustik\",\"alaca\",\"albüm\",\"alçak\",\"aldanma\",\"aleni\",\"alet\",\"alfabe\",\"algılama\",\"alıngan\",\"alkış\",\"alkol\",\"alpay\",\"alperen\",\"altın\",\"altüst\",\"altyapı\",\"alyuvar\",\"amade\",\"amatör\",\"amazon\",\"ambalaj\",\"amblem\",\"ambulans\",\"amca\",\"amel\",\"amigo\",\"amir\",\"amiyane\",\"amorti\",\"ampul\",\"anadolu\",\"anahtar\",\"anakonda\",\"anaokul\",\"anapara\",\"anarşi\",\"anatomi\",\"anayasa\",\"anekdot\",\"anestezi\",\"angaje\",\"anka\",\"anket\",\"anlamlı\",\"anne\",\"anomali\",\"anonim\",\"anten\",\"antlaşma\",\"apse\",\"araba\",\"aracı\",\"araf\",\"arbede\",\"arda\",\"arefe\",\"arena\",\"argo\",\"argüman\",\"arkadaş\",\"armoni\",\"aroma\",\"arsa\",\"arsız\",\"artı\",\"artist\",\"aruz\",\"asansör\",\"asayiş\",\"asfalt\",\"asgari\",\"asil\",\"asker\",\"askı\",\"aslan\",\"asosyal\",\"astsubay\",\"asya\",\"aşçı\",\"aşırı\",\"aşure\",\"atabey\",\"ataman\",\"ateş\",\"atmaca\",\"atmosfer\",\"atom\",\"atölye\",\"avcı\",\"avdet\",\"avize\",\"avlu\",\"avokado\",\"avrupa\",\"avukat\",\"ayaz\",\"ayçiçeği\",\"aydın\",\"aygıt\",\"ayna\",\"ayran\",\"ayrıntı\",\"azim\",\"baca\",\"bagaj\",\"bağlantı\",\"bahadır\",\"bahçe\",\"baki\",\"bakkal\",\"baklava\",\"bakteri\",\"balçık\",\"balina\",\"balo\",\"balta\",\"bant\",\"banyo\",\"bardak\",\"barış\",\"başbuğ\",\"başıboş\",\"başkan\",\"başlık\",\"bavul\",\"bayındır\",\"baykuş\",\"bazlama\",\"bedel\",\"begüm\",\"bekçi\",\"bekle\",\"belge\",\"belki\",\"bencil\",\"benek\",\"bengi\",\"benzer\",\"berjer\",\"berk\",\"bermuda\",\"berrak\",\"beşik\",\"beton\",\"beyin\",\"beyoğlu\",\"bıçak\",\"biberiye\",\"bidon\",\"biftek\",\"bihaber\",\"bikini\",\"bilezik\",\"bilinç\",\"bilye\",\"bina\",\"binbaşı\",\"binyıl\",\"bisiklet\",\"bisküvi\",\"bitki\",\"bizzat\",\"bodrum\",\"boğaz\",\"bohça\",\"bolero\",\"boncuk\",\"bonfile\",\"borsa\",\"boru\",\"bostan\",\"boşboğaz\",\"botanik\",\"boya\",\"boykot\",\"boynuz\",\"bozgun\",\"bozkır\",\"bölüm\",\"börek\",\"buçuk\",\"bugün\",\"buğday\",\"buhar\",\"buhran\",\"bulvar\",\"buram\",\"burçak\",\"burs\",\"burun\",\"butik\",\"buzdağı\",\"buzkıran\",\"bücür\",\"büfe\",\"bülten\",\"bütçe\",\"bütün\",\"büyük\",\"cacık\",\"cadı\",\"cahil\",\"cambaz\",\"canhıraş\",\"casus\",\"cazibe\",\"cehalet\",\"cehennem\",\"ceket\",\"cemre\",\"cenin\",\"cennet\",\"cepken\",\"cerrah\",\"cesur\",\"cetvel\",\"cevher\",\"ceylan\",\"cılız\",\"cıva\",\"cilt\",\"cisim\",\"ciyak\",\"coğrafya\",\"cömert\",\"cumba\",\"cüzdan\",\"çabucak\",\"çadır\",\"çağdaş\",\"çağlayan\",\"çağrı\",\"çakmak\",\"çalışkan\",\"çamaşır\",\"çapa\",\"çaput\",\"çarık\",\"çarpan\",\"çarşaf\",\"çayhane\",\"çekirdek\",\"çelebi\",\"çember\",\"çenet\",\"çengel\",\"çerçeve\",\"çerez\",\"çeşit\",\"çeşme\",\"çete\",\"çevre\",\"çeyiz\",\"çeyrek\",\"çığır\",\"çılgın\",\"çıngırak\",\"çift\",\"çiğdem\",\"çikolata\",\"çilek\",\"çimen\",\"çivi\",\"çoban\",\"çocuk\",\"çokgen\",\"çomak\",\"çorba\",\"çözelti\",\"çubuk\",\"çukur\",\"çuval\",\"çürük\",\"dağbaşı\",\"dağılım\",\"daktilo\",\"daldırış\",\"dalga\",\"dalkavuk\",\"damak\",\"damıtma\",\"damla\",\"dana\",\"dandik\",\"danışman\",\"daniska\",\"dantel\",\"dargeçit\",\"darphane\",\"davet\",\"dayı\",\"defter\",\"değer\",\"değirmen\",\"dehşet\",\"delgeç\",\"demir\",\"deneyim\",\"denge\",\"depo\",\"deprem\",\"derdest\",\"dere\",\"derhal\",\"derman\",\"dernek\",\"derviş\",\"desen\",\"destan\",\"dışarı\",\"dışbükey\",\"dijital\",\"dikbaşlı\",\"dilekçe\",\"dimağ\",\"dinamik\",\"dindar\",\"dinleme\",\"dinozor\",\"dipçik\",\"dipnot\",\"direniş\",\"dirsek\",\"disiplin\",\"disk\",\"divriği\",\"dizüstü\",\"dobra\",\"dodurga\",\"doğalgaz\",\"doktor\",\"doküman\",\"dolap\",\"donanım\",\"dondurma\",\"donör\",\"doruk\",\"dosdoğru\",\"dost\",\"dosya\",\"dozer\",\"döküm\",\"dönence\",\"dörtyol\",\"dövme\",\"dram\",\"dublaj\",\"durum\",\"duvak\",\"duyarga\",\"duyma\",\"duyuru\",\"düğme\",\"düğüm\",\"dükkan\",\"dünür\",\"düpedüz\",\"dürbün\",\"düşünür\",\"düzayak\",\"düzeltme\",\"ebeveyn\",\"ebru\",\"ecel\",\"ecnebi\",\"ecza\",\"edat\",\"edilgen\",\"efendi\",\"efor\",\"efsane\",\"egemen\",\"egzersiz\",\"eğrelti\",\"ekarte\",\"ekip\",\"eklem\",\"ekmek\",\"ekol\",\"ekonomi\",\"ekose\",\"ekran\",\"ekvator\",\"elaman\",\"elastik\",\"elbet\",\"elbise\",\"elçi\",\"eldiven\",\"elebaşı\",\"eleştiri\",\"elma\",\"eloğlu\",\"elveda\",\"emare\",\"emekçi\",\"emisyon\",\"emniyet\",\"empati\",\"emsal\",\"emzik\",\"endüstri\",\"enerji\",\"engebe\",\"engin\",\"enişte\",\"enkaz\",\"entari\",\"entegre\",\"entrika\",\"enzim\",\"erdem\",\"ergen\",\"erguvan\",\"erkek\",\"erozyon\",\"ertesi\",\"erzak\",\"esaret\",\"esenlik\",\"eser\",\"eski\",\"esnek\",\"eşarp\",\"eşofman\",\"eşraf\",\"eşya\",\"eşzaman\",\"etik\",\"etken\",\"etkinlik\",\"etüt\",\"evet\",\"evire\",\"evrak\",\"evrim\",\"eyalet\",\"eyvah\",\"ezber\",\"fabrika\",\"fanatik\",\"fanus\",\"fason\",\"fasulye\",\"fatih\",\"fatura\",\"fauna\",\"favori\",\"fayans\",\"fayton\",\"fazıl\",\"fazilet\",\"federal\",\"felsefe\",\"fener\",\"feribot\",\"fersah\",\"fesih\",\"festival\",\"feveran\",\"feza\",\"fıçı\",\"fıldır\",\"fındık\",\"fırça\",\"fırsat\",\"fırtına\",\"fıtık\",\"fidan\",\"fidye\",\"figür\",\"fihrist\",\"fikir\",\"fildişi\",\"filo\",\"filtre\",\"fincan\",\"firuze\",\"fitil\",\"fiyaka\",\"fizik\",\"flaş\",\"flüt\",\"fosil\",\"fren\",\"fukara\",\"futbol\",\"garabet\",\"gariban\",\"garnitür\",\"gazi\",\"gece\",\"gedik\",\"gelenek\",\"gelin\",\"gemi\",\"genç\",\"geniş\",\"geometri\",\"gerçek\",\"gevrek\",\"gezegen\",\"gezgin\",\"geziyolu\",\"gıcık\",\"gıda\",\"gıybet\",\"girdap\",\"girişim\",\"gitar\",\"giyecek\",\"giysi\",\"gizem\",\"gofret\",\"goril\",\"göbek\",\"göçebe\",\"göğüs\",\"gökdelen\",\"gökmen\",\"gökyüzü\",\"gölge\",\"gömlek\",\"gönül\",\"görenek\",\"görkemli\",\"görsel\",\"gösteri\",\"gövde\",\"gözaltı\",\"gözcü\",\"gözdağı\",\"gözleme\",\"gözyaşı\",\"grup\",\"gurbet\",\"gusül\",\"gübre\",\"güfte\",\"gümüş\",\"günaydın\",\"güncel\",\"gündüz\",\"güneş\",\"günyüzü\",\"gürbüz\",\"güvercin\",\"güzel\",\"haber\",\"hacamat\",\"hacim\",\"hademe\",\"hafız\",\"hafriyat\",\"hafta\",\"hakan\",\"hakem\",\"hakikat\",\"haksever\",\"halı\",\"hançer\",\"hane\",\"hangar\",\"hapis\",\"hapşırık\",\"harf\",\"haseki\",\"hasret\",\"hatun\",\"havuç\",\"haylaz\",\"haysiyet\",\"hayvan\",\"hedef\",\"hektar\",\"hemen\",\"hemfikir\",\"hendek\",\"hepsi\",\"hergele\",\"herhangi\",\"hesap\",\"heyecan\",\"heykel\",\"hezimet\",\"hıçkırık\",\"hızölçer\",\"hicviye\",\"hikaye\",\"hikmet\",\"hile\",\"hisse\",\"hobi\",\"hoca\",\"horlama\",\"hormon\",\"hoşbeş\",\"hoşgörü\",\"hoyrat\",\"hörgüç\",\"höyük\",\"hudut\",\"hukuk\",\"hunhar\",\"hurda\",\"huysuz\",\"huzur\",\"hücum\",\"hükümet\",\"hünkar\",\"hüviyet\",\"ırmak\",\"ısıölçer\",\"ısıtıcı\",\"ıspanak\",\"ısrar\",\"ışıldak\",\"ızdırap\",\"ızgara\",\"ibadet\",\"icat\",\"içbükey\",\"içecek\",\"içgüdü\",\"içsel\",\"idman\",\"iftihar\",\"iğne\",\"ihanet\",\"ihbar\",\"ihdas\",\"ihmal\",\"ihracat\",\"ihsan\",\"ikilem\",\"ikindi\",\"ikircik\",\"iklim\",\"iksir\",\"iktibas\",\"ilaç\",\"ilçe\",\"ileri\",\"iletişim\",\"ilgi\",\"ilhak\",\"ilkbahar\",\"ilkokul\",\"ilmek\",\"imkan\",\"imleç\",\"imsak\",\"imtihan\",\"imza\",\"ince\",\"inkar\",\"inşa\",\"ipek\",\"ipucu\",\"irade\",\"irfan\",\"irmik\",\"isabet\",\"iskele\",\"israf\",\"isyan\",\"işçi\",\"işgal\",\"işgüzar\",\"işlem\",\"itibar\",\"itiraf\",\"ivedi\",\"ivme\",\"iyileşme\",\"iyimser\",\"izbandut\",\"izci\",\"izdiham\",\"izin\",\"jakoben\",\"jandarma\",\"jargon\",\"kabadayı\",\"kablo\",\"kabus\",\"kaçamak\",\"kadeh\",\"kadın\",\"kadraj\",\"kafa\",\"kafkas\",\"kağıt\",\"kağnı\",\"kahkaha\",\"kahraman\",\"kahvaltı\",\"kakül\",\"kaldırım\",\"kale\",\"kalibre\",\"kalkan\",\"kalpak\",\"kamış\",\"kamyon\",\"kanat\",\"kandaş\",\"kanepe\",\"kanser\",\"kanun\",\"kaos\",\"kapı\",\"kaplıca\",\"kaptan\",\"karanlık\",\"kardeş\",\"karga\",\"karınca\",\"karmaşa\",\"karşıt\",\"kasırga\",\"kask\",\"kasvet\",\"katkı\",\"katman\",\"kavram\",\"kaygan\",\"kaynakça\",\"kayyum\",\"kedi\",\"kehanet\",\"kekik\",\"kelebek\",\"kenar\",\"kerkenez\",\"kerpiç\",\"kesirli\",\"kesmece\",\"kestane\",\"keşkek\",\"ketçap\",\"keyfiyet\",\"kıble\",\"kıdemli\",\"kılavuz\",\"kılçık\",\"kılıf\",\"kıraç\",\"kırmızı\",\"kırsal\",\"kısayol\",\"kısım\",\"kıskanç\",\"kısmet\",\"kışla\",\"kıvanç\",\"kıvılcım\",\"kıvrık\",\"kıyafet\",\"kıymetli\",\"kızak\",\"kızılcık\",\"kibar\",\"kinaye\",\"kira\",\"kiremit\",\"kirli\",\"kirpik\",\"kişisel\",\"kitap\",\"koçbaşı\",\"kodaman\",\"koğuş\",\"kokteyl\",\"kolaycı\",\"kolbastı\",\"kolonya\",\"koltuk\",\"kolye\",\"kombine\",\"komedyen\",\"komiser\",\"komposto\",\"komşu\",\"komuta\",\"konak\",\"konfor\",\"koni\",\"konsül\",\"kopya\",\"korkusuz\",\"korna\",\"korse\",\"korunak\",\"korvet\",\"kostüm\",\"koşul\",\"koyu\",\"kozmik\",\"köfte\",\"kökensel\",\"köprücük\",\"köpük\",\"kördüğüm\",\"körfez\",\"köstebek\",\"köşegen\",\"kötü\",\"kravat\",\"kriter\",\"kuantum\",\"kudurma\",\"kuluçka\",\"kulübe\",\"kumanya\",\"kumbara\",\"kumlu\",\"kumpir\",\"kumral\",\"kundura\",\"kupa\",\"kupkuru\",\"kuramsal\",\"kurbağa\",\"kurdele\",\"kurgu\",\"kurmay\",\"kurşun\",\"kurtuluş\",\"kurultay\",\"kurye\",\"kusursuz\",\"kuşak\",\"kuşbaşı\",\"kuşkulu\",\"kutlama\",\"kutsal\",\"kutup\",\"kuver\",\"kuyruk\",\"kuzey\",\"kuzgun\",\"küçük\",\"külçe\",\"külfet\",\"külliye\",\"kültürel\",\"kümes\",\"künefe\",\"küresel\",\"kütle\",\"lahana\",\"lahmacun\",\"lamba\",\"lansman\",\"lavaş\",\"layık\",\"leğen\",\"levent\",\"leziz\",\"lezzet\",\"lider\",\"likide\",\"liman\",\"liste\",\"litre\",\"liyakat\",\"lodos\",\"lokanta\",\"lokman\",\"lokum\",\"lunapark\",\"lütfen\",\"lüzum\",\"nokta\",\"mabet\",\"macera\",\"macun\",\"madalya\",\"madde\",\"madem\",\"mağara\",\"mağdur\",\"mağfiret\",\"mağlup\",\"mahalle\",\"mahcup\",\"mahir\",\"mahkeme\",\"mahlas\",\"mahrum\",\"mahsul\",\"makas\",\"makbuz\",\"makine\",\"makro\",\"maksat\",\"makul\",\"maliye\",\"manav\",\"mangal\",\"manidar\",\"manken\",\"mantık\",\"manzara\",\"mareşal\",\"margarin\",\"marifet\",\"market\",\"marmelat\",\"masaüstü\",\"masmavi\",\"masraf\",\"masum\",\"matah\",\"materyal\",\"matrak\",\"maval\",\"mavra\",\"maydanoz\",\"mayhoş\",\"maytap\",\"mazbata\",\"mazeret\",\"mazlum\",\"mazot\",\"mazur\",\"meblağ\",\"mebus\",\"mecaz\",\"mecbur\",\"meclis\",\"mecmua\",\"mecnun\",\"meçhul\",\"medeni\",\"mehtap\",\"mekanik\",\"melodi\",\"meltem\",\"memur\",\"mendil\",\"menekşe\",\"menteşe\",\"meraklı\",\"mercek\",\"merdiven\",\"merhaba\",\"merinos\",\"merkez\",\"mermi\",\"mert\",\"mesafe\",\"mesele\",\"mesken\",\"meslek\",\"meşale\",\"meşgul\",\"meşhur\",\"metafor\",\"metin\",\"metre\",\"mevcut\",\"mevkidaş\",\"meydan\",\"meyil\",\"meyve\",\"meziyet\",\"mezun\",\"mıknatıs\",\"mısra\",\"mızıka\",\"miğfer\",\"mihrak\",\"mikrofon\",\"miktar\",\"milat\",\"milli\",\"mimar\",\"minare\",\"mineral\",\"minik\",\"minyon\",\"mirliva\",\"misafir\",\"miskin\",\"miting\",\"miyop\",\"mizah\",\"mobilya\",\"model\",\"monitör\",\"morötesi\",\"motive\",\"motor\",\"mozaik\",\"muavin\",\"mucize\",\"muhafız\",\"muhteşem\",\"mukayese\",\"mumya\",\"musluk\",\"muşamba\",\"mutabık\",\"mutfak\",\"mutlu\",\"muzaffer\",\"muzdarip\",\"mübarek\",\"mücadele\",\"müdür\",\"müfredat\",\"müftü\",\"mühendis\",\"mühim\",\"mühlet\",\"mükemmel\",\"mülk\",\"mümkün\",\"mümtaz\",\"müsrif\",\"müstesna\",\"müşahit\",\"müşteri\",\"mütercim\",\"müthiş\",\"müze\",\"müzik\",\"nabız\",\"nadas\",\"nadir\",\"nahoş\",\"nakarat\",\"nakış\",\"nalbur\",\"namlu\",\"namus\",\"nankör\",\"nargile\",\"narkoz\",\"nasıl\",\"nasip\",\"naylon\",\"nazar\",\"nazım\",\"nazik\",\"neden\",\"nefes\",\"negatif\",\"neon\",\"neptün\",\"nerede\",\"nesil\",\"nesnel\",\"neşeli\",\"netice\",\"nevresim\",\"neyse\",\"neyzen\",\"nezaket\",\"nezih\",\"nezle\",\"nicel\",\"nilüfer\",\"nimet\",\"nisan\",\"nispet\",\"nitekim\",\"nizam\",\"nohut\",\"noksan\",\"normal\",\"nostalji\",\"noter\",\"nöbet\",\"numara\",\"numune\",\"nutuk\",\"nüfus\",\"obabaşı\",\"obez\",\"obje\",\"ocak\",\"odun\",\"ofansif\",\"ofis\",\"oğlak\",\"oğuz\",\"okçu\",\"oklava\",\"oksijen\",\"okul\",\"okumuş\",\"okutman\",\"okuyucu\",\"okyanus\",\"olağan\",\"olanak\",\"olası\",\"olay\",\"olgun\",\"olimpik\",\"olumlu\",\"omlet\",\"omurga\",\"onarım\",\"onursal\",\"opera\",\"optik\",\"oral\",\"orantı\",\"ordu\",\"organik\",\"orijin\",\"orkide\",\"orman\",\"orta\",\"oruç\",\"otağ\",\"otantik\",\"otel\",\"otoban\",\"otogar\",\"otomobil\",\"otonom\",\"otopark\",\"otorite\",\"otoyol\",\"oturum\",\"oyuk\",\"oyuncak\",\"ozan\",\"ödeme\",\"ödenek\",\"ödev\",\"ödül\",\"ödünç\",\"öfke\",\"öğlen\",\"öğrenci\",\"öğün\",\"öğütücü\",\"öksürük\",\"ölçme\",\"ölçü\",\"ölümsüz\",\"ömür\",\"önayak\",\"öncü\",\"önder\",\"önem\",\"önerge\",\"öngörü\",\"önlük\",\"önsezi\",\"öpücük\",\"ördek\",\"örgü\",\"örtbas\",\"örtme\",\"örtü\",\"örümcek\",\"örüntü\",\"öteberi\",\"öteki\",\"övünç\",\"öykü\",\"öyleyse\",\"özçekim\",\"özdeyiş\",\"özel\",\"özenti\",\"özerk\",\"özgürlük\",\"özlem\",\"özlü\",\"özne\",\"özsever\",\"özümseme\",\"özür\",\"özveri\",\"pabuç\",\"padişah\",\"palamut\",\"palmiye\",\"palto\",\"palyaço\",\"pamuk\",\"panayır\",\"pancar\",\"panda\",\"panel\",\"panik\",\"panjur\",\"pankart\",\"pano\",\"pansuman\",\"pantolon\",\"panzehir\",\"papatya\",\"papyon\",\"paraşüt\",\"parça\",\"pardösü\",\"parfüm\",\"parıltı\",\"parkur\",\"parmak\",\"parodi\",\"parsel\",\"partner\",\"pasaport\",\"pasif\",\"paskalya\",\"pastırma\",\"paşa\",\"patates\",\"paten\",\"patika\",\"patlıcan\",\"patolog\",\"patron\",\"payanda\",\"paydaş\",\"payidar\",\"paylaşma\",\"paytak\",\"peçete\",\"pedal\",\"peder\",\"pehlivan\",\"pekala\",\"pekmez\",\"pelerin\",\"pelikan\",\"pelüş\",\"pembe\",\"pena\",\"pencere\",\"pense\",\"perçin\",\"perde\",\"pergel\",\"perişan\",\"peron\",\"personel\",\"perşembe\",\"peruk\",\"pervane\",\"pespaye\",\"pestil\",\"peşin\",\"petek\",\"petrol\",\"petunya\",\"peynir\",\"peyzaj\",\"pınar\",\"pırasa\",\"pırlanta\",\"pide\",\"pikap\",\"piknik\",\"pilav\",\"piliç\",\"pilot\",\"pipet\",\"pipo\",\"piramit\",\"pirinç\",\"pirzola\",\"pist\",\"pişik\",\"pişman\",\"piyasa\",\"piyes\",\"plaj\",\"plaket\",\"planlama\",\"platform\",\"plazma\",\"podyum\",\"poğaça\",\"polat\",\"polen\",\"politika\",\"pompa\",\"popüler\",\"porselen\",\"portakal\",\"posa\",\"poster\",\"poşet\",\"poyraz\",\"pozitif\",\"pranga\",\"pratik\",\"prenses\",\"prim\",\"problem\",\"profil\",\"program\",\"proje\",\"protokol\",\"prova\",\"puan\",\"pudra\",\"pusula\",\"püre\",\"pürüz\",\"püstül\",\"püsür\",\"racon\",\"radar\",\"radikal\",\"radyo\",\"rafadan\",\"rafine\",\"rağbet\",\"rahat\",\"rahle\",\"rakam\",\"raket\",\"rakip\",\"rakun\",\"ralli\",\"rampa\",\"randevu\",\"ranza\",\"rapor\",\"rastgele\",\"rasyonel\",\"razı\",\"realite\",\"reçine\",\"refah\",\"referans\",\"refik\",\"reform\",\"rehber\",\"rehin\",\"reis\",\"rekabet\",\"reklam\",\"rekor\",\"rektör\",\"renk\",\"resim\",\"resmen\",\"restoran\",\"retorik\",\"revaç\",\"revize\",\"reyon\",\"rezalet\",\"rezerv\",\"rezil\",\"rıhtım\",\"rıza\",\"ritim\",\"ritüel\",\"rivayet\",\"robot\",\"roman\",\"rota\",\"rozet\",\"röportaj\",\"rötar\",\"ruble\",\"ruhban\",\"ruhsat\",\"rulet\",\"rulo\",\"runik\",\"rutin\",\"rutubet\",\"rüşvet\",\"rütbe\",\"rüya\",\"rüzgar\",\"sabah\",\"sabıka\",\"sabit\",\"sabun\",\"saçma\",\"sade\",\"sadık\",\"safahat\",\"safdil\",\"safkan\",\"sağanak\",\"sağduyu\",\"sağlam\",\"saha\",\"sahiden\",\"sahne\",\"sakal\",\"sakız\",\"sakin\",\"saklama\",\"saksağan\",\"salamura\",\"salça\",\"salgı\",\"salınım\",\"salkım\",\"salon\",\"saltanat\",\"sanatçı\",\"sancak\",\"sandalye\",\"saniye\",\"saplantı\",\"sapsız\",\"saray\",\"sarışın\",\"sarkık\",\"sarmaşık\",\"satır\",\"savaşım\",\"savunma\",\"saydam\",\"sayfa\",\"saygın\",\"sayısal\",\"sebep\",\"seçenek\",\"seçim\",\"seçkin\",\"seçmen\",\"seda\",\"sedir\",\"sedye\",\"sefer\",\"sehpa\",\"sekizgen\",\"selektör\",\"selvi\",\"semavi\",\"sembol\",\"seminer\",\"senaryo\",\"sendika\",\"senkron\",\"sensör\",\"sentez\",\"sepet\",\"seramik\",\"serbest\",\"serdar\",\"seremoni\",\"sergi\",\"serhat\",\"serin\",\"sermaye\",\"serpuş\",\"sersem\",\"serüven\",\"servis\",\"sesli\",\"sesteş\",\"sevap\",\"seviye\",\"seyahat\",\"seyirci\",\"sezon\",\"sıcak\",\"sıfat\",\"sıhhi\",\"sınanma\",\"sınır\",\"sıradan\",\"sırdaş\",\"sırma\",\"sırtüstü\",\"sızgıt\",\"siftah\",\"sigorta\",\"sihirbaz\",\"silah\",\"silecek\",\"silindir\",\"simetri\",\"simge\",\"simit\",\"sincap\",\"sindirim\",\"sinema\",\"sinirli\",\"sipariş\",\"sirke\",\"siroz\",\"sistem\",\"sivilce\",\"siyasi\",\"slogan\",\"soba\",\"sofra\",\"soğuk\",\"sohbet\",\"sokak\",\"solfej\",\"solunum\",\"somut\",\"sonbahar\",\"sonraki\",\"sonsuz\",\"sorunsuz\",\"sosyete\",\"soyağacı\",\"soydaş\",\"soygun\",\"soytarı\",\"söğüş\",\"sömürge\",\"sönük\",\"söylem\",\"sözcük\",\"sözde\",\"spatula\",\"spektrum\",\"spiker\",\"spiral\",\"sponsor\",\"sporcu\",\"sprey\",\"stabil\",\"statü\",\"stok\",\"stopaj\",\"strateji\",\"subay\",\"sucuk\",\"suçüstü\",\"suhulet\",\"sulama\",\"sungur\",\"sunucu\",\"surat\",\"susam\",\"suskun\",\"sükse\",\"sükut\",\"sülale\",\"sünger\",\"süpürge\",\"sürahi\",\"süreç\",\"sürgün\",\"sürüm\",\"süsleme\",\"sütanne\",\"sütlaç\",\"sütun\",\"süvari\",\"şahane\",\"şahbaz\",\"şahit\",\"şahsiyet\",\"şakıma\",\"şaklaban\",\"şakrak\",\"şamar\",\"şampiyon\",\"şanslı\",\"şantiye\",\"şapka\",\"şarkıcı\",\"şartname\",\"şaşırma\",\"şaşkın\",\"şatafat\",\"şayet\",\"şebeke\",\"şefkat\",\"şeftali\",\"şehir\",\"şehvet\",\"şeker\",\"şekil\",\"şelale\",\"şema\",\"şemsiye\",\"şerbet\",\"şeref\",\"şerit\",\"şımarık\",\"şıpıdık\",\"şifre\",\"şimdi\",\"şimşek\",\"şipşak\",\"şirin\",\"şişe\",\"şişirme\",\"şofben\",\"şöhret\",\"şölen\",\"şüphe\",\"tabaka\",\"tabela\",\"tabure\",\"tadilat\",\"taharet\",\"tahıl\",\"tahkim\",\"tahlil\",\"tahmin\",\"tahrifat\",\"tahsilat\",\"tahta\",\"taklit\",\"takoz\",\"taksici\",\"taktik\",\"takvim\",\"talebe\",\"talip\",\"tamamen\",\"tamirci\",\"tampon\",\"tamtakır\",\"tandır\",\"tanecik\",\"tanıtım\",\"tanrı\",\"tansiyon\",\"tapan\",\"tapınak\",\"taptaze\",\"tapu\",\"tarafgir\",\"tarhana\",\"tarım\",\"tarih\",\"tarla\",\"tartak\",\"tarumar\",\"tasarım\",\"tasdik\",\"taslak\",\"tastamam\",\"taşeron\",\"taşınmaz\",\"taşra\",\"tatava\",\"tatbikat\",\"tatil\",\"tatlı\",\"tavsiye\",\"tavşan\",\"tavuk\",\"taze\",\"taziye\",\"tazminat\",\"tebeşir\",\"tebrik\",\"tecrübe\",\"teçhizat\",\"tedarik\",\"tedbir\",\"teftiş\",\"teğet\",\"teğmen\",\"tehdit\",\"tehlike\",\"tekdüze\",\"tekerlek\",\"tekme\",\"teknik\",\"tekrar\",\"telef\",\"telsiz\",\"telve\",\"temas\",\"tembel\",\"temiz\",\"temkin\",\"tempo\",\"temsilci\",\"tendon\",\"teneke\",\"tenha\",\"tenkit\",\"tepegöz\",\"tepki\",\"terazi\",\"terbiye\",\"tercih\",\"tereyağı\",\"terfi\",\"terim\",\"terminal\",\"tersane\",\"tertip\",\"tesadüf\",\"tescil\",\"tesir\",\"teslimat\",\"tespit\",\"testere\",\"teşekkür\",\"teşhir\",\"teşrif\",\"teşvik\",\"teyze\",\"tezahür\",\"tezgah\",\"tıbbi\",\"tıkaç\",\"tıkışık\",\"tıknaz\",\"tılsım\",\"tıpkı\",\"tıraş\",\"tırışka\",\"tırmanış\",\"tırnak\",\"tırpan\",\"tıslama\",\"ticaret\",\"tilki\",\"tiryaki\",\"titreşim\",\"tohum\",\"tokat\",\"tolere\",\"tomar\",\"tombak\",\"tomurcuk\",\"topaç\",\"toplum\",\"toprak\",\"toptan\",\"toraman\",\"torpido\",\"tortu\",\"tosbağa\",\"toynak\",\"tören\",\"trafik\",\"trajedi\",\"tramvay\",\"transfer\",\"tribün\",\"triko\",\"tugay\",\"tuğla\",\"tuğrul\",\"tuhaf\",\"tulumba\",\"tunç\",\"turan\",\"turkuaz\",\"turnusol\",\"turşu\",\"turuncu\",\"tutanak\",\"tutkal\",\"tutsak\",\"tutum\",\"tuyuğ\",\"tuzlu\",\"tüccar\",\"tüfek\",\"tükenmez\",\"tülbent\",\"tümleç\",\"tünel\",\"türbin\",\"türev\",\"türk\",\"tüzük\",\"ucube\",\"ucuz\",\"uçak\",\"uçurtma\",\"ufuk\",\"uğrak\",\"uğur\",\"ukala\",\"ulaşım\",\"ulema\",\"ulus\",\"ulvi\",\"umursama\",\"umut\",\"unutkan\",\"uslu\",\"ustabaşı\",\"ustura\",\"usul\",\"utangaç\",\"uyanık\",\"uyarı\",\"uydu\",\"uygar\",\"uygulama\",\"uykusuz\",\"uysal\",\"uyuşma\",\"uzantı\",\"uzay\",\"uzgören\",\"uzlaşma\",\"uzman\",\"uzun\",\"ücra\",\"ücret\",\"üçbudak\",\"üçgen\",\"üçkağıt\",\"üçleme\",\"üfürük\",\"ülke\",\"ümit\",\"üniforma\",\"ünite\",\"ünlem\",\"üretken\",\"ürün\",\"üslup\",\"üstel\",\"üstün\",\"üşengeç\",\"üşüme\",\"ütopya\",\"üvey\",\"üzengi\",\"üzgün\",\"üzüm\",\"vagon\",\"vaka\",\"vakfiye\",\"vakıf\",\"vakit\",\"vakum\",\"vapur\",\"varil\",\"varlık\",\"varsayım\",\"varyemez\",\"vasıta\",\"vasiyet\",\"vatandaş\",\"vazife\",\"vazo\",\"veciz\",\"vefa\",\"vehim\",\"veliaht\",\"veresiye\",\"verimli\",\"verkaç\",\"vernik\",\"vertigo\",\"vesait\",\"vesika\",\"vestiyer\",\"veznedar\",\"vicdan\",\"vilayet\",\"virane\",\"virgül\",\"vişne\",\"vites\",\"vokal\",\"volkan\",\"vurma\",\"vurucu\",\"vücut\",\"yabancı\",\"yabgu\",\"yağış\",\"yağlı\",\"yağmur\",\"yakamoz\",\"yakın\",\"yaklaşık\",\"yalçın\",\"yalıtım\",\"yaman\",\"yanardağ\",\"yangın\",\"yanıt\",\"yankı\",\"yanlış\",\"yansıma\",\"yapay\",\"yapboz\",\"yapımcı\",\"yaprak\",\"yaratık\",\"yarbay\",\"yardım\",\"yargıç\",\"yarıçap\",\"yasemin\",\"yastık\",\"yaşam\",\"yatak\",\"yatırım\",\"yavru\",\"yaygara\",\"yayıncı\",\"yayla\",\"yazılım\",\"yekpare\",\"yekvücut\",\"yelkovan\",\"yelpaze\",\"yemek\",\"yemiş\",\"yengeç\",\"yeniçeri\",\"yeraltı\",\"yerküre\",\"yerleşke\",\"yeryüzü\",\"yeşil\",\"yetenek\",\"yetkili\",\"yığınak\",\"yıkama\",\"yılbaşı\",\"yıldırım\",\"yılkı\",\"yılmaz\",\"yırtıcı\",\"yiğit\",\"yoğurt\",\"yokuş\",\"yolcu\",\"yoldaş\",\"yolgeçen\",\"yolkesen\",\"yolüstü\",\"yordam\",\"yorgan\",\"yorumcu\",\"yosun\",\"yöndeş\",\"yönetim\",\"yönlü\",\"yöntem\",\"yöresel\",\"yörünge\",\"yufka\",\"yukarı\",\"yumruk\",\"yumurta\",\"yuvarlak\",\"yücelme\",\"yükçeker\",\"yüklem\",\"yüksek\",\"yürek\",\"yürütme\",\"yüzde\",\"yüzeysel\",\"yüzgeç\",\"yüzüstü\",\"yüzyıl\",\"zabıta\",\"zafer\",\"zahmet\",\"zambak\",\"zaptiye\",\"zarafet\",\"zaruret\",\"zeka\",\"zekice\",\"zemberek\",\"zemin\",\"zencefil\",\"zeplin\",\"zeytin\",\"zıbın\",\"zılgıt\",\"zımbırtı\",\"zımpara\",\"zıpkın\",\"zigon\",\"zihinsel\",\"zihniyet\",\"zincir\",\"zindan\",\"zirzop\",\"ziyaret\",\"ziynet\",\"zoraki\",\"zorlu\",\"zorunlu\",\"züğürt\",\"zümre\"]const LE = exports.LE = (new Uint8Array(new Uint16Array([0xff]).buffer))[0] === 0xff\n\nexports.BE = !LE\nconst b4a = require('b4a')\n\nconst { BE } = require('./endian')\n\nexports.state = function (start = 0, end = 0, buffer = null) {\n  return { start, end, buffer, cache: null }\n}\n\nconst raw = exports.raw = require('./raw')\n\nconst uint = exports.uint = {\n  preencode (state, n) {\n    state.end += n <= 0xfc ? 1 : n <= 0xffff ? 3 : n <= 0xffffffff ? 5 : 9\n  },\n  encode (state, n) {\n    if (n <= 0xfc) uint8.encode(state, n)\n    else if (n <= 0xffff) {\n      state.buffer[state.start++] = 0xfd\n      uint16.encode(state, n)\n    } else if (n <= 0xffffffff) {\n      state.buffer[state.start++] = 0xfe\n      uint32.encode(state, n)\n    } else {\n      state.buffer[state.start++] = 0xff\n      uint64.encode(state, n)\n    }\n  },\n  decode (state) {\n    const a = uint8.decode(state)\n    if (a <= 0xfc) return a\n    if (a === 0xfd) return uint16.decode(state)\n    if (a === 0xfe) return uint32.decode(state)\n    return uint64.decode(state)\n  }\n}\n\nconst uint8 = exports.uint8 = {\n  preencode (state, n) {\n    state.end += 1\n  },\n  encode (state, n) {\n    validateUint(n)\n    state.buffer[state.start++] = n\n  },\n  decode (state) {\n    if (state.start >= state.end) throw new Error('Out of bounds')\n    return state.buffer[state.start++]\n  }\n}\n\nconst uint16 = exports.uint16 = {\n  preencode (state, n) {\n    state.end += 2\n  },\n  encode (state, n) {\n    validateUint(n)\n    state.buffer[state.start++] = n\n    state.buffer[state.start++] = n >>> 8\n  },\n  decode (state) {\n    if (state.end - state.start < 2) throw new Error('Out of bounds')\n    return (\n      state.buffer[state.start++] +\n      state.buffer[state.start++] * 0x100\n    )\n  }\n}\n\nconst uint24 = exports.uint24 = {\n  preencode (state, n) {\n    state.end += 3\n  },\n  encode (state, n) {\n    validateUint(n)\n    state.buffer[state.start++] = n\n    state.buffer[state.start++] = n >>> 8\n    state.buffer[state.start++] = n >>> 16\n  },\n  decode (state) {\n    if (state.end - state.start < 3) throw new Error('Out of bounds')\n    return (\n      state.buffer[state.start++] +\n      state.buffer[state.start++] * 0x100 +\n      state.buffer[state.start++] * 0x10000\n    )\n  }\n}\n\nconst uint32 = exports.uint32 = {\n  preencode (state, n) {\n    state.end += 4\n  },\n  encode (state, n) {\n    validateUint(n)\n    state.buffer[state.start++] = n\n    state.buffer[state.start++] = n >>> 8\n    state.buffer[state.start++] = n >>> 16\n    state.buffer[state.start++] = n >>> 24\n  },\n  decode (state) {\n    if (state.end - state.start < 4) throw new Error('Out of bounds')\n    return (\n      state.buffer[state.start++] +\n      state.buffer[state.start++] * 0x100 +\n      state.buffer[state.start++] * 0x10000 +\n      state.buffer[state.start++] * 0x1000000\n    )\n  }\n}\n\nconst uint40 = exports.uint40 = {\n  preencode (state, n) {\n    state.end += 5\n  },\n  encode (state, n) {\n    validateUint(n)\n    const r = Math.floor(n / 0x100)\n    uint8.encode(state, n)\n    uint32.encode(state, r)\n  },\n  decode (state) {\n    if (state.end - state.start < 5) throw new Error('Out of bounds')\n    return uint8.decode(state) + 0x100 * uint32.decode(state)\n  }\n}\n\nconst uint48 = exports.uint48 = {\n  preencode (state, n) {\n    state.end += 6\n  },\n  encode (state, n) {\n    validateUint(n)\n    const r = Math.floor(n / 0x10000)\n    uint16.encode(state, n)\n    uint32.encode(state, r)\n  },\n  decode (state) {\n    if (state.end - state.start < 6) throw new Error('Out of bounds')\n    return uint16.decode(state) + 0x10000 * uint32.decode(state)\n  }\n}\n\nconst uint56 = exports.uint56 = {\n  preencode (state, n) {\n    state.end += 7\n  },\n  encode (state, n) {\n    validateUint(n)\n    const r = Math.floor(n / 0x1000000)\n    uint24.encode(state, n)\n    uint32.encode(state, r)\n  },\n  decode (state) {\n    if (state.end - state.start < 7) throw new Error('Out of bounds')\n    return uint24.decode(state) + 0x1000000 * uint32.decode(state)\n  }\n}\n\nconst uint64 = exports.uint64 = {\n  preencode (state, n) {\n    state.end += 8\n  },\n  encode (state, n) {\n    validateUint(n)\n    const r = Math.floor(n / 0x100000000)\n    uint32.encode(state, n)\n    uint32.encode(state, r)\n  },\n  decode (state) {\n    if (state.end - state.start < 8) throw new Error('Out of bounds')\n    return uint32.decode(state) + 0x100000000 * uint32.decode(state)\n  }\n}\n\nconst int = exports.int = zigZagInt(uint)\nexports.int8 = zigZagInt(uint8)\nexports.int16 = zigZagInt(uint16)\nexports.int24 = zigZagInt(uint24)\nexports.int32 = zigZagInt(uint32)\nexports.int40 = zigZagInt(uint40)\nexports.int48 = zigZagInt(uint48)\nexports.int56 = zigZagInt(uint56)\nexports.int64 = zigZagInt(uint64)\n\nconst biguint64 = exports.biguint64 = {\n  preencode (state, n) {\n    state.end += 8\n  },\n  encode (state, n) {\n    const view = new DataView(state.buffer.buffer, state.start + state.buffer.byteOffset, 8)\n    view.setBigUint64(0, n, true) // little endian\n    state.start += 8\n  },\n  decode (state) {\n    if (state.end - state.start < 8) throw new Error('Out of bounds')\n    const view = new DataView(state.buffer.buffer, state.start + state.buffer.byteOffset, 8)\n    const n = view.getBigUint64(0, true) // little endian\n    state.start += 8\n    return n\n  }\n}\n\nexports.bigint64 = zigZagBigInt(biguint64)\n\nconst biguint = exports.biguint = {\n  preencode (state, n) {\n    let len = 0\n    for (let m = n; m; m = m >> 64n) len++\n    uint.preencode(state, len)\n    state.end += 8 * len\n  },\n  encode (state, n) {\n    let len = 0\n    for (let m = n; m; m = m >> 64n) len++\n    uint.encode(state, len)\n    const view = new DataView(state.buffer.buffer, state.start + state.buffer.byteOffset, 8 * len)\n    for (let m = n, i = 0; m; m = m >> 64n, i += 8) {\n      view.setBigUint64(i, BigInt.asUintN(64, m), true) // little endian\n    }\n    state.start += 8 * len\n  },\n  decode (state) {\n    const len = uint.decode(state)\n    if (state.end - state.start < 8 * len) throw new Error('Out of bounds')\n    const view = new DataView(state.buffer.buffer, state.start + state.buffer.byteOffset, 8 * len)\n    let n = 0n\n    for (let i = len - 1; i >= 0; i--) n = (n << 64n) + view.getBigUint64(i * 8, true) // little endian\n    state.start += 8 * len\n    return n\n  }\n}\n\nexports.bigint = zigZagBigInt(biguint)\n\nexports.lexint = require('./lexint')\n\nexports.float32 = {\n  preencode (state, n) {\n    state.end += 4\n  },\n  encode (state, n) {\n    const view = new DataView(state.buffer.buffer, state.start + state.buffer.byteOffset, 4)\n    view.setFloat32(0, n, true) // little endian\n    state.start += 4\n  },\n  decode (state) {\n    if (state.end - state.start < 4) throw new Error('Out of bounds')\n    const view = new DataView(state.buffer.buffer, state.start + state.buffer.byteOffset, 4)\n    const float = view.getFloat32(0, true) // little endian\n    state.start += 4\n    return float\n  }\n}\n\nexports.float64 = {\n  preencode (state, n) {\n    state.end += 8\n  },\n  encode (state, n) {\n    const view = new DataView(state.buffer.buffer, state.start + state.buffer.byteOffset, 8)\n    view.setFloat64(0, n, true) // little endian\n    state.start += 8\n  },\n  decode (state) {\n    if (state.end - state.start < 8) throw new Error('Out of bounds')\n    const view = new DataView(state.buffer.buffer, state.start + state.buffer.byteOffset, 8)\n    const float = view.getFloat64(0, true) // little endian\n    state.start += 8\n    return float\n  }\n}\n\nconst buffer = exports.buffer = {\n  preencode (state, b) {\n    if (b) uint8array.preencode(state, b)\n    else state.end++\n  },\n  encode (state, b) {\n    if (b) uint8array.encode(state, b)\n    else state.buffer[state.start++] = 0\n  },\n  decode (state) {\n    const len = uint.decode(state)\n    if (len === 0) return null\n    if (state.end - state.start < len) throw new Error('Out of bounds')\n    return state.buffer.subarray(state.start, (state.start += len))\n  }\n}\n\nexports.binary = {\n  ...buffer,\n  preencode (state, b) {\n    if (typeof b === 'string') utf8.preencode(state, b)\n    else buffer.preencode(state, b)\n  },\n  encode (state, b) {\n    if (typeof b === 'string') utf8.encode(state, b)\n    else buffer.encode(state, b)\n  }\n}\n\nexports.arraybuffer = {\n  preencode (state, b) {\n    uint.preencode(state, b.byteLength)\n    state.end += b.byteLength\n  },\n  encode (state, b) {\n    uint.encode(state, b.byteLength)\n\n    const view = new Uint8Array(b)\n\n    state.buffer.set(view, state.start)\n    state.start += b.byteLength\n  },\n  decode (state) {\n    const len = uint.decode(state)\n\n    const b = new ArrayBuffer(len)\n    const view = new Uint8Array(b)\n\n    view.set(state.buffer.subarray(state.start, state.start += len))\n\n    return b\n  }\n}\n\nfunction typedarray (TypedArray, swap) {\n  const n = TypedArray.BYTES_PER_ELEMENT\n\n  return {\n    preencode (state, b) {\n      uint.preencode(state, b.length)\n      state.end += b.byteLength\n    },\n    encode (state, b) {\n      uint.encode(state, b.length)\n\n      const view = new Uint8Array(b.buffer, b.byteOffset, b.byteLength)\n\n      if (BE && swap) swap(view)\n\n      state.buffer.set(view, state.start)\n      state.start += b.byteLength\n    },\n    decode (state) {\n      const len = uint.decode(state)\n\n      let b = state.buffer.subarray(state.start, state.start += len * n)\n      if (b.byteLength !== len * n) throw new Error('Out of bounds')\n      if ((b.byteOffset % n) !== 0) b = new Uint8Array(b)\n\n      if (BE && swap) swap(b)\n\n      return new TypedArray(b.buffer, b.byteOffset, b.byteLength / n)\n    }\n  }\n}\n\nconst uint8array = exports.uint8array = typedarray(Uint8Array)\nexports.uint16array = typedarray(Uint16Array, b4a.swap16)\nexports.uint32array = typedarray(Uint32Array, b4a.swap32)\n\nexports.int8array = typedarray(Int8Array)\nexports.int16array = typedarray(Int16Array, b4a.swap16)\nexports.int32array = typedarray(Int32Array, b4a.swap32)\n\nexports.biguint64array = typedarray(BigUint64Array, b4a.swap64)\nexports.bigint64array = typedarray(BigInt64Array, b4a.swap64)\n\nexports.float32array = typedarray(Float32Array, b4a.swap32)\nexports.float64array = typedarray(Float64Array, b4a.swap64)\n\nfunction string (encoding) {\n  return {\n    preencode (state, s) {\n      const len = b4a.byteLength(s, encoding)\n      uint.preencode(state, len)\n      state.end += len\n    },\n    encode (state, s) {\n      const len = b4a.byteLength(s, encoding)\n      uint.encode(state, len)\n      b4a.write(state.buffer, s, state.start, encoding)\n      state.start += len\n    },\n    decode (state) {\n      const len = uint.decode(state)\n      if (state.end - state.start < len) throw new Error('Out of bounds')\n      return b4a.toString(state.buffer, encoding, state.start, (state.start += len))\n    },\n    fixed (n) {\n      return {\n        preencode (state) {\n          state.end += n\n        },\n        encode (state, s) {\n          b4a.write(state.buffer, s, state.start, n, encoding)\n          state.start += n\n        },\n        decode (state) {\n          if (state.end - state.start < n) throw new Error('Out of bounds')\n          return b4a.toString(state.buffer, encoding, state.start, (state.start += n))\n        }\n      }\n    }\n  }\n}\n\nconst utf8 = exports.string = exports.utf8 = string('utf-8')\nexports.ascii = string('ascii')\nexports.hex = string('hex')\nexports.base64 = string('base64')\nexports.ucs2 = exports.utf16le = string('utf16le')\n\nexports.bool = {\n  preencode (state, b) {\n    state.end++\n  },\n  encode (state, b) {\n    state.buffer[state.start++] = b ? 1 : 0\n  },\n  decode (state) {\n    if (state.start >= state.end) throw Error('Out of bounds')\n    return state.buffer[state.start++] === 1\n  }\n}\n\nconst fixed = exports.fixed = function fixed (n) {\n  return {\n    preencode (state, s) {\n      if (s.byteLength !== n) throw new Error('Incorrect buffer size')\n      state.end += n\n    },\n    encode (state, s) {\n      state.buffer.set(s, state.start)\n      state.start += n\n    },\n    decode (state) {\n      if (state.end - state.start < n) throw new Error('Out of bounds')\n      return state.buffer.subarray(state.start, (state.start += n))\n    }\n  }\n}\n\nexports.fixed32 = fixed(32)\nexports.fixed64 = fixed(64)\n\nexports.array = function array (enc) {\n  return {\n    preencode (state, list) {\n      uint.preencode(state, list.length)\n      for (let i = 0; i < list.length; i++) enc.preencode(state, list[i])\n    },\n    encode (state, list) {\n      uint.encode(state, list.length)\n      for (let i = 0; i < list.length; i++) enc.encode(state, list[i])\n    },\n    decode (state) {\n      const len = uint.decode(state)\n      if (len > 0x100000) throw new Error('Array is too big')\n      const arr = new Array(len)\n      for (let i = 0; i < len; i++) arr[i] = enc.decode(state)\n      return arr\n    }\n  }\n}\n\nexports.frame = function frame (enc) {\n  const dummy = exports.state()\n\n  return {\n    preencode (state, m) {\n      const end = state.end\n      enc.preencode(state, m)\n      uint.preencode(state, state.end - end)\n    },\n    encode (state, m) {\n      dummy.end = 0\n      enc.preencode(dummy, m)\n      uint.encode(state, dummy.end)\n      enc.encode(state, m)\n    },\n    decode (state) {\n      const end = state.end\n      const len = uint.decode(state)\n      state.end = state.start + len\n      const m = enc.decode(state)\n      state.start = state.end\n      state.end = end\n      return m\n    }\n  }\n}\n\nexports.date = {\n  preencode (state, d) {\n    int.preencode(state, d.getTime())\n  },\n  encode (state, d) {\n    int.encode(state, d.getTime())\n  },\n  decode (state, d) {\n    return new Date(int.decode(state))\n  }\n}\n\nexports.json = {\n  preencode (state, v) {\n    utf8.preencode(state, JSON.stringify(v))\n  },\n  encode (state, v) {\n    utf8.encode(state, JSON.stringify(v))\n  },\n  decode (state) {\n    return JSON.parse(utf8.decode(state))\n  }\n}\n\nexports.ndjson = {\n  preencode (state, v) {\n    utf8.preencode(state, JSON.stringify(v) + '\\n')\n  },\n  encode (state, v) {\n    utf8.encode(state, JSON.stringify(v) + '\\n')\n  },\n  decode (state) {\n    return JSON.parse(utf8.decode(state))\n  }\n}\n\n// simple helper for when you want to just express nothing\nexports.none = {\n  preencode (state, n) {\n    // do nothing\n  },\n  encode (state, n) {\n    // do nothing\n  },\n  decode (state) {\n    return null\n  }\n}\n\n// \"any\" encoders here for helping just structure any object without schematising it\n\nconst anyArray = {\n  preencode (state, arr) {\n    uint.preencode(state, arr.length)\n    for (let i = 0; i < arr.length; i++) {\n      any.preencode(state, arr[i])\n    }\n  },\n  encode (state, arr) {\n    uint.encode(state, arr.length)\n    for (let i = 0; i < arr.length; i++) {\n      any.encode(state, arr[i])\n    }\n  },\n  decode (state) {\n    const arr = []\n    let len = uint.decode(state)\n    while (len-- > 0) {\n      arr.push(any.decode(state))\n    }\n    return arr\n  }\n}\n\nconst anyObject = {\n  preencode (state, o) {\n    const keys = Object.keys(o)\n    uint.preencode(state, keys.length)\n    for (const key of keys) {\n      utf8.preencode(state, key)\n      any.preencode(state, o[key])\n    }\n  },\n  encode (state, o) {\n    const keys = Object.keys(o)\n    uint.encode(state, keys.length)\n    for (const key of keys) {\n      utf8.encode(state, key)\n      any.encode(state, o[key])\n    }\n  },\n  decode (state) {\n    let len = uint.decode(state)\n    const o = {}\n    while (len-- > 0) {\n      const key = utf8.decode(state)\n      o[key] = any.decode(state)\n    }\n    return o\n  }\n}\n\nconst anyTypes = [\n  exports.none,\n  exports.bool,\n  exports.string,\n  exports.buffer,\n  exports.uint,\n  exports.int,\n  exports.float64,\n  anyArray,\n  anyObject,\n  exports.date\n]\n\nconst any = exports.any = {\n  preencode (state, o) {\n    const t = getType(o)\n    uint.preencode(state, t)\n    anyTypes[t].preencode(state, o)\n  },\n  encode (state, o) {\n    const t = getType(o)\n    uint.encode(state, t)\n    anyTypes[t].encode(state, o)\n  },\n  decode (state) {\n    const t = uint.decode(state)\n    if (t >= anyTypes.length) throw new Error('Unknown type: ' + t)\n    return anyTypes[t].decode(state)\n  }\n}\n\nfunction getType (o) {\n  if (o === null || o === undefined) return 0\n  if (typeof o === 'boolean') return 1\n  if (typeof o === 'string') return 2\n  if (b4a.isBuffer(o)) return 3\n  if (typeof o === 'number') {\n    if (Number.isInteger(o)) return o >= 0 ? 4 : 5\n    return 6\n  }\n  if (Array.isArray(o)) return 7\n  if (o instanceof Date) return 9\n  if (typeof o === 'object') return 8\n\n  throw new Error('Unsupported type for ' + o)\n}\n\nexports.from = function from (enc) {\n  if (typeof enc === 'string') return fromNamed(enc)\n  if (enc.preencode) return enc\n  if (enc.encodingLength) return fromAbstractEncoder(enc)\n  return fromCodec(enc)\n}\n\nfunction fromNamed (enc) {\n  switch (enc) {\n    case 'ascii': return raw.ascii\n    case 'utf-8':\n    case 'utf8': return raw.utf8\n    case 'hex': return raw.hex\n    case 'base64': return raw.base64\n    case 'utf16-le':\n    case 'utf16le':\n    case 'ucs-2':\n    case 'ucs2': return raw.ucs2\n    case 'ndjson': return raw.ndjson\n    case 'json': return raw.json\n    case 'binary':\n    default: return raw.binary\n  }\n}\n\nfunction fromCodec (enc) {\n  let tmpM = null\n  let tmpBuf = null\n\n  return {\n    preencode (state, m) {\n      tmpM = m\n      tmpBuf = enc.encode(m)\n      state.end += tmpBuf.byteLength\n    },\n    encode (state, m) {\n      raw.encode(state, m === tmpM ? tmpBuf : enc.encode(m))\n      tmpM = tmpBuf = null\n    },\n    decode (state) {\n      return enc.decode(raw.decode(state))\n    }\n  }\n}\n\nfunction fromAbstractEncoder (enc) {\n  return {\n    preencode (state, m) {\n      state.end += enc.encodingLength(m)\n    },\n    encode (state, m) {\n      enc.encode(m, state.buffer, state.start)\n      state.start += enc.encode.bytes\n    },\n    decode (state) {\n      const m = enc.decode(state.buffer, state.start, state.end)\n      state.start += enc.decode.bytes\n      return m\n    }\n  }\n}\n\nexports.encode = function encode (enc, m) {\n  const state = exports.state()\n  enc.preencode(state, m)\n  state.buffer = b4a.allocUnsafe(state.end)\n  enc.encode(state, m)\n  return state.buffer\n}\n\nexports.decode = function decode (enc, buffer) {\n  return enc.decode(exports.state(0, buffer.byteLength, buffer))\n}\n\nfunction zigZagInt (enc) {\n  return {\n    preencode (state, n) {\n      enc.preencode(state, zigZagEncodeInt(n))\n    },\n    encode (state, n) {\n      enc.encode(state, zigZagEncodeInt(n))\n    },\n    decode (state) {\n      return zigZagDecodeInt(enc.decode(state))\n    }\n  }\n}\n\nfunction zigZagDecodeInt (n) {\n  return n === 0 ? n : (n & 1) === 0 ? n / 2 : -(n + 1) / 2\n}\n\nfunction zigZagEncodeInt (n) {\n  // 0, -1, 1, -2, 2, ...\n  return n < 0 ? (2 * -n) - 1 : n === 0 ? 0 : 2 * n\n}\n\nfunction zigZagBigInt (enc) {\n  return {\n    preencode (state, n) {\n      enc.preencode(state, zigZagEncodeBigInt(n))\n    },\n    encode (state, n) {\n      enc.encode(state, zigZagEncodeBigInt(n))\n    },\n    decode (state) {\n      return zigZagDecodeBigInt(enc.decode(state))\n    }\n  }\n}\n\nfunction zigZagDecodeBigInt (n) {\n  return n === 0n ? n : (n & 1n) === 0n ? n / 2n : -(n + 1n) / 2n\n}\n\nfunction zigZagEncodeBigInt (n) {\n  // 0, -1, 1, -2, 2, ...\n  return n < 0n ? (2n * -n) - 1n : n === 0n ? 0n : 2n * n\n}\n\nfunction validateUint (n) {\n  if ((n >= 0) === false /* Handles NaN as well */) throw new Error('uint must be positive')\n}\nmodule.exports = {\n  preencode,\n  encode,\n  decode\n}\n\nfunction preencode (state, num) {\n  if (num < 251) {\n    state.end++\n  } else if (num < 256) {\n    state.end += 2\n  } else if (num < 0x10000) {\n    state.end += 3\n  } else if (num < 0x1000000) {\n    state.end += 4\n  } else if (num < 0x100000000) {\n    state.end += 5\n  } else {\n    state.end++\n    const exp = Math.floor(Math.log(num) / Math.log(2)) - 32\n    preencode(state, exp)\n    state.end += 6\n  }\n}\n\nfunction encode (state, num) {\n  const max = 251\n  const x = num - max\n\n  if (num < max) {\n    state.buffer[state.start++] = num\n  } else if (num < 256) {\n    state.buffer[state.start++] = max\n    state.buffer[state.start++] = x\n  } else if (num < 0x10000) {\n    state.buffer[state.start++] = max + 1\n    state.buffer[state.start++] = x >> 8 & 0xff\n    state.buffer[state.start++] = x & 0xff\n  } else if (num < 0x1000000) {\n    state.buffer[state.start++] = max + 2\n    state.buffer[state.start++] = x >> 16\n    state.buffer[state.start++] = x >> 8 & 0xff\n    state.buffer[state.start++] = x & 0xff\n  } else if (num < 0x100000000) {\n    state.buffer[state.start++] = max + 3\n    state.buffer[state.start++] = x >> 24\n    state.buffer[state.start++] = x >> 16 & 0xff\n    state.buffer[state.start++] = x >> 8 & 0xff\n    state.buffer[state.start++] = x & 0xff\n  } else {\n    // need to use Math here as bitwise ops are 32 bit\n    const exp = Math.floor(Math.log(x) / Math.log(2)) - 32\n    state.buffer[state.start++] = 0xff\n\n    encode(state, exp)\n    const rem = x / Math.pow(2, exp - 11)\n\n    for (let i = 5; i >= 0; i--) {\n      state.buffer[state.start++] = rem / Math.pow(2, 8 * i) & 0xff\n    }\n  }\n}\n\nfunction decode (state) {\n  const max = 251\n\n  if (state.end - state.start < 1) throw new Error('Out of bounds')\n\n  const flag = state.buffer[state.start++]\n\n  if (flag < max) return flag\n\n  if (state.end - state.start < flag - max + 1) {\n    throw new Error('Out of bounds.')\n  }\n\n  if (flag < 252) {\n    return state.buffer[state.start++] +\n      max\n  }\n\n  if (flag < 253) {\n    return (state.buffer[state.start++] << 8) +\n      state.buffer[state.start++] +\n      max\n  }\n\n  if (flag < 254) {\n    return (state.buffer[state.start++] << 16) +\n      (state.buffer[state.start++] << 8) +\n      state.buffer[state.start++] +\n      max\n  }\n\n  // << 24 result may be interpreted as negative\n  if (flag < 255) {\n    return (state.buffer[state.start++] * 0x1000000) +\n      (state.buffer[state.start++] << 16) +\n      (state.buffer[state.start++] << 8) +\n      state.buffer[state.start++] +\n      max\n  }\n\n  const exp = decode(state)\n\n  if (state.end - state.start < 6) throw new Error('Out of bounds')\n\n  let rem = 0\n  for (let i = 5; i >= 0; i--) {\n    rem += state.buffer[state.start++] * Math.pow(2, 8 * i)\n  }\n\n  return (rem * Math.pow(2, exp - 11)) + max\n}\n{\n  \"name\": \"compact-encoding\",\n  \"version\": \"2.16.1\",\n  \"description\": \"A series of compact encoding schemes for building small and fast parsers and serializers\",\n  \"main\": \"index.js\",\n  \"dependencies\": {\n    \"b4a\": \"^1.3.0\"\n  },\n  \"devDependencies\": {\n    \"brittle\": \"^3.0.0\",\n    \"standard\": \"^16.0.3\"\n  },\n  \"scripts\": {\n    \"test\": \"standard && brittle test.js\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/compact-encoding/compact-encoding.git\"\n  },\n  \"author\": \"Mathias Buus (@mafintosh)\",\n  \"license\": \"Apache-2.0\",\n  \"bugs\": {\n    \"url\": \"https://github.com/compact-encoding/compact-encoding/issues\"\n  },\n  \"homepage\": \"https://github.com/compact-encoding/compact-encoding\"\n}\nconst b4a = require('b4a')\n\nconst { BE } = require('./endian')\n\nexports = module.exports = {\n  preencode (state, b) {\n    state.end += b.byteLength\n  },\n  encode (state, b) {\n    state.buffer.set(b, state.start)\n    state.start += b.byteLength\n  },\n  decode (state) {\n    const b = state.buffer.subarray(state.start, state.end)\n    state.start = state.end\n    return b\n  }\n}\n\nconst buffer = exports.buffer = {\n  preencode (state, b) {\n    if (b) uint8array.preencode(state, b)\n    else state.end++\n  },\n  encode (state, b) {\n    if (b) uint8array.encode(state, b)\n    else state.buffer[state.start++] = 0\n  },\n  decode (state) {\n    const b = state.buffer.subarray(state.start)\n    if (b.byteLength === 0) return null\n    state.start = state.end\n    return b\n  }\n}\n\nexports.binary = {\n  ...buffer,\n  preencode (state, b) {\n    if (typeof b === 'string') utf8.preencode(state, b)\n    else buffer.preencode(state, b)\n  },\n  encode (state, b) {\n    if (typeof b === 'string') utf8.encode(state, b)\n    else buffer.encode(state, b)\n  }\n}\n\nexports.arraybuffer = {\n  preencode (state, b) {\n    state.end += b.byteLength\n  },\n  encode (state, b) {\n    const view = new Uint8Array(b)\n\n    state.buffer.set(view, state.start)\n    state.start += b.byteLength\n  },\n  decode (state) {\n    const b = new ArrayBuffer(state.end - state.start)\n    const view = new Uint8Array(b)\n\n    view.set(state.buffer.subarray(state.start))\n\n    state.start = state.end\n\n    return b\n  }\n}\n\nfunction typedarray (TypedArray, swap) {\n  const n = TypedArray.BYTES_PER_ELEMENT\n\n  return {\n    preencode (state, b) {\n      state.end += b.byteLength\n    },\n    encode (state, b) {\n      const view = new Uint8Array(b.buffer, b.byteOffset, b.byteLength)\n\n      if (BE && swap) swap(view)\n\n      state.buffer.set(view, state.start)\n      state.start += b.byteLength\n    },\n    decode (state) {\n      let b = state.buffer.subarray(state.start)\n      if ((b.byteOffset % n) !== 0) b = new Uint8Array(b)\n\n      if (BE && swap) swap(b)\n\n      state.start = state.end\n\n      return new TypedArray(b.buffer, b.byteOffset, b.byteLength / n)\n    }\n  }\n}\n\nconst uint8array = exports.uint8array = typedarray(Uint8Array)\nexports.uint16array = typedarray(Uint16Array, b4a.swap16)\nexports.uint32array = typedarray(Uint32Array, b4a.swap32)\n\nexports.int8array = typedarray(Int8Array)\nexports.int16array = typedarray(Int16Array, b4a.swap16)\nexports.int32array = typedarray(Int32Array, b4a.swap32)\n\nexports.biguint64array = typedarray(BigUint64Array, b4a.swap64)\nexports.bigint64array = typedarray(BigInt64Array, b4a.swap64)\n\nexports.float32array = typedarray(Float32Array, b4a.swap32)\nexports.float64array = typedarray(Float64Array, b4a.swap64)\n\nfunction string (encoding) {\n  return {\n    preencode (state, s) {\n      state.end += b4a.byteLength(s, encoding)\n    },\n    encode (state, s) {\n      state.start += b4a.write(state.buffer, s, state.start, encoding)\n    },\n    decode (state) {\n      const s = b4a.toString(state.buffer, encoding, state.start)\n      state.start = state.end\n      return s\n    }\n  }\n}\n\nconst utf8 = exports.string = exports.utf8 = string('utf-8')\nexports.ascii = string('ascii')\nexports.hex = string('hex')\nexports.base64 = string('base64')\nexports.ucs2 = exports.utf16le = string('utf16le')\n\nexports.array = function array (enc) {\n  return {\n    preencode (state, list) {\n      for (const value of list) enc.preencode(state, value)\n    },\n    encode (state, list) {\n      for (const value of list) enc.encode(state, value)\n    },\n    decode (state) {\n      const arr = []\n      while (state.start < state.end) arr.push(enc.decode(state))\n      return arr\n    }\n  }\n}\n\nexports.json = {\n  preencode (state, v) {\n    utf8.preencode(state, JSON.stringify(v))\n  },\n  encode (state, v) {\n    utf8.encode(state, JSON.stringify(v))\n  },\n  decode (state) {\n    return JSON.parse(utf8.decode(state))\n  }\n}\n\nexports.ndjson = {\n  preencode (state, v) {\n    utf8.preencode(state, JSON.stringify(v) + '\\n')\n  },\n  encode (state, v) {\n    utf8.encode(state, JSON.stringify(v) + '\\n')\n  },\n  decode (state) {\n    return JSON.parse(utf8.decode(state))\n  }\n}\nmodule.exports = class FixedFIFO {\n  constructor (hwm) {\n    if (!(hwm > 0) || ((hwm - 1) & hwm) !== 0) throw new Error('Max size for a FixedFIFO should be a power of two')\n    this.buffer = new Array(hwm)\n    this.mask = hwm - 1\n    this.top = 0\n    this.btm = 0\n    this.next = null\n  }\n\n  clear () {\n    this.top = this.btm = 0\n    this.next = null\n    this.buffer.fill(undefined)\n  }\n\n  push (data) {\n    if (this.buffer[this.top] !== undefined) return false\n    this.buffer[this.top] = data\n    this.top = (this.top + 1) & this.mask\n    return true\n  }\n\n  shift () {\n    const last = this.buffer[this.btm]\n    if (last === undefined) return undefined\n    this.buffer[this.btm] = undefined\n    this.btm = (this.btm + 1) & this.mask\n    return last\n  }\n\n  peek () {\n    return this.buffer[this.btm]\n  }\n\n  isEmpty () {\n    return this.buffer[this.btm] === undefined\n  }\n}\nconst FixedFIFO = require('./fixed-size')\n\nmodule.exports = class FastFIFO {\n  constructor (hwm) {\n    this.hwm = hwm || 16\n    this.head = new FixedFIFO(this.hwm)\n    this.tail = this.head\n    this.length = 0\n  }\n\n  clear () {\n    this.head = this.tail\n    this.head.clear()\n    this.length = 0\n  }\n\n  push (val) {\n    this.length++\n    if (!this.head.push(val)) {\n      const prev = this.head\n      this.head = prev.next = new FixedFIFO(2 * this.head.buffer.length)\n      this.head.push(val)\n    }\n  }\n\n  shift () {\n    if (this.length !== 0) this.length--\n    const val = this.tail.shift()\n    if (val === undefined && this.tail.next) {\n      const next = this.tail.next\n      this.tail.next = null\n      this.tail = next\n      return this.tail.shift()\n    }\n\n    return val\n  }\n\n  peek () {\n    const val = this.tail.peek()\n    if (val === undefined && this.tail.next) return this.tail.next.peek()\n    return val\n  }\n\n  isEmpty () {\n    return this.length === 0\n  }\n}\n{\n  \"name\": \"fast-fifo\",\n  \"version\": \"1.3.2\",\n  \"description\": \"A fast fifo implementation similar to the one powering nextTick in Node.js core\",\n  \"main\": \"index.js\",\n  \"files\": [\n    \"./index.js\",\n    \"./fixed-size.js\"\n  ],\n  \"dependencies\": {},\n  \"devDependencies\": {\n    \"standard\": \"^17.1.0\",\n    \"brittle\": \"^3.3.2\"\n  },\n  \"scripts\": {\n    \"test\": \"standard && brittle test.js\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/mafintosh/fast-fifo.git\"\n  },\n  \"author\": \"Mathias Buus (@mafintosh)\",\n  \"license\": \"MIT\",\n  \"bugs\": {\n    \"url\": \"https://github.com/mafintosh/fast-fifo/issues\"\n  },\n  \"homepage\": \"https://github.com/mafintosh/fast-fifo\"\n}\nconst { Duplex } = require('streamx')\nconst b4a = require('b4a')\n\nclass RPCStream extends Duplex {\n  constructor (readStream, readStreamEncoding, writeStream, writeStreamEncoding) {\n    super()\n\n    this.data = null\n\n    this.readStream = readStream\n    this.readStreamEncoding = readStreamEncoding\n\n    this.writeStream = writeStream\n    this.writeStreamEncoding = writeStreamEncoding\n\n    this._writeCallback = null\n\n    const destroy = this.destroy.bind(this)\n\n    if (this.writeStream) {\n      this.writeStream.on('drain', this._continueWrite.bind(this, null))\n      this.writeStream.on('error', destroy)\n      this.writeStream.on('close', destroy)\n    } else {\n      this.end()\n    }\n\n    if (this.readStream) {\n      this.readStream.on('data', this._ondata.bind(this))\n      this.readStream.on('error', destroy)\n      this.readStream.on('close', destroy)\n    } else {\n      this.push(null)\n    }\n  }\n\n  _read (cb) {\n    this.readStream.resume()\n    cb(null)\n  }\n\n  _writev (datas, cb) {\n    let flushed = true\n\n    for (let i = 0; i < datas.length; i++) {\n      const state = { start: 0, end: 0, buffer: null }\n      const data = datas[i]\n      this.writeStreamEncoding.preencode(state, data)\n      state.buffer = b4a.allocUnsafe(state.end)\n      this.writeStreamEncoding.encode(state, data)\n      flushed = this.writeStream.write(state.buffer)\n    }\n\n    if (flushed) {\n      cb(null)\n      return\n    }\n\n    this._writeCallback = cb\n  }\n\n  _final (cb) {\n    if (this.writeStream) this.writeStream.end()\n    cb(null)\n  }\n\n  _continueWrite (err) {\n    if (this._writeCallback === null) return\n    const cb = this._writeCallback\n    this._writeCallback = null\n    cb(err)\n  }\n\n  _predestroy () {\n    this._continueWrite(null)\n    if (this.readStream) this.readStream.destroy()\n    if (this.writeStream) this.writeStream.destroy()\n  }\n\n  _ondata (buffer) {\n    const state = { start: 0, end: buffer.byteLength, buffer }\n\n    let data = null\n\n    try {\n      data = this.readStreamEncoding.decode(state)\n    } catch (err) {\n      this.destroy(err)\n      return\n    }\n\n    if (!this.push(data)) this.pause()\n  }\n}\n\nclass RPCRequestStream extends RPCStream {\n  constructor (request, replyEncoding, readStream, readStreamEncoding, writeStream, writeStreamEncoding) {\n    super(readStream, readStreamEncoding, writeStream, writeStreamEncoding)\n\n    this.request = request\n    this.replyEncoding = replyEncoding\n  }\n\n  async reply () {\n    const buffer = await this.request.reply()\n    const state = { start: 0, end: buffer.byteLength, buffer }\n    return this.replyEncoding.decode(state)\n  }\n}\n\nmodule.exports = {\n  RPCStream,\n  RPCRequestStream\n}\n{\n  \"name\": \"hrpc\",\n  \"version\": \"4.0.1\",\n  \"files\": [\n    \"lib/*.js\",\n    \"builder.mjs\",\n    \"builder.cjs\",\n    \"runtime.mjs\",\n    \"runtime.cjs\"\n  ],\n  \"imports\": {\n    \"path\": {\n      \"bare\": \"bare-path\",\n      \"default\": \"path\"\n    },\n    \"fs\": {\n      \"bare\": \"bare-fs\",\n      \"default\": \"fs\"\n    }\n  },\n  \"exports\": {\n    \"./package\": \"./package.json\",\n    \".\": {\n      \"import\": \"./builder.mjs\",\n      \"require\": \"./builder.cjs\"\n    },\n    \"./runtime\": {\n      \"import\": \"./runtime.mjs\",\n      \"require\": \"./runtime.cjs\"\n    }\n  },\n  \"scripts\": {\n    \"test\": \"brittle test/*.test.js\",\n    \"test:bare\": \"bare test/index.test.js\"\n  },\n  \"keywords\": [],\n  \"author\": \"\",\n  \"license\": \"ISC\",\n  \"description\": \"\",\n  \"dependencies\": {\n    \"b4a\": \"^1.6.7\",\n    \"bare-rpc\": \"^0.2.0\",\n    \"brittle\": \"^3.13.1\",\n    \"hyperschema\": \"^1.10.4\",\n    \"streamx\": \"^2.22.0\"\n  },\n  \"devDependencies\": {\n    \"bare-fs\": \"^4.1.2\",\n    \"bare-path\": \"^3.0.0\",\n    \"bare-stream\": \"^2.6.5\",\n    \"standard\": \"^17.1.2\"\n  }\n}\nconst { RPCStream, RPCRequestStream } = require('./lib/stream')\n\nmodule.exports = {\n  c: require('compact-encoding'),\n  RPC: require('bare-rpc'),\n  RPCStream,\n  RPCRequestStream\n}\n{\n  \"name\": \"hyperschema\",\n  \"version\": \"1.12.4\",\n  \"description\": \"Create registries of declarative compact-encoding schemas\",\n  \"files\": [\n    \"lib/*.js\",\n    \"builder.mjs\",\n    \"builder.cjs\",\n    \"runtime.mjs\",\n    \"runtime.cjs\"\n  ],\n  \"exports\": {\n    \"./package\": \"./package.json\",\n    \".\": {\n      \"import\": \"./builder.mjs\",\n      \"default\": \"./builder.cjs\"\n    },\n    \"./runtime\": {\n      \"import\": \"./runtime.mjs\",\n      \"default\": \"./runtime.cjs\"\n    }\n  },\n  \"imports\": {\n    \"fs\": {\n      \"bare\": \"bare-fs\",\n      \"default\": \"fs\"\n    },\n    \"path\": {\n      \"bare\": \"bare-path\",\n      \"default\": \"path\"\n    }\n  },\n  \"scripts\": {\n    \"test\": \"standard && brittle test/index.js\",\n    \"test:bare\": \"standard && bare test/index.js\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/holepunchto/hyperschema.git\"\n  },\n  \"author\": \"Holepunch\",\n  \"license\": \"Apache-2.0\",\n  \"bugs\": {\n    \"url\": \"https://github.com/holepunchto/hyperschema/issues\"\n  },\n  \"homepage\": \"https://github.com/holepunchto/hyperschema#readme\",\n  \"dependencies\": {\n    \"bare-fs\": \"^4.0.1\",\n    \"compact-encoding\": \"^2.15.0\",\n    \"generate-object-property\": \"^2.0.0\",\n    \"generate-string\": \"^1.0.1\"\n  },\n  \"devDependencies\": {\n    \"brittle\": \"^3.7.0\",\n    \"standard\": \"^17.1.0\",\n    \"test-tmp\": \"^1.3.0\"\n  }\n}\nmodule.exports = {\n  c: require('compact-encoding')\n}\nmodule.exports = assert\n\nclass AssertionError extends Error {}\nAssertionError.prototype.name = 'AssertionError'\n\n/**\n * Minimal assert function\n * @param  {any} t Value to check if falsy\n * @param  {string=} m Optional assertion error message\n * @throws {AssertionError}\n */\nfunction assert (t, m) {\n  if (!t) {\n    var err = new AssertionError(m)\n    if (Error.captureStackTrace) Error.captureStackTrace(err, assert)\n    throw err\n  }\n}\n{\n  \"name\": \"nanoassert\",\n  \"version\": \"2.0.0\",\n  \"description\": \"Nanoscale assertion module\",\n  \"main\": \"index.js\",\n  \"dependencies\": {},\n  \"devDependencies\": {\n    \"tape\": \"^4.9.1\"\n  },\n  \"scripts\": {\n    \"test\": \"tape test.js\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/emilbayes/nanoassert.git\"\n  },\n  \"keywords\": [\n    \"assert\",\n    \"unassert\",\n    \"power-assert\",\n    \"tiny\",\n    \"nano\",\n    \"pico\"\n  ],\n  \"author\": \"Emil Bay <github@tixz.dk>\",\n  \"license\": \"ISC\",\n  \"bugs\": {\n    \"url\": \"https://github.com/emilbayes/nanoassert/issues\"\n  },\n  \"homepage\": \"https://github.com/emilbayes/nanoassert#readme\"\n}\nconst runtime = require('./lib/runtime')\n\nif (runtime === 'bare') {\n  module.exports = require('./lib/runtime/bare')\n} else if (runtime === 'node') {\n  module.exports = require('./lib/runtime/node')\n} else {\n  module.exports = require('./lib/runtime/default')\n}\nmodule.exports =\n  typeof Bare !== 'undefined'\n    ? 'bare'\n    : typeof process !== 'undefined'\n      ? 'node'\n      : 'unknown'\nmodule.exports = require.addon.bind(require)\nif (typeof require.addon === 'function') {\n  module.exports = require.addon.bind(require)\n} else {\n  module.exports = function addon(specifier, parentURL) {\n    throw new Error(\n      `Cannot find addon '${specifier}' imported from '${parentURL}'`\n    )\n  }\n}\nif (typeof require.addon === 'function') {\n  module.exports = require.addon.bind(require)\n} else {\n  const url = require('url')\n  const resolve = require('bare-addon-resolve')\n\n  const host = process.platform + '-' + process.arch\n  const conditions = ['node', process.platform, process.arch]\n  const extensions = ['.node']\n\n  module.exports = function addon(specifier, parentURL) {\n    if (typeof parentURL === 'string') parentURL = url.pathToFileURL(parentURL)\n\n    for (const resolution of resolve(\n      specifier,\n      parentURL,\n      { host, conditions, extensions },\n      readPackage\n    )) {\n      switch (resolution.protocol) {\n        case 'file:':\n          try {\n            return require(url.fileURLToPath(resolution))\n          } catch {\n            continue\n          }\n      }\n    }\n\n    throw new Error(\n      `Cannot find addon '${specifier}' imported from '${parentURL.href}'`\n    )\n\n    function readPackage(packageURL) {\n      try {\n        return require(url.fileURLToPath(packageURL))\n      } catch (err) {\n        return null\n      }\n    }\n  }\n}\n{\n  \"name\": \"require-addon\",\n  \"version\": \"1.1.0\",\n  \"description\": \"Import native addons across JavaScript runtimes\",\n  \"exports\": {\n    \".\": \"./index.js\",\n    \"./package\": \"./package.json\"\n  },\n  \"imports\": {\n    \"fs\": {\n      \"bare\": \"bare-fs\",\n      \"default\": \"fs\"\n    },\n    \"path\": {\n      \"bare\": \"bare-path\",\n      \"default\": \"path\"\n    },\n    \"url\": {\n      \"bare\": \"bare-url\",\n      \"default\": \"url\"\n    }\n  },\n  \"files\": [\n    \"index.js\",\n    \"lib\"\n  ],\n  \"scripts\": {\n    \"test\": \"npm run lint && npm run test:bare && npm run test:node\",\n    \"test:bare\": \"bare test.js\",\n    \"test:node\": \"node test.js\",\n    \"lint\": \"prettier . --check\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/holepunchto/require-addon.git\"\n  },\n  \"author\": \"Holepunch\",\n  \"license\": \"Apache-2.0\",\n  \"bugs\": {\n    \"url\": \"https://github.com/holepunchto/require-addon/issues\"\n  },\n  \"homepage\": \"https://github.com/holepunchto/require-addon#readme\",\n  \"engines\": {\n    \"bare\": \">=1.10.0\"\n  },\n  \"dependencies\": {\n    \"bare-addon-resolve\": \"^1.3.0\",\n    \"bare-url\": \"^2.1.0\"\n  },\n  \"devDependencies\": {\n    \"bare-bundle\": \"^1.8.1\",\n    \"bare-bundle-evaluate\": \"^1.1.0\",\n    \"bare-fs\": \"^4.0.0\",\n    \"bare-path\": \"^3.0.0\",\n    \"brittle\": \"^3.7.0\",\n    \"prettier\": \"^3.4.1\",\n    \"prettier-config-standard\": \"^7.0.0\"\n  }\n}\nmodule.exports = safetyCatch\n\nfunction isActuallyUncaught (err) {\n  if (!err) return false\n  return err instanceof TypeError ||\n    err instanceof SyntaxError ||\n    err instanceof ReferenceError ||\n    err instanceof EvalError ||\n    err instanceof RangeError ||\n    err instanceof URIError ||\n    err.code === 'ERR_ASSERTION'\n}\n\nfunction throwErrorNT (err) {\n  queueMicrotask(() => { throw err })\n}\n\nfunction safetyCatch (err) {\n  if (isActuallyUncaught(err)) {\n    throwErrorNT(err)\n    throw err\n  }\n}\n{\n  \"name\": \"safety-catch\",\n  \"version\": \"1.0.2\",\n  \"description\": \"Small module that makes sure your catch, caught an actual error and not a programming mistake or assertion\",\n  \"main\": \"index.js\",\n  \"dependencies\": {},\n  \"devDependencies\": {},\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/mafintosh/safety-catch.git\"\n  },\n  \"author\": \"Mathias Buus (@mafintosh)\",\n  \"license\": \"MIT\",\n  \"bugs\": {\n    \"url\": \"https://github.com/mafintosh/safety-catch/issues\"\n  },\n  \"homepage\": \"https://github.com/mafintosh/safety-catch\"\n}\nrequire.addon = require('require-addon')\nmodule.exports = require.addon('.', __filename)\nconst binding = require('./binding')\nconst { isNode } = require('which-runtime')\n\nconst OPTIONAL = Buffer.from(new ArrayBuffer(0))\n\nmodule.exports = exports = { ...binding }\n\n// memory\n\nexports.sodium_memzero = function (buf) {\n  binding.sodium_memzero(buf)\n}\n\nexports.sodium_mlock = function (buf) {\n  const res = binding.sodium_mlock(buf)\n  if (res !== 0) throw new Error('memory lock failed')\n}\n\nexports.sodium_munlock = function (buf) {\n  const res = binding.sodium_munlock(buf)\n  if (res !== 0) throw new Error('memory unlock failed')\n}\n\nexports.sodium_malloc = function (size) {\n  if (size < 0) throw new Error('invalid size')\n  const buf = Buffer.from(binding.sodium_malloc(size))\n  buf.secure = true\n\n  return buf\n}\n\nexports.sodium_free = function (buf) {\n  if (!buf?.secure) return\n\n  binding.sodium_free(buf.buffer)\n}\n\nexports.sodium_mprotect_noaccess = function (buf) {\n  const res = binding.sodium_mprotect_noaccess(buf.buffer)\n\n  if (res !== 0) throw new Error('failed to lock buffer')\n}\n\nexports.sodium_mprotect_readonly = function (buf) {\n  const res = binding.sodium_mprotect_readonly(buf.buffer)\n\n  if (res !== 0) throw new Error('failed to unlock buffer')\n}\n\nexports.sodium_mprotect_readwrite = function (buf) {\n  const res = binding.sodium_mprotect_readwrite(buf.buffer)\n\n  if (res !== 0) throw new Error('failed to unlock buffer')\n}\n\n// crypto_randombytes\n\nexports.randombytes_buf = function (buffer) {\n  binding.randombytes_buf(\n    buffer.buffer,\n    buffer.byteOffset,\n    buffer.byteLength\n  )\n}\n\nexports.randombytes_buf_deterministic = function (buffer, seed) {\n  binding.randombytes_buf_deterministic(\n    buffer.buffer,\n    buffer.byteOffset,\n    buffer.byteLength,\n\n    seed.buffer,\n    seed.byteOffset,\n    seed.byteLength\n  )\n}\n\n// sodium_helpers\n\nexports.sodium_memcmp = function (a, b) {\n  if (a?.byteLength !== b?.byteLength) throw new Error('buffers must be of same length\"')\n  return binding.sodium_memcmp(a, b)\n}\n\nexports.sodium_add = function (a, b) {\n  if (a?.byteLength !== b?.byteLength) throw new Error('buffers must be of same length\"')\n  binding.sodium_add(a, b)\n}\n\nexports.sodium_sub = function (a, b) {\n  if (a?.byteLength !== b?.byteLength) throw new Error('buffers must be of same length\"')\n  binding.sodium_sub(a, b)\n}\n\n/** @returns {number} */\nexports.sodium_compare = function (a, b) {\n  if (a?.byteLength !== b?.byteLength) throw new Error('buffers must be of same length\"')\n  return binding.sodium_compare(a, b)\n}\n\n/** @returns {boolean} */\nexports.sodium_is_zero = function (buffer, length) {\n  if (!buffer) throw new Error('invalid buffer')\n  length ??= buffer.byteLength\n  if (length > buffer.byteLength || length < 0) throw new Error('invalid length')\n\n  return binding.sodium_is_zero(buffer, length)\n}\n\n/** @returns {number} padded buffer length */\nexports.sodium_pad = function (buffer, unpaddedBuflen, blockSize) {\n  if (unpaddedBuflen > buffer.byteLength) throw new Error('unpadded length cannot exceed buffer length')\n  if (blockSize > buffer.byteLength) throw new Error('block size cannot exceed buffer length')\n  if (blockSize < 1) throw new Error('block sizemust be at least 1 byte')\n  if (buffer?.byteLength < unpaddedBuflen + (blockSize - (unpaddedBuflen % blockSize))) throw new Error('buf not long enough')\n\n  return binding.sodium_pad(buffer, unpaddedBuflen, blockSize)\n}\n\n/** @returns {number} unpadded buffer length */\nexports.sodium_unpad = function (buffer, paddedBuflen, blockSize) {\n  if (paddedBuflen > buffer.byteLength) throw new Error('unpadded length cannot exceed buffer length')\n  if (blockSize > buffer.byteLength) throw new Error('block size cannot exceed buffer length')\n  if (blockSize < 1) throw new Error('block size must be at least 1 byte')\n\n  return binding.sodium_unpad(buffer, paddedBuflen, blockSize)\n}\n\n// crypto_sign\n\nexports.crypto_sign_keypair = function (pk, sk) {\n  if (pk?.byteLength !== binding.crypto_sign_PUBLICKEYBYTES) throw new Error('pk')\n\n  const res = binding.crypto_sign_keypair(pk, sk)\n\n  if (res !== 0) throw new Error('status: ' + res)\n}\n\nexports.crypto_sign_seed_keypair = function (pk, sk, seed) {\n  if (pk?.byteLength !== binding.crypto_sign_PUBLICKEYBYTES) throw new Error('pk')\n\n  const res = binding.crypto_sign_seed_keypair(pk, sk, seed)\n\n  if (res !== 0) throw new Error('status: ' + res)\n}\n\nexports.crypto_sign = function (sm, m, sk) {\n  if (sm?.byteLength !== binding.crypto_sign_BYTES + m.byteLength) throw new Error('sm must be \"m.byteLength + crypto_sign_BYTES\" bytes')\n  if (sk?.byteLength !== binding.crypto_sign_SECRETKEYBYTES) throw new Error('sk')\n\n  const res = binding.crypto_sign(sm, m, sk)\n\n  if (res !== 0) throw new Error('status: ' + res)\n}\n\nexports.crypto_sign_open = function (m, sm, pk) {\n  if (sm?.byteLength < binding.crypto_sign_BYTES) throw new Error('sm')\n  if (m?.byteLength !== sm.byteLength - binding.crypto_sign_BYTES) throw new Error('m must be \"sm.byteLength - crypto_sign_BYTES\" bytes')\n  if (pk?.byteLength !== binding.crypto_sign_PUBLICKEYBYTES) throw new Error('pk')\n\n  const res = binding.crypto_sign_open(m, sm, pk)\n\n  if (res !== 0) throw new Error('status: ' + res)\n}\n\n/** @returns {boolean} */\nexports.crypto_sign_open = function (m, sm, pk) {\n  if (sm?.byteLength < binding.crypto_sign_BYTES) throw new Error('sm')\n  if (m?.byteLength !== sm.byteLength - binding.crypto_sign_BYTES) throw new Error('m must be \"sm.byteLength - crypto_sign_BYTES\" bytes')\n  if (pk?.byteLength !== binding.crypto_sign_PUBLICKEYBYTES) throw new Error('pk')\n\n  return binding.crypto_sign_open(m, sm, pk)\n}\n\nexports.crypto_sign_detached = function (sig, m, sk) {\n  if (sig?.byteLength !== binding.crypto_sign_BYTES) throw new Error('sig')\n  if (sk?.byteLength !== binding.crypto_sign_SECRETKEYBYTES) throw new Error('sk')\n\n  const res = binding.crypto_sign_detached(sig, m, sk)\n\n  if (res !== 0) throw new Error('status: ' + res)\n}\n\n/** @returns {boolean} */\nexports.crypto_sign_verify_detached = function (sig, m, pk) {\n  return binding.crypto_sign_verify_detached(\n    sig.buffer,\n    sig.byteOffset,\n    sig.byteLength,\n\n    m.buffer,\n    m.byteOffset,\n    m.byteLength,\n\n    pk.buffer,\n    pk.byteOffset,\n    pk.byteLength\n  )\n}\n\nexports.crypto_sign_ed25519_sk_to_pk = function (pk, sk) {\n  if (pk?.byteLength !== binding.crypto_sign_PUBLICKEYBYTES) throw new Error('pk')\n  if (sk?.byteLength !== binding.crypto_sign_SECRETKEYBYTES) throw new Error('sk')\n\n  const res = binding.crypto_sign_ed25519_sk_to_pk(pk, sk)\n\n  if (res !== 0) throw new Error('status: ' + res)\n}\n\nexports.crypto_sign_ed25519_pk_to_curve25519 = function (x25519pk, ed25519pk) {\n  if (x25519pk?.byteLength !== binding.crypto_box_PUBLICKEYBYTES) throw new Error('x25519_pk')\n  if (ed25519pk?.byteLength !== binding.crypto_sign_PUBLICKEYBYTES) throw new Error('ed25519_pk')\n\n  const res = binding.crypto_sign_ed25519_pk_to_curve25519(x25519pk, ed25519pk)\n\n  if (res !== 0) throw new Error('status: ' + res)\n}\n\nexports.crypto_sign_ed25519_sk_to_curve25519 = function (x25519sk, ed25519sk) {\n  if (x25519sk?.byteLength !== binding.crypto_box_SECRETKEYBYTES) throw new Error('x25519_sk')\n\n  const edLen = ed25519sk.byteLength\n\n  if (edLen !== binding.crypto_sign_SECRETKEYBYTES && edLen !== binding.crypto_box_SECRETKEYBYTES) {\n    throw new Error('ed25519_sk should either be \\'crypto_sign_SECRETKEYBYTES\\' bytes or \\'crypto_sign_SECRETKEYBYTES - crypto_sign_PUBLICKEYBYTES\\' bytes')\n  }\n\n  const res = binding.crypto_sign_ed25519_sk_to_curve25519(x25519sk, ed25519sk)\n\n  if (res !== 0) throw new Error('status: ' + res)\n}\n\n// crypto_box\n\nexports.crypto_box_keypair = function (pk, sk) {\n  if (pk?.byteLength !== binding.crypto_box_PUBLICKEYBYTES) throw new Error('pk')\n  if (sk?.byteLength !== binding.crypto_box_SECRETKEYBYTES) throw new Error('sk')\n\n  const res = binding.crypto_box_keypair(pk, sk)\n\n  if (res !== 0) throw new Error('status: ' + res)\n}\n\nexports.crypto_box_seed_keypair = function (pk, sk, seed) {\n  if (pk?.byteLength !== binding.crypto_box_PUBLICKEYBYTES) throw new Error('pk')\n  if (sk?.byteLength !== binding.crypto_box_SECRETKEYBYTES) throw new Error('sk')\n\n  const res = binding.crypto_box_seed_keypair(pk, sk, seed)\n\n  if (res !== 0) throw new Error('status: ' + res)\n}\n\nexports.crypto_box_easy = function (c, m, n, pk, sk) {\n  const res = binding.crypto_box_easy(c, m, n, pk, sk)\n\n  if (res !== 0) throw new Error('status: ' + res)\n}\n\nexports.crypto_box_detached = function (c, mac, m, n, pk, sk) {\n  const res = binding.crypto_box_detached(c, mac, m, n, pk, sk)\n\n  if (res !== 0) throw new Error('status: ' + res)\n}\n\nexports.crypto_box_seal = function (c, m, pk) {\n  const res = binding.crypto_box_seal(c, m, pk)\n\n  if (res !== 0) throw new Error('status: ' + res)\n}\n\n/** @returns {boolean} */\nexports.crypto_box_seal_open = function (m, c, pk, sk) {\n  return binding.crypto_box_seal_open(\n    m.buffer,\n    m.byteOffset,\n    m.byteLength,\n\n    c.buffer,\n    c.byteOffset,\n    c.byteLength,\n\n    pk.buffer,\n    pk.byteOffset,\n    pk.byteLength,\n\n    sk.buffer,\n    sk.byteOffset,\n    sk.byteLength\n  )\n}\n\n// crypto_secretbox\n\nexports.crypto_secretbox_easy = function (c, m, n, k) {\n  if (c?.byteLength !== m.byteLength + binding.crypto_secretbox_MACBYTES) throw new Error('c must be \"m.byteLength + crypto_secretbox_MACBYTES\" bytes')\n  if (n?.byteLength !== binding.crypto_secretbox_NONCEBYTES) throw new Error('n')\n  if (k?.byteLength !== binding.crypto_secretbox_KEYBYTES) throw new Error('k')\n\n  const res = binding.crypto_secretbox_easy(c, m, n, k)\n\n  if (res !== 0) throw new Error('status: ' + res)\n}\n\n/** @returns {boolean} */\nexports.crypto_secretbox_open_easy = function (m, c, n, k) {\n  if (m?.byteLength !== c.byteLength - binding.crypto_secretbox_MACBYTES) throw new Error('m must be \"c - crypto_secretbox_MACBYTES\" bytes')\n  if (c?.byteLength < binding.crypto_secretbox_MACBYTES) throw new Error('c')\n  if (n?.byteLength !== binding.crypto_secretbox_NONCEBYTES) throw new Error('n')\n  if (k?.byteLength !== binding.crypto_secretbox_KEYBYTES) throw new Error('k')\n\n  return binding.crypto_secretbox_open_easy(m, c, n, k)\n}\n\nexports.crypto_secretbox_detached = function (c, mac, m, n, k) {\n  if (c?.byteLength !== m.byteLength) throw new Error('c must \"m.byteLength\" bytes')\n  if (mac?.byteLength !== binding.crypto_secretbox_MACBYTES) throw new Error('mac')\n  if (n?.byteLength !== binding.crypto_secretbox_NONCEBYTES) throw new Error('n')\n  if (k?.byteLength !== binding.crypto_secretbox_KEYBYTES) throw new Error('k')\n\n  const res = binding.crypto_secretbox_detached(c, mac, m, n, k)\n\n  if (res !== 0) throw new Error('status: ' + res)\n}\n\n/** @returns {boolean} */\nexports.crypto_secretbox_open_detached = function (m, c, mac, n, k) {\n  if (m?.byteLength !== c.byteLength) throw new Error('m must be \"c.byteLength\" bytes')\n  if (mac?.byteLength !== binding.crypto_secretbox_MACBYTES) throw new Error('mac')\n  if (n?.byteLength !== binding.crypto_secretbox_NONCEBYTES) throw new Error('n')\n  if (k?.byteLength !== binding.crypto_secretbox_KEYBYTES) throw new Error('k')\n\n  return binding.crypto_secretbox_open_detached(m, c, mac, n, k)\n}\n\n// crypto_generichash\n\nexports.crypto_generichash = function (output, input, key = OPTIONAL) {\n  const res = binding.crypto_generichash(\n    output.buffer,\n    output.byteOffset,\n    output.byteLength,\n\n    input.buffer,\n    input.byteOffset,\n    input.byteLength,\n\n    key.buffer,\n    key.byteOffset,\n    key.byteLength\n  )\n\n  if (res !== 0) throw new Error('status: ' + res)\n}\n\nexports.crypto_generichash_batch = function (output, batch, key) {\n  if (isNode || batch.length < 4) {\n    // iterate batch from native\n    const res = binding.crypto_generichash_batch(output, batch, !!key, key || OPTIONAL)\n    if (res !== 0) throw new Error('status: ' + res)\n  } else {\n    // iterate batch through fastcalls\n    const state = Buffer.alloc(binding.crypto_generichash_STATEBYTES)\n\n    exports.crypto_generichash_init(state, key, output.byteLength)\n\n    for (const buf of batch) {\n      exports.crypto_generichash_update(state, buf)\n    }\n\n    exports.crypto_generichash_final(state, output)\n  }\n}\n\nexports.crypto_generichash_keygen = function (key) {\n  const res = binding.crypto_generichash_keygen(\n    key.buffer, key.byteOffset, key.byteLength\n  )\n  if (res !== 0) throw new Error('status: ' + res)\n}\n\nexports.crypto_generichash_init = function (state, key, outputLength) {\n  key ||= OPTIONAL\n\n  const res = binding.crypto_generichash_init(\n    state.buffer,\n    state.byteOffset,\n    state.byteLength,\n\n    key.buffer,\n    key.byteOffset,\n    key.byteLength,\n\n    outputLength\n  )\n\n  if (res !== 0) throw new Error('status: ' + res)\n}\n\nexports.crypto_generichash_update = function (state, input) {\n  const res = binding.crypto_generichash_update(\n    state.buffer,\n    state.byteOffset,\n    state.byteLength,\n\n    input.buffer,\n    input.byteOffset,\n    input.byteLength\n  )\n\n  if (res !== 0) throw new Error('status: ' + res)\n}\n\nexports.crypto_generichash_final = function (state, output) {\n  const res = binding.crypto_generichash_final(\n    state.buffer,\n    state.byteOffset,\n    state.byteLength,\n\n    output.buffer,\n    output.byteOffset,\n    output.byteLength\n  )\n\n  if (res !== 0) throw new Error('status: ' + res)\n}\n\n// secretstream\n\nexports.crypto_secretstream_xchacha20poly1305_keygen = function (k) {\n  binding.crypto_secretstream_xchacha20poly1305_keygen(k.buffer, k.byteOffset, k.byteLength)\n}\n\nexports.crypto_secretstream_xchacha20poly1305_init_push = function (state, header, k) {\n  const res = binding.crypto_secretstream_xchacha20poly1305_init_push(\n    state.buffer,\n    state.byteOffset,\n    state.byteLength,\n\n    header.buffer,\n    header.byteOffset,\n    header.byteLength,\n\n    k.buffer,\n    k.byteOffset,\n    k.byteLength\n  )\n\n  if (res !== 0) throw new Error('status: ' + res)\n}\n\nexports.crypto_secretstream_xchacha20poly1305_init_pull = function (state, header, k) {\n  const res = binding.crypto_secretstream_xchacha20poly1305_init_pull(\n    state.buffer,\n    state.byteOffset,\n    state.byteLength,\n\n    header.buffer,\n    header.byteOffset,\n    header.byteLength,\n\n    k.buffer,\n    k.byteOffset,\n    k.byteLength\n  )\n\n  if (res !== 0) throw new Error('status: ' + res)\n}\n\n/** @returns {number} */\nexports.crypto_secretstream_xchacha20poly1305_push = function (state, c, m, ad, tag) {\n  ad ||= OPTIONAL\n\n  const res = binding.crypto_secretstream_xchacha20poly1305_push(\n    state.buffer,\n    state.byteOffset,\n    state.byteLength,\n\n    c.buffer,\n    c.byteOffset,\n    c.byteLength,\n\n    m.buffer,\n    m.byteOffset,\n    m.byteLength,\n\n    ad.buffer,\n    ad.byteOffset,\n    ad.byteLength,\n\n    tag\n  )\n\n  if (res < 0) throw new Error('push failed')\n\n  return res\n}\n\n/** @returns {number} */\nexports.crypto_secretstream_xchacha20poly1305_pull = function (state, m, tag, c, ad) {\n  ad ||= OPTIONAL\n\n  if (c?.byteLength < binding.crypto_secretstream_xchacha20poly1305_ABYTES) throw new Error('invalid cipher length')\n  if (m?.byteLength !== c.byteLength - binding.crypto_secretstream_xchacha20poly1305_ABYTES) throw new Error('invalid message length')\n\n  const res = binding.crypto_secretstream_xchacha20poly1305_pull(\n    state.buffer,\n    state.byteOffset,\n    state.byteLength,\n\n    m.buffer,\n    m.byteOffset,\n    m.byteLength,\n\n    tag.buffer,\n    tag.byteOffset,\n    tag.byteLength,\n\n    c.buffer,\n    c.byteOffset,\n    c.byteLength,\n\n    ad.buffer,\n    ad.byteOffset,\n    ad.byteLength\n  )\n\n  if (res < 0) throw new Error('pull failed')\n\n  return res\n}\n\nexports.crypto_secretstream_xchacha20poly1305_rekey = function (state) {\n  binding.crypto_secretstream_xchacha20poly1305_rekey(state.buffer, state.byteOffset, state.byteLength)\n}\n\n// crypto_stream\n\nexports.crypto_stream = function (c, n, k) {\n  if (n?.byteLength !== binding.crypto_stream_NONCEBYTES) throw new Error('n')\n  if (k?.byteLength !== binding.crypto_stream_KEYBYTES) throw new Error('k')\n\n  const res = binding.crypto_stream(c, n, k)\n\n  if (res !== 0) throw new Error('status: ' + res)\n}\n\nexports.crypto_stream_xor = function (c, m, n, k) {\n  const res = binding.crypto_stream_xor(\n    c.buffer,\n    c.byteOffset,\n    c.byteLength,\n\n    m.buffer,\n    m.byteOffset,\n    m.byteLength,\n\n    n.buffer,\n    n.byteOffset,\n    n.byteLength,\n\n    k.buffer,\n    k.byteOffset,\n    k.byteLength\n  )\n\n  if (res !== 0) throw new Error('status: ' + res)\n}\n\nexports.crypto_stream_chacha20 = function (c, n, k) {\n  if (n?.byteLength !== binding.crypto_stream_chacha20_NONCEBYTES) throw new Error('n')\n  if (k?.byteLength !== binding.crypto_stream_chacha20_KEYBYTES) throw new Error('k')\n\n  const res = binding.crypto_stream_chacha20(c, n, k)\n\n  if (res !== 0) throw new Error('status: ' + res)\n}\n\nexports.crypto_stream_chacha20_xor = function (c, m, n, k) {\n  if (c?.byteLength !== m.byteLength) throw new Error('m must be \"c.byteLength\" bytes')\n  if (n?.byteLength !== binding.crypto_stream_chacha20_NONCEBYTES) throw new Error('n')\n  if (k?.byteLength !== binding.crypto_stream_chacha20_KEYBYTES) throw new Error('k')\n\n  const res = binding.crypto_stream_chacha20_xor(c, m, n, k)\n\n  if (res !== 0) throw new Error('status: ' + res)\n}\n\nexports.crypto_stream_chacha20_xor_ic = function (c, m, n, ic, k) {\n  if (c?.byteLength !== m.byteLength) throw new Error('m must be \"c.byteLength\" bytes')\n  if (n?.byteLength !== binding.crypto_stream_chacha20_NONCEBYTES) throw new Error('n')\n  if (k?.byteLength !== binding.crypto_stream_chacha20_KEYBYTES) throw new Error('k')\n\n  const res = binding.crypto_stream_chacha20_xor_ic(c, m, n, ic, k)\n\n  if (res !== 0) throw new Error('status: ' + res)\n}\n\nexports.crypto_stream_chacha20_ietf = function (c, n, k) {\n  if (n?.byteLength !== binding.crypto_stream_chacha20_ietf_NONCEBYTES) throw new Error('n')\n  if (k?.byteLength !== binding.crypto_stream_chacha20_ietf_KEYBYTES) throw new Error('k')\n\n  const res = binding.crypto_stream_chacha20_ietf(c, n, k)\n\n  if (res !== 0) throw new Error('status: ' + res)\n}\n\nexports.crypto_stream_chacha20_ietf_xor = function (c, m, n, k) {\n  if (c?.byteLength !== m.byteLength) throw new Error('m must be \"c.byteLength\" bytes')\n  if (n?.byteLength !== binding.crypto_stream_chacha20_ietf_NONCEBYTES) throw new Error('n')\n  if (k?.byteLength !== binding.crypto_stream_chacha20_ietf_KEYBYTES) throw new Error('k')\n\n  const res = binding.crypto_stream_chacha20_ietf_xor(c, m, n, k)\n\n  if (res !== 0) throw new Error('status: ' + res)\n}\n\nexports.crypto_stream_chacha20_ietf_xor_ic = function (c, m, n, ic, k) {\n  if (c?.byteLength !== m.byteLength) throw new Error('m must be \"c.byteLength\" bytes')\n  if (n?.byteLength !== binding.crypto_stream_chacha20_ietf_NONCEBYTES) throw new Error('n')\n  if (k?.byteLength !== binding.crypto_stream_chacha20_ietf_KEYBYTES) throw new Error('k')\n\n  const res = binding.crypto_stream_chacha20_ietf_xor_ic(c, m, n, ic, k)\n\n  if (res !== 0) throw new Error('status: ' + res)\n}\n\nexports.crypto_stream_xchacha20 = function (c, n, k) {\n  if (n?.byteLength !== binding.crypto_stream_xchacha20_NONCEBYTES) throw new Error('n')\n  if (k?.byteLength !== binding.crypto_stream_xchacha20_KEYBYTES) throw new Error('k')\n\n  const res = binding.crypto_stream_xchacha20(c, n, k)\n\n  if (res !== 0) throw new Error('status: ' + res)\n}\n\nexports.crypto_stream_xchacha20_xor = function (c, m, n, k) {\n  if (c?.byteLength !== m.byteLength) throw new Error('m must be \"c.byteLength\" bytes')\n  if (n?.byteLength !== binding.crypto_stream_xchacha20_NONCEBYTES) throw new Error('n')\n  if (k?.byteLength !== binding.crypto_stream_xchacha20_KEYBYTES) throw new Error('k')\n\n  const res = binding.crypto_stream_xchacha20_xor(c, m, n, k)\n\n  if (res !== 0) throw new Error('status: ' + res)\n}\n\nexports.crypto_stream_xchacha20_xor_ic = function (c, m, n, ic, k) {\n  if (c?.byteLength !== m.byteLength) throw new Error('m must be \"c.byteLength\" bytes')\n  if (n?.byteLength !== binding.crypto_stream_xchacha20_NONCEBYTES) throw new Error('n')\n  if (k?.byteLength !== binding.crypto_stream_xchacha20_KEYBYTES) throw new Error('k')\n\n  const res = binding.crypto_stream_xchacha20_xor_ic(c, m, n, ic, k)\n\n  if (res !== 0) throw new Error('status: ' + res)\n}\n\nexports.crypto_stream_salsa20 = function (c, n, k) {\n  if (n?.byteLength !== binding.crypto_stream_salsa20_NONCEBYTES) throw new Error('n')\n  if (k?.byteLength !== binding.crypto_stream_salsa20_KEYBYTES) throw new Error('k')\n\n  const res = binding.crypto_stream_salsa20(c, n, k)\n\n  if (res !== 0) throw new Error('status: ' + res)\n}\n\nexports.crypto_stream_salsa20_xor = function (c, m, n, k) {\n  if (c?.byteLength !== m.byteLength) throw new Error('m must be \"c.byteLength\" bytes')\n  if (n?.byteLength !== binding.crypto_stream_salsa20_NONCEBYTES) throw new Error('n')\n  if (k?.byteLength !== binding.crypto_stream_salsa20_KEYBYTES) throw new Error('k')\n\n  const res = binding.crypto_stream_salsa20_xor(c, m, n, k)\n\n  if (res !== 0) throw new Error('status: ' + res)\n}\n\nexports.crypto_stream_salsa20_xor_ic = function (c, m, n, ic, k) {\n  if (c?.byteLength !== m.byteLength) throw new Error('m must be \"c.byteLength\" bytes')\n  if (n?.byteLength !== binding.crypto_stream_salsa20_NONCEBYTES) throw new Error('n')\n  if (k?.byteLength !== binding.crypto_stream_salsa20_KEYBYTES) throw new Error('k')\n\n  const res = binding.crypto_stream_salsa20_xor_ic(c, m, n, ic, k)\n\n  if (res !== 0) throw new Error('status: ' + res)\n}\n\n// crypto_auth\n\nexports.crypto_auth = function (out, input, k) {\n  if (out?.byteLength !== binding.crypto_auth_BYTES) throw new Error('out')\n  if (k?.byteLength !== binding.crypto_auth_KEYBYTES) throw new Error('k')\n\n  const res = binding.crypto_auth(out, input, k)\n\n  if (res !== 0) throw new Error('status: ' + res)\n}\n\n/** @returns {boolean} */\nexports.crypto_auth_verify = function (h, input, k) {\n  if (h?.byteLength !== binding.crypto_auth_BYTES) throw new Error('h')\n  if (k?.byteLength !== binding.crypto_auth_KEYBYTES) throw new Error('k')\n\n  return binding.crypto_auth_verify(h, input, k)\n}\n\n// crypto_onetimeauth\n\nexports.crypto_onetimeauth = function (out, input, k) {\n  if (out?.byteLength !== binding.crypto_onetimeauth_BYTES) throw new Error('out')\n  if (k?.byteLength !== binding.crypto_onetimeauth_KEYBYTES) throw new Error('k')\n\n  const res = binding.crypto_onetimeauth(out, input, k)\n\n  if (res !== 0) throw new Error('status: ' + res)\n}\n\nexports.crypto_onetimeauth_init = function (state, k) {\n  if (state?.byteLength !== binding.crypto_onetimeauth_STATEBYTES) throw new Error(\"state must be 'crypto_onetimeauth_STATEBYTES' bytes\")\n  if (k?.byteLength !== binding.crypto_onetimeauth_KEYBYTES) throw new Error('k')\n\n  const res = binding.crypto_onetimeauth_init(state, k)\n\n  if (res !== 0) throw new Error('status: ' + res)\n}\n\nexports.crypto_onetimeauth_update = function (state, input) {\n  if (state?.byteLength !== binding.crypto_onetimeauth_STATEBYTES) throw new Error(\"state must be 'crypto_onetimeauth_STATEBYTES' bytes\")\n\n  const res = binding.crypto_onetimeauth_update(state, input)\n\n  if (res !== 0) throw new Error('status: ' + res)\n}\n\nexports.crypto_onetimeauth_final = function (state, out) {\n  if (state?.byteLength !== binding.crypto_onetimeauth_STATEBYTES) throw new Error(\"state must be 'crypto_onetimeauth_STATEBYTES' bytes\")\n  if (out?.byteLength !== binding.crypto_onetimeauth_BYTES) throw new Error('out')\n\n  const res = binding.crypto_onetimeauth_final(state, out)\n\n  if (res !== 0) throw new Error('status: ' + res)\n}\n\n/** @returns {boolean} */\nexports.crypto_onetimeauth_verify = function (h, input, k) {\n  if (h?.byteLength !== binding.crypto_onetimeauth_BYTES) throw new Error('h')\n  if (k?.byteLength !== binding.crypto_onetimeauth_KEYBYTES) throw new Error('k')\n\n  return binding.crypto_onetimeauth_verify(h, input, k)\n}\n\n// crypto_pwhash\n\nexports.crypto_pwhash = function (out, passwd, salt, opslimit, memlimit, alg) {\n  if (out?.byteLength < binding.crypto_pwhash_BYTES_MIN) throw new Error('out')\n  if (out?.byteLength > binding.crypto_pwhash_BYTES_MAX) throw new Error('out')\n  if (salt?.byteLength !== binding.crypto_pwhash_SALTBYTES) throw new Error('salt')\n  if (opslimit < binding.crypto_pwhash_OPSLIMIT_MIN) throw new Error('opslimit')\n  if (opslimit > binding.crypto_pwhash_OPSLIMIT_MAX) throw new Error('opslimit')\n  if (memlimit < binding.crypto_pwhash_MEMLIMIT_MIN) throw new Error('memlimit')\n  if (memlimit > binding.crypto_pwhash_MEMLIMIT_MAX) throw new Error('memlimit')\n  if (alg < 1 || alg > 2) throw new Error('alg must be either Argon2i 1.3 or Argon2id 1.3')\n\n  const res = binding.crypto_pwhash(out, passwd, salt, opslimit, memlimit, alg)\n\n  if (res !== 0) throw new Error('status: ' + res)\n}\n\n/** @returns {Promise<void>|undefined} */\nexports.crypto_pwhash_async = function (out, passwd, salt, opslimit, memlimit, alg, callback = undefined) {\n  if (out?.byteLength < binding.crypto_pwhash_BYTES_MIN) throw new Error('out')\n  if (out?.byteLength > binding.crypto_pwhash_BYTES_MAX) throw new Error('out')\n  if (salt?.byteLength !== binding.crypto_pwhash_SALTBYTES) throw new Error('salt')\n  if (opslimit < binding.crypto_pwhash_OPSLIMIT_MIN) throw new Error('opslimit')\n  if (opslimit > binding.crypto_pwhash_OPSLIMIT_MAX) throw new Error('opslimit')\n  if (memlimit < binding.crypto_pwhash_MEMLIMIT_MIN) throw new Error('memlimit')\n  if (memlimit > binding.crypto_pwhash_MEMLIMIT_MAX) throw new Error('memlimit')\n  if (alg < 1 || alg > 2) throw new Error('alg must be either Argon2i 1.3 or Argon2id 1.3')\n\n  const [done, promise] = checkStatus(callback)\n\n  binding.crypto_pwhash_async(\n    out.buffer,\n    out.byteOffset,\n    out.byteLength,\n\n    passwd.buffer,\n    passwd.byteOffset,\n    passwd.byteLength,\n\n    salt.buffer,\n    salt.byteOffset,\n    salt.byteLength,\n\n    opslimit,\n    memlimit,\n    alg,\n\n    done\n  )\n\n  return promise\n}\n\nexports.crypto_pwhash_str = function (out, passwd, opslimit, memlimit) {\n  if (out?.byteLength !== binding.crypto_pwhash_STRBYTES) throw new Error('out')\n  if (typeof opslimit !== 'number') throw new Error('opslimit')\n  if (opslimit < binding.crypto_pwhash_OPSLIMIT_MIN) throw new Error('opslimit')\n  if (opslimit > binding.crypto_pwhash_OPSLIMIT_MAX) throw new Error('opslimit')\n  if (typeof memlimit !== 'number') throw new Error('memlimit')\n  if (memlimit < binding.crypto_pwhash_MEMLIMIT_MIN) throw new Error('memlimit')\n  if (memlimit > binding.crypto_pwhash_MEMLIMIT_MAX) throw new Error('memlimit')\n\n  const res = binding.crypto_pwhash_str(out, passwd, opslimit, memlimit)\n\n  if (res !== 0) throw new Error('status: ' + res)\n}\n\n/** @returns {Promise<void>|undefined} */\nexports.crypto_pwhash_str_async = function (out, passwd, opslimit, memlimit, callback = undefined) {\n  if (out?.byteLength !== binding.crypto_pwhash_STRBYTES) throw new Error('out')\n  if (!passwd?.byteLength) throw new Error('passwd')\n  if (typeof opslimit !== 'number') throw new Error('opslimit')\n  if (opslimit < binding.crypto_pwhash_OPSLIMIT_MIN) throw new Error('opslimit')\n  if (opslimit > binding.crypto_pwhash_OPSLIMIT_MAX) throw new Error('opslimit')\n  if (typeof memlimit !== 'number') throw new Error('memlimit')\n  if (memlimit < binding.crypto_pwhash_MEMLIMIT_MIN) throw new Error('memlimit')\n  if (memlimit > binding.crypto_pwhash_MEMLIMIT_MAX) throw new Error('memlimit')\n\n  const [done, promise] = checkStatus(callback)\n\n  binding.crypto_pwhash_str_async(\n    out.buffer,\n    out.byteOffset,\n    out.byteLength,\n\n    passwd.buffer,\n    passwd.byteOffset,\n    passwd.byteLength,\n\n    opslimit,\n    memlimit,\n\n    done\n  )\n\n  return promise\n}\n\n/** @returns {boolean} */\nexports.crypto_pwhash_str_verify = function (str, passwd) {\n  if (str?.byteLength !== binding.crypto_pwhash_STRBYTES) throw new Error('str')\n\n  return binding.crypto_pwhash_str_verify(str, passwd)\n}\n\n/** @returns {Promise<boolean>|undefined} */\nexports.crypto_pwhash_str_verify_async = function (str, passwd, callback = undefined) {\n  if (str?.byteLength !== binding.crypto_pwhash_STRBYTES) throw new Error('str')\n  if (!passwd?.byteLength) throw new Error('passwd')\n\n  const [done, promise] = checkStatus(callback, true)\n\n  binding.crypto_pwhash_str_verify_async(\n    str.buffer,\n    str.byteOffset,\n    str.byteLength,\n\n    passwd.buffer,\n    passwd.byteOffset,\n    passwd.byteLength,\n\n    done\n  )\n\n  return promise\n}\n\n/** @returns {boolean} */\nexports.crypto_pwhash_str_needs_rehash = function (str, opslimit, memlimit) {\n  if (str?.byteLength !== binding.crypto_pwhash_STRBYTES) throw new Error('str')\n  if (opslimit < binding.crypto_pwhash_OPSLIMIT_MIN) throw new Error('opslimit')\n  if (opslimit > binding.crypto_pwhash_OPSLIMIT_MAX) throw new Error('opslimit')\n  if (memlimit < binding.crypto_pwhash_MEMLIMIT_MIN) throw new Error('memlimit')\n  if (memlimit > binding.crypto_pwhash_MEMLIMIT_MAX) throw new Error('memlimit')\n\n  return binding.crypto_pwhash_str_needs_rehash(str, opslimit, memlimit)\n}\n\nexports.crypto_pwhash_scryptsalsa208sha256 = function (out, passwd, salt, opslimit, memlimit) {\n  if (out?.byteLength < binding.crypto_pwhash_scryptsalsa208sha256_BYTES_MIN) throw new Error('out')\n  if (out?.byteLength > binding.crypto_pwhash_scryptsalsa208sha256_BYTES_MAX) throw new Error('out')\n  if (salt?.byteLength !== binding.crypto_pwhash_scryptsalsa208sha256_SALTBYTES) throw new Error('salt')\n  if (opslimit < binding.crypto_pwhash_scryptsalsa208sha256_OPSLIMIT_MIN) throw new Error('opslimit')\n  if (opslimit > binding.crypto_pwhash_scryptsalsa208sha256_OPSLIMIT_MAX) throw new Error('opslimit')\n  if (memlimit < binding.crypto_pwhash_scryptsalsa208sha256_MEMLIMIT_MIN) throw new Error('memlimit')\n  if (memlimit > binding.crypto_pwhash_scryptsalsa208sha256_MEMLIMIT_MAX) throw new Error('memlimit')\n\n  const res = binding.crypto_pwhash_scryptsalsa208sha256(out, passwd, salt, opslimit, memlimit)\n\n  if (res !== 0) throw new Error('status: ' + res)\n}\n\n/** @returns {Promise<void>|undefined} */\nexports.crypto_pwhash_scryptsalsa208sha256_async = function (out, passwd, salt, opslimit, memlimit, callback = undefined) {\n  if (out?.byteLength < binding.crypto_pwhash_scryptsalsa208sha256_BYTES_MIN) throw new Error('out')\n  if (out?.byteLength > binding.crypto_pwhash_scryptsalsa208sha256_BYTES_MAX) throw new Error('out')\n  if (!passwd?.byteLength) throw new Error('passwd')\n  if (salt?.byteLength !== binding.crypto_pwhash_scryptsalsa208sha256_SALTBYTES) throw new Error('salt')\n  if (opslimit < binding.crypto_pwhash_scryptsalsa208sha256_OPSLIMIT_MIN) throw new Error('opslimit')\n  if (opslimit > binding.crypto_pwhash_scryptsalsa208sha256_OPSLIMIT_MAX) throw new Error('opslimit')\n  if (memlimit < binding.crypto_pwhash_scryptsalsa208sha256_MEMLIMIT_MIN) throw new Error('memlimit')\n  if (memlimit > binding.crypto_pwhash_scryptsalsa208sha256_MEMLIMIT_MAX) throw new Error('memlimit')\n\n  const [done, promise] = checkStatus(callback)\n\n  binding.crypto_pwhash_scryptsalsa208sha256_async(\n    out.buffer,\n    out.byteOffset,\n    out.byteLength,\n\n    passwd.buffer,\n    passwd.byteOffset,\n    passwd.byteLength,\n\n    salt.buffer,\n    salt.byteOffset,\n    salt.byteLength,\n\n    opslimit,\n    memlimit,\n\n    done\n  )\n\n  return promise\n}\n\n/** @returns {Promise<void>|undefined} */\nexports.crypto_pwhash_scryptsalsa208sha256_str_async = function (out, passwd, opslimit, memlimit, callback = undefined) {\n  if (out?.byteLength !== binding.crypto_pwhash_scryptsalsa208sha256_STRBYTES) throw new Error('out')\n  if (!passwd?.byteLength) throw new Error('passwd')\n  if (opslimit < binding.crypto_pwhash_scryptsalsa208sha256_OPSLIMIT_MIN) throw new Error('opslimit')\n  if (opslimit > binding.crypto_pwhash_scryptsalsa208sha256_OPSLIMIT_MAX) throw new Error('opslimit')\n  if (memlimit < binding.crypto_pwhash_scryptsalsa208sha256_MEMLIMIT_MIN) throw new Error('memlimit')\n  if (memlimit > binding.crypto_pwhash_scryptsalsa208sha256_MEMLIMIT_MAX) throw new Error('memlimit')\n\n  const [done, promise] = checkStatus(callback)\n\n  binding.crypto_pwhash_scryptsalsa208sha256_str_async(\n    out.buffer,\n    out.byteOffset,\n    out.byteLength,\n\n    passwd.buffer,\n    passwd.byteOffset,\n    passwd.byteLength,\n\n    opslimit,\n    memlimit,\n\n    done\n  )\n\n  return promise\n}\n\nexports.crypto_pwhash_scryptsalsa208sha256_str = function (out, passwd, opslimit, memlimit) {\n  if (out?.byteLength !== binding.crypto_pwhash_scryptsalsa208sha256_STRBYTES) throw new Error('out')\n  if (!passwd?.byteLength) throw new Error('passwd')\n  if (opslimit < binding.crypto_pwhash_scryptsalsa208sha256_OPSLIMIT_MIN) throw new Error('opslimit')\n  if (opslimit > binding.crypto_pwhash_scryptsalsa208sha256_OPSLIMIT_MAX) throw new Error('opslimit')\n  if (memlimit < binding.crypto_pwhash_scryptsalsa208sha256_MEMLIMIT_MIN) throw new Error('memlimit')\n  if (memlimit > binding.crypto_pwhash_scryptsalsa208sha256_MEMLIMIT_MAX) throw new Error('memlimit')\n\n  const res = binding.crypto_pwhash_scryptsalsa208sha256_str(out, passwd, opslimit, memlimit)\n\n  if (res !== 0) throw new Error('status: ' + res)\n}\n\n/** @returns {Promise<boolean>|undefined} */\nexports.crypto_pwhash_scryptsalsa208sha256_str_verify_async = function (str, passwd, callback = undefined) {\n  if (str?.byteLength !== binding.crypto_pwhash_scryptsalsa208sha256_STRBYTES) throw new Error('str')\n  if (!passwd?.byteLength) throw new Error('passwd')\n\n  const [done, promise] = checkStatus(callback, true)\n\n  binding.crypto_pwhash_scryptsalsa208sha256_str_verify_async(\n    str.buffer,\n    str.byteOffset,\n    str.byteLength,\n\n    passwd.buffer,\n    passwd.byteOffset,\n    passwd.byteLength,\n\n    done\n  )\n\n  return promise\n}\n\n/** @returns {boolean} */\nexports.crypto_pwhash_scryptsalsa208sha256_str_verify = function (str, passwd) {\n  if (str?.byteLength !== binding.crypto_pwhash_scryptsalsa208sha256_STRBYTES) throw new Error('str')\n  if (!passwd?.byteLength) throw new Error('passwd')\n\n  return binding.crypto_pwhash_scryptsalsa208sha256_str_verify(str, passwd)\n}\n\n/** @returns {boolean} */\nexports.crypto_pwhash_scryptsalsa208sha256_str_needs_rehash = function (str, opslimit, memlimit) {\n  if (str?.byteLength !== binding.crypto_pwhash_scryptsalsa208sha256_STRBYTES) throw new Error('str')\n  if (opslimit < binding.crypto_pwhash_OPSLIMIT_MIN) throw new Error('opslimit')\n  if (opslimit > binding.crypto_pwhash_OPSLIMIT_MAX) throw new Error('opslimit')\n  if (memlimit < binding.crypto_pwhash_MEMLIMIT_MIN) throw new Error('memlimit')\n  if (memlimit > binding.crypto_pwhash_MEMLIMIT_MAX) throw new Error('memlimit')\n\n  return binding.crypto_pwhash_scryptsalsa208sha256_str_needs_rehash(str, opslimit, memlimit)\n}\n\n// crypto_kx\n\nexports.crypto_kx_keypair = function (pk, sk) {\n  if (pk?.byteLength !== binding.crypto_kx_PUBLICKEYBYTES) throw new Error('pk')\n  if (sk?.byteLength !== binding.crypto_kx_SECRETKEYBYTES) throw new Error('sk')\n\n  const res = binding.crypto_kx_keypair(pk, sk)\n\n  if (res !== 0) throw new Error('status: ' + res)\n}\n\nexports.crypto_kx_seed_keypair = function (pk, sk, seed) {\n  if (pk?.byteLength !== binding.crypto_kx_PUBLICKEYBYTES) throw new Error('pk')\n  if (sk?.byteLength !== binding.crypto_kx_SECRETKEYBYTES) throw new Error('sk')\n  if (seed?.byteLength !== binding.crypto_kx_SEEDBYTES) throw new Error('seed')\n\n  const res = binding.crypto_kx_seed_keypair(pk, sk, seed)\n\n  if (res !== 0) throw new Error('status: ' + res)\n}\n\nexports.crypto_kx_client_session_keys = function (rx, tx, clientPk, clientSk, serverPk) {\n  // match `std::optional` by coercing null to undefined\n  rx ??= undefined\n  tx ??= undefined\n\n  if (!rx && !tx) throw new Error('at least one session key must be specified')\n\n  if (rx) {\n    if (rx?.byteLength !== binding.crypto_kx_SESSIONKEYBYTES) throw new Error('receiving key buffer must be \"crypto_kx_SESSIONKEYBYTES\" bytes or null')\n  } else {\n    if (tx?.byteLength !== binding.crypto_kx_SESSIONKEYBYTES) throw new Error('transmitting key buffer must be \"crypto_kx_SESSIONKEYBYTES\" bytes or null')\n  }\n\n  if (clientPk?.byteLength !== binding.crypto_kx_PUBLICKEYBYTES) throw new Error('client_pk')\n  if (clientSk?.byteLength !== binding.crypto_kx_SECRETKEYBYTES) throw new Error('client_sk')\n  if (serverPk?.byteLength !== binding.crypto_kx_PUBLICKEYBYTES) throw new Error('server_pk')\n\n  const res = binding.crypto_kx_client_session_keys(rx, tx, clientPk, clientSk, serverPk)\n\n  if (res !== 0) throw new Error('status: ' + res)\n}\n\nexports.crypto_kx_server_session_keys = function (rx, tx, serverPk, serverSk, clientPk) {\n  // match `std::optional` by coercing null to undefined\n  rx ??= undefined\n  tx ??= undefined\n\n  if (!rx && !tx) throw new Error('at least one session key must be specified')\n\n  if (rx) {\n    if (rx?.byteLength !== binding.crypto_kx_SESSIONKEYBYTES) throw new Error('receiving key buffer must be \"crypto_kx_SESSIONKEYBYTES\" bytes or null')\n  } else {\n    if (tx?.byteLength !== binding.crypto_kx_SESSIONKEYBYTES) throw new Error('transmitting key buffer must be \"crypto_kx_SESSIONKEYBYTES\" bytes or null')\n  }\n\n  if (serverPk?.byteLength !== binding.crypto_kx_PUBLICKEYBYTES) throw new Error('server_pk')\n  if (serverSk?.byteLength !== binding.crypto_kx_SECRETKEYBYTES) throw new Error('server_sk')\n  if (clientPk?.byteLength !== binding.crypto_kx_PUBLICKEYBYTES) throw new Error('client_pk')\n\n  const res = binding.crypto_kx_server_session_keys(rx, tx, serverPk, serverSk, clientPk)\n\n  if (res !== 0) throw new Error('status: ' + res)\n}\n\n// crypto_scalarmult\n\nexports.crypto_scalarmult_base = function (q, n) {\n  if (q?.byteLength !== binding.crypto_scalarmult_BYTES) throw new Error('q')\n  if (n?.byteLength !== binding.crypto_scalarmult_SCALARBYTES) throw new Error('n')\n\n  const res = binding.crypto_scalarmult_base(q, n)\n\n  if (res !== 0) throw new Error('status: ' + res)\n}\n\nexports.crypto_scalarmult = function (q, n, p) {\n  if (q?.byteLength !== binding.crypto_scalarmult_BYTES) throw new Error('q')\n  if (n?.byteLength !== binding.crypto_scalarmult_SCALARBYTES) throw new Error('n')\n  if (p?.byteLength !== binding.crypto_scalarmult_BYTES) throw new Error('p')\n\n  const res = binding.crypto_scalarmult(q, n, p)\n\n  if (res !== 0) throw new Error('status: ' + res)\n}\n\nexports.crypto_scalarmult_ed25519_base = function (q, n) {\n  if (q?.byteLength !== binding.crypto_scalarmult_ed25519_BYTES) throw new Error('q')\n  if (n?.byteLength !== binding.crypto_scalarmult_ed25519_SCALARBYTES) throw new Error('n')\n\n  const res = binding.crypto_scalarmult_ed25519_base(q, n)\n\n  if (res !== 0) throw new Error('status: ' + res)\n}\n\nexports.crypto_scalarmult_ed25519 = function (q, n, p) {\n  if (q?.byteLength !== binding.crypto_scalarmult_ed25519_BYTES) throw new Error('q')\n  if (n?.byteLength !== binding.crypto_scalarmult_ed25519_SCALARBYTES) throw new Error('n')\n  if (p?.byteLength !== binding.crypto_scalarmult_ed25519_BYTES) throw new Error('p')\n\n  const res = binding.crypto_scalarmult_ed25519(q, n, p)\n\n  if (res !== 0) throw new Error('status: ' + res)\n}\n\n/** @returns {boolean} */\nexports.crypto_core_ed25519_is_valid_point = function (p) {\n  if (p?.byteLength !== binding.crypto_core_ed25519_BYTES) throw new Error('p')\n\n  return binding.crypto_core_ed25519_is_valid_point(p)\n}\n\nexports.crypto_core_ed25519_from_uniform = function (p, r) {\n  if (p?.byteLength !== binding.crypto_core_ed25519_BYTES) throw new Error('p')\n  if (r?.byteLength !== binding.crypto_core_ed25519_UNIFORMBYTES) throw new Error('r')\n\n  const res = binding.crypto_core_ed25519_from_uniform(p, r)\n\n  if (res !== 0) throw new Error('status: ' + res)\n}\n\nexports.crypto_scalarmult_ed25519_base_noclamp = function (q, n) {\n  if (q?.byteLength !== binding.crypto_scalarmult_ed25519_BYTES) throw new Error('q')\n  if (n?.byteLength !== binding.crypto_scalarmult_ed25519_SCALARBYTES) throw new Error('n')\n\n  const res = binding.crypto_scalarmult_ed25519_base_noclamp(q, n)\n\n  if (res !== 0) throw new Error('status: ' + res)\n}\n\nexports.crypto_scalarmult_ed25519_noclamp = function (q, n, p) {\n  if (q?.byteLength !== binding.crypto_scalarmult_ed25519_BYTES) throw new Error('q')\n  if (n?.byteLength !== binding.crypto_scalarmult_ed25519_SCALARBYTES) throw new Error('n')\n  if (p?.byteLength !== binding.crypto_scalarmult_ed25519_BYTES) throw new Error('p')\n\n  const res = binding.crypto_scalarmult_ed25519_noclamp(q, n, p)\n\n  if (res !== 0) throw new Error('status: ' + res)\n}\n\n// crypto_core\n\nexports.crypto_core_ed25519_add = function (r, p, q) {\n  if (r?.byteLength !== binding.crypto_core_ed25519_BYTES) throw new Error('r')\n  if (p?.byteLength !== binding.crypto_core_ed25519_BYTES) throw new Error('p')\n  if (q?.byteLength !== binding.crypto_core_ed25519_BYTES) throw new Error('q')\n\n  const res = binding.crypto_core_ed25519_add(r, p, q)\n\n  if (res !== 0) throw new Error('status: ' + res)\n}\n\nexports.crypto_core_ed25519_sub = function (r, p, q) {\n  if (r?.byteLength !== binding.crypto_core_ed25519_BYTES) throw new Error('r')\n  if (p?.byteLength !== binding.crypto_core_ed25519_BYTES) throw new Error('p')\n  if (q?.byteLength !== binding.crypto_core_ed25519_BYTES) throw new Error('q')\n\n  const res = binding.crypto_core_ed25519_sub(r, p, q)\n\n  if (res !== 0) throw new Error('status: ' + res)\n}\n\nexports.crypto_core_ed25519_scalar_random = function (r) {\n  if (r?.byteLength !== binding.crypto_core_ed25519_SCALARBYTES) throw new Error('r')\n\n  binding.crypto_core_ed25519_scalar_random(r)\n}\n\nexports.crypto_core_ed25519_scalar_reduce = function (r, s) {\n  if (r?.byteLength !== binding.crypto_core_ed25519_SCALARBYTES) throw new Error('r')\n  if (s?.byteLength !== binding.crypto_core_ed25519_NONREDUCEDSCALARBYTES) throw new Error('s')\n\n  binding.crypto_core_ed25519_scalar_reduce(r, s)\n}\n\nexports.crypto_core_ed25519_scalar_invert = function (recip, s) {\n  if (recip?.byteLength !== binding.crypto_core_ed25519_SCALARBYTES) throw new Error('recip')\n  if (s?.byteLength !== binding.crypto_core_ed25519_SCALARBYTES) throw new Error('s')\n\n  binding.crypto_core_ed25519_scalar_invert(recip, s)\n}\n\nexports.crypto_core_ed25519_scalar_negate = function (neg, s) {\n  if (neg?.byteLength !== binding.crypto_core_ed25519_SCALARBYTES) throw new Error('neg')\n  if (s?.byteLength !== binding.crypto_core_ed25519_SCALARBYTES) throw new Error('s')\n\n  binding.crypto_core_ed25519_scalar_negate(neg, s)\n}\n\nexports.crypto_core_ed25519_scalar_complement = function (comp, s) {\n  if (comp?.byteLength !== binding.crypto_core_ed25519_SCALARBYTES) throw new Error('comp')\n  if (s?.byteLength !== binding.crypto_core_ed25519_SCALARBYTES) throw new Error('s')\n\n  binding.crypto_core_ed25519_scalar_complement(comp, s)\n}\n\nexports.crypto_core_ed25519_scalar_add = function (z, x, y) {\n  if (z?.byteLength !== binding.crypto_core_ed25519_SCALARBYTES) throw new Error('z')\n  if (x?.byteLength !== binding.crypto_core_ed25519_SCALARBYTES) throw new Error('x')\n  if (y?.byteLength !== binding.crypto_core_ed25519_SCALARBYTES) throw new Error('y')\n\n  binding.crypto_core_ed25519_scalar_add(z, x, y)\n}\n\nexports.crypto_core_ed25519_scalar_sub = function (z, x, y) {\n  if (z?.byteLength !== binding.crypto_core_ed25519_SCALARBYTES) throw new Error('z')\n  if (x?.byteLength !== binding.crypto_core_ed25519_SCALARBYTES) throw new Error('x')\n  if (y?.byteLength !== binding.crypto_core_ed25519_SCALARBYTES) throw new Error('y')\n\n  binding.crypto_core_ed25519_scalar_sub(z, x, y)\n}\n\n// crypto_shorthash\n\nexports.crypto_shorthash = function (out, input, k) {\n  if (out?.byteLength !== binding.crypto_shorthash_BYTES) throw new Error('out')\n  if (k?.byteLength !== binding.crypto_shorthash_KEYBYTES) throw new Error('k')\n\n  const res = binding.crypto_shorthash(out, input, k)\n\n  if (res !== 0) throw new Error('status: ' + res)\n}\n\n// crypto_kdf\n\nexports.crypto_kdf_keygen = function (key) {\n  if (key?.byteLength !== binding.crypto_kdf_KEYBYTES) throw new Error('key')\n\n  binding.crypto_kdf_keygen(key)\n}\n\nexports.crypto_kdf_derive_from_key = function (subkey, subkeyId, ctx, key) {\n  if (subkey?.byteLength < binding.crypto_kdf_BYTES_MIN) throw new Error('subkey')\n  if (subkey?.byteLength > binding.crypto_kdf_BYTES_MAX) throw new Error('subkey')\n  if (ctx?.byteLength !== binding.crypto_kdf_CONTEXTBYTES) throw new Error('ctx')\n  if (key?.byteLength !== binding.crypto_kdf_KEYBYTES) throw new Error('key')\n\n  const res = binding.crypto_kdf_derive_from_key(subkey, subkeyId, ctx, key)\n\n  if (res !== 0) throw new Error('status: ' + res)\n}\n\n// crypto_hash\n\nexports.crypto_hash = function (out, input) {\n  if (out?.byteLength !== binding.crypto_hash_BYTES) throw new Error('out')\n\n  const res = binding.crypto_hash(out, input)\n\n  if (res !== 0) throw new Error('status: ' + res)\n}\n\nexports.crypto_hash_sha256 = function (out, input) {\n  if (out?.byteLength !== binding.crypto_hash_sha256_BYTES) throw new Error('out')\n\n  const res = binding.crypto_hash_sha256(out, input)\n\n  if (res !== 0) throw new Error('status: ' + res)\n}\n\nexports.crypto_hash_sha256_init = function (state) {\n  if (state?.byteLength !== binding.crypto_hash_sha256_STATEBYTES) {\n    throw new Error(\"state must be 'crypto_hash_sha256_STATEBYTES' bytes\")\n  }\n\n  const res = binding.crypto_hash_sha256_init(state)\n\n  if (res !== 0) throw new Error('status: ' + res)\n}\n\nexports.crypto_hash_sha256_update = function (state, input) {\n  if (state?.byteLength !== binding.crypto_hash_sha256_STATEBYTES) {\n    throw new Error(\"state must be 'crypto_hash_sha256_STATEBYTES' bytes\")\n  }\n\n  const res = binding.crypto_hash_sha256_update(state, input)\n\n  if (res !== 0) throw new Error('status: ' + res)\n}\n\nexports.crypto_hash_sha256_final = function (state, out) {\n  if (state?.byteLength !== binding.crypto_hash_sha256_STATEBYTES) {\n    throw new Error(\"state must be 'crypto_hash_sha256_STATEBYTES' bytes\")\n  }\n  if (out?.byteLength !== binding.crypto_hash_sha256_BYTES) throw new Error('state')\n\n  const res = binding.crypto_hash_sha256_final(state, out)\n\n  if (res !== 0) throw new Error('status: ' + res)\n}\n\nexports.crypto_hash_sha512 = function (out, input) {\n  if (out?.byteLength !== binding.crypto_hash_sha512_BYTES) throw new Error('out')\n\n  const res = binding.crypto_hash_sha512(out, input)\n\n  if (res !== 0) throw new Error('status: ' + res)\n}\n\nexports.crypto_hash_sha512_init = function (state) {\n  if (state?.byteLength !== binding.crypto_hash_sha512_STATEBYTES) {\n    throw new Error(\"state must be 'crypto_hash_sha512_STATEBYTES' bytes\")\n  }\n\n  const res = binding.crypto_hash_sha512_init(state)\n\n  if (res !== 0) throw new Error('status: ' + res)\n}\n\nexports.crypto_hash_sha512_update = function (state, input) {\n  if (state?.byteLength !== binding.crypto_hash_sha512_STATEBYTES) {\n    throw new Error(\"state must be 'crypto_hash_sha512_STATEBYTES' bytes\")\n  }\n\n  const res = binding.crypto_hash_sha512_update(state, input)\n\n  if (res !== 0) throw new Error('status: ' + res)\n}\n\nexports.crypto_hash_sha512_final = function (state, out) {\n  if (state?.byteLength !== binding.crypto_hash_sha512_STATEBYTES) {\n    throw new Error(\"state must be 'crypto_hash_sha512_STATEBYTES' bytes\")\n  }\n  if (out?.byteLength !== binding.crypto_hash_sha512_BYTES) throw new Error('out')\n\n  const res = binding.crypto_hash_sha512_final(state, out)\n\n  if (res !== 0) throw new Error('status: ' + res)\n}\n\n// crypto_aead\n\nexports.crypto_aead_xchacha20poly1305_ietf_keygen = function (k) {\n  if (k?.byteLength !== binding.crypto_aead_xchacha20poly1305_ietf_KEYBYTES) throw new Error('k')\n\n  binding.crypto_aead_xchacha20poly1305_ietf_keygen(k)\n}\n\n/** @returns {number} */\nexports.crypto_aead_xchacha20poly1305_ietf_encrypt = function (c, m, ad, nsec = null, npub, k) {\n  ad ??= undefined\n  if (nsec !== null) throw new Error('nsec must always be set to null')\n  if (c?.byteLength !== m.byteLength + binding.crypto_aead_xchacha20poly1305_ietf_ABYTES) throw new Error('c must \"m.byteLength + crypto_aead_xchacha20poly1305_ietf_ABYTES\" bytes')\n  if (c?.byteLength > 0xffffffff) throw new Error('c.byteLength must be a 32bit integer')\n  if (npub?.byteLength !== binding.crypto_aead_xchacha20poly1305_ietf_NPUBBYTES) throw new Error('npub')\n  if (k?.byteLength !== binding.crypto_aead_xchacha20poly1305_ietf_KEYBYTES) throw new Error('k')\n\n  const res = binding.crypto_aead_xchacha20poly1305_ietf_encrypt(c, m, ad, npub, k)\n  if (res < 0) throw new Error('could not encrypt data')\n\n  return res\n}\n\n/** @returns {number} */\nexports.crypto_aead_xchacha20poly1305_ietf_decrypt = function (m, nsec = null, c, ad, npub, k) {\n  ad ??= undefined\n  if (nsec !== null) throw new Error('nsec must always be set to null')\n  if (m?.byteLength !== c.byteLength - binding.crypto_aead_xchacha20poly1305_ietf_ABYTES) throw new Error('m must \"c.byteLength - crypto_aead_xchacha20poly1305_ietf_ABYTES\" bytes')\n  if (m?.byteLength > 0xffffffff) throw new Error('m.byteLength must be a 32bit integer')\n  if (npub?.byteLength !== binding.crypto_aead_xchacha20poly1305_ietf_NPUBBYTES) throw new Error('npub')\n  if (k?.byteLength !== binding.crypto_aead_xchacha20poly1305_ietf_KEYBYTES) throw new Error('k')\n\n  const res = binding.crypto_aead_xchacha20poly1305_ietf_decrypt(m, c, ad, npub, k)\n  if (res < 0) throw new Error('could not verify data')\n\n  return res\n}\n\n/** @returns {number} */\nexports.crypto_aead_xchacha20poly1305_ietf_encrypt_detached = function (c, mac, m, ad, nsec = null, npub, k) {\n  ad ??= undefined\n  if (nsec !== null) throw new Error('nsec must always be set to null')\n  if (c?.byteLength !== m.byteLength) throw new Error('c must be \"m.byteLength\" bytes')\n  if (mac?.byteLength !== binding.crypto_aead_xchacha20poly1305_ietf_ABYTES) throw new Error('mac')\n  if (npub?.byteLength !== binding.crypto_aead_xchacha20poly1305_ietf_NPUBBYTES) throw new Error('npub')\n  if (k?.byteLength !== binding.crypto_aead_xchacha20poly1305_ietf_KEYBYTES) throw new Error('k')\n\n  const res = binding.crypto_aead_xchacha20poly1305_ietf_encrypt_detached(c, mac, m, ad, npub, k)\n  if (res < 0) throw new Error('could not encrypt data')\n\n  return res\n}\n\nexports.crypto_aead_xchacha20poly1305_ietf_decrypt_detached = function (m, nsec = null, c, mac, ad, npub, k) {\n  ad ??= undefined\n  if (nsec !== null) throw new Error('nsec must always be set to null')\n  if (m?.byteLength !== c.byteLength) throw new Error('m must be \"c.byteLength\" bytes')\n  if (mac?.byteLength !== binding.crypto_aead_xchacha20poly1305_ietf_ABYTES) throw new Error('mac')\n  if (npub?.byteLength !== binding.crypto_aead_xchacha20poly1305_ietf_NPUBBYTES) throw new Error('npub')\n  if (k?.byteLength !== binding.crypto_aead_xchacha20poly1305_ietf_KEYBYTES) throw new Error('k')\n\n  const res = binding.crypto_aead_xchacha20poly1305_ietf_decrypt_detached(m, c, mac, ad, npub, k)\n  if (res !== 0) throw new Error('could not verify data')\n}\n\nexports.crypto_aead_chacha20poly1305_ietf_keygen = function (k) {\n  if (k?.byteLength !== binding.crypto_aead_chacha20poly1305_ietf_KEYBYTES) throw new Error('k')\n\n  binding.crypto_aead_chacha20poly1305_ietf_keygen(k)\n}\n\n/** @returns {number} */\nexports.crypto_aead_chacha20poly1305_ietf_encrypt = function (c, m, ad, nsec = null, npub, k) {\n  ad ??= undefined\n  if (nsec !== null) throw new Error('nsec must always be set to null')\n  if (c?.byteLength !== m.byteLength + binding.crypto_aead_chacha20poly1305_ietf_ABYTES) throw new Error('c must \"m.byteLength + crypto_aead_chacha20poly1305_ietf_ABYTES\" bytes')\n  if (c?.byteLength > 0xffffffff) throw new Error('c.byteLength must be a 32bit integer')\n  if (npub?.byteLength !== binding.crypto_aead_chacha20poly1305_ietf_NPUBBYTES) throw new Error('npub')\n  if (k?.byteLength !== binding.crypto_aead_chacha20poly1305_ietf_KEYBYTES) throw new Error('k')\n\n  const res = binding.crypto_aead_chacha20poly1305_ietf_encrypt(c, m, ad, npub, k)\n  if (res < 0) throw new Error('could not encrypt data')\n\n  return res\n}\n\n/** @returns {number} */\nexports.crypto_aead_chacha20poly1305_ietf_decrypt = function (m, nsec = null, c, ad, npub, k) {\n  ad ??= undefined\n  if (nsec !== null) throw new Error('nsec must always be set to null')\n  if (m?.byteLength !== c.byteLength - binding.crypto_aead_chacha20poly1305_ietf_ABYTES) throw new Error('m must \"c.byteLength - crypto_aead_chacha20poly1305_ietf_ABYTES\" bytes')\n  if (m?.byteLength > 0xffffffff) throw new Error('m.byteLength must be a 32bit integer')\n  if (npub?.byteLength !== binding.crypto_aead_chacha20poly1305_ietf_NPUBBYTES) throw new Error('npub')\n  if (k?.byteLength !== binding.crypto_aead_chacha20poly1305_ietf_KEYBYTES) throw new Error('k')\n\n  const res = binding.crypto_aead_chacha20poly1305_ietf_decrypt(m, c, ad, npub, k)\n  if (res < 0) throw new Error('could not verify data')\n\n  return res\n}\n\n/** @returns {number} */\nexports.crypto_aead_chacha20poly1305_ietf_encrypt_detached = function (c, mac, m, ad, nsec = null, npub, k) {\n  ad ??= undefined\n  if (nsec !== null) throw new Error('nsec must always be set to null')\n  if (c?.byteLength !== m.byteLength) throw new Error('c must be \"m.byteLength\" bytes')\n  if (mac?.byteLength !== binding.crypto_aead_chacha20poly1305_ietf_ABYTES) throw new Error('mac')\n  if (npub?.byteLength !== binding.crypto_aead_chacha20poly1305_ietf_NPUBBYTES) throw new Error('npub')\n  if (k?.byteLength !== binding.crypto_aead_chacha20poly1305_ietf_KEYBYTES) throw new Error('k')\n\n  const res = binding.crypto_aead_chacha20poly1305_ietf_encrypt_detached(c, mac, m, ad, npub, k)\n  if (res < 0) throw new Error('could not encrypt data')\n\n  return res\n}\n\nexports.crypto_aead_chacha20poly1305_ietf_decrypt_detached = function (m, nsec = null, c, mac, ad, npub, k) {\n  ad ??= undefined\n  if (nsec !== null) throw new Error('nsec must always be set to null')\n  if (m?.byteLength !== c.byteLength) throw new Error('m must be \"c.byteLength\" bytes')\n  if (mac?.byteLength !== binding.crypto_aead_chacha20poly1305_ietf_ABYTES) throw new Error('mac')\n  if (npub?.byteLength !== binding.crypto_aead_chacha20poly1305_ietf_NPUBBYTES) throw new Error('npub')\n  if (k?.byteLength !== binding.crypto_aead_chacha20poly1305_ietf_KEYBYTES) throw new Error('k')\n\n  const res = binding.crypto_aead_chacha20poly1305_ietf_decrypt_detached(m, c, mac, ad, npub, k)\n  if (res !== 0) throw new Error('could not verify data')\n}\n\n// crypto_stream\n\nexports.crypto_stream_xor_wrap_init = function (state, n, k) {\n  if (state?.byteLength !== binding.sn_crypto_stream_xor_STATEBYTES) {\n    throw new Error(\"state must be 'sn_crypto_stream_xor_STATEBYTES' bytes\")\n  }\n  if (n?.byteLength !== binding.crypto_stream_NONCEBYTES) throw new Error('n')\n  if (k?.byteLength !== binding.crypto_stream_KEYBYTES) throw new Error('k')\n\n  binding.crypto_stream_xor_wrap_init(state, n, k)\n}\n\nexports.crypto_stream_xor_wrap_update = function (state, c, m) {\n  if (state?.byteLength !== binding.sn_crypto_stream_xor_STATEBYTES) {\n    throw new Error(\"state must be 'sn_crypto_stream_xor_STATEBYTES' bytes\")\n  }\n  if (c?.byteLength !== m.byteLength) throw new Error('c must be \"m.byteLength\" bytes')\n\n  binding.crypto_stream_xor_wrap_update(state, c, m)\n}\n\nexports.crypto_stream_xor_wrap_final = function (state) {\n  if (state?.byteLength !== binding.sn_crypto_stream_xor_STATEBYTES) {\n    throw new Error(\"state must be 'sn_crypto_stream_xor_STATEBYTES' bytes\")\n  }\n\n  binding.crypto_stream_xor_wrap_final(state)\n}\n\nexports.crypto_stream_chacha20_xor_wrap_init = function (state, n, k) {\n  if (state?.byteLength !== binding.crypto_stream_chacha20_xor_STATEBYTES) {\n    throw new Error(\"state must be 'crypto_stream_chacha20_xor_STATEBYTES' bytes\")\n  }\n  if (n?.byteLength !== binding.crypto_stream_chacha20_NONCEBYTES) throw new Error('n')\n  if (k?.byteLength !== binding.crypto_stream_chacha20_KEYBYTES) throw new Error('k')\n\n  binding.crypto_stream_chacha20_xor_wrap_init(state, n, k)\n}\n\nexports.crypto_stream_chacha20_xor_wrap_update = function (state, c, m) {\n  if (state?.byteLength !== binding.crypto_stream_chacha20_xor_STATEBYTES) {\n    throw new Error(\"state must be 'crypto_stream_chacha20_xor_STATEBYTES' bytes\")\n  }\n  if (c?.byteLength !== m.byteLength) throw new Error('c must be \"m.byteLength\" bytes')\n\n  binding.crypto_stream_chacha20_xor_wrap_update(state, c, m)\n}\n\nexports.crypto_stream_chacha20_xor_wrap_final = function (state) {\n  if (state?.byteLength !== binding.crypto_stream_chacha20_xor_STATEBYTES) {\n    throw new Error(\"state must be 'crypto_stream_chacha20_xor_STATEBYTES' bytes\")\n  }\n\n  binding.crypto_stream_chacha20_xor_wrap_final(state)\n}\n\nexports.crypto_stream_chacha20_ietf_xor_wrap_init = function (state, n, k) {\n  if (state?.byteLength !== binding.crypto_stream_chacha20_ietf_xor_STATEBYTES) {\n    throw new Error(\"state must be 'crypto_stream_chacha20_ietf_xor_STATEBYTES' bytes\")\n  }\n  if (n?.byteLength !== binding.crypto_stream_chacha20_ietf_NONCEBYTES) throw new Error('n')\n  if (k?.byteLength !== binding.crypto_stream_chacha20_ietf_KEYBYTES) throw new Error('k')\n\n  binding.crypto_stream_chacha20_ietf_xor_wrap_init(state, n, k)\n}\n\nexports.crypto_stream_chacha20_ietf_xor_wrap_update = function (state, c, m) {\n  if (state?.byteLength !== binding.crypto_stream_chacha20_ietf_xor_STATEBYTES) {\n    throw new Error(\"state must be 'crypto_stream_chacha20_ietf_xor_STATEBYTES' bytes\")\n  }\n  if (c?.byteLength !== m.byteLength) throw new Error('c must be \"m.byteLength\" bytes')\n\n  binding.crypto_stream_chacha20_ietf_xor_wrap_update(state, c, m)\n}\n\nexports.crypto_stream_chacha20_ietf_xor_wrap_final = function (state) {\n  if (state?.byteLength !== binding.crypto_stream_chacha20_ietf_xor_STATEBYTES) {\n    throw new Error(\"state must be 'crypto_stream_chacha20_ietf_xor_STATEBYTES' bytes\")\n  }\n\n  binding.crypto_stream_chacha20_ietf_xor_wrap_final(state)\n}\n\nexports.crypto_stream_xchacha20_xor_wrap_init = function (state, n, k) {\n  if (state?.byteLength !== binding.crypto_stream_xchacha20_xor_STATEBYTES) {\n    throw new Error(\"state must be 'crypto_stream_xchacha20_xor_STATEBYTES' bytes\")\n  }\n  if (n?.byteLength !== binding.crypto_stream_xchacha20_NONCEBYTES) throw new Error('n')\n  if (k?.byteLength !== binding.crypto_stream_xchacha20_KEYBYTES) throw new Error('k')\n\n  binding.crypto_stream_xchacha20_xor_wrap_init(state, n, k)\n}\n\nexports.crypto_stream_xchacha20_xor_wrap_update = function (state, c, m) {\n  if (state?.byteLength !== binding.crypto_stream_xchacha20_xor_STATEBYTES) {\n    throw new Error(\"state must be 'crypto_stream_xchacha20_xor_STATEBYTES' bytes\")\n  }\n  if (c?.byteLength !== m.byteLength) throw new Error('c must be \"m.byteLength\" bytes')\n\n  binding.crypto_stream_xchacha20_xor_wrap_update(state, c, m)\n}\n\nexports.crypto_stream_xchacha20_xor_wrap_final = function (state) {\n  if (state?.byteLength !== binding.crypto_stream_xchacha20_xor_STATEBYTES) {\n    throw new Error(\"state must be 'crypto_stream_xchacha20_xor_STATEBYTES' bytes\")\n  }\n\n  binding.crypto_stream_xchacha20_xor_wrap_final(state)\n}\n\nexports.crypto_stream_salsa20_xor_wrap_init = function (state, n, k) {\n  if (state?.byteLength !== binding.crypto_stream_salsa20_xor_STATEBYTES) {\n    throw new Error(\"state must be 'crypto_stream_salsa20_xor_STATEBYTES' bytes\")\n  }\n  if (n?.byteLength !== binding.crypto_stream_salsa20_NONCEBYTES) throw new Error('n')\n  if (k?.byteLength !== binding.crypto_stream_salsa20_KEYBYTES) throw new Error('k')\n\n  binding.crypto_stream_salsa20_xor_wrap_init(state, n, k)\n}\n\nexports.crypto_stream_salsa20_xor_wrap_update = function (state, c, m) {\n  if (state?.byteLength !== binding.crypto_stream_salsa20_xor_STATEBYTES) {\n    throw new Error(\"state must be 'crypto_stream_salsa20_xor_STATEBYTES' bytes\")\n  }\n  if (c?.byteLength !== m.byteLength) throw new Error('c must be \"m.byteLength\" bytes')\n\n  binding.crypto_stream_salsa20_xor_wrap_update(state, c, m)\n}\n\nexports.crypto_stream_salsa20_xor_wrap_final = function (state) {\n  if (state?.byteLength !== binding.crypto_stream_salsa20_xor_STATEBYTES) {\n    throw new Error(\"state must be 'crypto_stream_salsa20_xor_STATEBYTES' bytes\")\n  }\n\n  binding.crypto_stream_salsa20_xor_wrap_final(state)\n}\n\n// experimental\n\nexports.extension_tweak_ed25519_base = function (n, p, ns) {\n  if (n?.byteLength !== binding.extension_tweak_ed25519_SCALARBYTES) throw new Error('n')\n  if (p?.byteLength !== binding.extension_tweak_ed25519_BYTES) throw new Error('p')\n\n  binding.extension_tweak_ed25519_base(n, p, ns)\n}\n\nexports.extension_tweak_ed25519_sign_detached = function (sig, m, scalar, pk) {\n  if (sig?.byteLength !== binding.crypto_sign_BYTES) throw new Error('sig')\n  if (scalar?.byteLength !== binding.extension_tweak_ed25519_SCALARBYTES) throw new Error('scalar')\n  if (pk && pk.byteLength !== binding.crypto_sign_PUBLICKEYBYTES) throw new Error('pk')\n\n  const res = binding.extension_tweak_ed25519_sign_detached(sig, m, scalar, pk)\n  if (res !== 0) throw new Error('failed to compute signature')\n}\n\nexports.extension_tweak_ed25519_sk_to_scalar = function (n, sk) {\n  if (n?.byteLength !== binding.extension_tweak_ed25519_SCALARBYTES) throw new Error('n')\n  if (sk?.byteLength !== binding.crypto_sign_SECRETKEYBYTES) throw new Error('sk')\n\n  binding.extension_tweak_ed25519_sk_to_scalar(n, sk)\n}\n\nexports.extension_tweak_ed25519_scalar = function (scalarOut, scalar, ns) {\n  if (scalarOut?.byteLength !== binding.extension_tweak_ed25519_SCALARBYTES) throw new Error('scalar_out')\n  if (scalar?.byteLength !== binding.extension_tweak_ed25519_SCALARBYTES) throw new Error('scalar')\n\n  binding.extension_tweak_ed25519_scalar(scalarOut, scalar, ns)\n}\n\nexports.extension_tweak_ed25519_pk = function (tpk, pk, ns) {\n  if (tpk?.byteLength !== binding.crypto_sign_PUBLICKEYBYTES) throw new Error('tpk')\n  if (pk?.byteLength !== binding.crypto_sign_PUBLICKEYBYTES) throw new Error('pk')\n\n  const res = binding.extension_tweak_ed25519_pk(tpk, pk, ns)\n  if (res !== 0) throw new Error('failed to tweak public key')\n}\n\nexports.extension_tweak_ed25519_keypair = function (pk, scalarOut, scalarIn, ns) {\n  if (pk?.byteLength !== binding.extension_tweak_ed25519_BYTES) throw new Error('pk')\n  if (scalarOut?.byteLength !== binding.extension_tweak_ed25519_SCALARBYTES) throw new Error('scalar_out')\n  if (scalarIn?.byteLength !== binding.extension_tweak_ed25519_SCALARBYTES) throw new Error('scalar_in')\n\n  binding.extension_tweak_ed25519_keypair(pk, scalarOut, scalarIn, ns)\n}\n\nexports.extension_tweak_ed25519_scalar_add = function (scalarOut, scalar, n) {\n  if (scalarOut?.byteLength !== binding.extension_tweak_ed25519_SCALARBYTES) throw new Error('scalar_out')\n  if (scalar?.byteLength !== binding.extension_tweak_ed25519_SCALARBYTES) throw new Error('scalar')\n  if (n?.byteLength !== binding.extension_tweak_ed25519_SCALARBYTES) throw new Error('n')\n\n  binding.extension_tweak_ed25519_scalar_add(scalarOut, scalar, n)\n}\n\nexports.extension_tweak_ed25519_pk_add = function (tpk, pk, p) {\n  if (tpk?.byteLength !== binding.crypto_sign_PUBLICKEYBYTES) throw new Error('tpk')\n  if (pk?.byteLength !== binding.crypto_sign_PUBLICKEYBYTES) throw new Error('pk')\n  if (p?.byteLength !== binding.crypto_sign_PUBLICKEYBYTES) throw new Error('p')\n\n  const res = binding.extension_tweak_ed25519_pk_add(tpk, pk, p)\n  if (res !== 0) throw new Error('failed to add tweak to public key')\n}\n\nexports.extension_tweak_ed25519_keypair_add = function (pk, scalarOut, scalarIn, tweak) {\n  if (pk?.byteLength !== binding.extension_tweak_ed25519_BYTES) throw new Error('pk')\n  if (scalarOut?.byteLength !== binding.extension_tweak_ed25519_SCALARBYTES) throw new Error('scalar_out')\n  if (scalarIn?.byteLength !== binding.extension_tweak_ed25519_SCALARBYTES) throw new Error('scalar_in')\n  if (tweak?.byteLength !== binding.extension_tweak_ed25519_SCALARBYTES) throw new Error('tweak')\n\n  const res = binding.extension_tweak_ed25519_keypair_add(pk, scalarOut, scalarIn, tweak)\n  if (res !== 0) throw new Error('failed to add tweak to keypair')\n}\n\n/** @returns {Promise<void>|undefined} */\nexports.extension_pbkdf2_sha512_async = function (out, passwd, salt, iter, outlen, callback = undefined) {\n  if (iter < binding.extension_pbkdf2_sha512_ITERATIONS_MIN) throw new Error('iterations')\n  if (outlen > binding.extension_pbkdf2_sha512_BYTES_MAX) throw new Error('outlen')\n  if (out?.byteLength < outlen) throw new Error('out')\n  if (!out?.byteLength) throw new Error('out')\n  if (!passwd?.byteLength) throw new Error('passwd')\n  if (!salt?.byteLength) throw new Error('salt')\n\n  const [done, promise] = checkStatus(callback)\n\n  binding.extension_pbkdf2_sha512_async(\n    out.buffer,\n    out.byteOffset,\n    out.byteLength,\n\n    passwd.buffer,\n    passwd.byteOffset,\n    passwd.byteLength,\n\n    salt.buffer,\n    salt.byteOffset,\n    salt.byteLength,\n\n    iter,\n    outlen,\n\n    done\n  )\n\n  return promise\n}\n\nexports.extension_pbkdf2_sha512 = function (out, passwd, salt, iter, outlen) {\n  if (iter < binding.extension_pbkdf2_sha512_ITERATIONS_MIN) throw new Error('iterations')\n  if (outlen > binding.extension_pbkdf2_sha512_BYTES_MAX) throw new Error('outlen')\n  if (out?.byteLength < outlen) throw new Error('out')\n\n  const res = binding.extension_pbkdf2_sha512(out, passwd, salt, iter, outlen)\n\n  if (res !== 0) throw new Error('failed to add tweak to public key')\n}\n\n// mimic 4.x public api\nfunction checkStatus (callback, booleanResult = false) {\n  let done, promise\n\n  if (typeof callback === 'function') {\n    done = function (status) {\n      if (booleanResult) callback(null, status === 0)\n      else if (status === 0) callback(null)\n      else callback(new Error('status: ' + status))\n    }\n  } else {\n    promise = new Promise(function (resolve, reject) {\n      done = function (status) {\n        if (booleanResult) resolve(status === 0)\n        else if (status === 0) resolve()\n        else reject(new Error('status: ' + status))\n      }\n    })\n  }\n\n  return [done, promise]\n}\n{\n  \"name\": \"sodium-native\",\n  \"version\": \"5.0.8\",\n  \"description\": \"Low level bindings for libsodium\",\n  \"main\": \"index.js\",\n  \"files\": [\n    \"index.js\",\n    \"binding.cc\",\n    \"binding.js\",\n    \"extensions\",\n    \"prebuilds\",\n    \"CMakeLists.txt\"\n  ],\n  \"addon\": true,\n  \"dependencies\": {\n    \"require-addon\": \"^1.1.0\",\n    \"which-runtime\": \"^1.2.1\"\n  },\n  \"devDependencies\": {\n    \"bare-compat-napi\": \"^1.3.5\",\n    \"brittle\": \"^3.16.2\",\n    \"cmake-bare\": \"^1.6.1\",\n    \"cmake-fetch\": \"^1.4.3\",\n    \"cmake-napi\": \"^1.2.1\",\n    \"standard\": \"^17.1.2\"\n  },\n  \"scripts\": {\n    \"test\": \"standard && npm run test:node && npm run test:bare\",\n    \"test:node\": \"node test/all.js\",\n    \"test:bare\": \"bare test/all.js\"\n  },\n  \"standard\": {\n    \"ignore\": [\n      \"/test/fixtures/*.js\"\n    ]\n  },\n  \"engines\": {\n    \"bare\": \">=1.16.0\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/holepunchto/sodium-native.git\"\n  },\n  \"contributors\": [\n    \"Emil Bay <github@tixz.dk> (http://bayes.dk)\",\n    \"Mathias Buus <mathiasbuus@gmail.com> (https://mafinto.sh)\",\n    \"Christophe Diederichs <chm-diederichs@hyperdivision.dk>\"\n  ],\n  \"license\": \"MIT\",\n  \"bugs\": {\n    \"url\": \"https://github.com/holepunchto/sodium-native/issues\"\n  },\n  \"homepage\": \"https://github.com/holepunchto/sodium-native\"\n}\nmodule.exports = require('sodium-native')\n{\n  \"name\": \"sodium-universal\",\n  \"version\": \"5.0.1\",\n  \"description\": \"Universal wrapper for sodium-javascript and sodium-native working in Node.js and the Browser\",\n  \"main\": \"index.js\",\n  \"dependencies\": {\n    \"sodium-native\": \"^5.0.1\"\n  },\n  \"peerDependencies\": {\n    \"sodium-javascript\": \"~0.8.0\"\n  },\n  \"peerDependenciesMeta\": {\n    \"sodium-javascript\": {\n      \"optional\": true\n    }\n  },\n  \"scripts\": {\n    \"prepublish\": \"./build-scripts/generate.js\"\n  },\n  \"browser\": {\n    \"sodium-native\": \"sodium-javascript\"\n  },\n  \"browserify\": {\n    \"transform\": [\n      \"./build-scripts/transform.js\"\n    ]\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/holepunchto/sodium-universal.git\"\n  },\n  \"keywords\": [\n    \"libsodium\",\n    \"sodium\",\n    \"sodium-native\",\n    \"sodium-javascript\",\n    \"browserify\"\n  ],\n  \"contributors\": [\n    \"Emil Bay <github@tixz.dk> (http://bayes.dk)\",\n    \"Mathias Buus <mathiasbuus@gmail.com> (https://mafinto.sh)\",\n    \"Christophe Diederichs <chm-diederichs@hyperdivision.dk>\"\n  ],\n  \"license\": \"MIT\",\n  \"bugs\": {\n    \"url\": \"https://github.com/holepunchto/sodium-universal/issues\"\n  },\n  \"homepage\": \"https://github.com/holepunchto/sodium-universal#readme\"\n}\nconst { EventEmitter } = require('events')\nconst STREAM_DESTROYED = new Error('Stream was destroyed')\nconst PREMATURE_CLOSE = new Error('Premature close')\n\nconst FIFO = require('fast-fifo')\nconst TextDecoder = require('text-decoder')\n\n// if we do a future major, expect queue microtask to be there always, for now a bit defensive\nconst qmt = typeof queueMicrotask === 'undefined' ? fn => global.process.nextTick(fn) : queueMicrotask\n\n/* eslint-disable no-multi-spaces */\n\n// 29 bits used total (4 from shared, 14 from read, and 11 from write)\nconst MAX = ((1 << 29) - 1)\n\n// Shared state\nconst OPENING       = 0b0001\nconst PREDESTROYING = 0b0010\nconst DESTROYING    = 0b0100\nconst DESTROYED     = 0b1000\n\nconst NOT_OPENING = MAX ^ OPENING\nconst NOT_PREDESTROYING = MAX ^ PREDESTROYING\n\n// Read state (4 bit offset from shared state)\nconst READ_ACTIVE           = 0b00000000000001 << 4\nconst READ_UPDATING         = 0b00000000000010 << 4\nconst READ_PRIMARY          = 0b00000000000100 << 4\nconst READ_QUEUED           = 0b00000000001000 << 4\nconst READ_RESUMED          = 0b00000000010000 << 4\nconst READ_PIPE_DRAINED     = 0b00000000100000 << 4\nconst READ_ENDING           = 0b00000001000000 << 4\nconst READ_EMIT_DATA        = 0b00000010000000 << 4\nconst READ_EMIT_READABLE    = 0b00000100000000 << 4\nconst READ_EMITTED_READABLE = 0b00001000000000 << 4\nconst READ_DONE             = 0b00010000000000 << 4\nconst READ_NEXT_TICK        = 0b00100000000000 << 4\nconst READ_NEEDS_PUSH       = 0b01000000000000 << 4\nconst READ_READ_AHEAD       = 0b10000000000000 << 4\n\n// Combined read state\nconst READ_FLOWING = READ_RESUMED | READ_PIPE_DRAINED\nconst READ_ACTIVE_AND_NEEDS_PUSH = READ_ACTIVE | READ_NEEDS_PUSH\nconst READ_PRIMARY_AND_ACTIVE = READ_PRIMARY | READ_ACTIVE\nconst READ_EMIT_READABLE_AND_QUEUED = READ_EMIT_READABLE | READ_QUEUED\nconst READ_RESUMED_READ_AHEAD = READ_RESUMED | READ_READ_AHEAD\n\nconst READ_NOT_ACTIVE             = MAX ^ READ_ACTIVE\nconst READ_NON_PRIMARY            = MAX ^ READ_PRIMARY\nconst READ_NON_PRIMARY_AND_PUSHED = MAX ^ (READ_PRIMARY | READ_NEEDS_PUSH)\nconst READ_PUSHED                 = MAX ^ READ_NEEDS_PUSH\nconst READ_PAUSED                 = MAX ^ READ_RESUMED\nconst READ_NOT_QUEUED             = MAX ^ (READ_QUEUED | READ_EMITTED_READABLE)\nconst READ_NOT_ENDING             = MAX ^ READ_ENDING\nconst READ_PIPE_NOT_DRAINED       = MAX ^ READ_FLOWING\nconst READ_NOT_NEXT_TICK          = MAX ^ READ_NEXT_TICK\nconst READ_NOT_UPDATING           = MAX ^ READ_UPDATING\nconst READ_NO_READ_AHEAD          = MAX ^ READ_READ_AHEAD\nconst READ_PAUSED_NO_READ_AHEAD   = MAX ^ READ_RESUMED_READ_AHEAD\n\n// Write state (18 bit offset, 4 bit offset from shared state and 14 from read state)\nconst WRITE_ACTIVE     = 0b00000000001 << 18\nconst WRITE_UPDATING   = 0b00000000010 << 18\nconst WRITE_PRIMARY    = 0b00000000100 << 18\nconst WRITE_QUEUED     = 0b00000001000 << 18\nconst WRITE_UNDRAINED  = 0b00000010000 << 18\nconst WRITE_DONE       = 0b00000100000 << 18\nconst WRITE_EMIT_DRAIN = 0b00001000000 << 18\nconst WRITE_NEXT_TICK  = 0b00010000000 << 18\nconst WRITE_WRITING    = 0b00100000000 << 18\nconst WRITE_FINISHING  = 0b01000000000 << 18\nconst WRITE_CORKED     = 0b10000000000 << 18\n\nconst WRITE_NOT_ACTIVE    = MAX ^ (WRITE_ACTIVE | WRITE_WRITING)\nconst WRITE_NON_PRIMARY   = MAX ^ WRITE_PRIMARY\nconst WRITE_NOT_FINISHING = MAX ^ (WRITE_ACTIVE | WRITE_FINISHING)\nconst WRITE_DRAINED       = MAX ^ WRITE_UNDRAINED\nconst WRITE_NOT_QUEUED    = MAX ^ WRITE_QUEUED\nconst WRITE_NOT_NEXT_TICK = MAX ^ WRITE_NEXT_TICK\nconst WRITE_NOT_UPDATING  = MAX ^ WRITE_UPDATING\nconst WRITE_NOT_CORKED    = MAX ^ WRITE_CORKED\n\n// Combined shared state\nconst ACTIVE = READ_ACTIVE | WRITE_ACTIVE\nconst NOT_ACTIVE = MAX ^ ACTIVE\nconst DONE = READ_DONE | WRITE_DONE\nconst DESTROY_STATUS = DESTROYING | DESTROYED | PREDESTROYING\nconst OPEN_STATUS = DESTROY_STATUS | OPENING\nconst AUTO_DESTROY = DESTROY_STATUS | DONE\nconst NON_PRIMARY = WRITE_NON_PRIMARY & READ_NON_PRIMARY\nconst ACTIVE_OR_TICKING = WRITE_NEXT_TICK | READ_NEXT_TICK\nconst TICKING = ACTIVE_OR_TICKING & NOT_ACTIVE\nconst IS_OPENING = OPEN_STATUS | TICKING\n\n// Combined shared state and read state\nconst READ_PRIMARY_STATUS = OPEN_STATUS | READ_ENDING | READ_DONE\nconst READ_STATUS = OPEN_STATUS | READ_DONE | READ_QUEUED\nconst READ_ENDING_STATUS = OPEN_STATUS | READ_ENDING | READ_QUEUED\nconst READ_READABLE_STATUS = OPEN_STATUS | READ_EMIT_READABLE | READ_QUEUED | READ_EMITTED_READABLE\nconst SHOULD_NOT_READ = OPEN_STATUS | READ_ACTIVE | READ_ENDING | READ_DONE | READ_NEEDS_PUSH | READ_READ_AHEAD\nconst READ_BACKPRESSURE_STATUS = DESTROY_STATUS | READ_ENDING | READ_DONE\nconst READ_UPDATE_SYNC_STATUS = READ_UPDATING | OPEN_STATUS | READ_NEXT_TICK | READ_PRIMARY\nconst READ_NEXT_TICK_OR_OPENING = READ_NEXT_TICK | OPENING\n\n// Combined write state\nconst WRITE_PRIMARY_STATUS = OPEN_STATUS | WRITE_FINISHING | WRITE_DONE\nconst WRITE_QUEUED_AND_UNDRAINED = WRITE_QUEUED | WRITE_UNDRAINED\nconst WRITE_QUEUED_AND_ACTIVE = WRITE_QUEUED | WRITE_ACTIVE\nconst WRITE_DRAIN_STATUS = WRITE_QUEUED | WRITE_UNDRAINED | OPEN_STATUS | WRITE_ACTIVE\nconst WRITE_STATUS = OPEN_STATUS | WRITE_ACTIVE | WRITE_QUEUED | WRITE_CORKED\nconst WRITE_PRIMARY_AND_ACTIVE = WRITE_PRIMARY | WRITE_ACTIVE\nconst WRITE_ACTIVE_AND_WRITING = WRITE_ACTIVE | WRITE_WRITING\nconst WRITE_FINISHING_STATUS = OPEN_STATUS | WRITE_FINISHING | WRITE_QUEUED_AND_ACTIVE | WRITE_DONE\nconst WRITE_BACKPRESSURE_STATUS = WRITE_UNDRAINED | DESTROY_STATUS | WRITE_FINISHING | WRITE_DONE\nconst WRITE_UPDATE_SYNC_STATUS = WRITE_UPDATING | OPEN_STATUS | WRITE_NEXT_TICK | WRITE_PRIMARY\nconst WRITE_DROP_DATA = WRITE_FINISHING | WRITE_DONE | DESTROY_STATUS\n\nconst asyncIterator = Symbol.asyncIterator || Symbol('asyncIterator')\n\nclass WritableState {\n  constructor (stream, { highWaterMark = 16384, map = null, mapWritable, byteLength, byteLengthWritable } = {}) {\n    this.stream = stream\n    this.queue = new FIFO()\n    this.highWaterMark = highWaterMark\n    this.buffered = 0\n    this.error = null\n    this.pipeline = null\n    this.drains = null // if we add more seldomly used helpers we might them into a subobject so its a single ptr\n    this.byteLength = byteLengthWritable || byteLength || defaultByteLength\n    this.map = mapWritable || map\n    this.afterWrite = afterWrite.bind(this)\n    this.afterUpdateNextTick = updateWriteNT.bind(this)\n  }\n\n  get ended () {\n    return (this.stream._duplexState & WRITE_DONE) !== 0\n  }\n\n  push (data) {\n    if ((this.stream._duplexState & WRITE_DROP_DATA) !== 0) return false\n    if (this.map !== null) data = this.map(data)\n\n    this.buffered += this.byteLength(data)\n    this.queue.push(data)\n\n    if (this.buffered < this.highWaterMark) {\n      this.stream._duplexState |= WRITE_QUEUED\n      return true\n    }\n\n    this.stream._duplexState |= WRITE_QUEUED_AND_UNDRAINED\n    return false\n  }\n\n  shift () {\n    const data = this.queue.shift()\n\n    this.buffered -= this.byteLength(data)\n    if (this.buffered === 0) this.stream._duplexState &= WRITE_NOT_QUEUED\n\n    return data\n  }\n\n  end (data) {\n    if (typeof data === 'function') this.stream.once('finish', data)\n    else if (data !== undefined && data !== null) this.push(data)\n    this.stream._duplexState = (this.stream._duplexState | WRITE_FINISHING) & WRITE_NON_PRIMARY\n  }\n\n  autoBatch (data, cb) {\n    const buffer = []\n    const stream = this.stream\n\n    buffer.push(data)\n    while ((stream._duplexState & WRITE_STATUS) === WRITE_QUEUED_AND_ACTIVE) {\n      buffer.push(stream._writableState.shift())\n    }\n\n    if ((stream._duplexState & OPEN_STATUS) !== 0) return cb(null)\n    stream._writev(buffer, cb)\n  }\n\n  update () {\n    const stream = this.stream\n\n    stream._duplexState |= WRITE_UPDATING\n\n    do {\n      while ((stream._duplexState & WRITE_STATUS) === WRITE_QUEUED) {\n        const data = this.shift()\n        stream._duplexState |= WRITE_ACTIVE_AND_WRITING\n        stream._write(data, this.afterWrite)\n      }\n\n      if ((stream._duplexState & WRITE_PRIMARY_AND_ACTIVE) === 0) this.updateNonPrimary()\n    } while (this.continueUpdate() === true)\n\n    stream._duplexState &= WRITE_NOT_UPDATING\n  }\n\n  updateNonPrimary () {\n    const stream = this.stream\n\n    if ((stream._duplexState & WRITE_FINISHING_STATUS) === WRITE_FINISHING) {\n      stream._duplexState = stream._duplexState | WRITE_ACTIVE\n      stream._final(afterFinal.bind(this))\n      return\n    }\n\n    if ((stream._duplexState & DESTROY_STATUS) === DESTROYING) {\n      if ((stream._duplexState & ACTIVE_OR_TICKING) === 0) {\n        stream._duplexState |= ACTIVE\n        stream._destroy(afterDestroy.bind(this))\n      }\n      return\n    }\n\n    if ((stream._duplexState & IS_OPENING) === OPENING) {\n      stream._duplexState = (stream._duplexState | ACTIVE) & NOT_OPENING\n      stream._open(afterOpen.bind(this))\n    }\n  }\n\n  continueUpdate () {\n    if ((this.stream._duplexState & WRITE_NEXT_TICK) === 0) return false\n    this.stream._duplexState &= WRITE_NOT_NEXT_TICK\n    return true\n  }\n\n  updateCallback () {\n    if ((this.stream._duplexState & WRITE_UPDATE_SYNC_STATUS) === WRITE_PRIMARY) this.update()\n    else this.updateNextTick()\n  }\n\n  updateNextTick () {\n    if ((this.stream._duplexState & WRITE_NEXT_TICK) !== 0) return\n    this.stream._duplexState |= WRITE_NEXT_TICK\n    if ((this.stream._duplexState & WRITE_UPDATING) === 0) qmt(this.afterUpdateNextTick)\n  }\n}\n\nclass ReadableState {\n  constructor (stream, { highWaterMark = 16384, map = null, mapReadable, byteLength, byteLengthReadable } = {}) {\n    this.stream = stream\n    this.queue = new FIFO()\n    this.highWaterMark = highWaterMark === 0 ? 1 : highWaterMark\n    this.buffered = 0\n    this.readAhead = highWaterMark > 0\n    this.error = null\n    this.pipeline = null\n    this.byteLength = byteLengthReadable || byteLength || defaultByteLength\n    this.map = mapReadable || map\n    this.pipeTo = null\n    this.afterRead = afterRead.bind(this)\n    this.afterUpdateNextTick = updateReadNT.bind(this)\n  }\n\n  get ended () {\n    return (this.stream._duplexState & READ_DONE) !== 0\n  }\n\n  pipe (pipeTo, cb) {\n    if (this.pipeTo !== null) throw new Error('Can only pipe to one destination')\n    if (typeof cb !== 'function') cb = null\n\n    this.stream._duplexState |= READ_PIPE_DRAINED\n    this.pipeTo = pipeTo\n    this.pipeline = new Pipeline(this.stream, pipeTo, cb)\n\n    if (cb) this.stream.on('error', noop) // We already error handle this so supress crashes\n\n    if (isStreamx(pipeTo)) {\n      pipeTo._writableState.pipeline = this.pipeline\n      if (cb) pipeTo.on('error', noop) // We already error handle this so supress crashes\n      pipeTo.on('finish', this.pipeline.finished.bind(this.pipeline)) // TODO: just call finished from pipeTo itself\n    } else {\n      const onerror = this.pipeline.done.bind(this.pipeline, pipeTo)\n      const onclose = this.pipeline.done.bind(this.pipeline, pipeTo, null) // onclose has a weird bool arg\n      pipeTo.on('error', onerror)\n      pipeTo.on('close', onclose)\n      pipeTo.on('finish', this.pipeline.finished.bind(this.pipeline))\n    }\n\n    pipeTo.on('drain', afterDrain.bind(this))\n    this.stream.emit('piping', pipeTo)\n    pipeTo.emit('pipe', this.stream)\n  }\n\n  push (data) {\n    const stream = this.stream\n\n    if (data === null) {\n      this.highWaterMark = 0\n      stream._duplexState = (stream._duplexState | READ_ENDING) & READ_NON_PRIMARY_AND_PUSHED\n      return false\n    }\n\n    if (this.map !== null) {\n      data = this.map(data)\n      if (data === null) {\n        stream._duplexState &= READ_PUSHED\n        return this.buffered < this.highWaterMark\n      }\n    }\n\n    this.buffered += this.byteLength(data)\n    this.queue.push(data)\n\n    stream._duplexState = (stream._duplexState | READ_QUEUED) & READ_PUSHED\n\n    return this.buffered < this.highWaterMark\n  }\n\n  shift () {\n    const data = this.queue.shift()\n\n    this.buffered -= this.byteLength(data)\n    if (this.buffered === 0) this.stream._duplexState &= READ_NOT_QUEUED\n    return data\n  }\n\n  unshift (data) {\n    const pending = [this.map !== null ? this.map(data) : data]\n    while (this.buffered > 0) pending.push(this.shift())\n\n    for (let i = 0; i < pending.length - 1; i++) {\n      const data = pending[i]\n      this.buffered += this.byteLength(data)\n      this.queue.push(data)\n    }\n\n    this.push(pending[pending.length - 1])\n  }\n\n  read () {\n    const stream = this.stream\n\n    if ((stream._duplexState & READ_STATUS) === READ_QUEUED) {\n      const data = this.shift()\n      if (this.pipeTo !== null && this.pipeTo.write(data) === false) stream._duplexState &= READ_PIPE_NOT_DRAINED\n      if ((stream._duplexState & READ_EMIT_DATA) !== 0) stream.emit('data', data)\n      return data\n    }\n\n    if (this.readAhead === false) {\n      stream._duplexState |= READ_READ_AHEAD\n      this.updateNextTick()\n    }\n\n    return null\n  }\n\n  drain () {\n    const stream = this.stream\n\n    while ((stream._duplexState & READ_STATUS) === READ_QUEUED && (stream._duplexState & READ_FLOWING) !== 0) {\n      const data = this.shift()\n      if (this.pipeTo !== null && this.pipeTo.write(data) === false) stream._duplexState &= READ_PIPE_NOT_DRAINED\n      if ((stream._duplexState & READ_EMIT_DATA) !== 0) stream.emit('data', data)\n    }\n  }\n\n  update () {\n    const stream = this.stream\n\n    stream._duplexState |= READ_UPDATING\n\n    do {\n      this.drain()\n\n      while (this.buffered < this.highWaterMark && (stream._duplexState & SHOULD_NOT_READ) === READ_READ_AHEAD) {\n        stream._duplexState |= READ_ACTIVE_AND_NEEDS_PUSH\n        stream._read(this.afterRead)\n        this.drain()\n      }\n\n      if ((stream._duplexState & READ_READABLE_STATUS) === READ_EMIT_READABLE_AND_QUEUED) {\n        stream._duplexState |= READ_EMITTED_READABLE\n        stream.emit('readable')\n      }\n\n      if ((stream._duplexState & READ_PRIMARY_AND_ACTIVE) === 0) this.updateNonPrimary()\n    } while (this.continueUpdate() === true)\n\n    stream._duplexState &= READ_NOT_UPDATING\n  }\n\n  updateNonPrimary () {\n    const stream = this.stream\n\n    if ((stream._duplexState & READ_ENDING_STATUS) === READ_ENDING) {\n      stream._duplexState = (stream._duplexState | READ_DONE) & READ_NOT_ENDING\n      stream.emit('end')\n      if ((stream._duplexState & AUTO_DESTROY) === DONE) stream._duplexState |= DESTROYING\n      if (this.pipeTo !== null) this.pipeTo.end()\n    }\n\n    if ((stream._duplexState & DESTROY_STATUS) === DESTROYING) {\n      if ((stream._duplexState & ACTIVE_OR_TICKING) === 0) {\n        stream._duplexState |= ACTIVE\n        stream._destroy(afterDestroy.bind(this))\n      }\n      return\n    }\n\n    if ((stream._duplexState & IS_OPENING) === OPENING) {\n      stream._duplexState = (stream._duplexState | ACTIVE) & NOT_OPENING\n      stream._open(afterOpen.bind(this))\n    }\n  }\n\n  continueUpdate () {\n    if ((this.stream._duplexState & READ_NEXT_TICK) === 0) return false\n    this.stream._duplexState &= READ_NOT_NEXT_TICK\n    return true\n  }\n\n  updateCallback () {\n    if ((this.stream._duplexState & READ_UPDATE_SYNC_STATUS) === READ_PRIMARY) this.update()\n    else this.updateNextTick()\n  }\n\n  updateNextTickIfOpen () {\n    if ((this.stream._duplexState & READ_NEXT_TICK_OR_OPENING) !== 0) return\n    this.stream._duplexState |= READ_NEXT_TICK\n    if ((this.stream._duplexState & READ_UPDATING) === 0) qmt(this.afterUpdateNextTick)\n  }\n\n  updateNextTick () {\n    if ((this.stream._duplexState & READ_NEXT_TICK) !== 0) return\n    this.stream._duplexState |= READ_NEXT_TICK\n    if ((this.stream._duplexState & READ_UPDATING) === 0) qmt(this.afterUpdateNextTick)\n  }\n}\n\nclass TransformState {\n  constructor (stream) {\n    this.data = null\n    this.afterTransform = afterTransform.bind(stream)\n    this.afterFinal = null\n  }\n}\n\nclass Pipeline {\n  constructor (src, dst, cb) {\n    this.from = src\n    this.to = dst\n    this.afterPipe = cb\n    this.error = null\n    this.pipeToFinished = false\n  }\n\n  finished () {\n    this.pipeToFinished = true\n  }\n\n  done (stream, err) {\n    if (err) this.error = err\n\n    if (stream === this.to) {\n      this.to = null\n\n      if (this.from !== null) {\n        if ((this.from._duplexState & READ_DONE) === 0 || !this.pipeToFinished) {\n          this.from.destroy(this.error || new Error('Writable stream closed prematurely'))\n        }\n        return\n      }\n    }\n\n    if (stream === this.from) {\n      this.from = null\n\n      if (this.to !== null) {\n        if ((stream._duplexState & READ_DONE) === 0) {\n          this.to.destroy(this.error || new Error('Readable stream closed before ending'))\n        }\n        return\n      }\n    }\n\n    if (this.afterPipe !== null) this.afterPipe(this.error)\n    this.to = this.from = this.afterPipe = null\n  }\n}\n\nfunction afterDrain () {\n  this.stream._duplexState |= READ_PIPE_DRAINED\n  this.updateCallback()\n}\n\nfunction afterFinal (err) {\n  const stream = this.stream\n  if (err) stream.destroy(err)\n  if ((stream._duplexState & DESTROY_STATUS) === 0) {\n    stream._duplexState |= WRITE_DONE\n    stream.emit('finish')\n  }\n  if ((stream._duplexState & AUTO_DESTROY) === DONE) {\n    stream._duplexState |= DESTROYING\n  }\n\n  stream._duplexState &= WRITE_NOT_FINISHING\n\n  // no need to wait the extra tick here, so we short circuit that\n  if ((stream._duplexState & WRITE_UPDATING) === 0) this.update()\n  else this.updateNextTick()\n}\n\nfunction afterDestroy (err) {\n  const stream = this.stream\n\n  if (!err && this.error !== STREAM_DESTROYED) err = this.error\n  if (err) stream.emit('error', err)\n  stream._duplexState |= DESTROYED\n  stream.emit('close')\n\n  const rs = stream._readableState\n  const ws = stream._writableState\n\n  if (rs !== null && rs.pipeline !== null) rs.pipeline.done(stream, err)\n\n  if (ws !== null) {\n    while (ws.drains !== null && ws.drains.length > 0) ws.drains.shift().resolve(false)\n    if (ws.pipeline !== null) ws.pipeline.done(stream, err)\n  }\n}\n\nfunction afterWrite (err) {\n  const stream = this.stream\n\n  if (err) stream.destroy(err)\n  stream._duplexState &= WRITE_NOT_ACTIVE\n\n  if (this.drains !== null) tickDrains(this.drains)\n\n  if ((stream._duplexState & WRITE_DRAIN_STATUS) === WRITE_UNDRAINED) {\n    stream._duplexState &= WRITE_DRAINED\n    if ((stream._duplexState & WRITE_EMIT_DRAIN) === WRITE_EMIT_DRAIN) {\n      stream.emit('drain')\n    }\n  }\n\n  this.updateCallback()\n}\n\nfunction afterRead (err) {\n  if (err) this.stream.destroy(err)\n  this.stream._duplexState &= READ_NOT_ACTIVE\n  if (this.readAhead === false && (this.stream._duplexState & READ_RESUMED) === 0) this.stream._duplexState &= READ_NO_READ_AHEAD\n  this.updateCallback()\n}\n\nfunction updateReadNT () {\n  if ((this.stream._duplexState & READ_UPDATING) === 0) {\n    this.stream._duplexState &= READ_NOT_NEXT_TICK\n    this.update()\n  }\n}\n\nfunction updateWriteNT () {\n  if ((this.stream._duplexState & WRITE_UPDATING) === 0) {\n    this.stream._duplexState &= WRITE_NOT_NEXT_TICK\n    this.update()\n  }\n}\n\nfunction tickDrains (drains) {\n  for (let i = 0; i < drains.length; i++) {\n    // drains.writes are monotonic, so if one is 0 its always the first one\n    if (--drains[i].writes === 0) {\n      drains.shift().resolve(true)\n      i--\n    }\n  }\n}\n\nfunction afterOpen (err) {\n  const stream = this.stream\n\n  if (err) stream.destroy(err)\n\n  if ((stream._duplexState & DESTROYING) === 0) {\n    if ((stream._duplexState & READ_PRIMARY_STATUS) === 0) stream._duplexState |= READ_PRIMARY\n    if ((stream._duplexState & WRITE_PRIMARY_STATUS) === 0) stream._duplexState |= WRITE_PRIMARY\n    stream.emit('open')\n  }\n\n  stream._duplexState &= NOT_ACTIVE\n\n  if (stream._writableState !== null) {\n    stream._writableState.updateCallback()\n  }\n\n  if (stream._readableState !== null) {\n    stream._readableState.updateCallback()\n  }\n}\n\nfunction afterTransform (err, data) {\n  if (data !== undefined && data !== null) this.push(data)\n  this._writableState.afterWrite(err)\n}\n\nfunction newListener (name) {\n  if (this._readableState !== null) {\n    if (name === 'data') {\n      this._duplexState |= (READ_EMIT_DATA | READ_RESUMED_READ_AHEAD)\n      this._readableState.updateNextTick()\n    }\n    if (name === 'readable') {\n      this._duplexState |= READ_EMIT_READABLE\n      this._readableState.updateNextTick()\n    }\n  }\n\n  if (this._writableState !== null) {\n    if (name === 'drain') {\n      this._duplexState |= WRITE_EMIT_DRAIN\n      this._writableState.updateNextTick()\n    }\n  }\n}\n\nclass Stream extends EventEmitter {\n  constructor (opts) {\n    super()\n\n    this._duplexState = 0\n    this._readableState = null\n    this._writableState = null\n\n    if (opts) {\n      if (opts.open) this._open = opts.open\n      if (opts.destroy) this._destroy = opts.destroy\n      if (opts.predestroy) this._predestroy = opts.predestroy\n      if (opts.signal) {\n        opts.signal.addEventListener('abort', abort.bind(this))\n      }\n    }\n\n    this.on('newListener', newListener)\n  }\n\n  _open (cb) {\n    cb(null)\n  }\n\n  _destroy (cb) {\n    cb(null)\n  }\n\n  _predestroy () {\n    // does nothing\n  }\n\n  get readable () {\n    return this._readableState !== null ? true : undefined\n  }\n\n  get writable () {\n    return this._writableState !== null ? true : undefined\n  }\n\n  get destroyed () {\n    return (this._duplexState & DESTROYED) !== 0\n  }\n\n  get destroying () {\n    return (this._duplexState & DESTROY_STATUS) !== 0\n  }\n\n  destroy (err) {\n    if ((this._duplexState & DESTROY_STATUS) === 0) {\n      if (!err) err = STREAM_DESTROYED\n      this._duplexState = (this._duplexState | DESTROYING) & NON_PRIMARY\n\n      if (this._readableState !== null) {\n        this._readableState.highWaterMark = 0\n        this._readableState.error = err\n      }\n      if (this._writableState !== null) {\n        this._writableState.highWaterMark = 0\n        this._writableState.error = err\n      }\n\n      this._duplexState |= PREDESTROYING\n      this._predestroy()\n      this._duplexState &= NOT_PREDESTROYING\n\n      if (this._readableState !== null) this._readableState.updateNextTick()\n      if (this._writableState !== null) this._writableState.updateNextTick()\n    }\n  }\n}\n\nclass Readable extends Stream {\n  constructor (opts) {\n    super(opts)\n\n    this._duplexState |= OPENING | WRITE_DONE | READ_READ_AHEAD\n    this._readableState = new ReadableState(this, opts)\n\n    if (opts) {\n      if (this._readableState.readAhead === false) this._duplexState &= READ_NO_READ_AHEAD\n      if (opts.read) this._read = opts.read\n      if (opts.eagerOpen) this._readableState.updateNextTick()\n      if (opts.encoding) this.setEncoding(opts.encoding)\n    }\n  }\n\n  setEncoding (encoding) {\n    const dec = new TextDecoder(encoding)\n    const map = this._readableState.map || echo\n    this._readableState.map = mapOrSkip\n    return this\n\n    function mapOrSkip (data) {\n      const next = dec.push(data)\n      return next === '' && (data.byteLength !== 0 || dec.remaining > 0) ? null : map(next)\n    }\n  }\n\n  _read (cb) {\n    cb(null)\n  }\n\n  pipe (dest, cb) {\n    this._readableState.updateNextTick()\n    this._readableState.pipe(dest, cb)\n    return dest\n  }\n\n  read () {\n    this._readableState.updateNextTick()\n    return this._readableState.read()\n  }\n\n  push (data) {\n    this._readableState.updateNextTickIfOpen()\n    return this._readableState.push(data)\n  }\n\n  unshift (data) {\n    this._readableState.updateNextTickIfOpen()\n    return this._readableState.unshift(data)\n  }\n\n  resume () {\n    this._duplexState |= READ_RESUMED_READ_AHEAD\n    this._readableState.updateNextTick()\n    return this\n  }\n\n  pause () {\n    this._duplexState &= (this._readableState.readAhead === false ? READ_PAUSED_NO_READ_AHEAD : READ_PAUSED)\n    return this\n  }\n\n  static _fromAsyncIterator (ite, opts) {\n    let destroy\n\n    const rs = new Readable({\n      ...opts,\n      read (cb) {\n        ite.next().then(push).then(cb.bind(null, null)).catch(cb)\n      },\n      predestroy () {\n        destroy = ite.return()\n      },\n      destroy (cb) {\n        if (!destroy) return cb(null)\n        destroy.then(cb.bind(null, null)).catch(cb)\n      }\n    })\n\n    return rs\n\n    function push (data) {\n      if (data.done) rs.push(null)\n      else rs.push(data.value)\n    }\n  }\n\n  static from (data, opts) {\n    if (isReadStreamx(data)) return data\n    if (data[asyncIterator]) return this._fromAsyncIterator(data[asyncIterator](), opts)\n    if (!Array.isArray(data)) data = data === undefined ? [] : [data]\n\n    let i = 0\n    return new Readable({\n      ...opts,\n      read (cb) {\n        this.push(i === data.length ? null : data[i++])\n        cb(null)\n      }\n    })\n  }\n\n  static isBackpressured (rs) {\n    return (rs._duplexState & READ_BACKPRESSURE_STATUS) !== 0 || rs._readableState.buffered >= rs._readableState.highWaterMark\n  }\n\n  static isPaused (rs) {\n    return (rs._duplexState & READ_RESUMED) === 0\n  }\n\n  [asyncIterator] () {\n    const stream = this\n\n    let error = null\n    let promiseResolve = null\n    let promiseReject = null\n\n    this.on('error', (err) => { error = err })\n    this.on('readable', onreadable)\n    this.on('close', onclose)\n\n    return {\n      [asyncIterator] () {\n        return this\n      },\n      next () {\n        return new Promise(function (resolve, reject) {\n          promiseResolve = resolve\n          promiseReject = reject\n          const data = stream.read()\n          if (data !== null) ondata(data)\n          else if ((stream._duplexState & DESTROYED) !== 0) ondata(null)\n        })\n      },\n      return () {\n        return destroy(null)\n      },\n      throw (err) {\n        return destroy(err)\n      }\n    }\n\n    function onreadable () {\n      if (promiseResolve !== null) ondata(stream.read())\n    }\n\n    function onclose () {\n      if (promiseResolve !== null) ondata(null)\n    }\n\n    function ondata (data) {\n      if (promiseReject === null) return\n      if (error) promiseReject(error)\n      else if (data === null && (stream._duplexState & READ_DONE) === 0) promiseReject(STREAM_DESTROYED)\n      else promiseResolve({ value: data, done: data === null })\n      promiseReject = promiseResolve = null\n    }\n\n    function destroy (err) {\n      stream.destroy(err)\n      return new Promise((resolve, reject) => {\n        if (stream._duplexState & DESTROYED) return resolve({ value: undefined, done: true })\n        stream.once('close', function () {\n          if (err) reject(err)\n          else resolve({ value: undefined, done: true })\n        })\n      })\n    }\n  }\n}\n\nclass Writable extends Stream {\n  constructor (opts) {\n    super(opts)\n\n    this._duplexState |= OPENING | READ_DONE\n    this._writableState = new WritableState(this, opts)\n\n    if (opts) {\n      if (opts.writev) this._writev = opts.writev\n      if (opts.write) this._write = opts.write\n      if (opts.final) this._final = opts.final\n      if (opts.eagerOpen) this._writableState.updateNextTick()\n    }\n  }\n\n  cork () {\n    this._duplexState |= WRITE_CORKED\n  }\n\n  uncork () {\n    this._duplexState &= WRITE_NOT_CORKED\n    this._writableState.updateNextTick()\n  }\n\n  _writev (batch, cb) {\n    cb(null)\n  }\n\n  _write (data, cb) {\n    this._writableState.autoBatch(data, cb)\n  }\n\n  _final (cb) {\n    cb(null)\n  }\n\n  static isBackpressured (ws) {\n    return (ws._duplexState & WRITE_BACKPRESSURE_STATUS) !== 0\n  }\n\n  static drained (ws) {\n    if (ws.destroyed) return Promise.resolve(false)\n    const state = ws._writableState\n    const pending = (isWritev(ws) ? Math.min(1, state.queue.length) : state.queue.length)\n    const writes = pending + ((ws._duplexState & WRITE_WRITING) ? 1 : 0)\n    if (writes === 0) return Promise.resolve(true)\n    if (state.drains === null) state.drains = []\n    return new Promise((resolve) => {\n      state.drains.push({ writes, resolve })\n    })\n  }\n\n  write (data) {\n    this._writableState.updateNextTick()\n    return this._writableState.push(data)\n  }\n\n  end (data) {\n    this._writableState.updateNextTick()\n    this._writableState.end(data)\n    return this\n  }\n}\n\nclass Duplex extends Readable { // and Writable\n  constructor (opts) {\n    super(opts)\n\n    this._duplexState = OPENING | (this._duplexState & READ_READ_AHEAD)\n    this._writableState = new WritableState(this, opts)\n\n    if (opts) {\n      if (opts.writev) this._writev = opts.writev\n      if (opts.write) this._write = opts.write\n      if (opts.final) this._final = opts.final\n    }\n  }\n\n  cork () {\n    this._duplexState |= WRITE_CORKED\n  }\n\n  uncork () {\n    this._duplexState &= WRITE_NOT_CORKED\n    this._writableState.updateNextTick()\n  }\n\n  _writev (batch, cb) {\n    cb(null)\n  }\n\n  _write (data, cb) {\n    this._writableState.autoBatch(data, cb)\n  }\n\n  _final (cb) {\n    cb(null)\n  }\n\n  write (data) {\n    this._writableState.updateNextTick()\n    return this._writableState.push(data)\n  }\n\n  end (data) {\n    this._writableState.updateNextTick()\n    this._writableState.end(data)\n    return this\n  }\n}\n\nclass Transform extends Duplex {\n  constructor (opts) {\n    super(opts)\n    this._transformState = new TransformState(this)\n\n    if (opts) {\n      if (opts.transform) this._transform = opts.transform\n      if (opts.flush) this._flush = opts.flush\n    }\n  }\n\n  _write (data, cb) {\n    if (this._readableState.buffered >= this._readableState.highWaterMark) {\n      this._transformState.data = data\n    } else {\n      this._transform(data, this._transformState.afterTransform)\n    }\n  }\n\n  _read (cb) {\n    if (this._transformState.data !== null) {\n      const data = this._transformState.data\n      this._transformState.data = null\n      cb(null)\n      this._transform(data, this._transformState.afterTransform)\n    } else {\n      cb(null)\n    }\n  }\n\n  destroy (err) {\n    super.destroy(err)\n    if (this._transformState.data !== null) {\n      this._transformState.data = null\n      this._transformState.afterTransform()\n    }\n  }\n\n  _transform (data, cb) {\n    cb(null, data)\n  }\n\n  _flush (cb) {\n    cb(null)\n  }\n\n  _final (cb) {\n    this._transformState.afterFinal = cb\n    this._flush(transformAfterFlush.bind(this))\n  }\n}\n\nclass PassThrough extends Transform {}\n\nfunction transformAfterFlush (err, data) {\n  const cb = this._transformState.afterFinal\n  if (err) return cb(err)\n  if (data !== null && data !== undefined) this.push(data)\n  this.push(null)\n  cb(null)\n}\n\nfunction pipelinePromise (...streams) {\n  return new Promise((resolve, reject) => {\n    return pipeline(...streams, (err) => {\n      if (err) return reject(err)\n      resolve()\n    })\n  })\n}\n\nfunction pipeline (stream, ...streams) {\n  const all = Array.isArray(stream) ? [...stream, ...streams] : [stream, ...streams]\n  const done = (all.length && typeof all[all.length - 1] === 'function') ? all.pop() : null\n\n  if (all.length < 2) throw new Error('Pipeline requires at least 2 streams')\n\n  let src = all[0]\n  let dest = null\n  let error = null\n\n  for (let i = 1; i < all.length; i++) {\n    dest = all[i]\n\n    if (isStreamx(src)) {\n      src.pipe(dest, onerror)\n    } else {\n      errorHandle(src, true, i > 1, onerror)\n      src.pipe(dest)\n    }\n\n    src = dest\n  }\n\n  if (done) {\n    let fin = false\n\n    const autoDestroy = isStreamx(dest) || !!(dest._writableState && dest._writableState.autoDestroy)\n\n    dest.on('error', (err) => {\n      if (error === null) error = err\n    })\n\n    dest.on('finish', () => {\n      fin = true\n      if (!autoDestroy) done(error)\n    })\n\n    if (autoDestroy) {\n      dest.on('close', () => done(error || (fin ? null : PREMATURE_CLOSE)))\n    }\n  }\n\n  return dest\n\n  function errorHandle (s, rd, wr, onerror) {\n    s.on('error', onerror)\n    s.on('close', onclose)\n\n    function onclose () {\n      if (rd && s._readableState && !s._readableState.ended) return onerror(PREMATURE_CLOSE)\n      if (wr && s._writableState && !s._writableState.ended) return onerror(PREMATURE_CLOSE)\n    }\n  }\n\n  function onerror (err) {\n    if (!err || error) return\n    error = err\n\n    for (const s of all) {\n      s.destroy(err)\n    }\n  }\n}\n\nfunction echo (s) {\n  return s\n}\n\nfunction isStream (stream) {\n  return !!stream._readableState || !!stream._writableState\n}\n\nfunction isStreamx (stream) {\n  return typeof stream._duplexState === 'number' && isStream(stream)\n}\n\nfunction isEnded (stream) {\n  return !!stream._readableState && stream._readableState.ended\n}\n\nfunction isFinished (stream) {\n  return !!stream._writableState && stream._writableState.ended\n}\n\nfunction getStreamError (stream, opts = {}) {\n  const err = (stream._readableState && stream._readableState.error) || (stream._writableState && stream._writableState.error)\n\n  // avoid implicit errors by default\n  return (!opts.all && err === STREAM_DESTROYED) ? null : err\n}\n\nfunction isReadStreamx (stream) {\n  return isStreamx(stream) && stream.readable\n}\n\nfunction isDisturbed (stream) {\n  return (stream._duplexState & OPENING) !== OPENING || (stream._duplexState & ACTIVE_OR_TICKING) !== 0\n}\n\nfunction isTypedArray (data) {\n  return typeof data === 'object' && data !== null && typeof data.byteLength === 'number'\n}\n\nfunction defaultByteLength (data) {\n  return isTypedArray(data) ? data.byteLength : 1024\n}\n\nfunction noop () {}\n\nfunction abort () {\n  this.destroy(new Error('Stream aborted.'))\n}\n\nfunction isWritev (s) {\n  return s._writev !== Writable.prototype._writev && s._writev !== Duplex.prototype._writev\n}\n\nmodule.exports = {\n  pipeline,\n  pipelinePromise,\n  isStream,\n  isStreamx,\n  isEnded,\n  isFinished,\n  isDisturbed,\n  getStreamError,\n  Stream,\n  Writable,\n  Readable,\n  Duplex,\n  Transform,\n  // Export PassThrough for compatibility with Node.js core's stream module\n  PassThrough\n}\n{\n  \"name\": \"streamx\",\n  \"version\": \"2.22.1\",\n  \"description\": \"An iteration of the Node.js core streams with a series of improvements\",\n  \"main\": \"index.js\",\n  \"dependencies\": {\n    \"fast-fifo\": \"^1.3.2\",\n    \"text-decoder\": \"^1.1.0\"\n  },\n  \"devDependencies\": {\n    \"b4a\": \"^1.6.6\",\n    \"brittle\": \"^3.1.1\",\n    \"end-of-stream\": \"^1.4.4\",\n    \"standard\": \"^17.0.0\"\n  },\n  \"optionalDependencies\": {\n    \"bare-events\": \"^2.2.0\"\n  },\n  \"files\": [\n    \"index.js\"\n  ],\n  \"imports\": {\n    \"events\": {\n      \"bare\": \"bare-events\",\n      \"default\": \"events\"\n    }\n  },\n  \"scripts\": {\n    \"test\": \"standard && brittle test/*.js\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/mafintosh/streamx.git\"\n  },\n  \"author\": \"Mathias Buus (@mafintosh)\",\n  \"license\": \"MIT\",\n  \"bugs\": {\n    \"url\": \"https://github.com/mafintosh/streamx/issues\"\n  },\n  \"homepage\": \"https://github.com/mafintosh/streamx\"\n}\nconst PassThroughDecoder = require('./lib/pass-through-decoder')\nconst UTF8Decoder = require('./lib/utf8-decoder')\n\nmodule.exports = class TextDecoder {\n  constructor (encoding = 'utf8') {\n    this.encoding = normalizeEncoding(encoding)\n\n    switch (this.encoding) {\n      case 'utf8':\n        this.decoder = new UTF8Decoder()\n        break\n      case 'utf16le':\n      case 'base64':\n        throw new Error('Unsupported encoding: ' + this.encoding)\n      default:\n        this.decoder = new PassThroughDecoder(this.encoding)\n    }\n  }\n\n  get remaining () {\n    return this.decoder.remaining\n  }\n\n  push (data) {\n    if (typeof data === 'string') return data\n    return this.decoder.decode(data)\n  }\n\n  // For Node.js compatibility\n  write (data) {\n    return this.push(data)\n  }\n\n  end (data) {\n    let result = ''\n    if (data) result = this.push(data)\n    result += this.decoder.flush()\n    return result\n  }\n}\n\nfunction normalizeEncoding (encoding) {\n  encoding = encoding.toLowerCase()\n\n  switch (encoding) {\n    case 'utf8':\n    case 'utf-8':\n      return 'utf8'\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return 'utf16le'\n    case 'latin1':\n    case 'binary':\n      return 'latin1'\n    case 'base64':\n    case 'ascii':\n    case 'hex':\n      return encoding\n    default:\n      throw new Error('Unknown encoding: ' + encoding)\n  }\n};\nconst b4a = require('b4a')\n\nmodule.exports = class PassThroughDecoder {\n  constructor (encoding) {\n    this.encoding = encoding\n  }\n\n  get remaining () {\n    return 0\n  }\n\n  decode (tail) {\n    return b4a.toString(tail, this.encoding)\n  }\n\n  flush () {\n    return ''\n  }\n}\nconst b4a = require('b4a')\n\n/**\n * https://encoding.spec.whatwg.org/#utf-8-decoder\n */\nmodule.exports = class UTF8Decoder {\n  constructor () {\n    this.codePoint = 0\n    this.bytesSeen = 0\n    this.bytesNeeded = 0\n    this.lowerBoundary = 0x80\n    this.upperBoundary = 0xbf\n  }\n\n  get remaining () {\n    return this.bytesSeen\n  }\n\n  decode (data) {\n    // If we have a fast path, just sniff if the last part is a boundary\n    if (this.bytesNeeded === 0) {\n      let isBoundary = true\n\n      for (let i = Math.max(0, data.byteLength - 4), n = data.byteLength; i < n && isBoundary; i++) {\n        isBoundary = data[i] <= 0x7f\n      }\n\n      if (isBoundary) return b4a.toString(data, 'utf8')\n    }\n\n    let result = ''\n\n    for (let i = 0, n = data.byteLength; i < n; i++) {\n      const byte = data[i]\n\n      if (this.bytesNeeded === 0) {\n        if (byte <= 0x7f) {\n          result += String.fromCharCode(byte)\n        } else {\n          this.bytesSeen = 1\n\n          if (byte >= 0xc2 && byte <= 0xdf) {\n            this.bytesNeeded = 2\n            this.codePoint = byte & 0x1f\n          } else if (byte >= 0xe0 && byte <= 0xef) {\n            if (byte === 0xe0) this.lowerBoundary = 0xa0\n            else if (byte === 0xed) this.upperBoundary = 0x9f\n            this.bytesNeeded = 3\n            this.codePoint = byte & 0xf\n          } else if (byte >= 0xf0 && byte <= 0xf4) {\n            if (byte === 0xf0) this.lowerBoundary = 0x90\n            if (byte === 0xf4) this.upperBoundary = 0x8f\n            this.bytesNeeded = 4\n            this.codePoint = byte & 0x7\n          } else {\n            result += '\\ufffd'\n          }\n        }\n\n        continue\n      }\n\n      if (byte < this.lowerBoundary || byte > this.upperBoundary) {\n        this.codePoint = 0\n        this.bytesNeeded = 0\n        this.bytesSeen = 0\n        this.lowerBoundary = 0x80\n        this.upperBoundary = 0xbf\n\n        result += '\\ufffd'\n\n        continue\n      }\n\n      this.lowerBoundary = 0x80\n      this.upperBoundary = 0xbf\n\n      this.codePoint = (this.codePoint << 6) | (byte & 0x3f)\n      this.bytesSeen++\n\n      if (this.bytesSeen !== this.bytesNeeded) continue\n\n      result += String.fromCodePoint(this.codePoint)\n\n      this.codePoint = 0\n      this.bytesNeeded = 0\n      this.bytesSeen = 0\n    }\n\n    return result\n  }\n\n  flush () {\n    const result = this.bytesNeeded > 0 ? '\\ufffd' : ''\n\n    this.codePoint = 0\n    this.bytesNeeded = 0\n    this.bytesSeen = 0\n    this.lowerBoundary = 0x80\n    this.upperBoundary = 0xbf\n\n    return result\n  }\n}\n{\n  \"name\": \"text-decoder\",\n  \"version\": \"1.2.3\",\n  \"description\": \"Streaming text decoder that preserves multibyte Unicode characters\",\n  \"main\": \"index.js\",\n  \"files\": [\n    \"index.js\",\n    \"lib\"\n  ],\n  \"browser\": {\n    \"./lib/pass-through-decoder.js\": \"./lib/browser-decoder.js\",\n    \"./lib/utf8-decoder.js\": \"./lib/browser-decoder.js\"\n  },\n  \"react-native\": {\n    \"./lib/pass-through-decoder.js\": \"./lib/pass-through-decoder.js\",\n    \"./lib/utf8-decoder.js\": \"./lib/utf8-decoder.js\"\n  },\n  \"scripts\": {\n    \"test\": \"standard && brittle test.js\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/holepunchto/text-decoder.git\"\n  },\n  \"author\": \"Holepunch\",\n  \"license\": \"Apache-2.0\",\n  \"bugs\": {\n    \"url\": \"https://github.com/holepunchto/text-decoder/issues\"\n  },\n  \"homepage\": \"https://github.com/holepunchto/text-decoder#readme\",\n  \"dependencies\": {\n    \"b4a\": \"^1.6.4\"\n  },\n  \"devDependencies\": {\n    \"brittle\": \"^3.3.2\",\n    \"standard\": \"^17.0.0\"\n  }\n}\nconst { runtime, platform, arch } = typeof Bare !== 'undefined'\n  ? { runtime: 'bare', platform: global.Bare.platform, arch: global.Bare.arch }\n  : typeof process !== 'undefined'\n    ? { runtime: 'node', platform: global.process.platform, arch: global.process.arch }\n    : typeof Window !== 'undefined'\n      ? { runtime: 'browser', platform: 'unknown', arch: 'unknown' }\n      : { runtime: 'unknown', platform: 'unknown', arch: 'unknown' }\n\nexports.runtime = runtime\nexports.platform = platform\nexports.arch = arch\nexports.isBare = runtime === 'bare'\nexports.isBareKit = exports.isBare && typeof BareKit !== 'undefined'\nexports.isPear = typeof Pear !== 'undefined'\nexports.isNode = runtime === 'node'\nexports.isBrowser = runtime === 'browser'\nexports.isWindows = platform === 'win32'\nexports.isLinux = platform === 'linux'\nexports.isMac = platform === 'darwin'\nexports.isIOS = platform === 'ios' || platform === 'ios-simulator'\nexports.isAndroid = platform === 'android'\nexports.isElectron = typeof process !== 'undefined' && !!global.process.versions?.electron\nexports.isElectronRenderer = exports.isElectron && global.process.type === 'renderer'\nexports.isElectronWorker = exports.isElectron && global.process.type === 'worker'\n{\n  \"name\": \"which-runtime\",\n  \"version\": \"1.3.2\",\n  \"description\": \"Detect if you are in Bare or Node and which os etc\",\n  \"main\": \"index.js\",\n  \"files\": [\n    \"index.js\"\n  ],\n  \"dependencies\": {},\n  \"devDependencies\": {\n    \"standard\": \"^17.0.0\"\n  },\n  \"scripts\": {\n    \"test\": \"standard\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/holepunchto/which-runtime.git\"\n  },\n  \"author\": \"Holepunch Inc.\",\n  \"license\": \"Apache-2.0\",\n  \"bugs\": {\n    \"url\": \"https://github.com/holepunchto/which-runtime/issues\"\n  },\n  \"homepage\": \"https://github.com/holepunchto/which-runtime\"\n}\n{\n  \"name\": \"react-native-wdk-starter\",\n  \"main\": \"expo-router/entry\",\n  \"version\": \"1.0.0\",\n  \"scripts\": {\n    \"start\": \"expo start --dev-client\",\n    \"reset-project\": \"node ./scripts/reset-project.js\",\n    \"android\": \"expo run:android\",\n    \"ios\": \"expo run:ios\",\n    \"web\": \"expo start --web\",\n    \"lint\": \"expo lint\",\n    \"lint:fix\": \"expo lint --fix\",\n    \"format\": \"prettier --write .\",\n    \"format:check\": \"prettier --check .\",\n    \"prebuild\": \"expo prebuild\",\n    \"prebuild:clean\": \"expo prebuild --clean\",\n    \"gen:bundle\": \"npx bare-pack --target ios-arm64 --target ios-arm64-simulator --target ios-x64-simulator --target android-arm --target android-arm64 --target android-ia32 --target android-x64 --linked --out src/wdk-secret-manager-worklet.bundle.js src/worklet/wdk-secret-manager-worklet.js\"\n  },\n  \"dependencies\": {\n    \"@craftzdog/react-native-buffer\": \"^6.1.0\",\n    \"@expo/vector-icons\": \"^15.0.2\",\n    \"@gorhom/bottom-sheet\": \"^5.2.6\",\n    \"@react-native-async-storage/async-storage\": \"^2.2.0\",\n    \"@react-navigation/bottom-tabs\": \"^7.4.0\",\n    \"@react-navigation/elements\": \"^2.6.3\",\n    \"@react-navigation/native\": \"^7.1.8\",\n    \"@reduxjs/toolkit\": \"^2.9.0\",\n    \"@tetherto/pear-wrk-wdk\": \"https://github.com/noxtton/wdk-bare-internal#v0.1.1\",\n    \"@wdk/react-native-passkey-internal\": \"github:noxtton/wdk-react-native-passkey-internal#v1.0.0\",\n    \"@wdk/react-native-ui\": \"file:../@tetherto/wdk-uikit-react-native\",\n    \"@tetherto/wdk-secret-manager\": \"https://github.com/noxtton/wdk-secret-manager-internal#v0.1.0\",\n    \"b4a\": \"^1.7.2\",\n    \"bip39\": \"^3.1.0\",\n    \"browserify-zlib\": \"^0.2.0\",\n    \"events\": \"^3.3.0\",\n    \"expo\": \"~54.0.8\",\n    \"expo-constants\": \"~18.0.9\",\n    \"expo-dev-client\": \"^6.0.12\",\n    \"expo-font\": \"~14.0.8\",\n    \"expo-haptics\": \"~15.0.7\",\n    \"expo-image\": \"~3.0.8\",\n    \"expo-linking\": \"~8.0.8\",\n    \"expo-router\": \"~6.0.6\",\n    \"expo-splash-screen\": \"~31.0.10\",\n    \"expo-status-bar\": \"~3.0.8\",\n    \"expo-symbols\": \"~1.0.7\",\n    \"expo-system-ui\": \"~6.0.7\",\n    \"expo-web-browser\": \"~15.0.7\",\n    \"https-browserify\": \"^1.0.0\",\n    \"@tetherto/wdk-pricing-provider\": \"github:noxtton/@tetherto/wdk-pricing-provider#v0.1.0\",\n    \"@tetherto/wdk-pricing-provider-bitfinex-http\": \"github:noxtton/lib-wallet-pricing-bitfinex-http#v0.1.0\",\n    \"lucide-react-native\": \"^0.544.0\",\n    \"path-browserify\": \"^1.0.1\",\n    \"querystring-es3\": \"^0.2.1\",\n    \"react\": \"19.1.0\",\n    \"react-dom\": \"19.1.0\",\n    \"react-native\": \"0.81.4\",\n    \"react-native-bare-kit\": \"^0.8.14\",\n    \"react-native-chart-kit\": \"^6.12.0\",\n    \"react-native-gesture-handler\": \"~2.28.0\",\n    \"react-native-reanimated\": \"~4.1.0\",\n    \"react-native-safe-area-context\": \"~5.6.0\",\n    \"react-native-screens\": \"~4.16.0\",\n    \"react-native-svg\": \"^15.13.0\",\n    \"react-native-url-polyfill\": \"^2.0.0\",\n    \"@tetherto/wdk-uikit-react-native\": \"file:../@tetherto/wdk-uikit-react-native\",\n    \"react-native-web\": \"~0.21.0\",\n    \"react-native-worklets\": \"0.5.1\",\n    \"react-redux\": \"^9.2.0\",\n    \"sodium-javascript\": \"^0.8.0\",\n    \"stream-browserify\": \"^3.0.0\",\n    \"stream-http\": \"^3.2.0\"\n  },\n  \"devDependencies\": {\n    \"@types/react\": \"~19.1.0\",\n    \"eslint\": \"^9.25.0\",\n    \"eslint-config-expo\": \"~10.0.0\",\n    \"eslint-config-prettier\": \"^10.1.8\",\n    \"eslint-plugin-prettier\": \"^5.5.4\",\n    \"prettier\": \"^3.6.2\",\n    \"react-native-svg-transformer\": \"^1.5.1\",\n    \"sharp-cli\": \"^5.2.0\",\n    \"typescript\": \"~5.9.2\"\n  },\n  \"private\": true\n}\n// This file is autogenerated by the hrpc compiler\n\nconst { c, RPC, RPCStream, RPCRequestStream } = require('hrpc/runtime');\nconst { getEncoding } = require('./messages.js');\n\nconst methods = new Map([\n  ['@wdk-secret-manager/command-workletStart', 0],\n  [0, '@wdk-secret-manager/command-workletStart'],\n  ['@wdk-secret-manager/command-workletStop', 1],\n  [1, '@wdk-secret-manager/command-workletStop'],\n  ['@wdk-secret-manager/command-generateAndEncrypt', 2],\n  [2, '@wdk-secret-manager/command-generateAndEncrypt'],\n  ['@wdk-secret-manager/command-decrypt', 3],\n  [3, '@wdk-secret-manager/command-decrypt'],\n  ['@wdk-secret-manager/command-log', 4],\n  [4, '@wdk-secret-manager/command-log'],\n]);\n\nclass HRPC {\n  constructor(stream) {\n    this._stream = stream;\n    this._handlers = [];\n    this._requestEncodings = new Map([\n      [\n        '@wdk-secret-manager/command-workletStart',\n        getEncoding('@wdk-secret-manager/command-workletStart-request'),\n      ],\n      [\n        '@wdk-secret-manager/command-workletStop',\n        getEncoding('@wdk-secret-manager/command-workletStop-request'),\n      ],\n      [\n        '@wdk-secret-manager/command-generateAndEncrypt',\n        getEncoding('@wdk-secret-manager/command-generateAndEncrypt-request'),\n      ],\n      [\n        '@wdk-secret-manager/command-decrypt',\n        getEncoding('@wdk-secret-manager/command-decrypt-request'),\n      ],\n      ['@wdk-secret-manager/command-log', getEncoding('@wdk-secret-manager/command-log-request')],\n    ]);\n    this._responseEncodings = new Map([\n      [\n        '@wdk-secret-manager/command-workletStart',\n        getEncoding('@wdk-secret-manager/command-workletStart-response'),\n      ],\n      [\n        '@wdk-secret-manager/command-workletStop',\n        getEncoding('@wdk-secret-manager/command-workletStop-response'),\n      ],\n      [\n        '@wdk-secret-manager/command-generateAndEncrypt',\n        getEncoding('@wdk-secret-manager/command-generateAndEncrypt-response'),\n      ],\n      [\n        '@wdk-secret-manager/command-decrypt',\n        getEncoding('@wdk-secret-manager/command-decrypt-response'),\n      ],\n    ]);\n    this._rpc = new RPC(stream, async req => {\n      const command = methods.get(req.command);\n      const responseEncoding = this._responseEncodings.get(command);\n      const requestEncoding = this._requestEncodings.get(command);\n      if (this._requestIsSend(command)) {\n        const request = req.data ? c.decode(requestEncoding, req.data) : null;\n        await this._handlers[command](request);\n        return;\n      }\n      if (!this._requestIsStream(command) && !this._responseIsStream(command)) {\n        const request = req.data ? c.decode(requestEncoding, req.data) : null;\n        const response = await this._handlers[command](request);\n        req.reply(c.encode(responseEncoding, response));\n      }\n      if (!this._requestIsStream(command) && this._responseIsStream(command)) {\n        const request = req.data ? c.decode(requestEncoding, req.data) : null;\n        const responseStream = new RPCStream(\n          null,\n          null,\n          req.createResponseStream(),\n          responseEncoding\n        );\n        responseStream.data = request;\n        await this._handlers[command](responseStream);\n      }\n      if (this._requestIsStream(command) && !this._responseIsStream(command)) {\n        const requestStream = new RPCRequestStream(\n          req,\n          responseEncoding,\n          req.createRequestStream(),\n          requestEncoding\n        );\n        const response = await this._handlers[command](requestStream);\n        req.reply(c.encode(responseEncoding, response));\n      }\n      if (this._requestIsStream(command) && this._responseIsStream(command)) {\n        const requestStream = new RPCRequestStream(\n          req,\n          responseEncoding,\n          req.createRequestStream(),\n          requestEncoding,\n          req.createResponseStream(),\n          responseEncoding\n        );\n        await this._handlers[command](requestStream);\n      }\n    });\n  }\n\n  async _call(name, args) {\n    const requestEncoding = this._requestEncodings.get(name);\n    const responseEncoding = this._responseEncodings.get(name);\n    const request = this._rpc.request(methods.get(name));\n    const encoded = c.encode(requestEncoding, args);\n    request.send(encoded);\n    return c.decode(responseEncoding, await request.reply());\n  }\n\n  _callSync(name, args) {\n    const requestEncoding = this._requestEncodings.get(name);\n    const responseEncoding = this._responseEncodings.get(name);\n    const request = this._rpc.request(methods.get(name));\n    if (this._requestIsSend(name)) {\n      const encoded = c.encode(requestEncoding, args);\n      request.send(encoded);\n    }\n    if (!this._requestIsStream(name) && this._responseIsStream(name)) {\n      const encoded = c.encode(requestEncoding, args);\n      request.send(encoded);\n      return new RPCStream(request.createResponseStream(), responseEncoding);\n    }\n    if (this._requestIsStream(name) && !this._responseIsStream(name)) {\n      return new RPCRequestStream(\n        request,\n        responseEncoding,\n        null,\n        null,\n        request.createRequestStream(),\n        requestEncoding\n      );\n    }\n    if (this._requestIsStream(name) && this._responseIsStream(name)) {\n      return new RPCRequestStream(\n        request,\n        responseEncoding,\n        request.createResponseStream(),\n        responseEncoding,\n        request.createRequestStream(),\n        requestEncoding\n      );\n    }\n  }\n\n  async commandWorkletStart(args) {\n    return this._call('@wdk-secret-manager/command-workletStart', args);\n  }\n\n  async commandWorkletStop(args) {\n    return this._call('@wdk-secret-manager/command-workletStop', args);\n  }\n\n  async commandGenerateAndEncrypt(args) {\n    return this._call('@wdk-secret-manager/command-generateAndEncrypt', args);\n  }\n\n  async commandDecrypt(args) {\n    return this._call('@wdk-secret-manager/command-decrypt', args);\n  }\n\n  commandLog(args) {\n    return this._callSync('@wdk-secret-manager/command-log', args);\n  }\n\n  onCommandWorkletStart(responseFn) {\n    this._handlers['@wdk-secret-manager/command-workletStart'] = responseFn;\n  }\n\n  onCommandWorkletStop(responseFn) {\n    this._handlers['@wdk-secret-manager/command-workletStop'] = responseFn;\n  }\n\n  onCommandGenerateAndEncrypt(responseFn) {\n    this._handlers['@wdk-secret-manager/command-generateAndEncrypt'] = responseFn;\n  }\n\n  onCommandDecrypt(responseFn) {\n    this._handlers['@wdk-secret-manager/command-decrypt'] = responseFn;\n  }\n\n  onCommandLog(responseFn) {\n    this._handlers['@wdk-secret-manager/command-log'] = responseFn;\n  }\n\n  _requestIsStream(command) {\n    return [].includes(command);\n  }\n\n  _responseIsStream(command) {\n    return [].includes(command);\n  }\n\n  _requestIsSend(command) {\n    return ['@wdk-secret-manager/command-log'].includes(command);\n  }\n}\n\nmodule.exports = HRPC;\n// This file is autogenerated by the hyperschema compiler\n// Schema Version: 1\n\nconst { c } = require('hyperschema/runtime');\n\nconst VERSION = 1;\n\nlet version = VERSION;\n\n// @wdk-secret-manager/command-workletStart-request\nconst encoding0 = {\n  preencode(state, m) {\n    state.end++; // max flag is 1 so always one byte\n\n    if (m.enableDebugLogs) c.uint.preencode(state, m.enableDebugLogs);\n  },\n  encode(state, m) {\n    const flags = m.enableDebugLogs ? 1 : 0;\n\n    c.uint.encode(state, flags);\n\n    if (m.enableDebugLogs) c.uint.encode(state, m.enableDebugLogs);\n  },\n  decode(state) {\n    const flags = c.uint.decode(state);\n\n    return {\n      enableDebugLogs: (flags & 1) !== 0 ? c.uint.decode(state) : 0,\n    };\n  },\n};\n\n// @wdk-secret-manager/command-workletStart-response\nconst encoding1 = {\n  preencode(state, m) {\n    state.end++; // max flag is 1 so always one byte\n\n    if (m.status) c.string.preencode(state, m.status);\n  },\n  encode(state, m) {\n    const flags = m.status ? 1 : 0;\n\n    c.uint.encode(state, flags);\n\n    if (m.status) c.string.encode(state, m.status);\n  },\n  decode(state) {\n    const flags = c.uint.decode(state);\n\n    return {\n      status: (flags & 1) !== 0 ? c.string.decode(state) : null,\n    };\n  },\n};\n\n// @wdk-secret-manager/command-workletStop-request\nconst encoding2 = {\n  preencode(state, m) {\n    state.end++; // max flag is 1 so always one byte\n\n    if (m.payload) c.string.preencode(state, m.payload);\n  },\n  encode(state, m) {\n    const flags = m.payload ? 1 : 0;\n\n    c.uint.encode(state, flags);\n\n    if (m.payload) c.string.encode(state, m.payload);\n  },\n  decode(state) {\n    const flags = c.uint.decode(state);\n\n    return {\n      payload: (flags & 1) !== 0 ? c.string.decode(state) : null,\n    };\n  },\n};\n\n// @wdk-secret-manager/command-workletStop-response\nconst encoding3 = encoding1;\n\n// @wdk-secret-manager/command-generateAndEncrypt-request\nconst encoding4 = {\n  preencode(state, m) {\n    state.end++; // max flag is 8 so always one byte\n\n    if (m.passkey) c.string.preencode(state, m.passkey);\n    if (m.salt) c.string.preencode(state, m.salt);\n    if (m.seedPhrase) c.string.preencode(state, m.seedPhrase);\n    if (m.derivedKey) c.string.preencode(state, m.derivedKey);\n  },\n  encode(state, m) {\n    const flags =\n      (m.passkey ? 1 : 0) | (m.salt ? 2 : 0) | (m.seedPhrase ? 4 : 0) | (m.derivedKey ? 8 : 0);\n\n    c.uint.encode(state, flags);\n\n    if (m.passkey) c.string.encode(state, m.passkey);\n    if (m.salt) c.string.encode(state, m.salt);\n    if (m.seedPhrase) c.string.encode(state, m.seedPhrase);\n    if (m.derivedKey) c.string.encode(state, m.derivedKey);\n  },\n  decode(state) {\n    const flags = c.uint.decode(state);\n\n    return {\n      passkey: (flags & 1) !== 0 ? c.string.decode(state) : null,\n      salt: (flags & 2) !== 0 ? c.string.decode(state) : null,\n      seedPhrase: (flags & 4) !== 0 ? c.string.decode(state) : null,\n      derivedKey: (flags & 8) !== 0 ? c.string.decode(state) : null,\n    };\n  },\n};\n\n// @wdk-secret-manager/command-generateAndEncrypt-response\nconst encoding5 = {\n  preencode(state, m) {\n    state.end++; // max flag is 2 so always one byte\n\n    if (m.encryptedEntropy) c.string.preencode(state, m.encryptedEntropy);\n    if (m.encryptedSeed) c.string.preencode(state, m.encryptedSeed);\n  },\n  encode(state, m) {\n    const flags = (m.encryptedEntropy ? 1 : 0) | (m.encryptedSeed ? 2 : 0);\n\n    c.uint.encode(state, flags);\n\n    if (m.encryptedEntropy) c.string.encode(state, m.encryptedEntropy);\n    if (m.encryptedSeed) c.string.encode(state, m.encryptedSeed);\n  },\n  decode(state) {\n    const flags = c.uint.decode(state);\n\n    return {\n      encryptedEntropy: (flags & 1) !== 0 ? c.string.decode(state) : null,\n      encryptedSeed: (flags & 2) !== 0 ? c.string.decode(state) : null,\n    };\n  },\n};\n\n// @wdk-secret-manager/command-decrypt-request\nconst encoding6 = {\n  preencode(state, m) {\n    state.end++; // max flag is 8 so always one byte\n\n    if (m.passkey) c.string.preencode(state, m.passkey);\n    if (m.salt) c.string.preencode(state, m.salt);\n    if (m.encryptedData) c.string.preencode(state, m.encryptedData);\n    if (m.derivedKey) c.string.preencode(state, m.derivedKey);\n  },\n  encode(state, m) {\n    const flags =\n      (m.passkey ? 1 : 0) | (m.salt ? 2 : 0) | (m.encryptedData ? 4 : 0) | (m.derivedKey ? 8 : 0);\n\n    c.uint.encode(state, flags);\n\n    if (m.passkey) c.string.encode(state, m.passkey);\n    if (m.salt) c.string.encode(state, m.salt);\n    if (m.encryptedData) c.string.encode(state, m.encryptedData);\n    if (m.derivedKey) c.string.encode(state, m.derivedKey);\n  },\n  decode(state) {\n    const flags = c.uint.decode(state);\n\n    return {\n      passkey: (flags & 1) !== 0 ? c.string.decode(state) : null,\n      salt: (flags & 2) !== 0 ? c.string.decode(state) : null,\n      encryptedData: (flags & 4) !== 0 ? c.string.decode(state) : null,\n      derivedKey: (flags & 8) !== 0 ? c.string.decode(state) : null,\n    };\n  },\n};\n\n// @wdk-secret-manager/command-decrypt-response\nconst encoding7 = {\n  preencode(state, m) {\n    state.end++; // max flag is 1 so always one byte\n\n    if (m.result) c.string.preencode(state, m.result);\n  },\n  encode(state, m) {\n    const flags = m.result ? 1 : 0;\n\n    c.uint.encode(state, flags);\n\n    if (m.result) c.string.encode(state, m.result);\n  },\n  decode(state) {\n    const flags = c.uint.decode(state);\n\n    return {\n      result: (flags & 1) !== 0 ? c.string.decode(state) : null,\n    };\n  },\n};\n\nconst encoding8_enum = {\n  info: 1,\n  error: 2,\n  debug: 3,\n};\n\n// @wdk-secret-manager/log-type-enum enum\nconst encoding8 = {\n  preencode(state, m) {\n    state.end++; // max enum is 3 so always one byte\n  },\n  encode(state, m) {\n    if (m > 3) throw new Error('Unknown enum');\n    c.uint.encode(state, m);\n  },\n  decode(state) {\n    return c.uint.decode(state);\n  },\n};\n\n// @wdk-secret-manager/command-log-request\nconst encoding9 = {\n  preencode(state, m) {\n    state.end++; // max flag is 2 so always one byte\n\n    if (m.type) encoding8.preencode(state, m.type);\n    if (m.data) c.string.preencode(state, m.data);\n  },\n  encode(state, m) {\n    const flags = (m.type ? 1 : 0) | (m.data ? 2 : 0);\n\n    c.uint.encode(state, flags);\n\n    if (m.type) encoding8.encode(state, m.type);\n    if (m.data) c.string.encode(state, m.data);\n  },\n  decode(state) {\n    const flags = c.uint.decode(state);\n\n    return {\n      type: (flags & 1) !== 0 ? encoding8.decode(state) : 0,\n      data: (flags & 2) !== 0 ? c.string.decode(state) : null,\n    };\n  },\n};\n\nfunction setVersion(v) {\n  version = v;\n}\n\nfunction encode(name, value, v = VERSION) {\n  version = v;\n  return c.encode(getEncoding(name), value);\n}\n\nfunction decode(name, buffer, v = VERSION) {\n  version = v;\n  return c.decode(getEncoding(name), buffer);\n}\n\nfunction getEnum(name) {\n  switch (name) {\n    case '@wdk-secret-manager/log-type-enum':\n      return encoding8_enum;\n    default:\n      throw new Error('Enum not found ' + name);\n  }\n}\n\nfunction getEncoding(name) {\n  switch (name) {\n    case '@wdk-secret-manager/command-workletStart-request':\n      return encoding0;\n    case '@wdk-secret-manager/command-workletStart-response':\n      return encoding1;\n    case '@wdk-secret-manager/command-workletStop-request':\n      return encoding2;\n    case '@wdk-secret-manager/command-workletStop-response':\n      return encoding3;\n    case '@wdk-secret-manager/command-generateAndEncrypt-request':\n      return encoding4;\n    case '@wdk-secret-manager/command-generateAndEncrypt-response':\n      return encoding5;\n    case '@wdk-secret-manager/command-decrypt-request':\n      return encoding6;\n    case '@wdk-secret-manager/command-decrypt-response':\n      return encoding7;\n    case '@wdk-secret-manager/log-type-enum':\n      return encoding8;\n    case '@wdk-secret-manager/command-log-request':\n      return encoding9;\n    default:\n      throw new Error('Encoder not found ' + name);\n  }\n}\n\nfunction getStruct(name, v = VERSION) {\n  const enc = getEncoding(name);\n  return {\n    preencode(state, m) {\n      version = v;\n      enc.preencode(state, m);\n    },\n    encode(state, m) {\n      version = v;\n      enc.encode(state, m);\n    },\n    decode(state) {\n      version = v;\n      return enc.decode(state);\n    },\n  };\n}\n\nconst resolveStruct = getStruct; // compat\n\nmodule.exports = {\n  resolveStruct,\n  getStruct,\n  getEnum,\n  getEncoding,\n  encode,\n  decode,\n  setVersion,\n  version,\n};\n// This file is autogenerated by the hyperschema compiler\n// Schema Version: 1\n\nconst { c } = require('hyperschema/runtime');\n\nconst VERSION = 1;\n\nlet version = VERSION;\n\n// @wdk-secret-manager/command-workletStart-request\nconst encoding0 = {\n  preencode(state, m) {\n    state.end++; // max flag is 1 so always one byte\n\n    if (m.enableDebugLogs) c.uint.preencode(state, m.enableDebugLogs);\n  },\n  encode(state, m) {\n    const flags = m.enableDebugLogs ? 1 : 0;\n\n    c.uint.encode(state, flags);\n\n    if (m.enableDebugLogs) c.uint.encode(state, m.enableDebugLogs);\n  },\n  decode(state) {\n    const flags = c.uint.decode(state);\n\n    return {\n      enableDebugLogs: (flags & 1) !== 0 ? c.uint.decode(state) : 0,\n    };\n  },\n};\n\n// @wdk-secret-manager/command-workletStart-response\nconst encoding1 = {\n  preencode(state, m) {\n    state.end++; // max flag is 1 so always one byte\n\n    if (m.status) c.string.preencode(state, m.status);\n  },\n  encode(state, m) {\n    const flags = m.status ? 1 : 0;\n\n    c.uint.encode(state, flags);\n\n    if (m.status) c.string.encode(state, m.status);\n  },\n  decode(state) {\n    const flags = c.uint.decode(state);\n\n    return {\n      status: (flags & 1) !== 0 ? c.string.decode(state) : null,\n    };\n  },\n};\n\n// @wdk-secret-manager/command-workletStop-request\nconst encoding2 = {\n  preencode(state, m) {\n    state.end++; // max flag is 1 so always one byte\n\n    if (m.payload) c.string.preencode(state, m.payload);\n  },\n  encode(state, m) {\n    const flags = m.payload ? 1 : 0;\n\n    c.uint.encode(state, flags);\n\n    if (m.payload) c.string.encode(state, m.payload);\n  },\n  decode(state) {\n    const flags = c.uint.decode(state);\n\n    return {\n      payload: (flags & 1) !== 0 ? c.string.decode(state) : null,\n    };\n  },\n};\n\n// @wdk-secret-manager/command-workletStop-response\nconst encoding3 = encoding1;\n\n// @wdk-secret-manager/command-generateAndEncrypt-request\nconst encoding4 = {\n  preencode(state, m) {\n    state.end++; // max flag is 8 so always one byte\n\n    if (m.passkey) c.string.preencode(state, m.passkey);\n    if (m.salt) c.string.preencode(state, m.salt);\n    if (m.seedPhrase) c.string.preencode(state, m.seedPhrase);\n    if (m.derivedKey) c.string.preencode(state, m.derivedKey);\n  },\n  encode(state, m) {\n    const flags =\n      (m.passkey ? 1 : 0) | (m.salt ? 2 : 0) | (m.seedPhrase ? 4 : 0) | (m.derivedKey ? 8 : 0);\n\n    c.uint.encode(state, flags);\n\n    if (m.passkey) c.string.encode(state, m.passkey);\n    if (m.salt) c.string.encode(state, m.salt);\n    if (m.seedPhrase) c.string.encode(state, m.seedPhrase);\n    if (m.derivedKey) c.string.encode(state, m.derivedKey);\n  },\n  decode(state) {\n    const flags = c.uint.decode(state);\n\n    return {\n      passkey: (flags & 1) !== 0 ? c.string.decode(state) : null,\n      salt: (flags & 2) !== 0 ? c.string.decode(state) : null,\n      seedPhrase: (flags & 4) !== 0 ? c.string.decode(state) : null,\n      derivedKey: (flags & 8) !== 0 ? c.string.decode(state) : null,\n    };\n  },\n};\n\n// @wdk-secret-manager/command-generateAndEncrypt-response\nconst encoding5 = {\n  preencode(state, m) {\n    state.end++; // max flag is 2 so always one byte\n\n    if (m.encryptedEntropy) c.string.preencode(state, m.encryptedEntropy);\n    if (m.encryptedSeed) c.string.preencode(state, m.encryptedSeed);\n  },\n  encode(state, m) {\n    const flags = (m.encryptedEntropy ? 1 : 0) | (m.encryptedSeed ? 2 : 0);\n\n    c.uint.encode(state, flags);\n\n    if (m.encryptedEntropy) c.string.encode(state, m.encryptedEntropy);\n    if (m.encryptedSeed) c.string.encode(state, m.encryptedSeed);\n  },\n  decode(state) {\n    const flags = c.uint.decode(state);\n\n    return {\n      encryptedEntropy: (flags & 1) !== 0 ? c.string.decode(state) : null,\n      encryptedSeed: (flags & 2) !== 0 ? c.string.decode(state) : null,\n    };\n  },\n};\n\n// @wdk-secret-manager/command-decrypt-request\nconst encoding6 = {\n  preencode(state, m) {\n    state.end++; // max flag is 8 so always one byte\n\n    if (m.passkey) c.string.preencode(state, m.passkey);\n    if (m.salt) c.string.preencode(state, m.salt);\n    if (m.encryptedData) c.string.preencode(state, m.encryptedData);\n    if (m.derivedKey) c.string.preencode(state, m.derivedKey);\n  },\n  encode(state, m) {\n    const flags =\n      (m.passkey ? 1 : 0) | (m.salt ? 2 : 0) | (m.encryptedData ? 4 : 0) | (m.derivedKey ? 8 : 0);\n\n    c.uint.encode(state, flags);\n\n    if (m.passkey) c.string.encode(state, m.passkey);\n    if (m.salt) c.string.encode(state, m.salt);\n    if (m.encryptedData) c.string.encode(state, m.encryptedData);\n    if (m.derivedKey) c.string.encode(state, m.derivedKey);\n  },\n  decode(state) {\n    const flags = c.uint.decode(state);\n\n    return {\n      passkey: (flags & 1) !== 0 ? c.string.decode(state) : null,\n      salt: (flags & 2) !== 0 ? c.string.decode(state) : null,\n      encryptedData: (flags & 4) !== 0 ? c.string.decode(state) : null,\n      derivedKey: (flags & 8) !== 0 ? c.string.decode(state) : null,\n    };\n  },\n};\n\n// @wdk-secret-manager/command-decrypt-response\nconst encoding7 = {\n  preencode(state, m) {\n    state.end++; // max flag is 1 so always one byte\n\n    if (m.result) c.string.preencode(state, m.result);\n  },\n  encode(state, m) {\n    const flags = m.result ? 1 : 0;\n\n    c.uint.encode(state, flags);\n\n    if (m.result) c.string.encode(state, m.result);\n  },\n  decode(state) {\n    const flags = c.uint.decode(state);\n\n    return {\n      result: (flags & 1) !== 0 ? c.string.decode(state) : null,\n    };\n  },\n};\n\nconst encoding8_enum = {\n  info: 1,\n  error: 2,\n  debug: 3,\n};\n\n// @wdk-secret-manager/log-type-enum enum\nconst encoding8 = {\n  preencode(state, m) {\n    state.end++; // max enum is 3 so always one byte\n  },\n  encode(state, m) {\n    if (m > 3) throw new Error('Unknown enum');\n    c.uint.encode(state, m);\n  },\n  decode(state) {\n    return c.uint.decode(state);\n  },\n};\n\n// @wdk-secret-manager/command-log-request\nconst encoding9 = {\n  preencode(state, m) {\n    state.end++; // max flag is 2 so always one byte\n\n    if (m.type) encoding8.preencode(state, m.type);\n    if (m.data) c.string.preencode(state, m.data);\n  },\n  encode(state, m) {\n    const flags = (m.type ? 1 : 0) | (m.data ? 2 : 0);\n\n    c.uint.encode(state, flags);\n\n    if (m.type) encoding8.encode(state, m.type);\n    if (m.data) c.string.encode(state, m.data);\n  },\n  decode(state) {\n    const flags = c.uint.decode(state);\n\n    return {\n      type: (flags & 1) !== 0 ? encoding8.decode(state) : 0,\n      data: (flags & 2) !== 0 ? c.string.decode(state) : null,\n    };\n  },\n};\n\nfunction setVersion(v) {\n  version = v;\n}\n\nfunction encode(name, value, v = VERSION) {\n  version = v;\n  return c.encode(getEncoding(name), value);\n}\n\nfunction decode(name, buffer, v = VERSION) {\n  version = v;\n  return c.decode(getEncoding(name), buffer);\n}\n\nfunction getEnum(name) {\n  switch (name) {\n    case '@wdk-secret-manager/log-type-enum':\n      return encoding8_enum;\n    default:\n      throw new Error('Enum not found ' + name);\n  }\n}\n\nfunction getEncoding(name) {\n  switch (name) {\n    case '@wdk-secret-manager/command-workletStart-request':\n      return encoding0;\n    case '@wdk-secret-manager/command-workletStart-response':\n      return encoding1;\n    case '@wdk-secret-manager/command-workletStop-request':\n      return encoding2;\n    case '@wdk-secret-manager/command-workletStop-response':\n      return encoding3;\n    case '@wdk-secret-manager/command-generateAndEncrypt-request':\n      return encoding4;\n    case '@wdk-secret-manager/command-generateAndEncrypt-response':\n      return encoding5;\n    case '@wdk-secret-manager/command-decrypt-request':\n      return encoding6;\n    case '@wdk-secret-manager/command-decrypt-response':\n      return encoding7;\n    case '@wdk-secret-manager/log-type-enum':\n      return encoding8;\n    case '@wdk-secret-manager/command-log-request':\n      return encoding9;\n    default:\n      throw new Error('Encoder not found ' + name);\n  }\n}\n\nfunction getStruct(name, v = VERSION) {\n  const enc = getEncoding(name);\n  return {\n    preencode(state, m) {\n      version = v;\n      enc.preencode(state, m);\n    },\n    encode(state, m) {\n      version = v;\n      enc.encode(state, m);\n    },\n    decode(state) {\n      version = v;\n      return enc.decode(state);\n    },\n  };\n}\n\nconst resolveStruct = getStruct; // compat\n\nmodule.exports = {\n  resolveStruct,\n  getStruct,\n  getEnum,\n  getEncoding,\n  encode,\n  decode,\n  setVersion,\n  version,\n};\nconst HRPC = require('../spec/hrpc');\n\nconst b4a = require('b4a');\nconst { getEnum } = require('../spec/schema');\nconst { WdkSecretManager } = require('@tetherto/wdk-secret-manager');\n// eslint-disable-next-line no-undef\nconst { IPC } = BareKit;\n\nconst rpc = new HRPC(IPC);\n\nconst logEnums = getEnum('@wdk-secret-manager/log-type-enum');\n\n/**\n *\n * @param {string} enable = 0|1\n * @param {logEnums} type\n * @param {string} content\n */\nfunction sendLog(type, content) {\n  rpc.commandLog({\n    type: type,\n    data: content,\n  });\n}\n\nlet enableDebugLogs = false;\n\nfunction wrapConsole() {\n  const logPrefix = '[WDK-SECRET-MANAGER-WORKLET]';\n  const format = (...args) =>\n    args\n      .map(arg => {\n        if (typeof arg === 'object') {\n          try {\n            return JSON.stringify(arg);\n          } catch {\n            return '[Circular]';\n          }\n        }\n        return arg;\n      })\n      .join(' ');\n\n  console.error = (...args) => {\n    const content = `${logPrefix} ${format(...args)}`;\n    sendLog(logEnums.error, content);\n  };\n\n  console.warn = (...args) => {\n    const content = `${logPrefix} ${format(...args)}`;\n    sendLog(logEnums.info, content);\n  };\n\n  console.info = (...args) => {\n    const content = `${logPrefix} ${format(...args)}`;\n    sendLog(logEnums.info, content);\n  };\n  console.debug = (...args) => {\n    if (!enableDebugLogs) return;\n    const content = `${logPrefix} ${format(...args)}`;\n    sendLog(logEnums.debug, content);\n  };\n}\n\nwrapConsole();\n\nrpc.onCommandWorkletStart(async init => {\n  enableDebugLogs = !!init.enableDebugLogs;\n  console.debug('Worklet started ->', init);\n  return { status: 'started' };\n});\n\nrpc.onCommandGenerateAndEncrypt(async payload => {\n  try {\n    console.debug('encryption payload', payload);\n    if (payload.derivedKey) payload.derivedKey = b4a.from(payload.derivedKey, 'hex');\n    payload.salt = b4a.from(payload.salt, 'hex');\n    const manager = new WdkSecretManager(payload.passkey, payload.salt);\n    const entropy = payload.seedPhrase ? manager.mnemonicToEntropy(payload.seedPhrase) : null;\n    const { encryptedSeed, encryptedEntropy } = await manager.generateAndEncrypt(\n      entropy,\n      payload.derivedKey\n    );\n    manager.dispose();\n    return {\n      encryptedSeed: b4a.toString(encryptedSeed, 'hex'),\n      encryptedEntropy: b4a.toString(encryptedEntropy, 'hex'),\n    };\n  } catch (e) {\n    throw new Error(`${e.message}: ${e.stack}`);\n  }\n});\n\nrpc.onCommandDecrypt(async payload => {\n  try {\n    if (payload.derivedKey) payload.derivedKey = b4a.from(payload.derivedKey, 'hex');\n    payload.salt = b4a.from(payload.salt, 'hex');\n    const manager = new WdkSecretManager(payload.passkey, b4a.from(payload.salt, 'hex'));\n    const decryptedData = manager.decrypt(\n      b4a.from(payload.encryptedData, 'hex'),\n      payload.derivedKey\n    );\n    manager.dispose();\n    return {\n      result: b4a.toString(decryptedData, 'hex'),\n    };\n  } catch (e) {\n    console.error(e.message);\n    return {\n      result: null,\n    };\n  }\n});\n"
